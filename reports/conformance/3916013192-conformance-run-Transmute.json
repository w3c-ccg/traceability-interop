{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ce2503b5-37e6-4f8e-a726-3bf502ce2040",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a4e82253-c4de-4282-82f0-340e8ca1dac5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "19ace9e0-4704-46a0-a508-41ae068e10d2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fe0c0fa3-dc89-4aaa-868a-b1d8014155fc"
                }
              }
            ]
          },
          {
            "id": "299e582a-6362-471b-993c-b290f443e7c9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "007e6e9a-388f-4fe0-a9bc-ecaab69a3cea",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "87d04f54-2d0c-48af-bf08-f1922b0a73ef"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f272a5b6-9778-45b6-8efd-5c9eee0d73b0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "188cf138-cf96-41d6-97a1-5bb019dfd07b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "90926cfa-edf4-4b21-99f3-d1194e24f800",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b07fca0b-a223-4bdb-898f-a2eec8a69960",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "896a976b-cf69-466b-91aa-b8cf9d061dcd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "36ec9a61-e2f2-4c71-a8a3-0cfd15346c60",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7803d22-9723-436d-bced-6fa4a441b844"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1fbde27d-ad84-40fe-bb05-2765d7ceadc7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42945c15-6315-455b-a777-ee7316309906"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98b18493-6d82-4269-83f6-aaa077b0a9a5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bed2e05c-a738-4477-beb8-666e69ed2700"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ea7d5ac-9368-4ddb-92c9-725a8fdce4a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7bf441df-dbb2-4eca-9036-4fbb822036e7"
            }
          }
        ]
      },
      {
        "id": "38bd507b-9893-4a72-96d2-70b8149af8b9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9a468a2b-24e1-4dcf-9759-f29a95fa6c3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6750d9b4-4f50-4b76-bef5-75673f05e408",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1bd0720b-2505-40aa-9814-5b8cc9d50486",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85af72b2-48c7-43bb-b469-ea763689cdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe56e19d-6754-4deb-b48e-65704706249f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f595a6-efaa-4b78-91eb-9da2ad1d6979",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bf794c-b7ff-4fac-8d4b-98dcefcb0a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb20f131-a25d-4902-b37b-b1ba764fd50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f512ea-9e7e-47f1-935a-b9a5ad0dbabd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7dd732-fc55-49ea-a784-1028c1954720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d3c74f4-8869-4757-9b7c-9f5ce44e12f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef422fdf-4e31-48f9-b9af-0ef86ca054b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66f3b8da-65de-4413-96e2-290b8b137043",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b84003-6c18-4345-a0b3-e8434132a15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "162c128d-cbde-4449-8fcc-f26cb29118d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ba6b37-265e-4b21-93f1-9f1851d27ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec10aa5-a767-45b9-a57a-5eb2732e99f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620542de-002e-4dde-81ce-f137207396c3",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf41530-4d42-48d6-b0f1-294103311793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf286dd1-9761-485f-868e-abbed34703a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ae317b-2aa4-4742-994f-627179dd86a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "bf91584d-ab3a-4338-b3bd-1614745f8dcd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "134fc74c-ae2a-41b7-84d1-52f0b20bef1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a83ff0e-1ca4-4714-a56a-b6e6fee74405",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90500354-e280-4fe8-91c9-995ca7ec8b0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a7f0958f-c04e-433a-bc97-43371cb8a093"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1367175-335d-40ed-ab03-4997da620225",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "e1d94d60-ee11-441a-a761-01a17b803dc7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7c9ffd1-d168-47fc-9154-1523d05dba38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eaf78e4e-6ba6-4000-beb9-bb2b28eca29d"
            }
          }
        ]
      },
      {
        "id": "6d052ddf-faea-49e1-9771-868943a3637b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "aaa20034-d389-4cdf-bf09-b7c3568781d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9114a789-aa0d-4963-a9df-473d59f5f434",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cdd32685-3954-40b7-9bd5-343cea707a37",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838bc145-443f-41a2-9c6d-e294dfa6e1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3702679e-e863-43d4-9310-637aa0ef7495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c674bac7-577b-4cb4-8029-cf6377019f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63f830d8-fe22-43f1-8e71-a87a764a6846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bb6e2a-fc28-4424-8702-2e187af5716e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0bb30e-febd-4d9f-8fab-ea35f8d7e7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2dabbe-5d2d-4cc9-b57f-41a3ad4a3f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69821330-1df1-47ff-b2f4-0aa3bc02ff64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "329e39ee-660f-4df3-8885-1177f7974d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5083c537-93f0-4ade-86eb-458b6da78ea6",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7412bb-5387-4889-8b5c-accaab82eb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09f862e-5e4c-40d3-94a0-91591e4a9e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9105d5-8e94-40da-84b8-be1eb0a75f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8727d90c-ffb1-4181-a93a-ee8b23fa36d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb554c0-0d20-47b3-aa3b-6b5ae0def972",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae8b5e5-e8c4-4c45-b223-a1b622f2f017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c449d3-0f21-4cc6-ae3c-765ca7ffd2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ada56d9-3d2f-4c7a-94e8-bba361a2df42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff48b4cd-fc06-4de0-87d2-ae94337cea45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38221d95-2783-4c18-aa5c-a93a3da755f5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdf4847-aa8a-4c04-9146-c8a8d734c44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c08e92-97f6-413f-b1d0-f834f1a96b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4ccc27-6435-418e-b2f6-33f844314e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2c9e45e-b9d2-4a49-9f19-62296fa28fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d47cc9-40ce-45f5-89c3-8762ab029382",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73af8968-58b9-4c58-acec-6e0c62d8a6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9c25fa-3bf8-40c7-bc21-8b9c8472ca34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba63a4a-d070-4d5f-ad45-4f35ae637e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2b1ecf7-1ae0-4cf6-b9f1-9203503eeb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97560cf-f034-4fdd-a779-29a09c37dd42",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19b1735-6fb1-489a-92a1-ebaf76a6e9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9e468b-5c02-4d9f-8044-763b53eef5ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf893ed-96d6-4ed5-9909-d3c6167875e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6c3e43b-d7e6-41e5-852f-78846bfd0d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9937d6f2-7b75-4c8b-9993-679ecfc717ef",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30570fd-b822-4168-b08d-966433973b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a8c249-2372-46fb-8895-614359c5a726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a258f9e9-4565-4a5f-85a1-3450cd80d47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f13e702-da9c-420d-a64e-0da0c0771a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1967a6df-5917-4fc4-ae8c-09c351b49724",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafd4b97-3fc2-4d85-b6e8-2b8898c71715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058a4dfc-6652-4f97-8bba-d7816f72ad16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf3f4f3-672d-41c1-8a97-15e638a19a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7adf2494-f0e5-4b23-aab8-ddfeb8c18c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3110fb40-4239-411b-b7a4-18dc378e47c0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc44bfd-6905-4c84-88c7-cc78f1054eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c427c00f-3d63-4524-94aa-928bd36a44ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc9a427-7e87-4185-ab68-f6548a51e7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec171a3c-8cb3-4de3-bd6d-5837e60ba63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a2e6d5-a314-4b3c-9dbf-54569cba87d8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb145b9d-8e72-4de9-b5c8-c4a76634e4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f23d4e9-e075-4ed8-8bc2-d4f1932e87ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e426db-6cac-4f4f-b2e2-40545f6c4a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d872457c-a386-432c-90b3-c5be8b72962a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecca0fe1-f740-4c71-ab23-1b7117eea11c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61429dd4-3757-4dd2-baf0-b5855db11bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbf8379-0d0e-4020-a06c-9371b64f6840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaf8e50-da5a-44b8-9b19-04b643025e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8149375f-4933-4991-9df7-b05c3d43d015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1362941-a64d-421e-8246-ef009b03a8b6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca514b27-9809-4c77-a5f0-c93bedc3b8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27921304-5b05-469a-8056-ed09ce3763aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405ac606-8bf3-42eb-a45a-d2be13e7c1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d253c500-d5ee-4fa0-96af-eddc17036c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b954b932-dc81-4a77-af2a-c8adbbd7fa88",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ee7d80-0c57-4476-84cf-134e3d4e84e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea5f967-7015-4eac-a150-50b66774c982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cf86f3-0196-4cc1-92c5-54938ecf1cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5172a11-a359-421c-956c-0035a52a55d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebc6136-534e-448a-bcf2-dd7246682d14",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd405d9-9c60-48c0-9672-dc1b7cf4dcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63044860-5f5f-427f-9329-03d21cf35665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923eb09e-90e1-4f22-9fb9-d1ae88b6834c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67284957-5a0d-43e3-bda6-82a79577d5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2bdb0a-ec41-4e42-82c4-315fa8a7e42a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08267850-27b6-415f-bb8d-4194f9e0449b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5bd5fc-9fc0-4198-b2e6-31b2aaaf5fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcb2925-c0e1-41ab-aaf5-05226caa8a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "417c944e-d6a0-4cb7-b90a-dc9805febc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7c19fb-182b-4432-b3a4-b5b4dada18df",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212410a5-dde6-4613-8700-615c16d96729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6980e11e-59dd-4ca9-8d10-6f49f10d6b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc683e9e-2e0e-4ae6-ba0f-a6448b48e148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84d4f0eb-0ae1-4323-bc03-0e012ac75f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f12f196-fe37-4906-9a57-c49ad5882d42",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604139ea-a47d-4856-ae19-1305d1859c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482a186f-ba9c-4155-afa6-9cf2fcedc7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556981b9-9980-4472-960d-9fa74bdc7dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6d4b521-6585-402c-b1d6-fba13868c87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779a5120-6280-45bb-bc45-16af1fa1e448",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1437e21-feb8-45f7-9d3b-0e20f5577928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8138eb9-ae6d-43dc-a811-955d09927b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6c8887-15a7-4331-9987-ab8c07e2f69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6efbf8ec-1879-46a0-bb95-e9c4084bdb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89680578-ad14-4bd5-98d4-30b3fe63fe89",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bceda896-93c9-40fc-a5f3-b64299719b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7baa46c7-5313-41bf-9a1b-d7c51d1d153a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f75180-f019-4a11-9389-221771b540ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c91cfa9-cbb3-4dba-872e-183a968c9d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086ab9fb-938d-4702-b3d8-b4853df2ea34",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05cb2a5-5e74-4b1a-b35f-78438dd2d698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6283a9bf-39a7-48a6-9e72-5e5cc144bc2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f960cc-41f0-414b-863d-d426ffaa7296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60f58c77-3c23-4087-857e-243bc406d563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab62e401-51fa-4e0b-a5af-362887387b7e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab40e6c-d7eb-4809-90da-060ae9edd793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a820d495-3198-460e-9ab9-c2bdf113a7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5084dc54-4d9b-43ef-99ff-6b790f2c9d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63b6dc2a-40f8-41f1-bdd6-50faad81eb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3d4e85-1dcb-4da2-a9c5-50bbbc722362",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3489751e-3217-4532-9a92-b8d886884330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5e522e-d8a6-4b14-b210-f52ee61fb01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5452dd-35ea-49a9-928a-d47ca0b67f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7be43f-f298-4bca-9ec3-544b7e1d5fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2402aff-78db-4fb2-b7d7-016fcc2c0ff9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbaa92d-0194-4d8b-b665-736e677cb3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb39bbe-afbb-49aa-bad8-e6c9f7352264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ba1500-db14-42f6-8e1f-1b9e0f1367c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb89a522-7933-4e0f-8112-e8fa4e350435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4432c0a8-a683-47ea-aabb-f0e3563db290",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44132e5-2a09-4e01-a332-b7dfacd8f6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d115df1-afe2-491c-b253-d56378daa162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a7f0c6-bc71-4686-b99f-e9d8fcd1a279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "480fa886-5ee2-4e17-994d-eb8b36c4195b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367a6a43-5057-4f49-88dd-e7b1ed10cbc6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ca903b-f30e-4daa-844c-e3f7dd2cdd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5010020-0978-4f0e-a506-11a7b5349106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d816b03b-c10f-40d4-a378-28250680789d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dee5a357-2793-4b60-a977-04bd8a2fa3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3248f1a3-79fb-4606-9733-23ff96273b01",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff01333-05bf-443e-b114-0bf6c31d149b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab8a337-c70d-470f-bbdb-4cae5bb620bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a5a958-315b-41e0-b9af-c07c74ea03d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b31ea280-de3e-441e-8dab-94e2d1fe3d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46405b70-604a-4dcd-95e1-7092b3c28b92",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567d3e41-c994-4b23-881e-0597c93ee5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d325e2b-6fd9-4d0b-94d5-f13a64be5111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc28299-9e2f-4680-ad20-92b4da0104e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89bd6cf0-090d-4599-927a-365d86d77d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ba82a0-19e1-44f1-b901-073153fe8b57",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a77534-b958-46a2-94d5-ddb36b0f16c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159b6d58-4f8a-426a-8076-0153dbba58b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9a9725-489c-4503-bc22-2644e6989de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "72c4ac0c-163d-4bb9-ae13-6ba2a6c0518d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bf66cc-edb9-4b97-83ba-216217778a4d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f01a7e-c2b2-4227-9c15-b89344bcfbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c6470d-b2c6-471e-87ab-4fc9ac1a7d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02d6ccf-0b77-410a-8f89-43e00451658f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18586d23-d498-4436-9573-1aee142f8299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4084c24-de87-4fc0-80b4-977639f0f68e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2336198a-926c-49da-a9ba-5d9383e6e517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e839c5b7-4f20-4f1b-87f5-238249305d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb8af7c-2549-4314-801d-d949f87c0fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26e3ef61-b913-4aad-8169-26cf63cd3fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea59944f-a527-49d7-a7b3-b5ae987c5ba5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4904e104-182e-47f6-85a6-ee6c8f8323ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3acc6bd-994d-4ee3-a3c5-8779fd4f0cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b56681-c7b6-42de-8001-4bd088a9d943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "71c939d0-8faa-4071-9519-77a71468dbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e710d38d-2f2f-4885-88da-8ae35a02d669",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b60ba07-fac3-4344-818b-4a4d0659395d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62f0caa-e0c7-4721-a306-b9b67453e7f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff038cc-1896-44c4-a269-6aabfdaad735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "859c5595-52b6-4420-b082-5cc9ef2bf068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8474321c-3508-4bbc-84ea-361b421e1f47",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d9c011-d3f5-47eb-a675-f9a28df2c592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f6add3-e372-47ec-ae9d-678dbe562e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cea9f55-6915-4d7e-a534-2787f8800d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a03378-1796-4bf7-8c9f-d853ffeb16b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55ac339-7cb5-4a4b-9aa7-b90b50e74fb3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d148649-d5f5-412e-afac-e8ceb4681b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d848187-a5c8-4d66-8ff5-23f125b16a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be464b6-c900-489e-85cb-e6cfeb4f665d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76d62e24-fcea-4e99-9dee-9cfe0974f43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7050b55a-deed-446e-81b0-cb3642571486",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9304ba85-47ac-46d6-8ee1-700307a9f339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcddfab-bf3e-4e56-bb6e-7d676e3f0e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1466c258-14b4-4084-9eef-6038b9692316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c45bf8aa-c630-4c46-92e9-b3e0263d1727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216cee21-fe42-4580-8c57-f57a61f5ced9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa1323a-aaaf-43c5-a9da-876824ae7bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfeb9c0-6576-43af-a9b0-9797c9a4fa49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f14bb4-ff45-4637-8d6d-ebc0b8425481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3deb5e3a-f104-41d1-8389-243e94a82b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d6c744-f6cc-43e7-90e9-3903fd72b2f7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170f6771-329c-4cc7-8a63-bd0ec68e3e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6639fe8c-9fcc-4451-9e48-0a098068ae8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc4120d-9438-4bff-a4a2-71c711f340e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d02764d8-5cc9-4558-97a1-ec82667d7b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf00062-ac32-4e81-a049-14c4cdb2be58",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a5b871-c722-43c4-b450-3564d3f871c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacb05c3-fe1e-41d9-a0ab-a5e552781b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461c3c5e-47ef-4ec7-a022-4d710bc32038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c84ace1-a45b-4c26-b1c3-41cd384fbc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb9a2d6-f529-438a-9f78-ef61864dc189",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70167bdc-9268-4ed7-a60d-e4ad491c8896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0d9534-bb23-44ab-b695-4bcf3a462132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005bcef0-64d1-4d0c-b57d-2065f305a8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "182da31e-7823-4733-b262-73bcdb3f9da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39eceaf5-4f83-4fcc-bf32-bf1a8dd78ed4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269239e3-449c-4516-8829-f41ae1e785a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c641fc47-95f7-468a-a646-a9552ad19777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9b0f9e-0588-41d4-9806-f8dfca9b188a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbbcd1c-e8ae-4e75-a08a-89579dfb2d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25711573-df30-45f1-bf21-7bb2e679c0d6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd1f336-3844-4477-9af9-9cc22aafdf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2010fc57-cfbf-4594-944b-b25f33ada780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c819ab6-8c62-4723-8ca3-2a4e36c23497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4537ac9b-47c1-4de5-af24-d5cf98daad12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18888bd-fe95-4e1e-bd96-c93dae51aba4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d5dc5c-f23d-4441-94a2-2d574b2cbdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b5b8fa-f915-408a-86f5-da8bd7502fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947eeacd-88c8-4f0f-a774-f822996e11c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f1c175d-0fdc-4100-a50f-850900b309d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16798bf-cd60-482f-a385-ef1625a45a86",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35ac8b2-14bf-4ab9-87e0-8a836c8cfbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5cd56d-98a6-41cc-b2e5-bcfbba8d816c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7c2822-2c6d-42a2-a507-3c0d088c87f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e52407b3-1d4e-49c8-aeae-d2f0e67ee0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f910a1-6878-47ef-8789-160efcf4764e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d57a8b-3452-4476-8194-9bee5fe682e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6c8264-26b9-413c-a574-a562c91ad959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05e9dcb-dcdc-4649-920b-d71116f72f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e582cd30-ace4-4c66-96eb-417e6b39fb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fe4b15-5f75-4621-a0a9-7b867c419b3d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca8b05c-b737-49db-ad2f-37c710ddc629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f70c0b7-f7b9-4dc0-9ec7-9526395ae368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b930f0b-79f2-4101-ab7d-56ca3ed3acde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb415bec-a6f2-4d87-90c4-1cf5805ce7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2485a3b4-7d04-4fe1-b7e6-aabf2edd1325",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf53bd3-094b-4f8a-b0b0-3b9ec3d5017c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0fbdcb1-d83c-4688-a8c6-123ebdd7d668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec8c95c-06f3-43a3-bbb0-65ea0acd1165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a82befb4-9027-408b-87bc-37abe894ab1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f7e2d9-be1b-4217-9091-9b88dd827aad",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faef2a6e-24ff-44d7-a2f4-09722532514f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa97550c-f441-418d-9d2e-0af4d273d8c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d21cec4-be70-4376-9b04-be6565c03640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ffff05-67f1-4405-a2c1-884e64ca1ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aec8660-2792-477b-a6db-03ce2fc0ce1b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698507ec-aec1-4f82-a901-b8cfc33b9bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d66a74-4cdd-41e3-9fcf-36466891b112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd82bc37-8cf2-4432-bc6d-1113940801fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0e3ca0-fb58-455f-8afa-00ddf14a13a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71244a9-81fb-4c22-92a2-a71f1e75aee2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d852aecc-ab4a-4271-8e4d-9150cbbf79f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cea7ad-aec5-42e7-bfe1-7c3e6900f8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3623366-0be5-45e5-951b-037d0920e60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "821e62a7-951a-454f-8a63-2e508c941e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39eac712-7bd3-4c7e-9604-c603ff7b2010",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c2cec8-f786-4a16-91f2-c05bc395de02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5659ee1-a50f-40ef-aa91-5b1c918bd1e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e28e88-689c-43e2-8e8b-4ad83f55ac2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddba924f-0b06-4da0-8769-fc8505cf6c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad473c00-4bf5-441f-8b61-b7419912165c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e3a79b-60aa-4ae3-9a48-d87668ffdc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66e708f-e76f-434c-a026-bde232f5ef12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52707cb-d036-48a4-8bfb-0e01fec65e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb0e36b-b43c-4d00-923a-5fe351e44e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203aed74-dcb3-4e01-946e-276348078a43",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28645eb3-ec1c-4ac9-a40e-02a2c29949bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6cc13fc-062a-4256-93f8-381b5d312512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbcde8f-6582-41e9-9bea-2f1979fd8472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f863b28-bc81-4df0-b6d1-fd513244626f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdef72b-b55b-4587-94d3-d06ec5627131",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873856bb-753a-453f-83ab-0bf183bc403e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e290ed64-1281-4ced-a244-7bbb1f763706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3dcddf-61de-4774-9059-de309fbdea12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f59f479-3662-484d-b49c-a8d180a4677b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b394e63-143d-4de9-b0de-38ea20a74f12",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea6976d-8751-49fc-8c74-34a685833670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ee7451-e402-4b25-92ee-c512c695638f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06bf856-8ec8-4d63-9cf0-a5068ce43fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d86c9e5f-8824-4f51-a8b3-57d839b579f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4f8f48-a831-4746-9922-46bffed05e56",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fb27ad-4550-457c-82a1-5a5885797922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f2e439-c22b-4be1-8334-b61ea196330c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1a328c-c9b3-4edb-9335-05de9cc3fa9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60960182-13e3-406c-82fe-6d948ab50bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29181d83-0dd8-44da-ac96-4d8bb4b4fe39",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012610df-cd03-4f24-af61-fdc29cd7fc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29334c3f-da3c-4e14-9565-a28814922ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1a7322-54b2-4634-928b-4f205fdebf76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58631767-83bd-45e2-9c1c-576c42b4df44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e23643-5c95-4639-a7e7-e8798b2d0fd7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655bccb6-2e19-4f5b-9cd7-b22ee1805e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476db5a5-3d2b-4cc1-8e67-01c2760da549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e37388d-c0f5-4ca4-bfa2-b8d04f72215b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5aaf14a4-8bc0-45d2-a18e-349713456b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d303437-46bb-43f9-8179-34478ab7b894",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4ea5c9-1369-4741-a219-fbdfb6207913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30940c30-cd03-48d6-92f4-c1270e4d12c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0156cfa4-89a9-4d52-a75d-6463e3c13e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c69a203-8b58-4824-b687-2335e111b2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a555f708-0c43-48ce-8095-8e9c00987f01",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07144ea1-7aa0-49b2-b871-2eef33d9da43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2462daf-b76a-4384-a297-13aa00ca43d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adca932-99ef-4fbf-ab8d-893950bc8a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "055a04f3-a975-4d22-bc3c-48d50d9d7ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f3fb99-008b-489e-852a-b89763e7e3f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2228ed0-7d6c-43cd-a2c1-28ad3ee98bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce2bc05-2803-4eba-969b-f0f0b928c20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd401ae-c098-4f84-bdaf-f55e3ee8d462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac873a5-3b42-4a49-acd5-5366a62d4344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad55525b-9cc8-4191-b539-70d88ec06969",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7db9728-8f0e-436c-8856-5b57b96652ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377a3d4a-ebb7-4699-b3bd-378143834d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12d9c30-930d-43d6-93bb-42c6cee907ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "92550781-1c76-4fa8-9ad0-a513687073c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa83f566-d278-4e68-83ff-211d9e8cf124",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3aac1bc-e184-43af-bbb5-30c1718d9754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2383d1-b369-4294-974a-6b7857ef3d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617666a3-844d-4f22-afb0-edc22476f5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "439b5768-3bef-4033-ad68-fd3c1e8faf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd517640-8b0c-4f92-94cb-e39603d183b6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545c7277-2789-488a-bbc8-c17595940cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2168e55c-1edb-4e8f-8ade-92f8c3f7a92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd860a24-ef6c-4180-a315-58182679cb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "945216c9-8e9a-453e-b446-24366d93b546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe67f417-716b-41ea-bffb-a84c76a2eecd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7a49e1-2b20-458b-8912-f0c7978a77ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b764fb1a-b33f-4a1b-a2de-c69733dbaabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f701dc24-4c5a-41fe-ae6c-640b3967c2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "29cad610-f92a-4516-a751-ce47931449ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2b2586-1c1d-4a6e-9940-a4adf86a2813",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5707d893-0b87-442e-8f86-12831911d4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7961d583-5e10-45a3-ab59-ef2246bdca93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763b6a56-4bd4-450a-96b8-f883bbdc9a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fde79b61-fda6-4eaa-93fc-8d9fbea30cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb3db8d-636a-4ccd-a200-27de1c32564a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c84fc8-9b90-432c-af24-29c8bb2123ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df49fe2-fa91-43d4-a135-5dbf2d60e6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9980a58a-b459-4837-a934-d7b1615acf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3373eb-5c4b-4195-abf9-5dc961882049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f465c4-9e61-44e8-bc11-3d5be449341d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0364a28c-317d-43de-b020-a913577664a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e409af-0a41-4471-a8e2-b81b9b5d849c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4597320-89f4-4981-bf64-3866ac311e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b8ceba-bc26-470b-bd92-68b22879994f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8cc091-a532-4d2a-bee9-7adc9b60c666",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982f67a7-d0de-4352-92a1-7fee350209f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4b564f-96cd-41d3-bbe3-791577537834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0611ca-528b-44ba-b107-58611606ed61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79e1c6f4-9c74-4d6e-b377-e8502df6774f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf595c30-6e6a-4cd0-85fb-2bc486001bb5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52b3704-4e63-4a5e-a5b8-d23bc6d81521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342e1a9d-c2bf-4242-9efb-bb796141a90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f69436-8295-432d-954d-f8af8f9154d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2738bbc5-33e5-439d-85b6-5eb0998641ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7ed322-581b-44e0-9b17-218954ba6cd6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e28a87c-c340-49ac-afde-8cd07ab8cb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeddd521-7227-49f0-8d91-05fd662806ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9ce764-8c75-461f-b6c5-504c99078e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8acbac8c-2ec2-4e4b-afa9-5738b3253294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7faa8ed-e1be-458e-9ece-489c44d69954",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eab8bf2-5d80-491e-b90f-6bf9f108ecb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d8f96d-b090-4c78-b689-85ea32d0d8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a0b964-77f0-4306-8de8-b29cffb738b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c0e3f5-90d5-40f5-ace5-6fc19cf0f159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b726faa9-4d53-405c-8802-18c400afdeb6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca02f60e-4dd8-4da8-969e-7c5a2100ad61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0533a33d-0f61-4cb4-92f8-32d436b2bd36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433ea55f-f46e-488d-af31-a09d8d2db11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a560d1d-88a1-4716-98bd-19c62f38d797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a8b28a-e1af-4f68-b2df-83fe1e2754fe",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7543c56-32dd-416f-9846-7764168db9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e471cb5e-85a0-4296-bb2c-14820464fa98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4aa1c7-49fd-4594-b867-0b238aa7073b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "117f2140-4fb4-40eb-ae53-03ab09511948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e5d8c6-5f5d-4d43-96c3-8306c381a2fd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c82f937-c880-4c56-a28e-4a2b5fc816c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdde504-49fc-4589-9442-32c6377694d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f058ef-b4b9-4127-8e77-0b330744e661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f5fb021-f335-4910-b8b1-62605d53405e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f871ca08-881a-4b06-ac09-461e5c91fcf3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f139af-7106-431d-be40-10356ceeca68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24985d10-531f-4393-b14d-654f2389c2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc83e11-703e-40d8-b98f-627b5b4b6438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a14b0ccc-57dc-4e46-8295-9e4fe03cb1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5664bb-fef4-4ba7-bd24-fd97a3488f56",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5476fb8-60fd-4240-8ceb-7f1af1ac7f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f804dc1-e323-4e43-83b9-96a94694b68e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54606df8-f1dd-40c1-bd66-bbf2eaf2f40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aacaa283-50e4-49a5-98e4-40fc25c712de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2be309-d564-4690-8064-804ff5a36095",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1da0419-aa1b-4c8d-b92c-b00b4cfc78da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868bbdb7-dbc5-46a1-a52a-4d18d5efd36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8399b7-4105-4de4-a44e-01b96ec754ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0f081e-3f27-4b89-8797-7dd777236df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87d7c57-e309-4078-bc87-9756322eeb9f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28569bc8-a7ed-415e-bc7b-7245ba38f1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3940248a-45e3-4836-a585-4cee76df981f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e741bfc-aac9-4c9c-8cee-6d3faa8e68f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "955b094b-b6d1-441e-b731-e5c962178952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d622a849-8849-4a37-bc43-3c9d2fffc607",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1acb1d-252e-4f38-952e-ffb0e1e45c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7dd73e-ee67-44aa-8fd3-b313b76e8695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99db738-7b97-43a8-9024-25ab0e4b448c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7a3d20-a329-4148-833d-2fb069b1e57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3af71a7-7d03-4f34-8c4b-e26cff806f04",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5b72fc-8494-494c-b423-1327af2eac50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91010a7-a241-40da-833f-6107bb801faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4dbaed-6e51-4338-8fdc-8a1cf984cc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbea4ccf-19ab-419d-8f6b-061a14353088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d56b67-506b-4ec9-b771-d7b125ef1508",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6dd6032-44d2-4f94-ad14-f92278974c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c3b986-48a8-46be-b565-dc2105c71b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96933364-9003-47ff-8d09-0015e1c12987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1098b5c3-24ce-48dd-aaa5-962571c63c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aeffc51-5917-4acb-9442-5b9cbe4a1317",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29dc826-2f1b-483e-993f-ef30c8b38bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23cd0f7-2109-4bac-8d81-8fee53d1fc73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07fa5c4-29de-489e-a223-0a7d6f1de66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9689107a-4491-4b2c-898f-c3f35e610aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d5efec-2153-4ea9-aa2e-ed0648666b44",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e214d09c-c238-4411-b8ba-8038ce76ceee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efbe206-e824-4266-a5b5-a90babef4cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ea0a2e-2633-4746-b2c5-9ab6819e1a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01a85647-c005-4753-a02e-8186295c0e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9c90e2-5b4e-4bbc-bdc7-6e0d26764064",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cf00c7-ccce-497d-8f2b-5b8b46ff1aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84574a8-2989-4c24-a52a-ddc4cf52f456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5822f1e8-1688-4819-b077-7cd4e4da7cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e85117e-b309-4687-a435-68b48f09cfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3060f8bb-a9ef-4538-89d2-c74ab67c448d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef80303a-5464-48bf-8e1b-8da6f52d6712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbb9265-1133-4af9-80e1-81e2667247ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ffc537-eef8-4191-8bad-b45db023f352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc0b385-da10-46e9-84ca-bb6ad3715ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef1e155-709a-4744-84e6-3b88ea628b14",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2ee3bf-8db9-4b0c-8ce0-f1f0f95d97e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88852b33-398a-4824-8bde-0541b19a3af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579ada31-6f53-4a29-932c-dca00368a51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6995b66-486b-42d1-a284-1e1d1d57bcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cf72a0-5f0a-4ee6-9840-85ab89313ca9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f012a0d-6275-42c8-ad54-f478322b7d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d187e459-320d-497d-bf84-f5715a197407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4dfd61e-5c4f-49ca-a190-b9386312714d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2c2561-3d25-4b99-8587-48ac9433a8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556f9da3-64c2-4806-a4fb-21ef2cda5832",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25516de-19ea-468e-8d46-3719c2bda70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0bc353-ceda-4188-a3ea-646188000f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1de970a-c62a-4956-88ac-e168c6fa2b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "96c890b3-b095-4243-9642-fca8ee41f3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64025933-58ed-4091-bf2c-7279fb1acbc5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6f7e3d-2c43-4c05-aaed-0819ec0a998b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c76d20-9ec0-4e47-9a0b-0802ef4e3738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c25023-3774-4384-8674-9f2be767837a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "97b1aea8-649b-441b-bcc8-9e9601f0a32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7387a4fd-a6be-4149-99ed-a5c670793fa5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6873ce89-9c03-4ee6-86d0-316f321a0a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec64fe99-eaa0-4cd4-811c-13b31a96869a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3e3938-9a08-423e-9895-55cd4ed1326e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ead8b65-3aa9-4fae-bb77-72788be2dae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129e8a09-08d4-4dbc-973a-1cd66b36a076",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64b49c2-00a5-4aca-875b-dfc81d3e2a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069ef830-722f-4942-918e-b8a4847f088b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528a2273-f104-447a-944a-fa090d81d8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a813b5ed-d32d-4c8f-9269-ebfc8624eff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ef2673-8d53-40d7-8ed3-906a5a49e4b9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942e7d6a-2504-44b9-90ed-d614d005558e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5cbfd77-944f-495e-ba57-e4e3e35f44b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3dd80c6-119a-40f4-b3a6-0d419bd72a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebbcd94c-6a99-4ea1-9eb6-61f2c2e2fc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc13ee3-49d2-4a02-a2c7-1f0f4cbd207d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d6fbbe-64f8-4069-9aac-0efb7daf34b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8e59c1cd-f0f7-4799-a43d-13da6f7d914d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53fc997-d3c1-486c-93e6-954db853bdff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8261e07-81eb-4c3e-abfc-8e75efe6ac2c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70fc5b69-d80f-4a56-9815-a1354d21eceb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5b4f6f6-be2c-4868-b2af-b3527088b599",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33baa304-5e33-4b80-9ab9-7df305071e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bd67021-e843-4eae-82e4-76f773354933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a68b48-f840-4b8f-b712-8bdac1cb138e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b52259af-ed8f-4174-bf44-7a61a08c7943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309a9b18-0f11-4e43-b5e1-1400383de7f1",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee828a8-632f-4649-8be8-205057a903e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cc0efd6-9d32-4aa5-976f-535d4718734d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b09cde-b5da-4d83-8b2b-bf616d71b2bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "2fdbea17-ed5b-44b7-9b98-193f70c08359"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91b626f7-3a75-4b21-92ec-b3ef4799e403",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18b81b19-8979-46a9-bdf3-a2dd1a772ac3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb6a8572-5390-455b-8c58-5744f8701154",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1760dcab-dca1-46d5-9f15-13603d756882"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a55d9c81-b43d-4f3c-b71c-0d50fceebc52",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "998c9fe5-11d6-485d-8067-f321f278683f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad5c9857-84c9-4a28-80b0-c1ce51437b36",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2754ea8-0e19-41bf-bab7-7db453c156a5"
                }
              }
            ]
          },
          {
            "id": "7ddea1a0-3139-43f9-a632-0cb55e7269de",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f27c961d-6129-4054-9f88-23cf09e2daad",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da730e8e-6019-4515-bbb7-72b26ecf4c89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81f43d56-dc2d-4058-9488-7a03f9d5e86f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ac0fa74-ba48-460e-8ceb-404a72e01772",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6463ede0-457a-425b-a917-fa3148ccc7cf"
                    }
                  }
                ]
              },
              {
                "id": "c098d8f3-3a56-4629-a948-b351cc2b8f99",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac1cb1aa-2636-4732-a739-7741e0dca557",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ed77fba-7d60-43e2-9c83-025e2526fd10"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0435bd00-7674-49de-953a-f6e6bffc84aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8fc3392b-4500-494e-af36-964b26b27d81"
                    }
                  }
                ]
              },
              {
                "id": "d8b04375-b5f9-4333-a2c4-e36a716c64f1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b186cc35-0214-40e4-87bf-d06af49c0c8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0190eb28-7953-4749-9549-376e834a1936"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "951bd7dc-5933-4f2c-aae7-142921ffd1aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7cbcdb61-2eba-42a6-9f79-c4318a2823f6"
                    }
                  }
                ]
              },
              {
                "id": "84e2cceb-d97c-4085-b06a-d4a103963c67",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c15b604-5c31-4a60-ab22-7153d1f67c84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef72b0eb-105d-4189-8879-6ec1eafff14c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fc7a37a-9251-42f9-beba-1fc165970436",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "35da08d4-b5d5-4b9f-9410-aa7b268d08fc"
                    }
                  }
                ]
              },
              {
                "id": "35ccb13a-0709-4306-bae0-600174e5b867",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0f5f021-5f8d-4d87-a7a1-fef1b260d13b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f16a1f6e-8cec-4a3f-a03c-ebc1d58facbc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aedb1ce0-8c11-40e3-9a86-e185418093c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4d2e78d6-c98c-4e23-9099-d8a1e49b5354"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "278d2fc5-3047-4263-8212-339b08cee5f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2bb909b5-5fee-4997-b2b2-36cb4ec02c98"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7e2907b-1b47-48bf-9936-fd6ee8b2d8b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80e5e77d-22bd-4ada-8f71-e41996ea9a20"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14b8ccd7-0378-4e73-b54a-15e8fe9bfb9b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5711dec3-0928-4794-946b-9f58d057b0dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4baa39d-5d83-4702-bdbc-69addeaac8fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e5e8bc8-7f94-44e8-9a02-9283979c0ac5"
            }
          }
        ]
      },
      {
        "id": "b1d86bf8-5680-4662-893b-b3169fba5fa4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "12c9660f-93bb-44c5-96bf-2b8da42093db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7dfef65-90ea-4e07-9790-b47c6110ab5b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a45a8585-b1fe-492e-bd9a-532791f27f63",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cf1403-0297-40fc-b875-e4a2b4091d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e12a513-b882-416c-8fd6-bb33ccce0f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebbe1ee-26fb-40b2-8020-8b398eef02f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "77febdbc-5987-42fd-b6c2-265cee994e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94403c40-ed8f-4292-ac20-0bdcf919214c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064912b1-e17d-468b-b369-a85baff85181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef700dff-625d-4b95-81c5-8b65d44f0c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5280481-8b39-43d6-812a-3288ae304757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df1e6cdb-6973-40e0-949e-678b5b8333cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb77f321-d901-45bf-b48e-de13b7de2287",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f9e444-e3ae-431d-82c2-064b68ab25e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a597048a-b61f-44f5-ab1e-cf58570b55b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad30bbe6-5b99-4e6f-9e97-fd12a5714c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e86376-4a6a-46d9-a6a0-5fad796de275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f34638-321a-4d71-9be6-8cd680c4396b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33aa89a6-5dd3-4153-ab15-745ce44d6430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bd5cb2-1740-4cf4-a8b1-133903fa0351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3b914a-a5c0-45bf-9ab8-e6bee6694f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b31442c-f12f-46d2-87c1-7a2ad4d8bb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5f5059-0bca-45c0-a6bd-e731dae798b1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3c3feb-ff61-4635-bd1d-fc51a3c8ac22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a329a39-5c39-4100-82c0-2adf23c860e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e232eeb-030a-4dd3-bc9f-50d63658ae34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7810b586-3c07-415b-b505-189ffc09bc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf49ab5-f435-44c9-a768-17010b96af9c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b4113e-87f9-4c77-a3ab-308a85b99ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d40198d-4880-4e53-9a76-24209f0e2f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd750a3-bd65-4581-8b22-07f41979a5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5897b6c-ca1b-4b0d-a877-88be0f1f4b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffd9e88-bd54-4b19-8603-9604ab1b9ea2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c46eb6-79f2-47e3-97ba-9d9d27e72543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a512f6e6-4a7b-4519-ad9e-594d73e92a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3349e5-3d8e-409c-81b1-89fd26912092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "910f53cc-9017-4019-97fc-50797fe4f158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3f70f9-a958-468a-854f-4a0ae038df84",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c5f655-9ded-4b75-90df-eb69ca048b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c00c12-f114-4434-a37a-46c11b020fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7a0dbe-8e11-4fd8-9647-33c879d1bb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3043f966-2b2b-429c-8e5c-97f51db9ca36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad6f681-6250-4377-acc2-be3bd6b0b102",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0294ed4f-7a91-4e17-841e-21ef8329564b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3b5072-0000-4935-a5c0-5fae31276ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2549332-e685-43ed-a75c-27fa521d892c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4fef09-5d7f-4ba1-ab4d-b935a13659f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d328af0a-159d-46f2-b6fa-e4065051aea7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7929a28-f2ed-4224-b322-98bb6d3c82ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a611ca-ce5b-4fb7-acc5-e9816f389db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5ec90d-aecb-4c76-b865-142c627f5bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc27e826-fcc4-428d-a9d5-7776a7064bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e710b6-84c1-4eb6-91aa-5c8a8f838a8c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872de37c-4a1b-4e6c-ac6a-5390f15a2558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f0ad63-bbac-4923-a908-c6caf66ec41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f362cc63-43bb-49b4-86c2-7382b0f977e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "849831fc-f7d3-4d43-a77d-e6638d78e443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4844a11-2e27-41f6-a09f-f81e6799f458",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a65516-cff7-46f7-af82-741baf2cfa82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f5fbf8-c7e8-4d89-ba45-90fbe71b8d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fca224d-9cf6-4c49-b605-0fb65c9d5235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b76b11-c682-4389-97b8-14352ac7dcd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2afcf8-3ab5-4800-9cd5-d1192377c5c1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84134853-b796-49c5-83bf-07df45a1c1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfabc69-a2a5-4bd6-aa29-9ce5945cf6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6518d179-a391-4756-b31c-8dd6d0072e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f06f5b39-9bb6-4cc6-8ffc-6270d2b4f579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bee7c20-050c-43bd-970e-c4f03ee09f99",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce79375-18c8-439b-b57e-b9c2843fa594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f86129-58c3-43c3-a8c0-bf8854962104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5a0a74-1176-49da-bbb0-dabe780e7e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9975f8f-eec3-40f1-8649-bc7012b74c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058509db-93b7-4be5-bcd1-825191ef35d1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdef3d2-9193-4f22-8827-0ee7ea351926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f92fc9-9c28-4a30-b3a8-5b31238b82d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6596d9-d0a0-4cc8-baba-1ae43547534b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "135d42db-f418-4421-84be-faec4da02d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929e76bb-9705-4487-9649-0a07077d7fb2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265c77cd-5db6-4167-9e98-8058ed221c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe958943-443f-4b57-9af5-905eba490e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74eefc11-107a-465b-9ce4-da14058768e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "374c9f67-3015-4274-8f7a-12f92bb110f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccd6d86-70cb-4c12-bdfe-7d8af81576c5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567a2d2f-1c9f-49b0-815c-a4afce1b1f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7d083a-6498-4f4a-bc7d-49d70ddca3a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03995a6c-253e-4bcf-b247-49a08218de6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3222c57a-ad26-4496-b11e-6dc143ef13df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d215cb-b4b9-4368-99fa-31c580971411",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f7e010-1111-4400-9398-e05513858724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dad71de-2594-4950-8e4e-8f895213b961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa679364-7b60-4721-a275-5c43894f9c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e340a4-759c-456b-9e97-77e2e702c1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbe71d8-ff27-4389-800e-17f2b68c4dbb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c6ca70-6bfb-4982-93df-bb7c70d90e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfa0131-78a0-4141-a567-5e6016afc01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af72cb3-1e6a-4b8d-b447-b3f7789b7372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac5cb3b-25c8-4901-8653-5a8fe0f1ed13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3b7acf-167a-47a4-b670-6df0142920a7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec9b55b-a776-4cf7-9de1-d8284209e7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6f97d7-3593-4eb2-b5b9-24e12ff7d341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca89b8e-0a5e-4382-9759-763ba0e763ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19235621-e06a-4139-88e0-ac65524a7fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f76fb0d-27ef-40cd-a071-7a95bbc7ebbd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0e92f7-f10e-4ab5-b584-af6d75c52b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebf17a8-9f9b-43f1-873d-97ad91872a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f512983-0f53-451c-b05e-0bb0705be3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccfa4932-a6a1-450f-b43a-05bb12241a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9b253e-ba0e-41f3-8a24-4f62293058a7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c6da9c-a7c4-4a43-931e-cb30c7f67f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc549ba-3703-43be-b78d-98fa0c19bd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b3bc72-517d-4ea6-8f13-545e1d7ed72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8022d1a-9f7a-4868-b28b-888d99f7faa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41abb8c2-19f9-4a57-b726-3f552711ad36",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9be0f60-1400-4ced-8dc9-476df4da0353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb81377-2349-4ecd-85db-4c58d00faade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d27de1-b073-4b3f-b637-937a60a444db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e57d837-ce93-4f66-84e6-938782a1ef69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f763ed6-6a66-4afb-b9f7-1e935b383798",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817abfcc-af5c-4e39-8fb4-291392112aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc8c38c-0e91-4f48-974a-b6533a921f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa038ed-4098-4abb-b669-c100d0603055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12200427-e438-432e-9527-323dd42bc275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d7ead1-acfa-45d6-bf81-534cbf7f7e1d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7448692c-0acb-4715-9f67-b55d4b68d234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d7d09d-4852-47ee-9a91-178ca61e7986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45916a3c-c49d-4e82-8ed9-890e0f0d1a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa87348-a44c-400e-a4be-8dad2bb6c355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c6188e-53ab-445e-bd85-c136adaa08b4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8639ee49-74a7-447c-a246-3e7df65b227a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8eaf8a-46f5-49cb-9852-7692c45c799b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90cd574-840f-4b9f-9f52-4ebd8fac1375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0eec815-fdbf-404b-bbf9-a7779c34de42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a21eeab-4c11-46e8-a06e-9d2d68e3bcbc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04963d0b-2652-48cb-8eb2-e589be0f8728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cab81d-158e-472b-a72a-df6cdc1e3827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55070e0-527a-4240-b50d-1dc97d62cf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef43bc89-2b3d-4c16-8a9a-7601880b5dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ab1aaa-3d70-4c82-97d2-f05288933c46",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7510f70f-7e8f-490c-94ca-07076efc8d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec44ebbc-7774-449d-98e2-2b4b6e6cdb13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d7f481-69d0-466b-ad98-dda3cd54fa23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abd4aced-00fd-47c3-9e31-3eb48525f9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7362b3e2-c518-427d-ae4f-448cb1c56556",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efea31cb-87e0-494e-810c-f00ab274e85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e63b68-35ab-44b7-af61-e6d53fa5d8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75c1f0a-6641-44e6-8e08-e5cd4c3d2321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae9a60b-b88c-43d7-a38c-88b248889aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a780af0-c763-4371-a315-df663a93a5ea",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1999d084-57ff-44ba-921a-6c41d0928c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fa45a3-0ecd-4bb7-bc93-30577d2fb2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc10bbba-6f7c-4b85-9071-49d46322581c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47e6b38b-94cf-4727-849f-12a0f0ff4eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd4cd5c-4bcd-495e-bbf3-901598aa4516",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34df634b-5ed8-4c17-a454-2a5130c2e817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad26a5f1-0a40-4f10-9acf-01ec52523a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec783f0-730f-460b-a78d-874028873ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0689bf-57ee-4f5c-895e-a8bf49fbfa45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d570fc9-1c30-4e6f-b468-c59b35e01655",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec56a740-cd73-4df6-9119-db500440cc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3e56b4-0098-4422-be43-d7ede01d0eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588734e5-3d8c-45ff-9e35-7d2062d56a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "639bc716-e645-46cb-80c4-fa5df21c944a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4325cc7-32e2-48d8-ab07-0ef4f4ad8547",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3b1869c-f448-487f-bc80-e05670f0c1b9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b006b3-3f09-4202-95ac-f682fc7de7db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6b854b-afe9-48aa-a65d-7886228870dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "133b5af5-46b5-4e50-8bbf-3b7b9065e422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b40aed5-543b-4251-bf41-3511723600dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b387fd4-0718-4e46-9291-318b45806990",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed2db1c-220b-4c2a-bbf5-bddde08e3df8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "080ef756-02ca-4c31-ae72-c0a0ce6a887e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79f2ea6-04c2-4e67-bbca-501465caafa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7b87840-97c0-44ed-99bb-211ea422f392"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d342065-b032-42dd-975b-a5975cb50907",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1657eba8-4ee1-4b79-bb10-894be8eb7cf4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "511142c0-7d62-49d2-826f-b85701ebd452",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "300c2146-82c3-4bb2-bc24-ee26edb1aba7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "051cfce6-3391-4948-8184-56d9c8cb7489",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a3a015fd-e55e-4dfd-a518-feae00c9dfa7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f171778-4b77-42e5-a2cd-c38fa2e00996",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6df71f1-a781-486d-a820-0050454f82fa"
            }
          }
        ]
      },
      {
        "id": "98e90f26-ce49-43d2-8d77-3e0754dc0fd3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fb02b248-958f-4e81-bf92-4f1befb64144",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83226850-261e-4c9b-99e6-02cd3d559ac5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2de6173c-85de-454a-9c73-2dd5aef53cbb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7125c88a-58b0-40d9-91f9-e4aa3ed04798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e29e98-2639-4e6d-850a-4dd9503341ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5559b35d-8064-49c0-a654-5902cc41e83c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ced19f-b356-4d17-8474-daa4e691f408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6534c8d-a05b-43ef-93f0-82916b9c8ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e3fda8-932a-4ea9-b30b-6ce9f562571c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9b01d2-ebf4-4c2a-a0da-d930938aa0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140f2f01-a73a-4536-aaa8-ffcd77a1bac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6042ec12-46b4-4e41-9fbe-a3b27b959f0a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd1356c-d1ed-4cc2-b710-cce3ba08c0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efbef1c-bd26-4e5e-a0d4-814988cd75d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6e5a61-a8a9-4e2b-84d8-f52eee9b6ccb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba76c38-5369-4b24-b219-b37f4b964193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479c9bed-ac98-4d86-839a-07cdb0c81a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d93ea8-166e-4208-8b41-548ef99fe716",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631775de-d888-4db1-92c1-0b22bacb98bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b333cb9-c090-42e8-9e67-65766b2f16fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ce2f22-c19c-4eff-b42e-361e2a4db143",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d86f9a-97fe-4985-989d-4408fa63e0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbc63a1-f7c4-4f99-9e4e-8cbc7e521990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "161d115f-2134-429d-812d-331c97e070af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39ada02-23a0-4594-bd24-a905bb2e3382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecbbb76-0a6a-431e-97b4-c1ed9316488e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0660651-1d16-4095-ac16-a53c383f84b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc4d09d-df46-4f42-a04a-71b9a6755cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "549b29b3-747f-4406-84fb-ebf7a7eebe1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ed35e6-08b2-4698-b336-b75911c97676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6bfe9d-aafe-4816-ac9c-2190c6a4e506",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9a4148-571d-464e-97e6-66d0b5e4f45c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c46d9b08-aa53-48ca-85ae-c6bdf1981482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b341eb-ea51-4aca-94f3-b8c254d87fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ccd2035-dd9e-4855-accc-9ba22654ddaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad3e008-554f-4900-8502-82e914cc3a18",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe512cd2-f905-4412-a0f5-f13701b3645f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd6362e8-f99f-420c-9fb5-eea69db4099c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5807908d-d86d-44ac-99b5-4047f2d51c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94feebc-5139-4ddc-99b8-e633b7caed1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6c4d4a-8cf3-4560-9eee-e23c91440e6e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e3c57f-4f1a-46e5-bf19-1c5b58f36830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6f3b5a-33bc-4c59-badb-7b320835da32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6482a7d3-7c1c-43da-a07d-1d8e7271a886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836a89c2-6893-4200-8af0-af5ffb90431c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506257c1-dfed-4279-8bbe-918d98355ca0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae29cba7-2388-42dc-ac61-a6e4919415e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcdff4e7-5005-4de0-aba4-66274a48cd7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a64f7fc-0076-45b2-9ec2-9f1a2aa53953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1448ee0e-c234-425d-96c3-db46e2299772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ffb0bc-91d2-4efd-aa76-9e3dfa87ea56",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3be47df-5793-4fae-89a4-b853924ddd99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "599aa1be-5667-40cc-8059-3e0993e82af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289ad28c-25a3-492a-9a6a-963605caede8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01abed6c-aeb8-44a8-a5be-bd2d7c5b655e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de9f7d8-6bec-4d56-a277-f94e11a24ee5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43c8a4f-3f47-4bcd-afab-ddb0d4de2e21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4be4ca5a-3989-413e-b59d-80f848943af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4c000b-f9a9-4568-92b2-9723faa61335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17807ead-b036-454e-9a56-1762766b1b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3377a4af-1976-4491-9f2d-006bf18f003f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d248a5d6-f6fc-44fe-ba85-bbc45c5af61a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24e87439-c5ca-4158-ba0c-df4195e1d4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c828bb20-95d5-4e6c-8dca-a75ae6efe979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d671d65-fc1d-494f-8bd1-8dc8a6d98611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c352512-b994-4f85-ab1d-095204449e04",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab8b17f-93c0-4914-b883-3202fe7ceaa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a48798b4-d98e-4f41-8f76-4b76b28ffa3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfb0cb3-a1ff-4d86-a0da-4e33c4d88633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386feb34-d272-4fd3-a319-b6b37179b5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d92d900-4bc3-40c6-b13b-a7e6dc31c637",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da032b7-d560-469e-a53d-c194cf375eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502fb5c7-ef07-406d-9cf8-bb4b6043b6e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c1924b-0ac4-4e3d-9a34-02efa844768a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d067998-28cc-4876-b21b-a891eeb61c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52777c0f-c9ae-4908-9036-c0b74f6523f7",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b079c0-7856-4e57-8e62-637b92cc0d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadd59b0-fea1-4e7d-81b1-724c30551370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab9bfdc-0101-48a7-ad6a-0f7be2875159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46bc7c17-94f3-4c34-a108-4eb5d59add03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0878d6da-252d-40d7-b57f-db793ed5cae5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a4c302-5e1d-4c88-be49-6637361ca5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1dfd4c-b026-49ef-86cd-21c60d54b720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2765bd66-6bba-493c-8097-5dcf16413f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2148a244-7f92-4665-b55f-8f757352f880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738dc3bb-a464-4307-b934-24b0b8874c92",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01682729-0b36-4209-b684-fce7a68a2cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a42e2c-b161-49df-9521-3460022020af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ee7f95-03ce-46f6-a5f3-31096a2fcc9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccdd2ae-fb02-4b93-b743-734e1b347258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b302ac-d900-4a19-b2aa-0e63aab7641e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bd3e38-b455-4e31-ade2-a75854e8bb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f2b909-d7aa-4f74-840b-51f822bbee85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eb5a81-0b53-4935-9087-7bd14d2d0adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66c309e-8380-4493-9fbb-1b1502e2022c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c54be6-3bbb-4117-b5d8-342e2cb8ccae",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c315d40b-5edc-41b6-8adf-997063f7192a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9806aa2-cf76-4a64-aa9b-d2869466725a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5aeadb-efe9-4561-8395-d456842888f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f946928c-0868-45ac-b6f5-b0dd39525714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363cdf28-48c3-470c-a608-f564454d4eef",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f587f34-a7ec-4cba-9a3e-af3193ea1297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb57af8-267d-4d1b-8efa-4ca510d3446d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cf1ecf-5ab8-436c-8eae-8db5b2a38c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3267120b-5451-44a6-b81b-35728c2ca291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2af0398-2a7c-46fb-83d2-c9e63c0c4f6d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ab0acf-05bf-48ce-ba77-6c7d1aa3da55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4d436f-4971-47e5-85fe-8dace24067ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f564ff6c-3a18-4092-999c-223cfd6e59f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06bdce8-6c22-43b3-9a7e-0f82226a4535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3ddc83-a146-4147-a315-4f1e6f807e2a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb697ba-6147-4272-bb3e-d783741b18a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc100c54-aabd-455e-9f98-ff5c9144cd4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72424a44-3147-4825-b6f9-d53ec3073c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8573d2-eb4c-4c56-b425-a003ed9dce80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fbeca7-bf9f-4403-91c3-23fe62d1e424",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60638150-a85d-48e7-8648-e42ba6e253d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe7a1bc2-4d10-4b79-9a51-ee5c140bc5e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9e555a-2204-4171-873a-e7f1dcbb3468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00228d7e-ab42-4753-af4e-a4be993d636f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d869141d-feba-4e53-a306-7de49a449190",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e992bc05-f208-47f4-bec1-e19133c44c19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "996724fa-f477-4b2f-b94d-83eef8968b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dfdaf1-83c1-4455-bd42-b0e1178fbc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36708c0-c343-4d55-8e7b-651f75d87909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f969e6ba-ac5e-410c-a1bc-ba7a1293039e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500da946-ce7e-4fd2-9bb0-a8861996c85f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6837f26-ee24-4156-9b8b-4cb7cba72be2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7607ea85-373c-4788-8f4a-ba108f1a243e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fb4a62-4ac5-4a17-8ed2-857de96e2361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7158f9d0-495c-4e4e-ab1f-b6327d5a19e2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a175ed0-46ad-43e7-beb1-6c0b4f753f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0645f842-bb82-4ef8-83bd-783856a532a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af13f412-b8ef-45c0-8663-cd7fbb48a3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dbd8e81-84b6-4df8-9041-e098e19914a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b03312-918f-4fe5-a52c-3cc78f192eb1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722f4c8b-01bc-4ab2-94c9-4ae7e37f561d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f55f9a24-f5f9-4245-84f3-1d2ec35b6232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee69c5d-2c0b-4080-96b6-0d75afa9aeb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e268306-2b47-4d93-ad57-c8e2289779fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b19adb6-4126-46c7-baa3-de55b80fc2ab",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd7020f-b7a4-4276-98b3-5fec3e3d1561",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2c32473-6692-469a-bd19-a42866dfb250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4accdb-d9a9-448d-8240-e2fa430b1564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f82ac8-e324-4446-9f72-ad89def97b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5953d535-a3e4-4f7e-b6b0-e926b6f05f3e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2812fced-3c22-454f-ba1e-d44aa442017f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67d29966-c955-4dfb-ae5c-e4ad8a4ac0d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a309af-1c4e-4d20-8535-d89f524b1e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d24059-12b6-439e-abf5-ce35c6bd7cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0115ef-2c8c-4d51-b585-a0806d356aaf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b44fd42-579e-4f7b-8b28-73fb6e0e126c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e911f61-6bf4-4dba-af5d-2250a1339289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55d7539-3ce0-48c9-b4af-b467e341f3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a103870-1667-4b06-a760-8a110390b671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca3ecbb-4bd3-4e13-84e4-7e751160c48a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b3cbd8-c815-4596-a763-3cec69a84071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1422103e-d803-4a3e-8835-81184da218d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e08779-dc98-493d-84b7-4f47b1abe50e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7731da6a-3399-4578-bbe2-47ac324179fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669703c2-ead4-4d22-b32d-9c761f71b139",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950ad6b7-1bcf-4d91-bd4a-aa2c7a40fbc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d73e3116-cd8f-44d6-b3e3-394019f5c8d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd48ab86-7088-4718-b14f-90f0b317a8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4692546c-354b-426b-9243-d8c9ef2154ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545265ee-3eff-4d42-9ee8-4d653fc7b3ef",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0360579c-d63f-4ed6-8832-c9b60903cee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45078a9-17db-4664-bb38-1e9de44b183b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d8b7ee-394e-4fee-844d-29b861d4ed57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ebe423-cb5c-4f79-bdc4-22a37d2cfe34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a93e17-8dc2-4f6d-921e-a7cef2b3bdd5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ac136a-6a6d-4bae-acb4-aa83029f7a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b6ae52-5b14-4d8a-ac47-85555ffb7025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0276a3-f182-4349-b554-5371b28e1aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f119fd2-4057-4d6b-bfa9-7fd06a05e239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178745dc-e75c-4481-8ee2-9344a9931ff8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5c54a5-cfcf-4e5a-b1af-270f9e811414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7b6958-d031-4ed5-954a-2df5bc540ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87652e8a-64a2-4905-9662-db56a1c9e3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5291c7e8-e3a4-4525-a05b-c96aafe11511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007bdf3c-233e-4d59-b2bf-446273600db7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decc4233-f972-4fbe-8bbb-ef1620d858e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11ba0fc-bba9-45ab-a99f-30ae4feef68d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07890310-3a87-4f61-a3fb-9fdd0236b86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62353ae-fce7-4d2e-b22c-e4f8c41b9b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e65a07-1915-457a-997f-63872f97a41c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5682532-11da-4416-98c9-7f778de2de82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7842adda-9d65-4b5e-b697-5fedb115339b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0905fffc-c78d-4c74-8afc-2f0671ff43a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b8740a-c2cc-49e6-816c-ad5461ff3b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf03550-e744-495a-a83b-f3d03ab3bdcc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab7a327-ac39-4c00-bbce-ce101e408c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53947be-273b-44b4-96c8-629db612e9ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1c6b1b-b601-4d02-b8c8-ded092b9b9bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcfdfe8e-313b-4fee-99ac-9cacf91e5de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959a9823-17d8-4085-b215-2f96111e657a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922cffb7-9403-4995-b4fb-73a4cec160bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374ea7c2-094a-49ea-969f-1ab5660189aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62755dcf-be72-4417-8e5a-2f05b98de04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc99a44d-93d7-4d50-9a91-7d0dfa89b29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79871335-34d8-4ddf-956e-0699a3d68ff9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f8e376-d0b6-4281-a5d4-095d4f9db568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630faff7-139b-4845-8978-b8b6fd02559c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "479a072a-3cd0-4d64-bf3e-e562c94a5cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193248e3-2950-49c5-9954-14dafba1dd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60be6107-d34c-4145-b3fe-beb41d962ef0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55094e55-fec4-491b-ac04-c5ce84c2f208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca64a03-0d9a-41fb-a357-6fa0ece72dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76011411-9e60-45bd-9292-14af8f4b196a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91d4493-63ab-4f3d-8d94-c9a29261aa4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a7228a-2658-498f-aa48-7132538dd77f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55ed262-1777-432b-be06-1e564a0a3c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95bbe05-92b8-467d-9871-a98cb54fd7c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b291e87c-0b48-4478-847b-de246705f982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4e3dd4-0dc7-4387-af59-2e6906bc025f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad317c54-338e-4cb7-880a-97ce66550516",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc0c90a-ae2f-4b00-a4f3-964eb2eee2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a674f78-914c-4236-a122-be74d39a9644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c711a5-c289-48b6-b54b-f6fd4353e6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97ba6ce-9246-4f45-bb08-f64fb678ac84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d5c2bc-3cd5-4d80-8c53-2b1c445fa884",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a9c143-f8d8-4e9b-97e3-b336757132e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ef2b9f-3440-4fd9-8e3c-51030f18ac12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4664ff5f-f963-4f10-a5d5-cdf246be3949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18349d4c-6d8c-4934-aa39-49990c14d5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a5f376-a273-462c-8eb3-76cab4fe950f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f79fa9-64ff-470e-80ae-9a372f9d8c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459eb00f-726d-488d-aba7-5d81500d0fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e446501-bccf-4340-b659-1f865bd2d83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad3791d-64dd-4cad-adac-3e743f89ca49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6466ddc5-5bf0-4df2-86da-e48165ef9af4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f7e867-ae76-428e-a568-b608239a8186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e036aa82-0e9b-4fbd-b1ca-570a645f19bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7863e852-68ff-4078-8c83-7f7aa8f97ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e86d52c-4f89-413e-986b-fda10012af4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328f2c0c-5494-4e2b-a24c-98b9b7a64773",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8aa0437-4da7-41e9-8a36-80bcebce8eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1036011-eef6-4286-a05d-227a0c35b254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "511969f5-3f75-426d-b832-91c753bd211a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb0a82d1-d9e7-42f1-b450-ab752af1eaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6e7a8c-a1ad-4f05-9fea-05c1f66ea915",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65137b5-a460-4268-839c-9c5add893429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c97ff6-f10a-453e-bbee-30c47f05ad9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d190d37a-2c58-4e32-a2e9-a3d8cbacbe00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976feeae-9e59-474f-aa81-202ce4e9b07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1959b83b-0261-4c06-ad47-c5dc977885eb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5500819d-f4f9-4cc5-8990-c376e2f2dde1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa1d49d-3616-4a7f-b908-c2175108c725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d1782c-53fe-4b47-89c1-8674476bc33b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b321d464-fce8-408e-9916-16046520916e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb07abfd-07ec-4864-9643-ef0d5d74de0e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172bafd7-07ef-423f-aa57-7cd041cbb064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50baf7b6-3d7c-49a2-9280-22fbe77af74c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d389d61-46a8-41c2-b125-68db8dc866d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53602567-100d-429f-af98-a50a0585a4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66a6aab-12d9-4766-8e5b-fde88f80ad4a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3440f1-241c-47e1-bc1e-3f7133ec16a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b35ce72-633f-402a-be47-9ce71f9f101a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5d3908-4ec6-432f-bf1a-91951df904c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35619780-3fce-4a78-a0e9-26b7592ee3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac483b5f-9f59-4ab3-af5a-0f9684219c5c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438158d1-6da4-4fc0-8971-ba8c22622153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127da046-b782-4733-a48e-fb0c8fc7227c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1d4da0-a254-4330-a1f4-d55b26699f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1208bf26-33f6-4499-848a-e6c5b1b55338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dea3886-efbe-4268-82fb-3566d2a44d63",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db54ff1a-5aef-4eec-9c68-d50aebb5c003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abcbbfe-f62c-4b53-8381-a5ee4ee176c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e6e04d-2c6e-4674-8d1f-addad25bd600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1ba72d-5e5f-4d66-9008-406752a4113f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f2c65c-8a77-42ce-9b25-7b0abd63bdc2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e45579-18ed-4f5f-b195-8b6849db0fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad2cc97-69ba-4e97-b6a4-8ae3066645ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da27240-9c10-41cf-93e1-884e05f08128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b23caef-6afe-4b1b-bc08-559c6229435b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c29655a-600e-4590-8fa9-e2f18e630a64",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67812d4a-782b-47cf-85c9-0d4bc7cedcb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4372488f-d38b-4072-b024-d7437afcf01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c2b2a3-fade-442a-8dd4-e46cc5c97ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3edab1c-fc82-41ab-b74c-9adb8da54d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5946e40-fd43-4d25-8cc7-0751ac532853",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab5bafb-9823-4469-bbf3-b9e2ac9c0054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbc68d3-82ce-4c5c-8762-d8a58d146234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01f1042-8e28-43c8-8d1e-8c0887865bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b060e7-e004-494a-a355-c709f7178e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5651b903-7540-4892-8216-d832fc92b424",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee525f3c-c5aa-4a23-970e-2544de16e8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40205794-4e61-4850-ab87-d0e6546c5052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7a9cb3-c580-4e24-87d7-c7163575429a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452b8a4e-b795-4784-91d5-603b35333491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b85a44-08e3-4fbe-a9fc-41d73ab6c591",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449f7359-b7d8-47b0-8287-966e1b0df80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51448167-0b38-4d70-8772-9711ca3ccbfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a565286-6a7c-4a71-9859-61751dd67e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2cc25b-1de6-458b-8932-5c16e068e91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafbd8d4-58f8-4b44-918d-0eacec391d24",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b84d032-6072-48f5-9594-c750badffb77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d548851a-70cf-4897-86eb-5270ee5f3403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3470236-47fd-4044-8220-ba037b35842f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ca4591-1e70-4540-9604-2be56b2a4a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8947893f-c92d-4392-a892-d81b026b764b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940eaea4-29b8-453d-805e-c5caf52cac69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4388657b-5535-43a1-870e-f846af2180d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a3bd7b-9d10-44f3-a06f-410faf2fad94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc06494e-76c2-4a3e-ad13-fef11f66326a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c917dcc-95b7-462c-8e0c-71139cbd04e5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d25b91d-1c68-4ca8-bf02-c2599b62658f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff583e9-2a68-463f-954d-c710f82fff62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0244028-aacf-48d2-9c6d-84e929bc9e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e84a8c-53df-49b5-b06f-69c572fb7f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cf521c-82cb-4969-b0ec-0a39d67b4cf8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619fbca8-9f88-46ca-bdc9-e25daa505490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf00abbb-9bc7-44e5-b1eb-4ba2a9be8b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b503e141-da49-4a7a-a822-4d0dfdea066a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b558be-a43e-4c55-a77c-760c7e916a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66390264-3af8-480b-bcdb-43a162d6b4c5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874ea39b-3ca5-4550-8365-19c93db77b09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23246ae2-0f9f-42c1-9366-ab6a5cdfa9d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a84c26-272e-4da4-85eb-2589a465fa50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a535cc41-a41e-47fb-a9f7-c1cd4ef6936a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e347933-7123-468a-98d5-c6e0ab6ad66c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596fbb1a-a612-4c08-86b2-2ca74d637554",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1a6288e-4837-4cca-a485-d898a4212f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a51844-41d7-4636-907b-5bdd07e64975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c91e9b66-d841-4ccc-8e6d-93243cadada6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf664ab6-7d1f-4737-a305-afa087c968fe",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1df539-b38b-46d0-9371-09ff5480eab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35642951-28d2-44d9-a63a-8fbb5ecf3ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3312def-55b3-4e12-a05c-b048ee6fbb27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1215ddb-1c96-48eb-8ab2-1b2773ced0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0256a6d-23df-486a-bba1-5f85374965d7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff43d27e-0808-4005-a6e1-4c8d16da9aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4996fdd9-d93a-459e-a711-eada1de3b0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec80cf6-59f4-47c9-86dc-c88ffd3b05f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bf211c-c56b-4b3f-9b99-829260850636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20aa9df0-b3a9-4ec2-a258-5a6c46f7fa7b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e915da6-1760-4eae-937c-b62f5489cb8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "159125c4-8dcd-4f80-92a0-1d70b628dacf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ef4cf4-5b2b-4071-8d7c-de0ea709c413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20bfa67-8332-4958-bda1-ea6981f0307d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbf620f-00a7-468f-a0fe-ebf885a64d82",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da10b48f-b541-45be-99fc-aae534be6dec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58e76ac3-9722-4082-b73d-9ddc82f3c203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13813ad7-716a-41b5-a8b7-247a747fae2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce7d59c-cd09-485e-b7ec-f52f00af7528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc8ac01-eb06-4b5e-9b52-47d46a46432a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df7a630-9238-4bbc-b6c0-b6f7084b5039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "775d783f-b486-4727-971a-6d7d4d0ed64b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b94a5a-6b15-410f-944f-8250837d27a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "becdd2be-93ee-44b5-b389-622b13c43f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590e65b0-3ff6-4e77-8a72-c7edbad75965",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aeed2d9-a16c-4fd3-8013-22ef224e1228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c44007a7-aad5-402c-a4cd-35f5ec01a328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb588fa8-740f-4d03-87ca-1adf563c4858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28de7eb0-9105-4c20-b225-51da37711c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a1dfa9-d2a4-4325-ad88-41af934c38ff",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9508f77b-6038-45a4-8f18-09dce5a1bac1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "868fe02d-9e5c-476d-b119-d56c364a255f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c524fd-7566-4eb7-b71f-145ebc4c56b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10eb7a6f-3d18-4996-9491-15b8c185d78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5a1fd1-b167-40de-a5fc-26a2dba26a29",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3997d020-7e6b-422b-a48b-d64b81cbeb86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "709989b6-7962-42a2-8984-c5c1345480b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737c7e6d-e3c9-4153-bf2f-b9ba4e479e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0970e69-5664-4410-a97e-a89d9a155f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb2874b-9766-439f-a479-b6ab15d11ebc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70247e7-9a01-4d74-8d95-f8c252bf34dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09d405d2-b1c1-448f-b01c-974626ee994e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "769f2ec6-6f8f-4252-84c6-6f12e58297b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de59280-2a5b-4810-b286-18a8a5456fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fa876b-098d-45e7-853b-93ac44cc04bc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfd6ee6-b50b-4b29-99d7-0bc538562aae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9f7b40c-975f-4ee8-909b-48832c7c5bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc37679-a213-4f24-99b5-f70666e8fb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ce389b-1067-4d69-979d-51ccb995b564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fac783-e5c4-45fb-9d64-4b0128b0c1c9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d53864-59ed-42bb-844e-84ebbc236438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc27a06f-7db0-441d-a9aa-b86fbdb6ae9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a82007f-0386-48f4-89c3-4688012c4aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2aa295-89dc-4684-8dba-527502ef3aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1600d80a-4611-4a07-bb70-ea788b84da25",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336737e7-e906-436b-b1c7-60e31b939bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76d28c19-58e4-4029-b341-8df90e4fb6b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b15b952-fa47-40e7-a0e7-f21f21b3d891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b49deb-be15-43b5-80b7-671924658838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa63f01-e629-43d7-8f21-a7221aedbce4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76eefc23-4fc2-41ed-9405-2ab0552151cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a64fe729-b137-412b-a7b0-fc40cde2d2cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ff32bb-2cf8-4bfe-9631-02aa3eff669a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582a26d6-854a-4dd5-8513-e79c29b73c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34071dea-b781-4255-a19e-3af3e76513ec",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb7b82e-ff4d-4225-b3e6-1e7e5027eb42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "166fdbef-81de-4084-ad99-57fb8865cec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "012fd47c-d512-46bd-8b60-19b958aac2d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151b3cae-ae37-4974-8d26-108c40cd0f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6310a2-a820-49fe-b775-6cef247ee9b3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf6811a-fe4d-4a7c-a1a2-8dff1f822afc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd814e76-c2e1-41e3-977a-504f99868c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d5b263-d538-4c11-9096-6ae7d7ff650e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9895b8-8965-49f8-9dc4-e2ad19c81b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07d4e8b-9c64-4692-a115-094154f8cea6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52727120-646c-4888-bc5a-7f3b2c4aebc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bed2f74-cb85-46f5-b103-08db41718f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d84b8c-ada6-43ef-a3a5-b4d149b73260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b500191-c7e3-405d-a57b-d73a025b73b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b2b948-3581-4ae5-b0ab-7cf4bef1dac0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada6364b-a1cf-4fc5-8882-269fe27d1701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a37ecd-785c-45da-b07f-221f39149bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b377122c-168d-4a74-93d1-f661498a8186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9232473d-4616-450a-9ab6-51d4bc22da45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74687f4d-8014-4d50-a2b5-c68b23dfda3d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a90ef4-d88c-4c4a-8ae2-724dc26db880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21039424-1619-4d2a-98b5-fa51a95a0a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acadbf3-270f-451d-b8c5-379895e4551e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1203b9a2-4dc5-4a9a-8a78-e6ce0596c0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9ee653-2ff6-4dfc-9fc2-ed1275404afa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279254bc-caf4-45ae-8737-68a8cf434563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6637d29-8a27-472b-bd6b-d338d82efc84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa23c966-559d-49c3-bb12-217451731a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a45d5cd-cf0d-4397-ae4e-bc614d358bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e6cae4-3186-48de-aedd-8ed3407c95ab",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f9ab3e-86ec-434d-8b24-89a02a319a76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be4a867b-1bc2-44fc-ad75-172c97549a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3975265-c270-4213-82ce-398d175f984c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be9fffed-a1a7-4375-a31a-f198c2d4e920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa343384-dc34-4845-b21e-df2119d8381f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dd9520-f85e-465e-851d-2796b67a5062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e7a758d-f910-4ac8-b184-1c22ae2c4ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2640620-106e-49aa-858d-6263486da8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aee2b79-6918-4366-830a-8912e6fcd8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822ee25a-d483-4dc1-98fa-72a7bd9ed374",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db91851-898c-4720-9265-ffe21243f5d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "451bcaca-cf2f-49fe-8cf4-c8c28c63eac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a869a13-c40a-4cac-9e84-a3cf6c6f9c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb88390-c511-4959-80fe-0209efc0be71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7265f1c-e4de-4c9b-9240-ffbe152f958a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c657cf6-a1e5-4a29-9747-5b52d661ac2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "564b2d93-0262-4e4c-a650-93f29067df10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1702c50-9ebd-4190-9302-725d20fdca3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3cc8e0-5d74-4e28-9305-ddaa2e463d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afa1687-9801-40d6-b231-b97892426c1a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b528034b-f1a3-429f-a89e-1a2a5ddbf935",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37acd154-56f8-4b08-b284-dc85c6de7821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f063322-91b1-4461-b3ff-817c27214f29",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890496ba-d839-4779-89e7-35e2b4869efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6912ff40-3385-40ff-a077-b1f8c72c109a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12836b4-d248-4c63-88ac-b564a677c02d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e972a96-c737-448d-8474-059166064bb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd910744-9d3b-4a8d-9b9c-6a17ae89ed50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49a710f-af24-4f74-a612-bc8c233bce55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230d0ff1-0980-4858-824c-6047a66055bc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb62ea2-57cd-4c5d-984a-62b8383e66f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb269224-1abf-4a00-b104-17376eebed9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39808a93-eb8e-44b2-ab6f-2bf3fa98a2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c39f590-aabb-458f-9f74-08b21db432d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7722a5a4-a900-4f95-a1d0-4d53bbb61e5e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d78ace-86a8-4939-bc7f-0f0724b7262a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "209bb141-7a8f-402a-aca9-a2f5e496bec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29187f8a-1008-430b-ab34-3cf951c21978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0fbd7b-424a-431f-9f5d-014325b7f0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f4c93e-8fed-4beb-965c-b0b3d2345ac5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647320a9-b228-4ea7-836b-7728ba8e5faf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d10dc1ad-7f4b-4992-ad44-a547863016c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c43238-185d-4fa8-bc8f-e5be660739e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce0a97a-2647-447b-bbde-68f6102a9226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3163e22-9357-4b89-b89c-0b78357ee406",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4805760e-36c0-4a90-89a6-17f086b703e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edc96384-a730-4eda-9b97-b8ddba448bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e61c69-1d62-4bcd-9f41-9ae844cb9c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8de980-fc42-401d-9e83-64ae171694d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd9e5cf-30b7-4a74-a201-026036671ef7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285d60f0-e870-4bbb-8fbf-ee6f22eac37c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8736005-1f32-4c87-a74f-e343b8be0678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e4201f-66f4-4811-9d4c-a10bd7f4d4bd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931e781e-ad19-4391-90a7-17b4e67db445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9b1e18-1aed-4296-ab7f-ef6d71190223",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dad5422-63a5-4071-9306-fefa461dbe67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c1ffff-0d91-4856-bdcc-474a1b8e94e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a078d5ee-4d0e-4278-ba68-6098336eee9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6450d1b-fc03-4251-b5ef-094d9a1a094f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9df4e6f3-33a5-46e7-a61d-8edb7ad9b1bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93772e2c-f313-4d1f-a865-57222fe0bc52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eee28d4a-8b3a-4e7d-83f3-5bdd17b42a03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c8ab4ea-bcf5-4156-a132-c024e922cc16"
                    }
                  }
                ]
              },
              {
                "id": "728f6250-1ee3-44ed-b642-60128f18a343",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dab26425-7821-49e9-a951-ab5ca999c6be",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401cb5e8-a659-4272-8e6c-ea12e510e6d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "39f55f4c-b7d3-47c3-a8a3-ac03b72c2dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecdeb9b-02f2-41e2-a14d-119fd552070b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff955649-b38d-4420-b001-e9d68615c63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b0bee1-716e-4a45-bbc3-910eddabcbd1",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d2cff8-6da1-4ea1-affa-c8ec2e106ee3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "89153c82-9158-4860-bc89-f4b498f75684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab731a87-0933-4443-bb2e-342fddbcea84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6b9f250-012e-4c68-a6e6-6440fc0d9f13"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a71a3c9e-b141-4b07-99ea-c6c64182b142",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40f993c2-90d3-40f3-aaff-67d0ef472c61"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d64c3970-c26a-4c14-8b8f-88c82395baf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4153bb9d-ff98-4d7c-97d5-d5ed645897e7"
                    }
                  }
                ]
              },
              {
                "id": "c837d798-a563-42a8-b6f8-e1ab8526298d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c2282259-4536-4612-bad0-99ecee5499e3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabd29cf-67d5-4749-9cb0-4cd20fbed31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "44066cee-5eb3-4144-b7c9-12b183e07dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4527e60-b733-4f73-a390-70ff23c9348d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2731a52-7904-46ee-9a29-d744a677e210"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "14fd465b-258f-41bc-9478-dac0bcded769",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ff0d6471-35d3-4b23-b92a-92abcb1754ed",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca6b33cb-28f6-49e7-be33-620099865ea8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "301ba81e-179d-4a88-b5bb-b2cc9d4e19c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab6271af-4019-421b-bdfc-1d3e9607cc24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "614f5405-a9d4-4aee-8ce7-1b8fe87b6c6b"
                    }
                  }
                ]
              },
              {
                "id": "fe8a8496-8be7-4029-a7e0-e507a63ceb15",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d12c494-04d2-44e0-921b-429aba75ca7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1da03b5a-c244-41e3-9a55-9995815c6f66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdc9d5e1-41fb-4971-a1ca-17a702f5895b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e578e48-f5fc-4690-bb1e-0b311fca819f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15829258-7640-4e3c-8d7c-b7021185e7ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b3064e4e-d09e-4efc-8483-17f92848ac93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79c1591c-a1fe-49bf-a12e-5fb4c207d26c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cc783a8-5e41-46b5-9453-c65488ec7609"
            }
          }
        ]
      },
      {
        "id": "6e9a1378-041e-44b8-86ac-413f8507d857",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f87635cb-63d1-4bb8-97ad-3b17081ad798",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7150632-62b0-4635-973d-e0c5cfd52327",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4cb6ade8-c415-46e7-bb82-89e48d7af1cc",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c0a4f7-7160-4664-bc56-db5f81dc9208",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "11d83db0-44d2-41b3-8d35-b629d62ef992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de211cf7-4f56-45af-9b28-d89496ca1142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "739e0472-46d0-4384-bb73-f3fdff7a2f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97593bf-2621-4a4c-a168-03a2d003cb64",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b726971-e2ad-4f02-9374-98a6be61a7d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6dbaec2d-4495-4bd6-a236-7aee57a58092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55766453-7f4e-47f8-8224-421cc607c5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f1b6d8b-7ecd-4a2f-a786-b35ebdae8c84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cda168f-2061-4776-bb50-a226af5b3b7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f319dbdf-0777-41c6-b5a3-b026f3195335"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23567e25-e3ee-4683-b958-3c6515a726dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f4f7efc-748d-4e01-b592-2736c5eb8de1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3d30dc0-58fa-4add-a82b-f22978ec87db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0732c925-2ce8-4598-a7a4-595f5c8b78c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff6073c3-7212-41d8-a934-df24400f4a88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d850132b-cde4-483f-8b09-2b453026761e"
            }
          }
        ]
      },
      {
        "id": "252fe46b-0e2f-4c0b-bde5-689706192cb1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7e67c781-e4fb-4fc0-b802-281e865fbefc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "718dcb89-8b9b-4b9c-bcfc-9e5466d049b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2419a2d8-dcc7-4855-a0ec-8a680888b1ee",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e38a1b-89cd-4234-9b41-4ac4985742df",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bb964dc2-dfff-4391-8ca6-eec551bf214d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02faacac-24c5-4f1a-b4f2-6db66b0958c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a422727a-c081-4023-9688-7723f87d3254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d79e6c4-8995-4118-8d7f-eb0b2406bb24",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e739ea3d-550f-4a2a-8086-ddf3622ea346",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2eaa79ee-390e-44c1-aece-1f91dc7d8d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6c3819-c92c-48f4-b983-c6abb50e3458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd3c6c8c-cd75-46ff-a09d-21089a02abe2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1d7ad1e-dc3d-4031-b188-901484f72037",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39497c4a-136d-4e04-be4a-02c2b38ca607"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b81142d-31ec-45c5-94f9-dd9ee2891896",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "066da4c6-db5f-4fb0-b31c-23908fc24abf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6378fb9-1a50-4920-92e4-2f8b81bedb95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9fda9cd9-e045-415a-b72a-c11aabf8169c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a99ac8b5-eb1f-4aaf-82e6-a8b3e533df27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d942f5b-4a6b-45b7-987e-8745250da584"
            }
          }
        ]
      },
      {
        "id": "133f9765-3af2-4ab4-bace-4e8b61b81f1d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ce231136-bb63-49e8-9599-fc70ccbddf4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "858be309-60d6-49ba-92c9-cb904a29544e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "192908e3-d462-4493-97bd-4a4220afd6b8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc885e8a-0ab6-4221-a147-746d8ddc2a49",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4aa9157f-a238-456c-962a-1a2a467191c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22ec805-e44c-4677-817d-093af2da3af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8ec41b6-f9f1-4b3a-bf40-0d880dd51f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b701f71-d8bc-413c-bfc1-5e3949ee1347",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694366e0-1635-44ee-b4fa-6f4388267ba4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8cdf904b-2a53-4c1d-bb94-2404e6c8d5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9134a821-a7d0-4536-bf6e-940a52a6308d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a59f0507-94a6-428a-8cb8-1f433b9b7bae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bf043ad-5d11-4454-8035-d77ee6a1e603",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6961fdaf-cfb2-4a00-b7ab-a9af7b008b45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4db4eac-cce3-4c08-8b60-9e9704c1924e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9d65302-eb78-4dc4-a16f-59547aa94e6b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1306dbd-9c77-49d9-8445-fe83d7dba4c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "67ebdaaf-2020-4599-869b-f1d87ee65e07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94d71135-bb0b-4a69-9ffe-99b582385782",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17682107-6636-4156-bc22-c65b5348b363"
            }
          }
        ]
      },
      {
        "id": "e5c6ee96-1bf5-4cd3-a583-5c2681444606",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44f0f3c5-e263-411b-8f57-24ae7cb7b027",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68bca0a8-963c-4951-858b-912f01dbb867",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6a1aff21-6c4e-4955-b9a5-75382a9a784e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "234ec790-8e76-4fe7-b742-4febcf229be4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6a34556-fcc1-4d0a-a8e0-ce27c353bc18",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 587.7061068702291,
      "responseMin": 8,
      "responseMax": 4888,
      "responseSd": 630.6132310811552,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1673656641187,
      "completed": 1673656808039
    },
    "executions": [
      {
        "id": "a4e82253-c4de-4282-82f0-340e8ca1dac5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d3789582-50d3-4841-a8d4-0cfb82261bbf",
          "httpRequestId": "8b1f3d65-69f7-4326-b14f-d2a8bd5e49ca"
        },
        "item": {
          "id": "a4e82253-c4de-4282-82f0-340e8ca1dac5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "708fb1d8-c22f-4259-a41f-b024a85a95ff",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "299e582a-6362-471b-993c-b290f443e7c9",
        "cursor": {
          "ref": "33f84b05-6b6a-471d-8c1e-bc36e6d3149e",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0072a7de-d992-4255-8e3c-7ea8110301e2"
        },
        "item": {
          "id": "299e582a-6362-471b-993c-b290f443e7c9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8e53a0dc-8656-4d7f-bae4-2b0abca39ed8",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "90926cfa-edf4-4b21-99f3-d1194e24f800",
        "cursor": {
          "ref": "4ed5dd15-b03f-412f-87ce-412ae1e66d4d",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3f80fa2e-ddcc-4ad1-98b1-7676d4a20292"
        },
        "item": {
          "id": "90926cfa-edf4-4b21-99f3-d1194e24f800",
          "name": "did_json"
        },
        "response": {
          "id": "2adfbc02-c735-4d13-953e-0bb823643115",
          "status": "OK",
          "code": 200,
          "responseTime": 773,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd0720b-2505-40aa-9814-5b8cc9d50486",
        "cursor": {
          "ref": "c21ee3fd-bd70-4f48-95a6-f80792e81d0f",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cbafe576-c37b-411d-918a-25fe306e43c1"
        },
        "item": {
          "id": "1bd0720b-2505-40aa-9814-5b8cc9d50486",
          "name": "did:invalid"
        },
        "response": {
          "id": "b63a6213-429c-4dd6-9a8d-d4405ddeefc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd0720b-2505-40aa-9814-5b8cc9d50486",
        "cursor": {
          "ref": "c21ee3fd-bd70-4f48-95a6-f80792e81d0f",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cbafe576-c37b-411d-918a-25fe306e43c1"
        },
        "item": {
          "id": "1bd0720b-2505-40aa-9814-5b8cc9d50486",
          "name": "did:invalid"
        },
        "response": {
          "id": "b63a6213-429c-4dd6-9a8d-d4405ddeefc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f595a6-efaa-4b78-91eb-9da2ad1d6979",
        "cursor": {
          "ref": "0c0c6f71-de75-43a0-a4ee-5a0b91c0a8ed",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f806bf01-7dce-4252-a7cd-066008a5e0d7"
        },
        "item": {
          "id": "34f595a6-efaa-4b78-91eb-9da2ad1d6979",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c656bf58-bb12-4451-9d1d-ae1a4711c27f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 582,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f512ea-9e7e-47f1-935a-b9a5ad0dbabd",
        "cursor": {
          "ref": "0a058a02-8f9f-43e6-849f-813c143e6091",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2b00db2c-02e4-482f-bcd9-3cb04f408e81"
        },
        "item": {
          "id": "34f512ea-9e7e-47f1-935a-b9a5ad0dbabd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "26f41954-55e3-40ea-ad1b-c9d47156f6fb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 527,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f3b8da-65de-4413-96e2-290b8b137043",
        "cursor": {
          "ref": "255b33a3-211e-4dde-b92f-5b8b631b8560",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7f520e9d-05ac-4022-947e-1b7f430e06ab"
        },
        "item": {
          "id": "66f3b8da-65de-4413-96e2-290b8b137043",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3540c0a4-715f-46df-96ec-4a02767203cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620542de-002e-4dde-81ce-f137207396c3",
        "cursor": {
          "ref": "d9dac576-5dc9-402c-b90f-a3b9c65a8157",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "11cffb8c-4e1f-403a-9b98-f49d94b57bb2"
        },
        "item": {
          "id": "620542de-002e-4dde-81ce-f137207396c3",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d4540621-a244-4ad8-9761-29c88f3efdd8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 527,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620542de-002e-4dde-81ce-f137207396c3",
        "cursor": {
          "ref": "d9dac576-5dc9-402c-b90f-a3b9c65a8157",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "11cffb8c-4e1f-403a-9b98-f49d94b57bb2"
        },
        "item": {
          "id": "620542de-002e-4dde-81ce-f137207396c3",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d4540621-a244-4ad8-9761-29c88f3efdd8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 527,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a83ff0e-1ca4-4714-a56a-b6e6fee74405",
        "cursor": {
          "ref": "d5a20f02-7075-4d22-ab80-393d8b39aead",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6a8441b1-6ec5-437f-aafd-bbc473f08a5d"
        },
        "item": {
          "id": "6a83ff0e-1ca4-4714-a56a-b6e6fee74405",
          "name": "identifiers"
        },
        "response": {
          "id": "c093a9a2-bbfe-4ac6-86fa-7e53df250ff9",
          "status": "OK",
          "code": 200,
          "responseTime": 848,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd32685-3954-40b7-9bd5-343cea707a37",
        "cursor": {
          "ref": "6ec5a064-66b8-4550-ac10-d8327e41f73f",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c72a92fe-e711-4901-92d8-661f97b4882c"
        },
        "item": {
          "id": "cdd32685-3954-40b7-9bd5-343cea707a37",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b1c14e9e-250a-4bf7-92f5-4b55f61fc286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd32685-3954-40b7-9bd5-343cea707a37",
        "cursor": {
          "ref": "6ec5a064-66b8-4550-ac10-d8327e41f73f",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c72a92fe-e711-4901-92d8-661f97b4882c"
        },
        "item": {
          "id": "cdd32685-3954-40b7-9bd5-343cea707a37",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b1c14e9e-250a-4bf7-92f5-4b55f61fc286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bb6e2a-fc28-4424-8702-2e187af5716e",
        "cursor": {
          "ref": "f738b9f2-a6d1-4b9f-bb60-87b67ba1a7d2",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d5c52d47-f346-44f1-a40d-f68024cba6f0"
        },
        "item": {
          "id": "41bb6e2a-fc28-4424-8702-2e187af5716e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a6e8eb68-9126-42f5-898b-f5864f92da94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5083c537-93f0-4ade-86eb-458b6da78ea6",
        "cursor": {
          "ref": "edf953e1-4d88-406b-bbe9-572968c651a0",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e7d38ba1-5f16-4f3c-bcc9-303799b5dbba"
        },
        "item": {
          "id": "5083c537-93f0-4ade-86eb-458b6da78ea6",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "b06cd0a2-17e7-4d68-8586-c5bcbf16f896",
          "status": "Created",
          "code": 201,
          "responseTime": 2608,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "1bb554c0-0d20-47b3-aa3b-6b5ae0def972",
        "cursor": {
          "ref": "96a2863b-df33-47b0-a33f-5c7cc9143b5a",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e7e5a560-a7da-4d37-8e74-d2727fa372a1"
        },
        "item": {
          "id": "1bb554c0-0d20-47b3-aa3b-6b5ae0def972",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "18c611cc-cab3-47e9-b7f9-e4fce3294d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38221d95-2783-4c18-aa5c-a93a3da755f5",
        "cursor": {
          "ref": "6a103859-ef14-4394-9594-ca6f726447bd",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b8b5d4ee-2f85-47fe-bd42-d3947a8907b0"
        },
        "item": {
          "id": "38221d95-2783-4c18-aa5c-a93a3da755f5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "37c455ec-e0c9-491c-9559-3beebcf45c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d47cc9-40ce-45f5-89c3-8762ab029382",
        "cursor": {
          "ref": "69d5e32d-ee5b-4d22-a5a7-994407fb2145",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "112f21f1-c4e1-4c4c-953c-4205f36f65ef"
        },
        "item": {
          "id": "b4d47cc9-40ce-45f5-89c3-8762ab029382",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "53228d07-27b0-4c9e-b2e4-fe0483687f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97560cf-f034-4fdd-a779-29a09c37dd42",
        "cursor": {
          "ref": "1603fc9e-939c-4791-a2ee-bd3f1ea6aa51",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2778f4b8-85ef-419d-a470-974f0031877f"
        },
        "item": {
          "id": "b97560cf-f034-4fdd-a779-29a09c37dd42",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9f20ba74-a407-461d-852a-ddc94e2f447b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9937d6f2-7b75-4c8b-9993-679ecfc717ef",
        "cursor": {
          "ref": "c1723eca-9415-4fc2-83c8-60984b69f02e",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7158a891-64fd-40a0-828e-db91803c6a4e"
        },
        "item": {
          "id": "9937d6f2-7b75-4c8b-9993-679ecfc717ef",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "30348832-b819-4628-9671-013f5928ef83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1967a6df-5917-4fc4-ae8c-09c351b49724",
        "cursor": {
          "ref": "f45ad8d2-7f9b-4538-bd2d-11841607632b",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4755d0d4-23ad-4748-9aa8-a6929a9974ce"
        },
        "item": {
          "id": "1967a6df-5917-4fc4-ae8c-09c351b49724",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "46702ed5-3d38-472a-92fb-b8963b20e1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3110fb40-4239-411b-b7a4-18dc378e47c0",
        "cursor": {
          "ref": "f742eb59-03cd-44ac-af1c-feb2c8ca64f2",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "68e54d5c-6943-41a4-9cca-169828e16a81"
        },
        "item": {
          "id": "3110fb40-4239-411b-b7a4-18dc378e47c0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "812eac96-3a30-4cfb-a31e-3728f618debb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a2e6d5-a314-4b3c-9dbf-54569cba87d8",
        "cursor": {
          "ref": "ed228755-434e-4407-ae13-ef1edfdac1bc",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fef67ef7-1a4d-4bc8-b025-889a871b86d5"
        },
        "item": {
          "id": "e8a2e6d5-a314-4b3c-9dbf-54569cba87d8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bb124095-4953-481c-b65a-393a67c229a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecca0fe1-f740-4c71-ab23-1b7117eea11c",
        "cursor": {
          "ref": "efb8f7ee-a4a5-4115-a321-c3c87eb17b8a",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "833a98aa-f892-4c07-aa37-2f17806e0467"
        },
        "item": {
          "id": "ecca0fe1-f740-4c71-ab23-1b7117eea11c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1ed96e8a-ae4c-4c9d-b31d-43289d39a983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1362941-a64d-421e-8246-ef009b03a8b6",
        "cursor": {
          "ref": "fc14e8e9-99c9-4907-acb2-02fc199bc762",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "11eba140-87de-4147-b219-0820bb727399"
        },
        "item": {
          "id": "f1362941-a64d-421e-8246-ef009b03a8b6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f777a674-2156-48c1-8471-6ce6bae8a523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b954b932-dc81-4a77-af2a-c8adbbd7fa88",
        "cursor": {
          "ref": "bcb8133d-cc35-4471-9823-27d6ee980dbc",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "546f760c-fa59-4bfa-a0ac-ce858a8ec046"
        },
        "item": {
          "id": "b954b932-dc81-4a77-af2a-c8adbbd7fa88",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "3ed29368-fd71-4eea-aa00-f6a907415628",
          "status": "Created",
          "code": 201,
          "responseTime": 4283,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "cebc6136-534e-448a-bcf2-dd7246682d14",
        "cursor": {
          "ref": "cd5ceec7-daea-4ebd-9f99-e5fde5a5f48f",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "37a0d194-4744-4aa8-81a2-63177b59aec7"
        },
        "item": {
          "id": "cebc6136-534e-448a-bcf2-dd7246682d14",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "45b72201-d517-44c6-9f0a-224364a24801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2bdb0a-ec41-4e42-82c4-315fa8a7e42a",
        "cursor": {
          "ref": "57bafcb5-c4eb-4623-9490-b87eabac6c69",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5365aecc-379a-48cb-993b-7b6229649a0d"
        },
        "item": {
          "id": "1b2bdb0a-ec41-4e42-82c4-315fa8a7e42a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1f13e52b-b23b-49ef-94ac-7a4acf3cf445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7c19fb-182b-4432-b3a4-b5b4dada18df",
        "cursor": {
          "ref": "d6912254-edd3-4a18-b56a-04e076bf67c0",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fad66b13-3d31-4bc9-a247-1cbd8a3a390d"
        },
        "item": {
          "id": "aa7c19fb-182b-4432-b3a4-b5b4dada18df",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "60062203-90ec-462e-8b57-f6a9128f2e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f12f196-fe37-4906-9a57-c49ad5882d42",
        "cursor": {
          "ref": "8b09e424-e6f4-4dc2-bf17-99d563ce6127",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dfbc61b8-cd1d-400b-a0cc-69b446ade544"
        },
        "item": {
          "id": "9f12f196-fe37-4906-9a57-c49ad5882d42",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "df2ce370-5c46-4977-8a6b-a5cd827ef04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779a5120-6280-45bb-bc45-16af1fa1e448",
        "cursor": {
          "ref": "62a453e5-7dcb-48a3-aa5a-d4f14d320915",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "06713175-cc24-443f-be2a-825d42cf027f"
        },
        "item": {
          "id": "779a5120-6280-45bb-bc45-16af1fa1e448",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "511d38f2-5ac8-452a-86eb-42e39c3820d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89680578-ad14-4bd5-98d4-30b3fe63fe89",
        "cursor": {
          "ref": "3ebd4b74-c11b-4564-b793-90d3f4b3737e",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1c39dd6f-c7a1-4d0e-bcff-96c5188d0046"
        },
        "item": {
          "id": "89680578-ad14-4bd5-98d4-30b3fe63fe89",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "92fb762e-ecd2-4baa-aed7-7489c2d71649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086ab9fb-938d-4702-b3d8-b4853df2ea34",
        "cursor": {
          "ref": "64e9619a-8b3a-485e-9bf7-55a93968a769",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f3a65725-89d8-4802-8b07-9345fec22d6c"
        },
        "item": {
          "id": "086ab9fb-938d-4702-b3d8-b4853df2ea34",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "48544777-0094-4aa9-92cf-c8c6b4c9a52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab62e401-51fa-4e0b-a5af-362887387b7e",
        "cursor": {
          "ref": "f7986fb4-2031-4fb9-bf04-45b8593222ff",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a62d95d6-3378-4134-b171-8d91fdd9ed25"
        },
        "item": {
          "id": "ab62e401-51fa-4e0b-a5af-362887387b7e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "de83eb55-ff11-4e59-b774-9d1c1896b6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3d4e85-1dcb-4da2-a9c5-50bbbc722362",
        "cursor": {
          "ref": "ead950ad-6013-4c7d-ae73-5f0bc2bf6c8a",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7011e613-1b73-4499-a57e-987bc4c94755"
        },
        "item": {
          "id": "ea3d4e85-1dcb-4da2-a9c5-50bbbc722362",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e9c70282-0485-40c1-86c5-712e2ba14750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2402aff-78db-4fb2-b7d7-016fcc2c0ff9",
        "cursor": {
          "ref": "9e319d39-5384-4e61-a140-9cecaddef582",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "59cebfb1-fc8f-46eb-8fbf-3aaf010574e2"
        },
        "item": {
          "id": "f2402aff-78db-4fb2-b7d7-016fcc2c0ff9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "726f0bf2-7d8d-47c0-9161-319368b8d47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4432c0a8-a683-47ea-aabb-f0e3563db290",
        "cursor": {
          "ref": "210ddc75-f6a1-4d2b-a225-c14e28b5cecf",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1ee13d6d-45a0-49be-96e3-c1031d27bf06"
        },
        "item": {
          "id": "4432c0a8-a683-47ea-aabb-f0e3563db290",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ea42446d-4c0c-4db3-b19e-f86f587d7117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367a6a43-5057-4f49-88dd-e7b1ed10cbc6",
        "cursor": {
          "ref": "735473d6-ed4c-46a8-9a9f-e861afea1e04",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d3aef40e-0998-4f21-b8e8-b7a17e3f17f9"
        },
        "item": {
          "id": "367a6a43-5057-4f49-88dd-e7b1ed10cbc6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "041333cc-a16f-4d74-85b6-ca4300de5b29",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1947,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "3248f1a3-79fb-4606-9733-23ff96273b01",
        "cursor": {
          "ref": "20bbc3c0-5593-467d-bc49-2635c306caf1",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e47d816b-4210-4bb9-abc0-8ef40d58f390"
        },
        "item": {
          "id": "3248f1a3-79fb-4606-9733-23ff96273b01",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6c227542-cdd5-4200-8c35-c54d6211dffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46405b70-604a-4dcd-95e1-7092b3c28b92",
        "cursor": {
          "ref": "1fe54a03-918a-4053-8a15-3c2abef7e541",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cae1a237-678e-4474-b31f-24b6717f19f3"
        },
        "item": {
          "id": "46405b70-604a-4dcd-95e1-7092b3c28b92",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "eb86cb16-3701-4fa1-8414-1787ef12ebae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ba82a0-19e1-44f1-b901-073153fe8b57",
        "cursor": {
          "ref": "0421192e-1fb6-4e9b-9442-ddf522edcf3e",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "30ff2a10-8f7a-480e-ac0c-0d96e62504bb"
        },
        "item": {
          "id": "48ba82a0-19e1-44f1-b901-073153fe8b57",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fce3556f-4a71-45fc-a47a-8312b90b3b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bf66cc-edb9-4b97-83ba-216217778a4d",
        "cursor": {
          "ref": "93a96b2e-d4cb-4b26-8824-816218337212",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ed681a2d-a22a-4ad8-af4d-62c1174fd186"
        },
        "item": {
          "id": "40bf66cc-edb9-4b97-83ba-216217778a4d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "57aad80e-5748-4934-859d-bbebb646cc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4084c24-de87-4fc0-80b4-977639f0f68e",
        "cursor": {
          "ref": "902aa2c4-8217-482c-8019-597ff538e1b5",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1445ccd1-7617-4964-81dd-fc0a72bb3575"
        },
        "item": {
          "id": "d4084c24-de87-4fc0-80b4-977639f0f68e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1039999a-6fab-4334-8e16-452c57fe8f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea59944f-a527-49d7-a7b3-b5ae987c5ba5",
        "cursor": {
          "ref": "e699b95e-3d84-4c90-a600-0820c65a57aa",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d64394aa-25be-4f68-8b8d-15cc72e35191"
        },
        "item": {
          "id": "ea59944f-a527-49d7-a7b3-b5ae987c5ba5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2d167be3-f6cb-4e06-b9e4-84cc8bda0565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e710d38d-2f2f-4885-88da-8ae35a02d669",
        "cursor": {
          "ref": "a14be9f1-fed6-4a7b-aaba-c697c9265c3a",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "546dac0b-486f-4a96-b030-56212cf4834d"
        },
        "item": {
          "id": "e710d38d-2f2f-4885-88da-8ae35a02d669",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ae39174d-967f-4382-bfd2-05f3d8919e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8474321c-3508-4bbc-84ea-361b421e1f47",
        "cursor": {
          "ref": "10eb7a49-f4d5-42c0-a963-bf408068ac7f",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7737b4a1-8e69-4a67-b32e-e8cbfc5688ed"
        },
        "item": {
          "id": "8474321c-3508-4bbc-84ea-361b421e1f47",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6d74f68c-9aac-41e4-b607-7bc13cd8fc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55ac339-7cb5-4a4b-9aa7-b90b50e74fb3",
        "cursor": {
          "ref": "91ee192e-f237-4308-b840-8778bd25d20f",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b7b54867-2a5a-4afa-a908-e63382c423ad"
        },
        "item": {
          "id": "a55ac339-7cb5-4a4b-9aa7-b90b50e74fb3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "31c51bc9-0c08-4a89-ad05-f69a09ed0304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7050b55a-deed-446e-81b0-cb3642571486",
        "cursor": {
          "ref": "3661f990-2ad8-4543-aca0-0a6d94706cf9",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7574fa6e-0913-4e8d-9617-f944422fdadf"
        },
        "item": {
          "id": "7050b55a-deed-446e-81b0-cb3642571486",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "32d58292-d2e8-40bb-b205-4dd29e2de3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216cee21-fe42-4580-8c57-f57a61f5ced9",
        "cursor": {
          "ref": "67a2d5e1-4f10-4e45-bf3e-92a0bc4c3b76",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b83e34c6-c563-4dd8-8875-a52c32168013"
        },
        "item": {
          "id": "216cee21-fe42-4580-8c57-f57a61f5ced9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "77c97664-043e-4e52-9b15-097050bcc241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d6c744-f6cc-43e7-90e9-3903fd72b2f7",
        "cursor": {
          "ref": "d62fe813-9750-46e1-85c9-bf223b86a1b6",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "84acb453-e1d7-459c-9114-b182f2efe39b"
        },
        "item": {
          "id": "15d6c744-f6cc-43e7-90e9-3903fd72b2f7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1853647f-0042-4681-ae12-7cf7cbcd5ed9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 625,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf00062-ac32-4e81-a049-14c4cdb2be58",
        "cursor": {
          "ref": "13fa4ec5-0358-4afc-8772-e837f234a065",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8252599e-4a90-4dd6-91ae-85da8fc9e870"
        },
        "item": {
          "id": "3cf00062-ac32-4e81-a049-14c4cdb2be58",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fa17ed9c-1a96-4663-9d23-dfe64c413ce0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1104,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "2fb9a2d6-f529-438a-9f78-ef61864dc189",
        "cursor": {
          "ref": "e7c89d4e-d67b-4387-9748-058ffd010f92",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "73f847a6-f728-4252-824e-c519074f61db"
        },
        "item": {
          "id": "2fb9a2d6-f529-438a-9f78-ef61864dc189",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bfe8eaca-b4ca-4b81-a406-ec95d021404a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39eceaf5-4f83-4fcc-bf32-bf1a8dd78ed4",
        "cursor": {
          "ref": "e8df5f02-36e5-4e70-a609-52fb08f68c58",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "eb2c3459-4420-4e2c-9532-fcb93f08109d"
        },
        "item": {
          "id": "39eceaf5-4f83-4fcc-bf32-bf1a8dd78ed4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "eb7710b3-46b1-42e0-9c2d-09631feeed39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1300,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25711573-df30-45f1-bf21-7bb2e679c0d6",
        "cursor": {
          "ref": "4d363c4f-30f6-4449-a44d-f3cd24e5aa85",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5c27db2a-a75e-4a85-a360-e7fc83200aff"
        },
        "item": {
          "id": "25711573-df30-45f1-bf21-7bb2e679c0d6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "97e2b8c7-d1fb-412d-87e1-149aa40abbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1216,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18888bd-fe95-4e1e-bd96-c93dae51aba4",
        "cursor": {
          "ref": "f83a3cb9-5a9f-4f7b-92dd-f25de6bdd4ad",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "dff7a834-47f8-457e-9768-0133f099738a"
        },
        "item": {
          "id": "b18888bd-fe95-4e1e-bd96-c93dae51aba4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b8eaee1e-ed16-4991-9141-67d2471c8580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 988,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16798bf-cd60-482f-a385-ef1625a45a86",
        "cursor": {
          "ref": "d6fd067b-04ac-420b-bf5e-b20027136519",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d2d17402-4c95-4717-b4b2-e4a0d713e7d2"
        },
        "item": {
          "id": "d16798bf-cd60-482f-a385-ef1625a45a86",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e835edb4-0668-4518-83f1-5aaeb83d7412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 916,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f910a1-6878-47ef-8789-160efcf4764e",
        "cursor": {
          "ref": "a9a00191-cc3a-495c-bd8e-c007f1026ffb",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fd640f21-993b-4ca2-9366-222efdbf7d22"
        },
        "item": {
          "id": "70f910a1-6878-47ef-8789-160efcf4764e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b63296de-eff3-4132-b0a1-b6aec4b431c5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 886,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fe4b15-5f75-4621-a0a9-7b867c419b3d",
        "cursor": {
          "ref": "70d4c47b-97cf-4384-8ced-ea579c07641a",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c88bb640-3d6e-4bfd-b8f5-c51228916321"
        },
        "item": {
          "id": "f6fe4b15-5f75-4621-a0a9-7b867c419b3d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "594a1781-c4c3-4216-9755-58ebd768ab8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2485a3b4-7d04-4fe1-b7e6-aabf2edd1325",
        "cursor": {
          "ref": "c5181761-8961-4e95-b60a-5d706a175a0c",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6e201b83-f318-4e5f-bef8-38ad89b89197"
        },
        "item": {
          "id": "2485a3b4-7d04-4fe1-b7e6-aabf2edd1325",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7ce6ee6e-7e26-4527-a8ba-cd18adcd2255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f7e2d9-be1b-4217-9091-9b88dd827aad",
        "cursor": {
          "ref": "f52825de-f0fe-47b2-b47f-8ea99f7a449f",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d5975f0e-8634-4eb4-b312-5de2c1af4e3a"
        },
        "item": {
          "id": "38f7e2d9-be1b-4217-9091-9b88dd827aad",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "df8385fd-826e-4d09-8918-b283ad649813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aec8660-2792-477b-a6db-03ce2fc0ce1b",
        "cursor": {
          "ref": "16f4c5bb-fe30-4f1e-bf74-45eaf3d1ecee",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "763c5a2a-42f0-454f-bb8d-f70a2410956b"
        },
        "item": {
          "id": "5aec8660-2792-477b-a6db-03ce2fc0ce1b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fe40c179-f86e-4adb-b81d-93089265cbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 989,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71244a9-81fb-4c22-92a2-a71f1e75aee2",
        "cursor": {
          "ref": "3849a6a3-23f8-4cb3-b327-d8d919cb9385",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f6423f89-2a21-49b9-a2fb-ae145b0bdbd8"
        },
        "item": {
          "id": "c71244a9-81fb-4c22-92a2-a71f1e75aee2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c6814bb2-ab8e-425d-acf5-30a347bc8ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 921,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39eac712-7bd3-4c7e-9604-c603ff7b2010",
        "cursor": {
          "ref": "c668b013-7564-49be-b6ea-ca637f4da365",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7b443eb6-1b2a-4091-8eb1-38d0db7ee06c"
        },
        "item": {
          "id": "39eac712-7bd3-4c7e-9604-c603ff7b2010",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1962f3a9-394b-4a6e-8403-bab07fca93f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad473c00-4bf5-441f-8b61-b7419912165c",
        "cursor": {
          "ref": "9e7b416b-bf89-438f-a19c-d28318bf7a98",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4c2686de-73b8-4351-8083-5d549fda90b7"
        },
        "item": {
          "id": "ad473c00-4bf5-441f-8b61-b7419912165c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "deeb7e24-89c8-4046-8b8e-8efdaad09e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203aed74-dcb3-4e01-946e-276348078a43",
        "cursor": {
          "ref": "cacc79a1-407c-43dd-81e4-b5bc8ac936e7",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "10a8d7a0-0d46-48b6-9e52-0e21260ad313"
        },
        "item": {
          "id": "203aed74-dcb3-4e01-946e-276348078a43",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c694a7b0-d696-484f-9087-a8ad7afa93f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdef72b-b55b-4587-94d3-d06ec5627131",
        "cursor": {
          "ref": "5c759e42-6324-440d-adfa-e0a5cea17e59",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2da6a482-b1df-4609-aec3-8719ca2d6a54"
        },
        "item": {
          "id": "6fdef72b-b55b-4587-94d3-d06ec5627131",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9862bb89-a8d4-467c-b439-50f00af3ad6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b394e63-143d-4de9-b0de-38ea20a74f12",
        "cursor": {
          "ref": "2f7ddafa-1316-49ce-b432-82970096d7f1",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "41a03005-4b9e-44f1-bb1f-fb25d5ca79f4"
        },
        "item": {
          "id": "1b394e63-143d-4de9-b0de-38ea20a74f12",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "eed42104-e6ea-41d1-a8a6-ef904c1f846f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4f8f48-a831-4746-9922-46bffed05e56",
        "cursor": {
          "ref": "9d743b39-2260-4c35-9f7c-c9a5f554efa7",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "46171ef0-1bc9-4ef2-8a84-302fecd06e7b"
        },
        "item": {
          "id": "6e4f8f48-a831-4746-9922-46bffed05e56",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7b70bb97-d721-445a-aa07-f204f0e378af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29181d83-0dd8-44da-ac96-4d8bb4b4fe39",
        "cursor": {
          "ref": "3f1c9b17-34bb-4f11-a8b6-35e900056f83",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9e3a988f-b9e0-42b1-a75e-ff6547bc72f5"
        },
        "item": {
          "id": "29181d83-0dd8-44da-ac96-4d8bb4b4fe39",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c771b9b7-9ee4-40ef-b2d6-539584f9aa4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e23643-5c95-4639-a7e7-e8798b2d0fd7",
        "cursor": {
          "ref": "63c28ffe-dd25-41c0-9f55-8e3a7e437496",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "05df85b2-1201-401a-936e-2c0430545e23"
        },
        "item": {
          "id": "20e23643-5c95-4639-a7e7-e8798b2d0fd7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "93d31ae9-1d4a-4f31-89a3-23f2ad625ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d303437-46bb-43f9-8179-34478ab7b894",
        "cursor": {
          "ref": "9fbd2719-fa78-4d94-b3b8-0a40c54dc92d",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9f914a0d-df81-42bf-b94a-c2386eeaeb61"
        },
        "item": {
          "id": "8d303437-46bb-43f9-8179-34478ab7b894",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6692cdb8-9213-49be-8cd9-4875dc2ce8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a555f708-0c43-48ce-8095-8e9c00987f01",
        "cursor": {
          "ref": "b3cbdb47-f9f5-480b-999d-9be9c0b0690d",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "411dc783-75d2-4f53-815f-a16887425514"
        },
        "item": {
          "id": "a555f708-0c43-48ce-8095-8e9c00987f01",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "041fb754-ba23-48d3-86c7-232daa0d484d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f3fb99-008b-489e-852a-b89763e7e3f1",
        "cursor": {
          "ref": "8cbc2d9d-41ba-43ee-a8c6-af67bd800e49",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ef455c28-34d1-47c5-ae5f-964a5ef05d22"
        },
        "item": {
          "id": "06f3fb99-008b-489e-852a-b89763e7e3f1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a034ff55-f8b3-4ad5-b572-1acde81d346d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad55525b-9cc8-4191-b539-70d88ec06969",
        "cursor": {
          "ref": "4ebb718a-ce03-47a6-931b-734010e402f8",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e911cef4-e9a0-4ffd-8892-2ce8fb929406"
        },
        "item": {
          "id": "ad55525b-9cc8-4191-b539-70d88ec06969",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f6c955f9-0484-4868-be86-9b929255c4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa83f566-d278-4e68-83ff-211d9e8cf124",
        "cursor": {
          "ref": "85bb0b20-f9d5-4670-8212-7dd01fd6705b",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f1533f0b-f4e8-4fe1-9b77-b55cb27884c5"
        },
        "item": {
          "id": "fa83f566-d278-4e68-83ff-211d9e8cf124",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6d933e3c-98ec-4c5e-8611-d744ab70f66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd517640-8b0c-4f92-94cb-e39603d183b6",
        "cursor": {
          "ref": "3d91e494-a84f-4b47-ba47-ea83421927b2",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9731f0b1-27ef-4fac-bfbc-c8c5eb7919e1"
        },
        "item": {
          "id": "fd517640-8b0c-4f92-94cb-e39603d183b6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2270bbdf-d2bb-4dd6-b48a-312aa3381cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe67f417-716b-41ea-bffb-a84c76a2eecd",
        "cursor": {
          "ref": "e5be52bc-ec91-452b-8d39-ebe453dcdc53",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7bd981e9-d3f2-4ce0-b60c-099eccbf4b50"
        },
        "item": {
          "id": "fe67f417-716b-41ea-bffb-a84c76a2eecd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "79b4d1bd-8eea-4d08-8e01-276a1ccee6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2b2586-1c1d-4a6e-9940-a4adf86a2813",
        "cursor": {
          "ref": "b0c960e9-e55d-45dc-9b97-3a0f13a144c0",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d669712e-1389-4519-852c-107aab8361c4"
        },
        "item": {
          "id": "8b2b2586-1c1d-4a6e-9940-a4adf86a2813",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4dbc25f1-6e16-47c5-8c90-13436a313a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb3db8d-636a-4ccd-a200-27de1c32564a",
        "cursor": {
          "ref": "463ee756-e9dd-4e98-997b-d85441cd0475",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2e764146-ae00-40a8-b54a-a81249fdc104"
        },
        "item": {
          "id": "8eb3db8d-636a-4ccd-a200-27de1c32564a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "267ef2a6-ab55-4266-98a9-6fce5c0ffa73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f465c4-9e61-44e8-bc11-3d5be449341d",
        "cursor": {
          "ref": "17ed334b-6ae3-4c99-b3f9-557d713bd4c4",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "686836ba-efe3-43c1-b34d-7cab155be4ec"
        },
        "item": {
          "id": "46f465c4-9e61-44e8-bc11-3d5be449341d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4a5511dc-3c9d-4fc7-89a6-edfc774bce4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8cc091-a532-4d2a-bee9-7adc9b60c666",
        "cursor": {
          "ref": "8a888585-572c-483f-a227-f34c87b604e8",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c5ebf87c-fe85-44b5-8f5d-fe822ad1e91d"
        },
        "item": {
          "id": "8f8cc091-a532-4d2a-bee9-7adc9b60c666",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "acd6afae-8199-4358-aad7-56c662880169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf595c30-6e6a-4cd0-85fb-2bc486001bb5",
        "cursor": {
          "ref": "32687249-5e9b-4f34-9e39-d1239d0684fb",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a2606e20-d171-4209-b2e6-aa141fcb82ae"
        },
        "item": {
          "id": "bf595c30-6e6a-4cd0-85fb-2bc486001bb5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f993e566-14fa-4f3c-939d-a625df39914b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7ed322-581b-44e0-9b17-218954ba6cd6",
        "cursor": {
          "ref": "e2eb0155-ad90-4a4a-821b-758125d10fea",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "060a646a-b392-4bb9-99f4-3ba292b0f46a"
        },
        "item": {
          "id": "ad7ed322-581b-44e0-9b17-218954ba6cd6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bf4392f0-7f64-4294-b7d2-c692790daa5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7faa8ed-e1be-458e-9ece-489c44d69954",
        "cursor": {
          "ref": "8c102687-c00f-4eb5-a16a-2526f2e0c64f",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d58b20a0-cd54-4504-9f19-9d48812848eb"
        },
        "item": {
          "id": "d7faa8ed-e1be-458e-9ece-489c44d69954",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d928c5a4-9008-4865-a237-a6d64e318ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b726faa9-4d53-405c-8802-18c400afdeb6",
        "cursor": {
          "ref": "26957d87-ce17-4ece-aed8-ec9d29086887",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "12f81ef8-18d8-4e74-b162-899868b21d5a"
        },
        "item": {
          "id": "b726faa9-4d53-405c-8802-18c400afdeb6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "747872af-a7b8-46a3-b906-d894ffb771aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a8b28a-e1af-4f68-b2df-83fe1e2754fe",
        "cursor": {
          "ref": "9d13411b-51ec-49b3-a1f4-c49558b061d2",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6b38a161-4e41-473c-ae5a-e6b7ce48ec43"
        },
        "item": {
          "id": "22a8b28a-e1af-4f68-b2df-83fe1e2754fe",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8a11a8d9-db34-4a2a-add7-8fb686ecde09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e5d8c6-5f5d-4d43-96c3-8306c381a2fd",
        "cursor": {
          "ref": "2372a468-dbd2-4c14-846d-b7c6f73dc446",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "63358d92-633c-4b65-832a-427e5414d6f6"
        },
        "item": {
          "id": "47e5d8c6-5f5d-4d43-96c3-8306c381a2fd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7a060274-e936-4244-a129-5cb5b6539b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f871ca08-881a-4b06-ac09-461e5c91fcf3",
        "cursor": {
          "ref": "16c60f83-ad7a-4a26-afac-ad06dd880a5d",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b02e862b-bcba-4bb4-a4f4-7493d2d12b88"
        },
        "item": {
          "id": "f871ca08-881a-4b06-ac09-461e5c91fcf3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5883d757-753c-46aa-8ca8-6e96617c46c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5664bb-fef4-4ba7-bd24-fd97a3488f56",
        "cursor": {
          "ref": "615e8537-4a74-4287-90fc-926c274de7d1",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "37e28b0f-907e-4498-bd3d-e7004e23508a"
        },
        "item": {
          "id": "8b5664bb-fef4-4ba7-bd24-fd97a3488f56",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "42aabc8e-61f4-452a-a847-2364a84ebc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2be309-d564-4690-8064-804ff5a36095",
        "cursor": {
          "ref": "87e476ae-3241-41e5-b67f-b136b957ba08",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fbcf2aa8-a131-4f36-a4d2-5d19366ef2e9"
        },
        "item": {
          "id": "1a2be309-d564-4690-8064-804ff5a36095",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ed7855d7-151c-47f4-b54f-12c5184738d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87d7c57-e309-4078-bc87-9756322eeb9f",
        "cursor": {
          "ref": "92b68aa9-5117-4aa3-9b48-415570378220",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8ef2602a-32b9-4940-8d83-382d0976b66d"
        },
        "item": {
          "id": "e87d7c57-e309-4078-bc87-9756322eeb9f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c6fff63c-9652-4c2d-a40a-964d2bc05ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d622a849-8849-4a37-bc43-3c9d2fffc607",
        "cursor": {
          "ref": "bce14fb7-ae26-4f26-b695-c062a668e002",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "36dde6bf-3d34-427e-9114-455c15fc4df3"
        },
        "item": {
          "id": "d622a849-8849-4a37-bc43-3c9d2fffc607",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "69ce357c-a9cb-4cd1-b295-e2c2568c818e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3af71a7-7d03-4f34-8c4b-e26cff806f04",
        "cursor": {
          "ref": "e5bf5d24-a0d1-4dee-b682-8981d45fa7c4",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "adcb227e-2fc6-41d4-bdf0-d5f6fedb0b11"
        },
        "item": {
          "id": "b3af71a7-7d03-4f34-8c4b-e26cff806f04",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "145a2cbe-5e58-4048-a35b-4ec63717a707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d56b67-506b-4ec9-b771-d7b125ef1508",
        "cursor": {
          "ref": "5784ddd8-8569-4887-a78b-56e405273ad2",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9ba95302-feed-498d-9888-e9fbf7b22828"
        },
        "item": {
          "id": "d0d56b67-506b-4ec9-b771-d7b125ef1508",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c00a9033-f8c4-4dc4-bb03-e92d1abd26e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aeffc51-5917-4acb-9442-5b9cbe4a1317",
        "cursor": {
          "ref": "9213cd69-0b37-4aa9-8763-fdad14904e6b",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1e8d8603-0aac-4e55-86c0-1acf70f9ca96"
        },
        "item": {
          "id": "8aeffc51-5917-4acb-9442-5b9cbe4a1317",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f2f3c8df-c6ba-4a96-a6fa-045bdc4ca7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d5efec-2153-4ea9-aa2e-ed0648666b44",
        "cursor": {
          "ref": "44f0db69-9a07-4c01-908b-d6a4e4e107c9",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "06005f74-ea69-4897-8925-5391b946c4fa"
        },
        "item": {
          "id": "01d5efec-2153-4ea9-aa2e-ed0648666b44",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "df94516e-6b15-4f0d-b5b3-1cf17b83fe0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9c90e2-5b4e-4bbc-bdc7-6e0d26764064",
        "cursor": {
          "ref": "a47f7bd5-a460-4983-8cd7-00017ff772ea",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3f1ef4bb-240d-434d-9597-f362e64e9bd6"
        },
        "item": {
          "id": "cb9c90e2-5b4e-4bbc-bdc7-6e0d26764064",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9fed5466-13c7-49cc-b437-d7e814be1beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3060f8bb-a9ef-4538-89d2-c74ab67c448d",
        "cursor": {
          "ref": "a8d0fc33-3e54-4bb8-82b8-c91452c44b2c",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "56ebadcb-2a6b-4f96-9614-4dc6b86ef3e2"
        },
        "item": {
          "id": "3060f8bb-a9ef-4538-89d2-c74ab67c448d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "404eda3a-1ee4-4fcf-98dd-775645b8bec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef1e155-709a-4744-84e6-3b88ea628b14",
        "cursor": {
          "ref": "000dbf90-d216-4ce8-9182-7e3a0b5497c6",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8f4ed6d6-1923-4329-8a13-f9de3e14109a"
        },
        "item": {
          "id": "cef1e155-709a-4744-84e6-3b88ea628b14",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "85855cbf-84c9-4a78-ae15-ab5d55a9df03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cf72a0-5f0a-4ee6-9840-85ab89313ca9",
        "cursor": {
          "ref": "5c347c20-467c-4c50-8baa-c0d9f6d84554",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9cab93e9-33fe-43c3-a610-fc78a4a49091"
        },
        "item": {
          "id": "e6cf72a0-5f0a-4ee6-9840-85ab89313ca9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0ba3fe35-bc23-4bf8-b0f6-75a13d2a4d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556f9da3-64c2-4806-a4fb-21ef2cda5832",
        "cursor": {
          "ref": "96c4b4cf-d07a-460a-8202-30deb88a35c6",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bda6140b-a742-4102-8bf2-3820fe161fb4"
        },
        "item": {
          "id": "556f9da3-64c2-4806-a4fb-21ef2cda5832",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c9f5e6fd-a1e4-411a-938b-93a918628928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64025933-58ed-4091-bf2c-7279fb1acbc5",
        "cursor": {
          "ref": "075df6f2-e927-4521-9b1e-dc36ac75078e",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "00a5108e-8408-4651-8884-ac582cb57b48"
        },
        "item": {
          "id": "64025933-58ed-4091-bf2c-7279fb1acbc5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0ca3247a-3c9a-4ed8-a48c-5cabe712a847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7387a4fd-a6be-4149-99ed-a5c670793fa5",
        "cursor": {
          "ref": "b37a642f-6208-4c23-b54a-1cc9b6fca873",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4af341c3-eba1-4a89-aece-1c18f45a6a20"
        },
        "item": {
          "id": "7387a4fd-a6be-4149-99ed-a5c670793fa5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2cf204c8-69ab-48d1-bcf5-eefc2c8c0c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129e8a09-08d4-4dbc-973a-1cd66b36a076",
        "cursor": {
          "ref": "4081b2bc-745b-4fcb-b6bb-07c39e398f15",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b0362366-3bbe-42c8-bf22-6470d52b3bfb"
        },
        "item": {
          "id": "129e8a09-08d4-4dbc-973a-1cd66b36a076",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a504aa6b-dded-4496-ad20-0245a62aae1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ef2673-8d53-40d7-8ed3-906a5a49e4b9",
        "cursor": {
          "ref": "c3fbf5ed-0fa4-4c67-9ec3-005047652016",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "adb55ce8-169d-4101-993a-ef618e28304a"
        },
        "item": {
          "id": "85ef2673-8d53-40d7-8ed3-906a5a49e4b9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ba8501c0-14e7-4df7-a142-8c982e695c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc13ee3-49d2-4a02-a2c7-1f0f4cbd207d",
        "cursor": {
          "ref": "b859978d-831f-41ad-b554-09710b67a525",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "69c1e0c3-b8d2-4a8b-8863-e125285ae5a4"
        },
        "item": {
          "id": "efc13ee3-49d2-4a02-a2c7-1f0f4cbd207d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "42a74500-6847-439d-b0d7-ea9d05b0430c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b4f6f6-be2c-4868-b2af-b3527088b599",
        "cursor": {
          "ref": "519e0703-3238-4329-9932-f371010fd533",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cac10c05-0412-4f8d-adfd-ddd71fb1faf7"
        },
        "item": {
          "id": "e5b4f6f6-be2c-4868-b2af-b3527088b599",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fb5eb4db-fcc6-469d-ad3b-cc438015b2c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309a9b18-0f11-4e43-b5e1-1400383de7f1",
        "cursor": {
          "ref": "bde9fa94-ca12-4645-a996-6d186b463d04",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "70b710ca-3c2b-437f-8477-af0ea3ce8acf"
        },
        "item": {
          "id": "309a9b18-0f11-4e43-b5e1-1400383de7f1",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "43a69829-ae7e-48f4-bbc5-7eaacb78d34d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 518,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27c961d-6129-4054-9f88-23cf09e2daad",
        "cursor": {
          "ref": "4f2c43dd-b2a4-4073-a3a2-bd58ecafb4d4",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9f05c495-e5f9-48b5-aa17-8aaf94664025"
        },
        "item": {
          "id": "f27c961d-6129-4054-9f88-23cf09e2daad",
          "name": "credentials_issue"
        },
        "response": {
          "id": "36cb87fe-16d2-415d-a819-8e7ff4493bee",
          "status": "Created",
          "code": 201,
          "responseTime": 4276,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "c098d8f3-3a56-4629-a948-b351cc2b8f99",
        "cursor": {
          "ref": "6fb69d3b-d804-4d0a-a336-e09dffc89fbf",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f656ef85-5d2c-459b-a6f1-b54209da336a"
        },
        "item": {
          "id": "c098d8f3-3a56-4629-a948-b351cc2b8f99",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a2a3844f-7fda-4bbe-a8f5-b44daccff9fb",
          "status": "Created",
          "code": 201,
          "responseTime": 3858,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "d8b04375-b5f9-4333-a2c4-e36a716c64f1",
        "cursor": {
          "ref": "9c186f6f-75e6-4144-8138-c82d640f254c",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "514c520d-f579-4e13-8aae-d09024dc8e9c"
        },
        "item": {
          "id": "d8b04375-b5f9-4333-a2c4-e36a716c64f1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e1b2fe8d-ebaa-4e7f-8121-67ba7dadaea2",
          "status": "Created",
          "code": 201,
          "responseTime": 3826,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "84e2cceb-d97c-4085-b06a-d4a103963c67",
        "cursor": {
          "ref": "c44e4cf7-6ce7-4c71-8831-e4092fb28cba",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3e949f4d-7628-4902-98b3-1d9e3519c98d"
        },
        "item": {
          "id": "84e2cceb-d97c-4085-b06a-d4a103963c67",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d3ff595e-2140-4955-9b9f-5954226f373f",
          "status": "Created",
          "code": 201,
          "responseTime": 3732,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "35ccb13a-0709-4306-bae0-600174e5b867",
        "cursor": {
          "ref": "cb61d260-3093-4551-b241-d361cbf407ca",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3f437352-8377-4f7d-8547-0e278d7ff7f5"
        },
        "item": {
          "id": "35ccb13a-0709-4306-bae0-600174e5b867",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4347b055-4e5d-4c0a-8141-09bdabccfeac",
          "status": "Created",
          "code": 201,
          "responseTime": 4888,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "a45a8585-b1fe-492e-bd9a-532791f27f63",
        "cursor": {
          "ref": "d41b12b3-7d3b-4ec3-ac0e-82bcb2914b56",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8a7c2cbf-f360-4d9b-aaab-26a1ed11e95b"
        },
        "item": {
          "id": "a45a8585-b1fe-492e-bd9a-532791f27f63",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7023abdd-8fba-4d4c-a574-3f5eb6eb5c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45a8585-b1fe-492e-bd9a-532791f27f63",
        "cursor": {
          "ref": "d41b12b3-7d3b-4ec3-ac0e-82bcb2914b56",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8a7c2cbf-f360-4d9b-aaab-26a1ed11e95b"
        },
        "item": {
          "id": "a45a8585-b1fe-492e-bd9a-532791f27f63",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7023abdd-8fba-4d4c-a574-3f5eb6eb5c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94403c40-ed8f-4292-ac20-0bdcf919214c",
        "cursor": {
          "ref": "34d4e5dd-e60c-4fd7-962a-f85029b9b4af",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7749a907-5171-430d-a8c6-05771532187f"
        },
        "item": {
          "id": "94403c40-ed8f-4292-ac20-0bdcf919214c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6cb9666a-2bb4-4f69-be37-5a8f5be4a834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb77f321-d901-45bf-b48e-de13b7de2287",
        "cursor": {
          "ref": "bd961d78-a03d-48f9-8e0a-5c155d91312d",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "35058f7e-7cfa-41ed-a8ba-38e30cbb6a1a"
        },
        "item": {
          "id": "cb77f321-d901-45bf-b48e-de13b7de2287",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bd323924-b432-4647-80d3-2632a8531bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f34638-321a-4d71-9be6-8cd680c4396b",
        "cursor": {
          "ref": "3ca7a643-fb06-4289-a120-c3bc3db117e2",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f14ad8cd-9392-492e-b2a0-22cae5cb1dd0"
        },
        "item": {
          "id": "84f34638-321a-4d71-9be6-8cd680c4396b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8e020862-6702-40c1-a89a-271aa419be2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5f5059-0bca-45c0-a6bd-e731dae798b1",
        "cursor": {
          "ref": "55b13d15-c900-482f-a43d-d5b15b0e7ba9",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3925f5c3-d21a-4488-be32-19e8df9a3db7"
        },
        "item": {
          "id": "fb5f5059-0bca-45c0-a6bd-e731dae798b1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a45eff0b-bad8-4ccd-b3f8-fc79a56769e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf49ab5-f435-44c9-a768-17010b96af9c",
        "cursor": {
          "ref": "e2caa362-ba66-4e74-a503-66c41ebc0893",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c1914306-2728-4f51-83f7-a6aad6a0e96b"
        },
        "item": {
          "id": "1bf49ab5-f435-44c9-a768-17010b96af9c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1023e1d1-d2cf-48cb-96a1-c03920c74b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffd9e88-bd54-4b19-8603-9604ab1b9ea2",
        "cursor": {
          "ref": "cc123760-c000-4f06-98c4-f1b5e713cd8d",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "71ce53bf-8b29-4075-84b1-d7efdc7d993b"
        },
        "item": {
          "id": "cffd9e88-bd54-4b19-8603-9604ab1b9ea2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4d44675a-96d8-4e24-962f-42f28ee34258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3f70f9-a958-468a-854f-4a0ae038df84",
        "cursor": {
          "ref": "3d6b07fa-81b1-417c-91cc-a1282755ae50",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "af249479-b045-4e2e-b82c-911afff9477b"
        },
        "item": {
          "id": "2b3f70f9-a958-468a-854f-4a0ae038df84",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2190d493-2749-4853-8b4f-6b3daef7f6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad6f681-6250-4377-acc2-be3bd6b0b102",
        "cursor": {
          "ref": "2139d111-528f-4e07-a5e5-314e394e94c6",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "af232ccb-b855-4723-ab66-f314dfc73400"
        },
        "item": {
          "id": "7ad6f681-6250-4377-acc2-be3bd6b0b102",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "965b626c-5212-4ba0-a16f-052235d7a517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d328af0a-159d-46f2-b6fa-e4065051aea7",
        "cursor": {
          "ref": "6a12dfa9-05b4-4eb5-8b76-f4e65f46e731",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "378f9b0e-d82d-4f50-a756-553d0ddd057d"
        },
        "item": {
          "id": "d328af0a-159d-46f2-b6fa-e4065051aea7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a867a08a-8467-4685-bbc3-b1e83bf10b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e710b6-84c1-4eb6-91aa-5c8a8f838a8c",
        "cursor": {
          "ref": "1592f3b6-a5d7-4b9a-940a-33f2f3a40210",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f8a30ed1-6b55-454a-9cc2-cdba2c56abf6"
        },
        "item": {
          "id": "11e710b6-84c1-4eb6-91aa-5c8a8f838a8c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "438c0073-7f0a-405c-a8e4-a3f5a28b70db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4844a11-2e27-41f6-a09f-f81e6799f458",
        "cursor": {
          "ref": "977533c8-d2fa-43fb-9616-89fb3fd31f0b",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "85aa2c33-4afc-4e05-aa89-f96be2be12f1"
        },
        "item": {
          "id": "a4844a11-2e27-41f6-a09f-f81e6799f458",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c91a581e-856d-440a-9a22-6e925c8579d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2afcf8-3ab5-4800-9cd5-d1192377c5c1",
        "cursor": {
          "ref": "ae403e5a-b750-464c-8d70-1c8d4a893660",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8eca4bd6-c1b1-4336-be9c-d3ffeff29128"
        },
        "item": {
          "id": "6d2afcf8-3ab5-4800-9cd5-d1192377c5c1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8d7b5a8e-b19a-4525-a66b-8cfd4bf39173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bee7c20-050c-43bd-970e-c4f03ee09f99",
        "cursor": {
          "ref": "8c5cac9d-0de8-4f62-9cf4-28b995042e05",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3316dbee-e7df-4e44-adbe-4ebd1509bdcc"
        },
        "item": {
          "id": "7bee7c20-050c-43bd-970e-c4f03ee09f99",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "77ec006e-134e-4c61-a650-bbf262df5cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058509db-93b7-4be5-bcd1-825191ef35d1",
        "cursor": {
          "ref": "a14a497a-438b-4528-8a05-ac39af2b8d75",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fe27f6e6-3dc5-481c-8a43-6666fd138ca8"
        },
        "item": {
          "id": "058509db-93b7-4be5-bcd1-825191ef35d1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d0137b5f-a1c9-46dd-9c7f-91e5bf00a6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929e76bb-9705-4487-9649-0a07077d7fb2",
        "cursor": {
          "ref": "265e1d7d-ebab-44ef-856a-7b452317849a",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2401c28a-992f-4964-b9bd-bdb23e7e0cb6"
        },
        "item": {
          "id": "929e76bb-9705-4487-9649-0a07077d7fb2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "709200a4-d09c-4acd-8a34-c4db407a9828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccd6d86-70cb-4c12-bdfe-7d8af81576c5",
        "cursor": {
          "ref": "01792c46-3470-47d2-9513-1d7af36013c0",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e0a0d0f7-f258-44ee-9cb8-1679dc52ea56"
        },
        "item": {
          "id": "eccd6d86-70cb-4c12-bdfe-7d8af81576c5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8bc3f6cd-122c-4819-aed5-47674c05efbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d215cb-b4b9-4368-99fa-31c580971411",
        "cursor": {
          "ref": "341cb989-2bae-4da2-b13e-2a598964db21",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f2411359-699a-46a4-a95e-e136fbab4e30"
        },
        "item": {
          "id": "a3d215cb-b4b9-4368-99fa-31c580971411",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1fedc655-49f0-4af9-a48f-92dff2923707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 922,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbe71d8-ff27-4389-800e-17f2b68c4dbb",
        "cursor": {
          "ref": "cf900fac-3abf-41bb-8ec7-9c75525132c0",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8c7db571-2eed-49e7-a882-011fdad917ce"
        },
        "item": {
          "id": "dcbe71d8-ff27-4389-800e-17f2b68c4dbb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "420311e5-103c-43a9-a5dd-6a4b8c57ee21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3b7acf-167a-47a4-b670-6df0142920a7",
        "cursor": {
          "ref": "e3b76e73-1c2a-4d16-83a2-3889f2ad940b",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "808a00bd-e79c-4b77-88d4-d91348c925f7"
        },
        "item": {
          "id": "1c3b7acf-167a-47a4-b670-6df0142920a7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8a633bca-a884-45e5-9018-8be50d194621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1153,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f76fb0d-27ef-40cd-a071-7a95bbc7ebbd",
        "cursor": {
          "ref": "4bc29450-2617-474f-963a-d298bca79b11",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a2ed679f-966e-46ea-85a2-4f0dcaf19479"
        },
        "item": {
          "id": "2f76fb0d-27ef-40cd-a071-7a95bbc7ebbd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fe56b6dd-377d-4516-be91-0ed56d502a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 893,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9b253e-ba0e-41f3-8a24-4f62293058a7",
        "cursor": {
          "ref": "7a9c3a54-61ce-4bd2-a49b-54741622eb10",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0ef2a6ad-9784-4e0d-b9a5-19ce7aa431bb"
        },
        "item": {
          "id": "0b9b253e-ba0e-41f3-8a24-4f62293058a7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "46809b1d-2747-413c-a7b8-21a5c049eddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1215,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41abb8c2-19f9-4a57-b726-3f552711ad36",
        "cursor": {
          "ref": "4ceff71d-296f-4aac-9daf-7b8f72353221",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b604fe45-1afa-48b8-850d-0d697f10f7d7"
        },
        "item": {
          "id": "41abb8c2-19f9-4a57-b726-3f552711ad36",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6ac728ab-e3ed-4964-98b4-1915517ad0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1401,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f763ed6-6a66-4afb-b9f7-1e935b383798",
        "cursor": {
          "ref": "87eecc97-3b1d-40ff-ac81-f0480af2cf50",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b68d1bea-0b01-4abc-a6f0-3e9c4c29c2b8"
        },
        "item": {
          "id": "3f763ed6-6a66-4afb-b9f7-1e935b383798",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7a17c154-1dc4-4b47-8c27-294dfab4d908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1404,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d7ead1-acfa-45d6-bf81-534cbf7f7e1d",
        "cursor": {
          "ref": "2905ed20-4bf4-43be-9b9f-8f40837a8e40",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2a15ae31-ed4b-4773-84b6-1171dbb7a13f"
        },
        "item": {
          "id": "71d7ead1-acfa-45d6-bf81-534cbf7f7e1d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d14953d2-3503-4e4c-b310-24a3afe3f2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1297,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c6188e-53ab-445e-bd85-c136adaa08b4",
        "cursor": {
          "ref": "518b18e1-2dd4-4b75-afc1-65498d6ef6f0",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6f7c9a99-123c-47c1-bc11-c9af35ba5efe"
        },
        "item": {
          "id": "51c6188e-53ab-445e-bd85-c136adaa08b4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e8a03dc6-2ea3-456a-8535-aba35ebeca36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1028,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a21eeab-4c11-46e8-a06e-9d2d68e3bcbc",
        "cursor": {
          "ref": "b022f6b2-e071-4dfa-890f-f2d8f4e477bf",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d42fe971-910e-4538-a2b0-02883a53b6d5"
        },
        "item": {
          "id": "2a21eeab-4c11-46e8-a06e-9d2d68e3bcbc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b61d6e54-71f7-41e1-b70f-83419369bac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ab1aaa-3d70-4c82-97d2-f05288933c46",
        "cursor": {
          "ref": "2d1892bc-d4c2-4625-92c5-dc0596008d30",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "eb4a06a0-7567-4ea8-8c91-27aa2b456b78"
        },
        "item": {
          "id": "57ab1aaa-3d70-4c82-97d2-f05288933c46",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "59032cc8-381a-4d55-8bd6-cbd6694ae885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7362b3e2-c518-427d-ae4f-448cb1c56556",
        "cursor": {
          "ref": "f3fe7002-a0ef-4bc5-9081-15c0063ebddb",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "432d3b0f-3b4f-4d88-8fdf-afbfb3772ee0"
        },
        "item": {
          "id": "7362b3e2-c518-427d-ae4f-448cb1c56556",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "69305291-9a05-43e9-b248-7f2798bf0109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a780af0-c763-4371-a315-df663a93a5ea",
        "cursor": {
          "ref": "9ccfb570-fbc6-4b16-8d72-56f8b2d1b6d3",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "caf495f9-4c82-455b-80c9-0eb3a84a0c41"
        },
        "item": {
          "id": "0a780af0-c763-4371-a315-df663a93a5ea",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "feba72be-10f2-4813-a3de-699e0f7f6c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd4cd5c-4bcd-495e-bbf3-901598aa4516",
        "cursor": {
          "ref": "f7e450d6-f194-4ea5-b342-dc48210af1c8",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f81035d2-a6fd-45c2-bba5-665bf70d9ab3"
        },
        "item": {
          "id": "3bd4cd5c-4bcd-495e-bbf3-901598aa4516",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fed10eff-d3d2-4b93-8028-d3f8253a6c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d570fc9-1c30-4e6f-b468-c59b35e01655",
        "cursor": {
          "ref": "99c7afaa-81a9-4303-88d3-0c5a7765d6c7",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ed808b42-02f6-4f45-81e2-080ca268f09b"
        },
        "item": {
          "id": "3d570fc9-1c30-4e6f-b468-c59b35e01655",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "49dbbbc4-791b-422f-956f-598e5cd054cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b1869c-f448-487f-bc80-e05670f0c1b9",
        "cursor": {
          "ref": "a59fd7b7-9c3b-466e-92b8-21aca4acf178",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "59a4a1d1-6dee-44c6-a2c3-fe31541e1f3f"
        },
        "item": {
          "id": "d3b1869c-f448-487f-bc80-e05670f0c1b9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "19e5f6f2-79e5-4959-9ea9-2e5f2bc8d2b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b387fd4-0718-4e46-9291-318b45806990",
        "cursor": {
          "ref": "e658b254-d192-4af7-91e1-0ef98496c9e0",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b7c64fb7-2707-4354-bdde-b4fdede630d9"
        },
        "item": {
          "id": "3b387fd4-0718-4e46-9291-318b45806990",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "d3e91db0-7c0c-4d2f-b4e6-a2172875e30c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 566,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de6173c-85de-454a-9c73-2dd5aef53cbb",
        "cursor": {
          "ref": "10871da0-1670-44a3-9de5-538cf371e276",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c6367967-8611-4a9f-b333-6847fffa3b95"
        },
        "item": {
          "id": "2de6173c-85de-454a-9c73-2dd5aef53cbb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4cf5d2bc-ad38-4e04-9b25-62ef1ce3b614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de6173c-85de-454a-9c73-2dd5aef53cbb",
        "cursor": {
          "ref": "10871da0-1670-44a3-9de5-538cf371e276",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c6367967-8611-4a9f-b333-6847fffa3b95"
        },
        "item": {
          "id": "2de6173c-85de-454a-9c73-2dd5aef53cbb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4cf5d2bc-ad38-4e04-9b25-62ef1ce3b614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5559b35d-8064-49c0-a654-5902cc41e83c",
        "cursor": {
          "ref": "70968aa9-a5e1-471e-b320-feb3822c212b",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c0cd2249-1701-4478-a851-539978d402d6"
        },
        "item": {
          "id": "5559b35d-8064-49c0-a654-5902cc41e83c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e984d7a0-01a3-4e56-a23d-3f5604010c19",
          "status": "OK",
          "code": 200,
          "responseTime": 346,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "b8e3fda8-932a-4ea9-b30b-6ce9f562571c",
        "cursor": {
          "ref": "054cd32f-3d14-41e5-9cd9-cfbf22e94ea5",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8fa677f3-f28d-4fe1-b925-d823f70c7f41"
        },
        "item": {
          "id": "b8e3fda8-932a-4ea9-b30b-6ce9f562571c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7087c646-87db-4022-b603-b505806a49d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6042ec12-46b4-4e41-9fbe-a3b27b959f0a",
        "cursor": {
          "ref": "c79e90d8-19dc-4ae0-84bf-156e0a128cf2",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b8f2de24-2848-4ac4-b889-f6f859c1f958"
        },
        "item": {
          "id": "6042ec12-46b4-4e41-9fbe-a3b27b959f0a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f92a459b-e374-4d9d-8a74-de7898d8bd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6e5a61-a8a9-4e2b-84d8-f52eee9b6ccb",
        "cursor": {
          "ref": "ee46814a-3e07-4f95-871e-6eaa4b7047d6",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "efdda3c6-3a3e-4664-b793-be9f76fd2755"
        },
        "item": {
          "id": "9b6e5a61-a8a9-4e2b-84d8-f52eee9b6ccb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a5fd0014-4b34-4378-9b68-e14fe0a6b969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d93ea8-166e-4208-8b41-548ef99fe716",
        "cursor": {
          "ref": "efb0c388-b1ed-4fbc-a144-c953ab25e1fe",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ac88dc2b-314f-4775-bb80-e09b5296cdf9"
        },
        "item": {
          "id": "31d93ea8-166e-4208-8b41-548ef99fe716",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "644d30d5-1101-46af-8de7-58b85981cd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ce2f22-c19c-4eff-b42e-361e2a4db143",
        "cursor": {
          "ref": "40b3dadf-af74-4caa-9929-cdbc60dcc999",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "530d6fbd-d419-473f-805f-e365ac80ad13"
        },
        "item": {
          "id": "64ce2f22-c19c-4eff-b42e-361e2a4db143",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f0956b3c-f7d0-4e40-a004-f0c5ff6f0580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecbbb76-0a6a-431e-97b4-c1ed9316488e",
        "cursor": {
          "ref": "cbed9e29-1975-4bb3-8d04-c5b691ea64b7",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "88706d6b-be2c-4794-8962-59414a73642f"
        },
        "item": {
          "id": "eecbbb76-0a6a-431e-97b4-c1ed9316488e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ca2a5f56-0413-4893-8aff-ecfb3dd62fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6bfe9d-aafe-4816-ac9c-2190c6a4e506",
        "cursor": {
          "ref": "ba0a180b-5e30-4473-ae64-2931e9533ae7",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c3c4bb65-daab-4ccc-bd6e-a34c73163a24"
        },
        "item": {
          "id": "6a6bfe9d-aafe-4816-ac9c-2190c6a4e506",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "77ff73c9-15ff-49af-b7f7-20a4d221bcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad3e008-554f-4900-8502-82e914cc3a18",
        "cursor": {
          "ref": "d8da6428-420f-474a-8fe9-c5bdf547613d",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2aa6be7b-fea7-4985-9500-d4ecd1264ec0"
        },
        "item": {
          "id": "cad3e008-554f-4900-8502-82e914cc3a18",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c65718ac-1334-4bf3-b112-c84b193bbc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6c4d4a-8cf3-4560-9eee-e23c91440e6e",
        "cursor": {
          "ref": "f86b18ef-931f-4bd1-a409-e10bb0c68b10",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7bcd9e63-4da9-495d-9289-57ef79e7c6e2"
        },
        "item": {
          "id": "6e6c4d4a-8cf3-4560-9eee-e23c91440e6e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "854eb571-a207-41d8-90e6-1e6eebf3d4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506257c1-dfed-4279-8bbe-918d98355ca0",
        "cursor": {
          "ref": "218a7aad-d0fd-47b4-91c7-0bb73bee4117",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "16480cf4-b59a-434d-8818-fc27f2227619"
        },
        "item": {
          "id": "506257c1-dfed-4279-8bbe-918d98355ca0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "28eef5c6-470e-4c71-ba4e-2603a133a81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ffb0bc-91d2-4efd-aa76-9e3dfa87ea56",
        "cursor": {
          "ref": "66b35cc3-2feb-4048-bd24-684ac95e967f",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3bc31150-7657-4779-8103-3414e6b303ef"
        },
        "item": {
          "id": "f8ffb0bc-91d2-4efd-aa76-9e3dfa87ea56",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ecd0df88-1ee2-45c1-a138-5966b8ae4243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de9f7d8-6bec-4d56-a277-f94e11a24ee5",
        "cursor": {
          "ref": "2222eb32-5460-4c1f-8083-6c8315b0c697",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c85cf567-d37f-4579-bd6c-d150c0fc66ea"
        },
        "item": {
          "id": "0de9f7d8-6bec-4d56-a277-f94e11a24ee5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4d015f73-fd2d-4d93-9906-476128631f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3377a4af-1976-4491-9f2d-006bf18f003f",
        "cursor": {
          "ref": "d26f288b-5cdf-46d5-9f04-997865a34f43",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "71f552de-c27f-4f9b-9d1c-1a9566db3956"
        },
        "item": {
          "id": "3377a4af-1976-4491-9f2d-006bf18f003f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a6418f7f-4299-444d-9e4f-d01b095705a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c352512-b994-4f85-ab1d-095204449e04",
        "cursor": {
          "ref": "032b2f52-b17c-403d-99da-fac3ab0c052d",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "028fe09f-a964-4ddb-b0cf-90e5ed61a996"
        },
        "item": {
          "id": "8c352512-b994-4f85-ab1d-095204449e04",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4c5f2b3d-c180-4327-8373-94de3cbb85a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d92d900-4bc3-40c6-b13b-a7e6dc31c637",
        "cursor": {
          "ref": "4bd28b54-2794-40e9-8e24-ff7965fbfa7c",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "466636a3-f36d-46d7-aa32-cec5ecd3ca0f"
        },
        "item": {
          "id": "7d92d900-4bc3-40c6-b13b-a7e6dc31c637",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "19210d95-e186-4b24-a004-3993bc4f3774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52777c0f-c9ae-4908-9036-c0b74f6523f7",
        "cursor": {
          "ref": "b9b78410-9d24-4697-9c0c-5c16607ae2a0",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "04d7bfa8-73c4-4f25-b87f-cc465efb7cdd"
        },
        "item": {
          "id": "52777c0f-c9ae-4908-9036-c0b74f6523f7",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "a5498d35-917f-4504-8888-fface33754ff",
          "status": "OK",
          "code": 200,
          "responseTime": 2120,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "0878d6da-252d-40d7-b57f-db793ed5cae5",
        "cursor": {
          "ref": "cbd89389-8841-4398-b690-0f9d315ae9e7",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "61125fac-cc3b-41f3-9bdd-c0fb4882fb69"
        },
        "item": {
          "id": "0878d6da-252d-40d7-b57f-db793ed5cae5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9b514c46-9e02-4411-89c8-e724b600052a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738dc3bb-a464-4307-b934-24b0b8874c92",
        "cursor": {
          "ref": "aa1d5778-3970-4b78-aef6-43f3eb982728",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fac52ae4-f0ab-47d9-8d4c-333aa124050e"
        },
        "item": {
          "id": "738dc3bb-a464-4307-b934-24b0b8874c92",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e78a9a6f-cf74-4d0e-bb78-b91e573664cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b302ac-d900-4a19-b2aa-0e63aab7641e",
        "cursor": {
          "ref": "ec9b1222-7ec2-48de-a47a-9586c10984fc",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4d8ec5ba-c7ca-465b-bd77-ba85acd8e77e"
        },
        "item": {
          "id": "f0b302ac-d900-4a19-b2aa-0e63aab7641e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e32f2541-cc61-455d-bac3-9f914de41786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c54be6-3bbb-4117-b5d8-342e2cb8ccae",
        "cursor": {
          "ref": "9da7acdf-fc4e-4244-bd99-6073a8975db1",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3e84a107-64e3-46fc-8fb3-4bd4c57e2946"
        },
        "item": {
          "id": "d4c54be6-3bbb-4117-b5d8-342e2cb8ccae",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fdd005d6-f828-4259-9e97-64f918a4f457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363cdf28-48c3-470c-a608-f564454d4eef",
        "cursor": {
          "ref": "2d10ab0c-83ed-46e1-8929-f5a155380129",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "55b1deda-94cf-4b15-b261-87858f422c29"
        },
        "item": {
          "id": "363cdf28-48c3-470c-a608-f564454d4eef",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7070b71a-a4b4-4bbb-b827-797c118d5157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2af0398-2a7c-46fb-83d2-c9e63c0c4f6d",
        "cursor": {
          "ref": "8fc67008-3bf3-4c8e-aa0a-ceceba32acff",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e1621e81-e27a-4991-888b-df44b9e0c90c"
        },
        "item": {
          "id": "e2af0398-2a7c-46fb-83d2-c9e63c0c4f6d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "340d217b-c12f-4a5a-9164-2b46d36dd622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3ddc83-a146-4147-a315-4f1e6f807e2a",
        "cursor": {
          "ref": "62262100-185b-4c2c-9c4f-fbdb52e6e7f6",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7352807a-72cc-44fe-a65e-17b97ea1ab54"
        },
        "item": {
          "id": "df3ddc83-a146-4147-a315-4f1e6f807e2a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bd88f318-9779-44d6-97a1-40f92f154951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fbeca7-bf9f-4403-91c3-23fe62d1e424",
        "cursor": {
          "ref": "19cdd85b-760a-43f9-8b48-5c2fe331120d",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "78d5449c-32c3-4147-afed-a4a1eef341f8"
        },
        "item": {
          "id": "03fbeca7-bf9f-4403-91c3-23fe62d1e424",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dc1422a8-503d-4077-aee5-a3220d4c65ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d869141d-feba-4e53-a306-7de49a449190",
        "cursor": {
          "ref": "1f9437db-195d-4a51-ba0e-5eb6422de5ca",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "839658dd-710b-4ab5-81a7-0fc21ea97f0d"
        },
        "item": {
          "id": "d869141d-feba-4e53-a306-7de49a449190",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0b97d570-ee7c-43c7-86bf-5e9e4e3c9cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f969e6ba-ac5e-410c-a1bc-ba7a1293039e",
        "cursor": {
          "ref": "4400fffc-0bd2-41e5-9cc8-bf3ba2fc0f18",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cfa7e029-69ac-4fc2-95e0-2e8798849105"
        },
        "item": {
          "id": "f969e6ba-ac5e-410c-a1bc-ba7a1293039e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b4cc52b2-ce7e-40ab-8e86-6fa9c880a9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7158f9d0-495c-4e4e-ab1f-b6327d5a19e2",
        "cursor": {
          "ref": "88911754-569e-4b6b-8b79-76ac42ba5f68",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fda1ddee-31e7-4c6b-bb41-da50e0c0d86e"
        },
        "item": {
          "id": "7158f9d0-495c-4e4e-ab1f-b6327d5a19e2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "15007a3f-52dc-4c8a-82e0-ad2faa74fff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b03312-918f-4fe5-a52c-3cc78f192eb1",
        "cursor": {
          "ref": "92374065-1a78-4d3b-a497-6e1ee1e9a0e2",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b0090e57-aad2-4d31-82ee-736f72702381"
        },
        "item": {
          "id": "39b03312-918f-4fe5-a52c-3cc78f192eb1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5e532fa9-76a2-4f0e-9b2e-10d87cc98327",
          "status": "OK",
          "code": 200,
          "responseTime": 314,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "5b19adb6-4126-46c7-baa3-de55b80fc2ab",
        "cursor": {
          "ref": "739e53b0-95ee-4f8e-bae4-dfff1a092c43",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "094ac8e7-5ad9-4efd-8faa-21b8adb6cc19"
        },
        "item": {
          "id": "5b19adb6-4126-46c7-baa3-de55b80fc2ab",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "442d0b76-8b9f-4f9d-aa96-7099080b5a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5953d535-a3e4-4f7e-b6b0-e926b6f05f3e",
        "cursor": {
          "ref": "b23c0743-5941-4297-8af6-231f5a7970bd",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d44b8f65-8234-49a6-9dda-4b852db27017"
        },
        "item": {
          "id": "5953d535-a3e4-4f7e-b6b0-e926b6f05f3e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "57ff5b60-ca07-44d1-bf19-caea8805ae69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0115ef-2c8c-4d51-b585-a0806d356aaf",
        "cursor": {
          "ref": "8b20fce6-bdd1-4ead-94b7-313acaeaf241",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e2957240-5448-43c8-b6ce-b42a1cbaa5d2"
        },
        "item": {
          "id": "0a0115ef-2c8c-4d51-b585-a0806d356aaf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b80d7d64-f06c-4b79-b4b3-7a90897baf90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca3ecbb-4bd3-4e13-84e4-7e751160c48a",
        "cursor": {
          "ref": "5446e103-cdf2-4c89-9cb2-78bc7772638d",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "691e7251-5015-45a1-bb10-3f6aab110c28"
        },
        "item": {
          "id": "3ca3ecbb-4bd3-4e13-84e4-7e751160c48a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8fb8bba0-8773-4418-814e-89676bf118e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669703c2-ead4-4d22-b32d-9c761f71b139",
        "cursor": {
          "ref": "fae4d60e-98eb-4d65-8c42-242f563fc8f0",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a5c1f89a-cbd5-433d-aced-da17eaa03b64"
        },
        "item": {
          "id": "669703c2-ead4-4d22-b32d-9c761f71b139",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "38c7e0ce-dfa5-4272-8132-42491ac73183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545265ee-3eff-4d42-9ee8-4d653fc7b3ef",
        "cursor": {
          "ref": "e779ca66-7252-45a8-86fe-b6e818d58deb",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4f883ff2-d428-4230-8d1c-1693b0dd0e31"
        },
        "item": {
          "id": "545265ee-3eff-4d42-9ee8-4d653fc7b3ef",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1393a90f-aaa8-49be-b2a0-9c863426ded7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a93e17-8dc2-4f6d-921e-a7cef2b3bdd5",
        "cursor": {
          "ref": "9bc22cbc-b216-4b8b-9356-860fa2858c68",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e84f91d1-ab0e-413e-8bab-dea3eec24df5"
        },
        "item": {
          "id": "01a93e17-8dc2-4f6d-921e-a7cef2b3bdd5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9473367d-5432-4579-9680-73b2d574b1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178745dc-e75c-4481-8ee2-9344a9931ff8",
        "cursor": {
          "ref": "ef94183b-04f6-4444-8f5e-34262808cef8",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "51d59336-dcc0-4c05-8988-988e4d1ecee1"
        },
        "item": {
          "id": "178745dc-e75c-4481-8ee2-9344a9931ff8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "50c7c8ed-e56e-4001-923b-b07dfe3041ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007bdf3c-233e-4d59-b2bf-446273600db7",
        "cursor": {
          "ref": "28850f17-6b5b-4089-9bca-0b75932ee8b7",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8f02780f-3ec8-47f5-aac4-d15c75fd36da"
        },
        "item": {
          "id": "007bdf3c-233e-4d59-b2bf-446273600db7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b3cae4db-c795-49e8-a48a-a438e083dd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e65a07-1915-457a-997f-63872f97a41c",
        "cursor": {
          "ref": "42807b56-7e2c-4901-9bc9-d3a05f8fdd8c",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "04183856-2297-4620-aa2d-1a4ca910e8a0"
        },
        "item": {
          "id": "17e65a07-1915-457a-997f-63872f97a41c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "aa1bd957-91c9-4d8f-918b-4012e8f05d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf03550-e744-495a-a83b-f3d03ab3bdcc",
        "cursor": {
          "ref": "09f8d6ff-9121-4de8-8a1a-5d59ae6bd777",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "04c5899e-c0db-4b0b-9f12-b7167d53c7dd"
        },
        "item": {
          "id": "3cf03550-e744-495a-a83b-f3d03ab3bdcc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "53fc59f4-72f8-44e1-9944-1e1984001f0b",
          "status": "OK",
          "code": 200,
          "responseTime": 319,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "959a9823-17d8-4085-b215-2f96111e657a",
        "cursor": {
          "ref": "50c1ff8c-c830-44e3-aa60-5c49f6e77579",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1fc5983d-da0b-463d-9d06-321bfd37144c"
        },
        "item": {
          "id": "959a9823-17d8-4085-b215-2f96111e657a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a60a8218-69d7-452d-9fae-5deea7dbe916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79871335-34d8-4ddf-956e-0699a3d68ff9",
        "cursor": {
          "ref": "84be0627-f993-49f7-90a4-a4e392341db6",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e32361ea-4bf3-41f4-acd9-9709fbc0a905"
        },
        "item": {
          "id": "79871335-34d8-4ddf-956e-0699a3d68ff9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2c20cd49-833f-4601-8c53-2ff9ebac7ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60be6107-d34c-4145-b3fe-beb41d962ef0",
        "cursor": {
          "ref": "1f4cd255-983d-42c3-b6de-b256a69f5fbd",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "986f5424-353b-4eeb-b025-64cf7000e327"
        },
        "item": {
          "id": "60be6107-d34c-4145-b3fe-beb41d962ef0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "28110e74-f551-4acf-85cf-26aab11bc046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a7228a-2658-498f-aa48-7132538dd77f",
        "cursor": {
          "ref": "5d7e07af-2a02-47d7-9937-44777d4cf97e",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6f6e9601-7971-4a72-abca-f3765e282b31"
        },
        "item": {
          "id": "86a7228a-2658-498f-aa48-7132538dd77f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e1378367-26b5-45c1-a905-83d01f05c20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad317c54-338e-4cb7-880a-97ce66550516",
        "cursor": {
          "ref": "9ad27b23-e636-4b72-8b1d-de0fd7b48eea",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6236323f-9a5b-403f-84c2-f6ba08d0eba8"
        },
        "item": {
          "id": "ad317c54-338e-4cb7-880a-97ce66550516",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "76ba93df-2876-4959-b7bf-1899e61f8c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d5c2bc-3cd5-4d80-8c53-2b1c445fa884",
        "cursor": {
          "ref": "e74fb082-0ff8-4950-a48a-c81bdbdbfa06",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d31b4d4d-4129-4f63-9855-1bbfab44a1b8"
        },
        "item": {
          "id": "a9d5c2bc-3cd5-4d80-8c53-2b1c445fa884",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "caf8db59-9d75-4ea2-a97e-2366bcbb4c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a5f376-a273-462c-8eb3-76cab4fe950f",
        "cursor": {
          "ref": "9ebcc888-3d99-463a-b231-ee4dee900d41",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5e3db65b-5bfe-44af-8dc1-a99d657270b0"
        },
        "item": {
          "id": "71a5f376-a273-462c-8eb3-76cab4fe950f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2f956891-c126-4fcb-9849-07d156e5ceb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6466ddc5-5bf0-4df2-86da-e48165ef9af4",
        "cursor": {
          "ref": "87f1dd48-58f1-496a-a6e9-148afa981568",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "33a37d33-e83d-4d1f-b486-7cfb2e2b2ac4"
        },
        "item": {
          "id": "6466ddc5-5bf0-4df2-86da-e48165ef9af4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "31c98701-01a1-4ee9-a266-6cd4e5bbc6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328f2c0c-5494-4e2b-a24c-98b9b7a64773",
        "cursor": {
          "ref": "592cc82c-0633-4f43-a204-55a5e9e05f76",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6cbb25d3-0921-4193-8285-800e92fad60e"
        },
        "item": {
          "id": "328f2c0c-5494-4e2b-a24c-98b9b7a64773",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "56c3312c-6807-4856-9866-78383784d792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6e7a8c-a1ad-4f05-9fea-05c1f66ea915",
        "cursor": {
          "ref": "b8fbf9fd-4579-48b1-8135-5b1d10305dc1",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a93a5905-bec4-44c0-8199-a36ede63dd8f"
        },
        "item": {
          "id": "0b6e7a8c-a1ad-4f05-9fea-05c1f66ea915",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "05fe141f-5f18-4405-a6f5-6feec5e941e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1959b83b-0261-4c06-ad47-c5dc977885eb",
        "cursor": {
          "ref": "1c9f5d8c-1b91-4006-a0f9-8a28c9531998",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c34c7b90-b1a7-48f7-acfb-c38d7db45e90"
        },
        "item": {
          "id": "1959b83b-0261-4c06-ad47-c5dc977885eb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "19e679c6-0f6c-44a0-be51-b9d6ef28400f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb07abfd-07ec-4864-9643-ef0d5d74de0e",
        "cursor": {
          "ref": "d87b39d2-9279-48d4-9cb8-b97a371af7ef",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "eb6d54ba-ead4-423b-924a-67841ebc9367"
        },
        "item": {
          "id": "cb07abfd-07ec-4864-9643-ef0d5d74de0e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "13597304-f6cf-4f24-ab8d-ae707d17e5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66a6aab-12d9-4766-8e5b-fde88f80ad4a",
        "cursor": {
          "ref": "6d1018e4-07a3-46a7-88e8-c8d3ec047fd6",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d641c9bc-7637-45b7-b63d-fa4d79db3404"
        },
        "item": {
          "id": "f66a6aab-12d9-4766-8e5b-fde88f80ad4a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cb0ecb1e-7477-40a9-b958-6d7695c1badc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac483b5f-9f59-4ab3-af5a-0f9684219c5c",
        "cursor": {
          "ref": "2046c5e1-5ff0-4f90-b64e-f6bd4cd887a7",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c6f9e3d5-8740-4e43-8432-40d6d8b7a7e7"
        },
        "item": {
          "id": "ac483b5f-9f59-4ab3-af5a-0f9684219c5c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "10ccb305-18b1-4589-9b30-580f78191443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dea3886-efbe-4268-82fb-3566d2a44d63",
        "cursor": {
          "ref": "da63d926-848f-4de5-8bc4-d077221b1124",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3afeac65-bde0-4f13-a79a-5fa673f0da92"
        },
        "item": {
          "id": "5dea3886-efbe-4268-82fb-3566d2a44d63",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "eeb637af-1439-457e-b13a-59d159bcf804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f2c65c-8a77-42ce-9b25-7b0abd63bdc2",
        "cursor": {
          "ref": "47fb4f74-f89c-41a0-a4da-747a9fa56f44",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6527d74d-c895-41dc-8309-a92d0a5e1902"
        },
        "item": {
          "id": "73f2c65c-8a77-42ce-9b25-7b0abd63bdc2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "64e688f7-36a4-423a-87d7-fe9d57bd58ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c29655a-600e-4590-8fa9-e2f18e630a64",
        "cursor": {
          "ref": "81f2cf0d-f374-458c-ba98-8e20a71b74a4",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "18fcdc89-e0b9-4ae5-a00a-8a2ea10a23bb"
        },
        "item": {
          "id": "8c29655a-600e-4590-8fa9-e2f18e630a64",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fb755cbf-a4b0-4899-80a2-e7ac69ecae80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5946e40-fd43-4d25-8cc7-0751ac532853",
        "cursor": {
          "ref": "f54b3ec6-d012-4c4d-9d81-caf1c2b3399e",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2e43a8a3-7c9a-4596-b789-47b316ea93e1"
        },
        "item": {
          "id": "d5946e40-fd43-4d25-8cc7-0751ac532853",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "95755529-aa61-439d-ba41-7750aeb6ceaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5651b903-7540-4892-8216-d832fc92b424",
        "cursor": {
          "ref": "7c4b8061-1da6-46ab-bc9a-fafdc8e73ba2",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "410c8fe4-9ad6-434c-b93c-29010719405f"
        },
        "item": {
          "id": "5651b903-7540-4892-8216-d832fc92b424",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f628a790-42f8-4911-8993-e3fb88a2fc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b85a44-08e3-4fbe-a9fc-41d73ab6c591",
        "cursor": {
          "ref": "fce23343-5f96-484f-b959-62b60587ccd7",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e813e374-d17e-4e3b-a75f-dec3ffd7750b"
        },
        "item": {
          "id": "00b85a44-08e3-4fbe-a9fc-41d73ab6c591",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2f58e487-f752-4e75-bfe2-f651b5971719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafbd8d4-58f8-4b44-918d-0eacec391d24",
        "cursor": {
          "ref": "e3e27c39-127e-4ae6-bda0-5eed810bce5c",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7bc2dc46-f805-4517-abb3-2f3d0349a215"
        },
        "item": {
          "id": "bafbd8d4-58f8-4b44-918d-0eacec391d24",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bb181e7e-741c-48fc-be4b-04aa435f5e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8947893f-c92d-4392-a892-d81b026b764b",
        "cursor": {
          "ref": "dae7f60d-3fe0-4c4d-b490-12303f6b23f9",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "82994e23-2d59-4139-ac56-fc9dd3c860c2"
        },
        "item": {
          "id": "8947893f-c92d-4392-a892-d81b026b764b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c7e3d8e8-20fc-4ad4-ae04-fc657de11a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c917dcc-95b7-462c-8e0c-71139cbd04e5",
        "cursor": {
          "ref": "f74770df-da4e-47ba-a8ac-e11675d2e15a",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0eb1f969-d03d-43a1-8396-591a344e875e"
        },
        "item": {
          "id": "3c917dcc-95b7-462c-8e0c-71139cbd04e5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fd335e23-2c37-483f-b3f6-84d3386ec477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cf521c-82cb-4969-b0ec-0a39d67b4cf8",
        "cursor": {
          "ref": "3caabe88-2e61-41bf-8e4f-f90b8b9583e7",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d6556008-c6d3-4d95-8cd0-5c92b4b30d72"
        },
        "item": {
          "id": "66cf521c-82cb-4969-b0ec-0a39d67b4cf8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "66943390-7c0e-4663-879a-79da99dc5a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66390264-3af8-480b-bcdb-43a162d6b4c5",
        "cursor": {
          "ref": "26bf79f5-b12c-4810-b6bc-d012c5c6efd2",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "90e64661-f517-4e8e-844d-fdf6857e21c1"
        },
        "item": {
          "id": "66390264-3af8-480b-bcdb-43a162d6b4c5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7961ba26-25b4-4786-9054-ca50bf11dc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e347933-7123-468a-98d5-c6e0ab6ad66c",
        "cursor": {
          "ref": "806d325e-e4e9-4276-b2dc-f3ce97168a52",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "111510a9-ca3d-4c4a-97fe-41138da18f08"
        },
        "item": {
          "id": "6e347933-7123-468a-98d5-c6e0ab6ad66c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b9013555-b30c-47bd-9cc1-635be2a47c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf664ab6-7d1f-4737-a305-afa087c968fe",
        "cursor": {
          "ref": "9e5df424-e7db-4962-89ca-59664acb2b1a",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ba9787f8-aee9-42f0-9261-face60efe10b"
        },
        "item": {
          "id": "bf664ab6-7d1f-4737-a305-afa087c968fe",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0860d80d-d20b-4f06-becc-54b854812f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0256a6d-23df-486a-bba1-5f85374965d7",
        "cursor": {
          "ref": "8e4c4d51-0f37-4fec-bda8-a99f1cf70b24",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "978d6d5c-2e1a-4de4-a739-37daa4ed6654"
        },
        "item": {
          "id": "a0256a6d-23df-486a-bba1-5f85374965d7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ea3ce371-5d6c-47e0-a30f-688425020da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20aa9df0-b3a9-4ec2-a258-5a6c46f7fa7b",
        "cursor": {
          "ref": "242e8cdb-1211-4de8-8fcd-32acc918d651",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c511eaaf-ca25-4761-8494-7a6088f66f04"
        },
        "item": {
          "id": "20aa9df0-b3a9-4ec2-a258-5a6c46f7fa7b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b4d5f1c3-0a0d-4172-b3c4-82e29d77e0b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbf620f-00a7-468f-a0fe-ebf885a64d82",
        "cursor": {
          "ref": "d6d86fd6-1fac-4cd0-8cb1-df5ae7e322f9",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ab278cff-8931-4a42-8bcb-fcbd7fdf4eea"
        },
        "item": {
          "id": "4fbf620f-00a7-468f-a0fe-ebf885a64d82",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "10d083fb-4461-44b2-ae3a-7e12b170e42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc8ac01-eb06-4b5e-9b52-47d46a46432a",
        "cursor": {
          "ref": "503398ed-4f51-414f-9692-6e7a4f55d8ab",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "61ed19d1-9afa-4b1e-be68-5735080d59f5"
        },
        "item": {
          "id": "ddc8ac01-eb06-4b5e-9b52-47d46a46432a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "37223036-fc0f-4d29-9d51-4a1f01c5e590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590e65b0-3ff6-4e77-8a72-c7edbad75965",
        "cursor": {
          "ref": "06952f1b-7dad-414a-8f97-bc45dffe0347",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "aa1a6f84-79c4-4e82-9bb8-a0f8877612b4"
        },
        "item": {
          "id": "590e65b0-3ff6-4e77-8a72-c7edbad75965",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "889db948-8ab6-4f36-a086-9da1bfa28fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a1dfa9-d2a4-4325-ad88-41af934c38ff",
        "cursor": {
          "ref": "09124faf-8668-4a0b-8eb1-ddfee8709bb5",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ccbf3c22-b004-43f7-b1da-18c88fabdd7e"
        },
        "item": {
          "id": "f8a1dfa9-d2a4-4325-ad88-41af934c38ff",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "52406c70-1807-4c08-b9ea-337e6ee14358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5a1fd1-b167-40de-a5fc-26a2dba26a29",
        "cursor": {
          "ref": "f0c20c8a-9654-452d-84de-4cc411b432d0",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cfab0243-8145-48b1-87ad-a58fd454cf6c"
        },
        "item": {
          "id": "4b5a1fd1-b167-40de-a5fc-26a2dba26a29",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2d28d7a4-8fad-4e1a-ade7-10d20bbd82c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb2874b-9766-439f-a479-b6ab15d11ebc",
        "cursor": {
          "ref": "3d218c62-b4d7-49d5-ac00-963833e5bfae",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "28f43baa-32d4-4216-a538-31c3c8a7bbc6"
        },
        "item": {
          "id": "abb2874b-9766-439f-a479-b6ab15d11ebc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f59f7173-4d60-4026-aa37-e92ca31175a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fa876b-098d-45e7-853b-93ac44cc04bc",
        "cursor": {
          "ref": "b7a03cdf-e022-4d62-99c2-6b274066a9e6",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "247b0fc4-0d51-42dd-b9e6-e5492f21ca42"
        },
        "item": {
          "id": "49fa876b-098d-45e7-853b-93ac44cc04bc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3ce1ed33-6940-4d45-a788-15b379c92ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fac783-e5c4-45fb-9d64-4b0128b0c1c9",
        "cursor": {
          "ref": "4a09dab8-22b1-4059-93d7-e05b0b75e6a1",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b2bf37bb-0cd9-4b25-98d3-bd509131c1f2"
        },
        "item": {
          "id": "f4fac783-e5c4-45fb-9d64-4b0128b0c1c9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "933d4863-9c67-411e-bcea-31bf6d506bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1600d80a-4611-4a07-bb70-ea788b84da25",
        "cursor": {
          "ref": "8b1db9c9-39a6-412f-ac7d-5f6f29e4ba75",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5428a95e-1461-4a1c-bef0-223f14eb4933"
        },
        "item": {
          "id": "1600d80a-4611-4a07-bb70-ea788b84da25",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a4d5999a-ee34-47de-8f48-82f1b1699849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa63f01-e629-43d7-8f21-a7221aedbce4",
        "cursor": {
          "ref": "13c18102-9a27-4ae5-ae78-5f1d59cdf5b7",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0e5b60c8-4f57-489f-8929-ef2863ddbaed"
        },
        "item": {
          "id": "0aa63f01-e629-43d7-8f21-a7221aedbce4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0999cfbb-067f-4536-a5e9-73bcd03a32e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34071dea-b781-4255-a19e-3af3e76513ec",
        "cursor": {
          "ref": "32ecb20b-446d-4811-9843-3082429f1632",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fa389551-130f-406b-b380-dc77f3cc2061"
        },
        "item": {
          "id": "34071dea-b781-4255-a19e-3af3e76513ec",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2c238458-5332-4ac8-9782-d9babd36d7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6310a2-a820-49fe-b775-6cef247ee9b3",
        "cursor": {
          "ref": "856234b9-b0be-4456-8f99-4efcc4f38555",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e0990b87-d999-40e8-953b-b9a182caf1ab"
        },
        "item": {
          "id": "be6310a2-a820-49fe-b775-6cef247ee9b3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3ee11b32-7cf7-4084-a209-48191f0aa25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07d4e8b-9c64-4692-a115-094154f8cea6",
        "cursor": {
          "ref": "76625803-0847-4a62-a653-8989d186e5a2",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "30115811-67c6-48cd-8609-963d254fc137"
        },
        "item": {
          "id": "a07d4e8b-9c64-4692-a115-094154f8cea6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "249f989b-abe4-4a45-9d02-68ec14b4369d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b2b948-3581-4ae5-b0ab-7cf4bef1dac0",
        "cursor": {
          "ref": "0673b828-457d-4373-92f4-47eae7ba95b5",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6c90e2b9-abed-495a-ac8c-5bdb50ba5b58"
        },
        "item": {
          "id": "c7b2b948-3581-4ae5-b0ab-7cf4bef1dac0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d8d9ba09-1dc7-416c-a3f5-614a66701958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74687f4d-8014-4d50-a2b5-c68b23dfda3d",
        "cursor": {
          "ref": "69b4f7d8-aa6d-4424-a2e1-c56006295d1a",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "90a03cba-2a2b-46ff-a5a9-8f6c829f7a00"
        },
        "item": {
          "id": "74687f4d-8014-4d50-a2b5-c68b23dfda3d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "75ba7233-3e08-4463-8858-ae7d1ba349a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9ee653-2ff6-4dfc-9fc2-ed1275404afa",
        "cursor": {
          "ref": "67951eaa-fe4f-4719-a4a8-27a8cd310821",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7defb8dc-56a3-4754-94fa-7259a0ab1bdb"
        },
        "item": {
          "id": "4e9ee653-2ff6-4dfc-9fc2-ed1275404afa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "99070186-765c-448c-bba7-9ae2a921a6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e6cae4-3186-48de-aedd-8ed3407c95ab",
        "cursor": {
          "ref": "46a105c9-c77c-432d-8596-6d61debb84d8",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9b8014f0-b61f-414e-9f52-91682d2e82d1"
        },
        "item": {
          "id": "06e6cae4-3186-48de-aedd-8ed3407c95ab",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e64052c4-dfa2-4c30-a1e1-4bcf29868d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa343384-dc34-4845-b21e-df2119d8381f",
        "cursor": {
          "ref": "7d2024ea-1bb5-4da4-8aed-f66f30ccf087",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6aaa6fd4-5a48-4206-be90-03c881df1a80"
        },
        "item": {
          "id": "aa343384-dc34-4845-b21e-df2119d8381f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c815f83f-afc3-4d2b-b708-ff52a1176a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822ee25a-d483-4dc1-98fa-72a7bd9ed374",
        "cursor": {
          "ref": "f259cfc2-f09d-4cc6-b8af-e4a32d053280",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6e8733f4-a0d7-45c8-a69d-6bd4c006697b"
        },
        "item": {
          "id": "822ee25a-d483-4dc1-98fa-72a7bd9ed374",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "542831b7-65f3-42ba-ab82-cfc50b351a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7265f1c-e4de-4c9b-9240-ffbe152f958a",
        "cursor": {
          "ref": "d48fc563-30be-44b4-b9a3-0594999c423c",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "52efb508-54f9-4538-9b9e-4c35cdb3ac88"
        },
        "item": {
          "id": "b7265f1c-e4de-4c9b-9240-ffbe152f958a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fba2ff93-5a58-4bbd-bc14-c1b47f890bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afa1687-9801-40d6-b231-b97892426c1a",
        "cursor": {
          "ref": "346071d2-d0e3-4a49-8d23-2c21413001ca",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "969b87c1-e45c-4dae-860f-6a48107ac7b4"
        },
        "item": {
          "id": "3afa1687-9801-40d6-b231-b97892426c1a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "77aa8c33-c7ae-4b37-bce2-adebc5780207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6912ff40-3385-40ff-a077-b1f8c72c109a",
        "cursor": {
          "ref": "50cb31a2-a601-45f9-a71a-522184e814bf",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "667cd2c6-0d39-4df6-a48d-3ff17122b1bd"
        },
        "item": {
          "id": "6912ff40-3385-40ff-a077-b1f8c72c109a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e76a82c3-44d7-48c0-aed8-baac4fb39dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230d0ff1-0980-4858-824c-6047a66055bc",
        "cursor": {
          "ref": "f4406797-ef47-4977-a7ab-e5b63460cbf2",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2e8cc420-f66f-41ca-9daa-f6163cb24409"
        },
        "item": {
          "id": "230d0ff1-0980-4858-824c-6047a66055bc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "993281c8-3438-4c7f-8653-a6d7e9c3030c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7722a5a4-a900-4f95-a1d0-4d53bbb61e5e",
        "cursor": {
          "ref": "71ab5aa0-2813-441a-be72-e108449a9c0b",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "17cd05ba-f125-4b83-b9c8-13b5938ea8b3"
        },
        "item": {
          "id": "7722a5a4-a900-4f95-a1d0-4d53bbb61e5e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "53a17f21-7774-4807-b95f-628fe9594854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f4c93e-8fed-4beb-965c-b0b3d2345ac5",
        "cursor": {
          "ref": "770a835d-ca5c-416b-854a-b01e79caab4a",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9583f2b8-c405-414d-9f29-b2b9d3862b19"
        },
        "item": {
          "id": "50f4c93e-8fed-4beb-965c-b0b3d2345ac5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "30d393c1-79c7-4b9a-bdf6-33aeec269d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3163e22-9357-4b89-b89c-0b78357ee406",
        "cursor": {
          "ref": "75901d26-2897-4025-a8af-b2ae29cb81a5",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a9bd5c7d-99ba-40b6-aa53-8e101d28d9fd"
        },
        "item": {
          "id": "d3163e22-9357-4b89-b89c-0b78357ee406",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bd19247c-577c-4ded-a45d-8ee392216c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd9e5cf-30b7-4a74-a201-026036671ef7",
        "cursor": {
          "ref": "0453d565-dfef-4e13-9232-78f8d1373cae",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "abb637dc-347c-4edf-bbe6-72c1b10e182c"
        },
        "item": {
          "id": "9cd9e5cf-30b7-4a74-a201-026036671ef7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3adc2e29-a569-4a56-bd9c-939c085161de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9b1e18-1aed-4296-ab7f-ef6d71190223",
        "cursor": {
          "ref": "a57accd5-234c-4336-885d-0614ca64e285",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c8aa560a-ad96-4adf-94e3-239794302080"
        },
        "item": {
          "id": "0e9b1e18-1aed-4296-ab7f-ef6d71190223",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "74cb1355-1a0f-4303-a13f-df06fd9d8950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab26425-7821-49e9-a951-ab5ca999c6be",
        "cursor": {
          "ref": "5571c52d-5c61-4ae4-bb95-4595fe6948ef",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "41833a82-fcc4-4e4b-bb67-dfef8069347f"
        },
        "item": {
          "id": "dab26425-7821-49e9-a951-ab5ca999c6be",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ec7ee369-4964-4a9b-8442-716140534f52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b0bee1-716e-4a45-bbc3-910eddabcbd1",
        "cursor": {
          "ref": "7a23d4e4-22a0-4de1-a4a9-619c03078ced",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "218d06ff-2efa-44d3-8a22-01634ce57edf"
        },
        "item": {
          "id": "02b0bee1-716e-4a45-bbc3-910eddabcbd1",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "c35e9a48-a493-45a7-b6d5-526a6a5387ff",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 324,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2282259-4536-4612-bad0-99ecee5499e3",
        "cursor": {
          "ref": "766c556e-4d30-4d65-abdd-551c0d473821",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "129520ee-96a1-4f21-ab68-379f3c53ab79"
        },
        "item": {
          "id": "c2282259-4536-4612-bad0-99ecee5499e3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "39a60ca4-e669-40fc-af58-b440e0997829",
          "status": "OK",
          "code": 200,
          "responseTime": 364,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0d6471-35d3-4b23-b92a-92abcb1754ed",
        "cursor": {
          "ref": "f7003e97-d193-4886-8dcb-c18baa0bca6e",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c61f6bbd-52a6-45b4-94e9-dd6396d17474"
        },
        "item": {
          "id": "ff0d6471-35d3-4b23-b92a-92abcb1754ed",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1b45ac3f-d6d0-4814-b4e5-b870a4f9fbfc",
          "status": "OK",
          "code": 200,
          "responseTime": 1755,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8a8496-8be7-4029-a7e0-e507a63ceb15",
        "cursor": {
          "ref": "1515f3a4-1c98-499d-befb-083ae0f2143f",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b71de265-34e3-4933-b988-517457691386"
        },
        "item": {
          "id": "fe8a8496-8be7-4029-a7e0-e507a63ceb15",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c71428f2-5b68-4b72-b54a-1e1d620222a5",
          "status": "OK",
          "code": 200,
          "responseTime": 1754,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb6ade8-c415-46e7-bb82-89e48d7af1cc",
        "cursor": {
          "ref": "66bd303e-af6c-4300-a6ac-ad38278263df",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c8da1eef-813f-49b6-b235-f2c71fcee00c"
        },
        "item": {
          "id": "4cb6ade8-c415-46e7-bb82-89e48d7af1cc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75c30497-6aa0-45a4-a3e0-97107546770c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb6ade8-c415-46e7-bb82-89e48d7af1cc",
        "cursor": {
          "ref": "66bd303e-af6c-4300-a6ac-ad38278263df",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c8da1eef-813f-49b6-b235-f2c71fcee00c"
        },
        "item": {
          "id": "4cb6ade8-c415-46e7-bb82-89e48d7af1cc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75c30497-6aa0-45a4-a3e0-97107546770c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb6ade8-c415-46e7-bb82-89e48d7af1cc",
        "cursor": {
          "ref": "66bd303e-af6c-4300-a6ac-ad38278263df",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c8da1eef-813f-49b6-b235-f2c71fcee00c"
        },
        "item": {
          "id": "4cb6ade8-c415-46e7-bb82-89e48d7af1cc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75c30497-6aa0-45a4-a3e0-97107546770c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97593bf-2621-4a4c-a168-03a2d003cb64",
        "cursor": {
          "ref": "9c87914c-6bfd-4a70-8bab-7331321007f4",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "649ad1ed-8759-438e-9d09-8f23e39e595d"
        },
        "item": {
          "id": "f97593bf-2621-4a4c-a168-03a2d003cb64",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d39c0fc8-9164-4ca6-b159-c7c7317bb33e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 338,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2419a2d8-dcc7-4855-a0ec-8a680888b1ee",
        "cursor": {
          "ref": "c1889eb4-c942-4baf-95d8-b5926722c8f8",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "65620521-b803-468f-b60a-f33605d48f08"
        },
        "item": {
          "id": "2419a2d8-dcc7-4855-a0ec-8a680888b1ee",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2d4b3c90-5f7f-4eae-af5e-87c3dba85094",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2419a2d8-dcc7-4855-a0ec-8a680888b1ee",
        "cursor": {
          "ref": "c1889eb4-c942-4baf-95d8-b5926722c8f8",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "65620521-b803-468f-b60a-f33605d48f08"
        },
        "item": {
          "id": "2419a2d8-dcc7-4855-a0ec-8a680888b1ee",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2d4b3c90-5f7f-4eae-af5e-87c3dba85094",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d79e6c4-8995-4118-8d7f-eb0b2406bb24",
        "cursor": {
          "ref": "270f78e3-7631-4b16-bb18-75a0dfb58883",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "32ff55d7-f75b-4619-a417-691a3e60b05a"
        },
        "item": {
          "id": "8d79e6c4-8995-4118-8d7f-eb0b2406bb24",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "70b85f4f-2bb2-4d67-a8f2-429646054061",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 747,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192908e3-d462-4493-97bd-4a4220afd6b8",
        "cursor": {
          "ref": "82899d93-8c84-4842-a5dc-ed50bf6b6d33",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "60f87cdf-6c2e-4ce2-b8dc-a6199933fa5d"
        },
        "item": {
          "id": "192908e3-d462-4493-97bd-4a4220afd6b8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6082054c-6237-4429-b294-3651ab06bfdf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192908e3-d462-4493-97bd-4a4220afd6b8",
        "cursor": {
          "ref": "82899d93-8c84-4842-a5dc-ed50bf6b6d33",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "60f87cdf-6c2e-4ce2-b8dc-a6199933fa5d"
        },
        "item": {
          "id": "192908e3-d462-4493-97bd-4a4220afd6b8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6082054c-6237-4429-b294-3651ab06bfdf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b701f71-d8bc-413c-bfc1-5e3949ee1347",
        "cursor": {
          "ref": "015ced69-0463-4f8c-a09f-398ffe28e3ed",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b9864c4f-4a26-4d3d-9ac1-7c51c6abc83b"
        },
        "item": {
          "id": "5b701f71-d8bc-413c-bfc1-5e3949ee1347",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "bdb4c264-4ef0-494d-b1bb-e1f1ef6ab1b2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 919,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}