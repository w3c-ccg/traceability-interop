{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "baf05327-6355-4750-80b2-43a463a6ff34",
        "name": "Clear Cache",
        "item": [
          {
            "id": "10799519-2128-4d68-91a6-1bde780b36d7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "be10815a-8d72-4f22-905d-ddc116784b63",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3d525ad1-6926-43df-a400-669f78c02e10"
                }
              }
            ]
          },
          {
            "id": "c0e4c29d-27ab-498c-854d-2f73e3918b4c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3c06830-8ebf-486c-b18d-729b5554d7d9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "51772866-7f9a-41d3-a727-078fabde3e95"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e38aa277-5f1e-42a3-8171-92047dc28e07",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "00308eda-5092-4881-9c95-fcdde2a0fb27",
            "name": "Positive Testing",
            "item": [
              {
                "id": "306d701c-8573-45a8-a159-b73ffc600e2f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd0e1f1f-6f01-4e20-9491-f00ee0e165ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1f9f1e6-8ed8-4e2a-999d-1df2d0df0c0c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f57fdaa7-d2cf-4933-bc4e-8af3e7edd95c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "117cef2d-19e7-44c6-a57b-bab76cb4e47b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "981faada-30ba-4b8d-898c-7da6c8350169",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9cd9cf8-3ca1-446c-8ef0-17dd102360f0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8476fc8-bb18-46f7-9922-daa50dbca2b7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bb778391-2085-4ab8-b9f0-5406eb28b8b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e0432a0-4c55-41e8-bbce-0f4116d6208f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4a26d3e-a35c-430b-abf3-225da3fe9aa8"
            }
          }
        ]
      },
      {
        "id": "edfdd765-ec76-430c-ba46-ca560f2f6654",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "040ac15a-3374-486d-b62e-d725a61107c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4fb156ef-202e-4bb7-9cfc-ca94002de736",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4915bb6a-b233-4726-87ab-40ce9d34bdb8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31531f17-6175-4191-8a0f-0ead163146b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a06ac722-e965-4190-aead-5748a0d5e411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad5e583-76a2-4f86-85ee-a077a58831a5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99f07f4-3f85-4fdc-a947-709ce57a4666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "640e8b86-2d51-4e06-9434-0f42a43c863c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f56afb4-6e4f-4e30-8d9c-0687b5c18b39",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e111bfff-f540-4013-a7cc-bfa6ffbb261f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb810d1d-82dc-4fe1-b945-4017ac84d09c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d8c76c20-9b02-4eb1-a108-1614c41e49a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af48cc08-a195-4bb5-a327-b19370f6c2d0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e4645c-5b51-47b0-bd2b-7a4f13353843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f29d9a56-310c-4ddf-a6d4-4a2c9b5cdc35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce175d06-2b58-456a-a1b3-ca3663821277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc029e73-62c1-4f09-b8f5-1102c0010215"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1996f9ff-8b18-413f-afd2-2fc97bc65ce0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "be310183-b699-4344-b724-a2d8cecb4875",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2a78f82-d2a8-44f9-93d9-ac66288b389f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d9402af5-ae5e-49c1-b14d-be1d93ad44c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15795a0a-0078-4903-b7e4-0542ea097a53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "278d749e-3122-46ca-9e24-6b4f8917fc6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac42fbad-619c-456a-b4d0-833f0d76777c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0661e26d-910b-4628-b849-4812c02e490f"
            }
          }
        ]
      },
      {
        "id": "a0615842-6466-4499-b28b-58534e6b4e82",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8f2c7df6-9a8f-430c-9200-b0a84330d4e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7be23101-6a2b-46aa-a4f4-3e4724965236",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "48a32a43-4fda-4643-89de-85f01be29cbc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42be3795-1364-4a5d-b1f6-0b9b2fb2ef5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf9c5d0-1b24-486e-8c94-4b41788942ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d5a1a5-98c2-496b-9195-db0ee7dc0962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50c4cb40-1729-4bbb-820f-e01042c7a6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2958d1de-090b-4566-a95e-f66067f589e3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248ba446-657f-472a-b4ca-eb8ca77bd9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c72d395-6a0e-45fa-bcef-55dcfcb5ed29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6674fa83-8767-42ee-9c56-787bb6ac2bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca2074f0-1fc2-4685-aea3-4708d7aa70fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1e5264-80b4-4d52-9b48-e2df1d2e04d7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c5fa86-1f90-48a9-ada2-7be82cd03916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2a32f8-2431-493e-b2aa-2e7b99d0af4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20637cbb-a2a2-47a9-b82b-ebb0751f1872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bae8ed67-c815-4bb0-b04c-8330e2c40a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90f3ab8-8e99-40c2-8c1a-423e9b0d683a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fb0d36-1e82-428a-8b16-fedb16918f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15eeb5e9-c18d-4bc8-ac93-ebca05f818d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1c5a1d-6605-45df-9231-8b08a2e0f142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a85cecee-aa9d-416d-8db9-03a46b09e525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd1a90d-cd41-4686-8c79-b628c2a64b18",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cd080d-ccd6-4061-8bba-3fc468654b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a709f59-f8d4-48a5-a7ed-b66b19dd4400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e7894e-f736-47be-a792-9b6dfcc77005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9c67f59-486a-4ad7-b99a-0611f304e990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ed77b0-9ca5-4acb-a213-5527bbe60601",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f30801-0eed-498d-9f6a-3a02a26b5671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c27e31-70d4-4207-99b7-daf974c5a159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02513cc4-8ba0-4301-84c5-fc667e66c6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab94ff00-ac22-4e8b-b173-263baf58c58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0dbe72-fc29-49cc-97a2-c14055746514",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ebc8eb-cca2-4fda-a6f0-b65c79c1dcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1bcf68-70fa-46b9-9878-d4c64b366222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d18adab-2cdb-4a57-abe3-1e801172a1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c774753-c244-4ceb-81a9-7a1f560eb6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dde7e3-8b88-4f3d-a325-924a53556cb1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a927ddf-e757-4e43-97f0-93f77b163477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d93197-b7bc-4609-b287-14a4db5a844f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db39e0d2-0f3e-487d-bee6-6af11ac6fdc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "214bf5d4-3ed5-4ac5-95f5-ebb66d8ba4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6261cac7-e070-445c-b7d4-f2c3719ade23",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad075f14-e276-4814-915c-7723a7979017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d89fa8-dcaa-4c9d-87d3-c2cd5a8687fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32614312-8b4a-4c40-9052-b4adf51b1282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "986990a0-7baf-4e37-b9f3-8ca378b011e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c1391c-2323-4851-89e1-6087595f03db",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896aef8c-c25c-4283-b697-f2f191fcb920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f92493-490a-4ea9-bc92-7bd80ca703fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72250327-3f33-4560-a416-75dde47b6b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7376ce6f-8acf-4c29-877a-a8099e583398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4882dd7a-0edf-47a8-bc14-ed71b3ef1524",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf875ea7-81d1-47a2-b817-8616163e9c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5590c74b-0f1d-44b9-bf5a-49044cc15575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac66f832-3363-43a4-b08e-43455c45ad57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "893546a8-ff1b-4f0b-8984-3b5c6729f19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5832e970-96c0-455c-8085-34e96ca1af76",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51035fe8-9c3b-48b1-9b3f-89a48a72f6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef2f18b-a3ef-48d7-93dc-e2892f501134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1463a25-bd32-4821-af54-22ecc13e0504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "666c6a00-6475-4b0e-a710-3e5d0a26ff89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550e7d86-07d3-4475-b0aa-070229fb5b53",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a782dc99-b389-46f4-800c-1e00dec3d8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5834a70d-ec9e-4ea2-a7ea-c70ec4086830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a07bf1c-e6f5-4157-906b-ffb02a443aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b73fdc6b-d1c2-416d-ba6d-db876ef57829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71cc509-8f2e-46fb-9c35-54ea4c6e8d1b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f6f0bd-07e8-4347-8a6e-9292e9610e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e87882-61bd-43e8-b4fd-7dc1720efffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbef367-56a1-4d08-9241-0a67546813dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6193a30-41dc-4278-9277-6c33f3ed3265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b96297c-a91a-43b0-b764-e016c68b8039",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0619472c-3462-45be-ab44-b30ec8d87354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfaf259-8634-49fd-b338-7f98b63ca1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d35eb1f-3dd3-4f1c-880b-893ee61a264d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05852cbd-4be8-48a6-87a7-b2fa1fbdfbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7aad82-3206-4ce3-b608-1d939c9bd93d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c788f4-06e6-4b9a-9655-496f2b4cb811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a92a0c8-f89c-4843-bb1b-f84ddcb78af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dbf2c7-7405-45a0-88fb-738a1ded9b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bfece6d-f23d-474e-a03d-3a3f8a3b2548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9d9b69-5cf4-4bfc-8083-f8de5536fac1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ae0fcd-5499-431b-8185-db55df99980f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4785ac-3ba2-457e-94f2-87fa3c6ae6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16c9fbe-5642-42b5-8acb-335539c7d005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a030f3ca-54de-4c58-95a9-853aada578e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60e17e9-c72e-4d20-8919-8618109ee7e3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e675546d-7497-4f19-a081-a2ba19505c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a712e0c6-59ee-4c15-9859-8adf0cc5a956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282ca5ab-b64d-4357-b15a-3c8e3053f89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "52316999-af08-4def-aa2d-77353a639c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e8631b-93cf-42b4-aa6e-36a8a2be45bf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4d5deb-6729-4f98-919a-f5ddf2be1516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c83f5dd-42ad-4d1d-8dab-fb1e287b2616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48069bed-d16c-4c5a-b00a-3b89c5929611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6243b22-9f7f-4f6f-a482-4d4ae13d67a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d5299e-1d33-4378-a4cd-7502fa17003f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d8b35f-aa8f-4c7e-a9d0-cefa5c89b882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf40d3c-2ffa-4814-830d-88027bfe6d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bafb20-b6e7-4552-8d59-7eaa6ad83acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7b3ff6-1e53-41f0-a8d0-2fe2ddcec03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb17f31-b310-403a-af4c-5c392b3ab34b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415e09dd-e4d1-4194-be57-2cafb8690714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae51dac-5d80-416d-8e9e-aed08f1e5d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404bfc9d-49bc-4beb-9119-65fcd77c6a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba808b1c-eab7-4e0f-980e-bd1e48d327db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89445447-2519-457e-b6d1-f04d3e0de40f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cbf6e1-2620-49fe-8897-cdb44906e651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536f6941-0783-444f-9d66-b53eddc79b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767b5f09-dfe8-45b5-845e-bd34a618185b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d11f44b-9e16-42e5-9035-c471d86ec12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711975ed-1dfc-4a50-8eb6-d0d5106fc425",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09a5d93-6807-49df-a9bc-b1f344389012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954f44c2-bd70-437b-8a0f-2363ffa57dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2902a6a-b206-413b-9905-2af268dea6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7935ef-190e-41cc-b7d4-953d0ecf2c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a6d76c-4977-4ded-b7a4-62d63f6ee119",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d879eb-75eb-41d7-9021-1837127dd443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdf756b-fb51-4481-8908-0b6aac608866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0c335c-dca0-40aa-a9c4-a26216e772b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "66bc3944-3dc4-4a93-ae86-35916ec298d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c92f674-5afc-4276-b59e-b7b96d922733",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c891380-425d-42ee-a66f-8385a00f8f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3978e05-5f44-40d0-950a-ea25d3b50e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a14c48-c998-45cf-a91d-1e588b37d3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "529a4bd9-0dac-43e4-8ee4-b75f4125ff96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666b6295-6774-4855-8f08-6f6bba71bcd4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f9fc15-b58d-4885-93f4-612bdd9ca235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d39a13-ee63-491e-8a40-5222da5ecfb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157c9c69-b530-4fdd-9c3a-9f26f58bc8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "361ccac8-880f-441d-add5-a59b4b26527b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d549807-f489-453e-a1b8-bb294ac0aaad",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4431c5d8-4fbc-40a6-9825-d1920c7ef259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1f8270-6e81-4700-a825-11068f8d9366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ff0821-5006-41c2-9442-257797cc062e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8781ab-c878-47aa-93a1-53ab0df9bb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab239e66-2f69-4cc4-aca5-8c2a02536ffb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47e6a70-cde8-41df-bb67-38151ce4d3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9cfb09-176b-44f0-98fd-7811258289d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dea6352-21f6-4938-b1bd-899df8be4ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0fec6f2-bc95-4c16-918b-2b8621b3bc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70133646-20e1-491d-a454-2e2cd725eecd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510a0bff-0bdb-4923-8a23-b4c81ea1cf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71bd8b88-493e-4887-bf07-c88e8062d164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a043775f-f674-47dd-bce4-d0fffc5a63ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f12256-e64c-4181-988e-b87cb44bbaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6821ff04-bfbb-4b29-b8a1-b607aeb849b0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67b7674-1766-4d86-9661-fe1c25665164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87fed7c-1edc-4ff8-be30-774ca1fcf2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07085318-6c64-442a-b695-74907a758315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f50cfad8-38f8-40b0-a5f6-c164085d5449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b163bf8-daed-4d2c-be77-69ca0e12833c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413f9d6a-50f9-42f6-8c76-e61135e2df0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5902c1-4306-496a-a272-a0092935ffe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e731c6cd-844e-4940-a8c1-43bfcd9f46b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "772b77ab-1232-4dfe-a19f-3a99fea5e25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fbf6d3-3b03-49b5-bc21-922d8d96a9a9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142553da-8452-4a1f-ba9a-e87e6a7dda87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089b7f1a-204b-42e4-ba6e-360571f70197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4cfaf1-6974-4a40-85b5-ff0c4f668eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7861c7f-0db1-4a25-88c3-aecce86f6704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3180c6-7555-459b-96ab-d2c0e0dd1d5f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c947c936-9300-4123-aafd-5221a46097cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ae1e57-aef1-4410-bd1c-2a5f671ac63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3438bd4-de5d-4582-9697-28d60feaccf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a95423b-f4a5-48d7-8b92-4fbe655f80d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6186b2d-3574-447f-b3c9-1b0900a19db4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3eece7-6dff-419e-9c64-12484abeeccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7875b6ed-93aa-4ef0-a183-32c9166049ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868a6883-29e9-41ef-b099-f00aa4028050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8302cc-45ea-415e-9d12-1c777c264979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ba099a-0112-4dfd-a829-423bbee62028",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b156a491-e72d-42aa-b41f-5472391f435f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252d6e95-bddd-4ed7-a9cd-f38d8e129126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e153119-71b1-484c-9229-525e80f4eff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5b111b-0e2f-4db9-9166-ad7e14595dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da096cbe-8ea2-4cec-8d96-305899d17671",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff9cc31-a653-4bad-a30d-f271bee9f799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6a21511-9920-4b16-ade8-b93fce7d7c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3efa68-1063-4ee2-8041-14e37aab8861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db46b06b-240c-4c8c-afe7-06085cfc7b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f658b5-21bd-4604-9987-94a111a88139",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0108a6d-d5cd-4f95-b819-cdd1767e4b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78288447-4345-4003-8fa2-0956d5e70d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2b85a6-ae00-481f-9416-794057e26556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e23467f2-defd-468f-a8fd-ce502b39adf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cf0848-4e4d-4723-a81f-6318d16235fa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff105b3b-301e-4a79-bf6e-f320b5a6f384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a29d83e-5800-4c05-9741-e502399bc3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ebae2a-7132-49a3-a521-549ef0d5c3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb262eb2-9a14-4d2c-86be-2952afa433fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0ffc69-fb72-4691-8d9a-8d260f88ec6c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a2c46f-4cde-423c-b3a2-506d7b91e8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167b3639-45e3-4794-9e78-c516456fc0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0ce8a2-79db-472b-903a-c302b4d462bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5033f48-bc32-4d1d-8e58-7aa4427cc47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e34c95-b2da-426d-801a-e0e12b31555e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b138e96a-4eeb-4f1e-89aa-d07654c439ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd129fb0-acea-4a87-b43c-eb6243da1c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a89778-1a97-43ba-9a4c-e9d9553710a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fce478cb-999b-4db0-adec-5b8ee06d0686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cfc878-8b5f-4a6d-8614-488afe47655e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9466f8-7d58-45e2-b808-0b315c578d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c5e565-253d-49e5-a5dc-ed60c28831fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2626512f-ad79-4ca5-b724-6cc3065f6a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "306399f6-0cbe-4e2b-8b5a-6784cacf32f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3caca874-74ad-4242-9e88-14801063de6a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bbdae3-c617-4892-8592-3c9d8080ae6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7386cf28-f0fa-4291-b28f-41d6596649e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ed1942-7f5c-4151-a73c-c42db14aa539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a16660d8-d6c8-4a06-80d1-03b217f59adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af59f62b-7ed8-47db-957c-cfc1e46d2276",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585d51db-e673-4841-8a2e-d9b408e2823a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3822b8a8-c616-4ad1-b340-ec75379c3858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6247a45c-054b-4e81-8987-3e3beba54ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a749e4-b0ab-4c8a-bbed-9f6ac88549f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5180702-c0b4-4537-8804-96b64a3d777f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4fe364-3f5c-40fc-b0e7-247a5fdb6ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6fd061-a9b3-4401-ae23-53e046b9990a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8373adae-ad34-40fb-a9b9-b3d3c197cf6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e844a640-b795-4bee-8150-534a675c5085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0611131a-89d7-483f-9e47-f6625a57a310",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947d608b-87fe-4568-808f-49504c4705f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0a6ae7-3157-484b-b76f-76626e410ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9329cf72-1dbf-4cc6-afa5-1b4137fe7d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "619f9058-d572-4ae0-a433-b006019cbb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354185c0-1e9e-4926-b459-24281350555d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f73067-0a8d-4b8a-9fce-1366fb1460d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb4075b-fa91-4b62-a172-2f906f02c134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674443fb-9a57-4680-8134-117aed96c9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8642f09-a9e2-490a-ba7b-7035b0c3ab39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a5bc32-8c69-4419-8fc8-63d786219679",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91abcb38-657f-48fc-8455-9f3f4997067d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fd7f72-cdb5-4f47-9899-df8c60f1e518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8153086-fddf-4ca4-b85e-63c86f56aaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7620023-e846-4fe4-8df9-562b6a76c7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668b2494-21df-4d84-822a-321776ea0005",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c6ca5e-19b4-4020-861f-b5434805c47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedc298e-7585-451b-8d2f-3962274944fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c5208a-9940-4f7c-98f8-ad5b0b22ea4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31df310d-6764-49d4-acee-5e47ac5f3986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8d06bb-312f-4b25-b4af-8251362f6d82",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ff7669-12b1-42bc-b898-dc46d5782d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f26e1d-3bac-4f05-83f9-1f416aa6940c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53777c69-dc17-44c9-be9e-18a6a2a791ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf674d81-88af-4bfe-95f0-c8d7b673b5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca10d40-2a39-42b5-a499-60f8f93695f4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9cb09d-fa8b-499a-9336-0a3120fffea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e24db3-1bda-427d-af99-e0a5b51b405b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7eff9e-7ea0-4373-92c6-487f5aea390c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c421291f-af74-4828-a4bf-1fc2a5d8e0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82872a4f-08a2-4c58-b98b-09c26119d366",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a050b299-bd21-4448-b7fa-94f8c3d19700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5881ab89-4f26-4a0c-bb61-7a6bff9ffc51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc03d04-0aec-4886-87bb-f48bda3a21c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5057beb-857f-4153-b8d0-afc84016f461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6f84ff-6d6f-482f-86ba-11ab7649233b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6ba52e-1a67-4aa1-a0e8-b6cf3e45be05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d524fcf0-5c6a-4543-bb69-9756411c9512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8143c42-3ff6-49c8-b903-131c68cb02ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "29b6f9ec-f24a-43bb-ac3a-d40ed1274392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3129af3b-30d1-495d-8a58-89ef2c0f66e6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc44d6a-f754-412f-9828-a8b45a66be56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ee5665-5053-4d0f-854b-4535abf8e0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec235115-5e53-4bdf-834f-40f008c0166c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d48315a-ae88-4204-b3a8-f9a70471693a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5abd15f-3e2f-46cd-8372-147f83126b5f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393c195b-26c4-4de5-8208-3923e0985d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244603a8-7be8-47ea-b196-7f9567b81934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cd07b6-5614-40cd-a97b-4355ce7c5373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a16ae0a1-08f7-466a-ab8a-1998500a9ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a9cf5c-da26-494c-84ab-33b0737808c2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9ea45d-2b13-43a6-865a-312f952907b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76bffc8-281f-4187-90a4-3ff2a61fd50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0b4b62-a651-455c-8ccb-3f20aeabb6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e98d4db9-efd6-4044-944d-255971da9ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513f5bd3-0fdb-4f34-890c-af3e2a460e40",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a08d3c-6cd2-42af-a66f-fb57081e489e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903ed276-67bf-43c1-a5fd-61ef739b7371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4431aa-ec7b-4df5-be19-406e18a6dd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2af495e5-eadd-4096-9e08-7e012a3dc9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51776cb1-1704-4d8e-89bb-44d0460fcf67",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785bb1a0-0aec-42b6-834d-bdc15e39da7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f02d37-6f1e-42de-926f-4e52eaef7dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86835226-a764-47dd-8447-99359b9affee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9695a886-9d72-4a05-9443-9184f6db7159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f135a01-e5f6-40aa-8c83-17a3aa877012",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad980a1-e7e8-453a-a9d7-e35900f7e967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3189ee-3156-4ed9-9bbb-49de6d7b8d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddb567d-8d1b-4174-95e7-66771772f5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "de22e44f-0577-4f98-9d85-c373812e6849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9eced86-6ef2-4672-9b94-571bdc7777bc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c25ec3-a30f-4c79-8628-9ca69ccad682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64742a19-c36d-4857-a6cf-a90d72facf38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8bf603-1628-48bd-a000-8aca1bd97f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "717ff592-6999-46f7-b18f-f41d2a0bff0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af16841-ed3f-4606-ba0f-df37c5b08573",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e175000f-1303-4d2a-8f20-5e01677492ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30db705-7bdd-48ce-9fff-7c71bb782ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eaaf6af-0352-49ed-b9e2-0128cdcd620c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7dc0b7-7701-416c-8352-120649c16268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c4cb87-6704-4464-bfea-acb1bac6e248",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba5f24b-e947-402c-9a13-28a106fda3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abaee857-4303-45c3-9ff9-b6e545f3a5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c488dbec-066f-4021-b96f-45f431fbc086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb5bebc-fd38-4c54-b20f-fd97153b0118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13adbe28-d87a-48eb-aa91-dd576befabf7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0171cc9-a458-4bfd-a4d2-66df6e9ea040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cffdbaf-ca29-454d-847d-194cd1ab7b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60036872-ba91-465c-ade1-409e08d68747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "19c4fcb8-a591-45ce-bb9c-f80597517f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdce21d-efaa-48c3-888c-231452c37bc5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8279b1e1-41e6-4542-93ba-e9bb72d04b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf100c9-899a-48be-bfdf-378a7d65d08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f0164d-2e26-4876-bf6f-427d852fcd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a232cc1-ac1f-4c48-a846-cc26a04d6308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1851807-dea9-4cd7-90fd-6c7973bc874d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42795ebd-08e5-4e99-8446-d1af8ded938d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13127bad-cf18-4179-8042-dff7ce062102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd962080-0a40-4105-b661-b86b28f81352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb59717-4412-46a1-893c-f6aa8f2e6f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d05a66-1c57-4de6-a7a4-dac62049bdb6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec42f4a-49ae-4821-83d9-c7274eff0004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8b2ca1-a596-450c-9e40-c6630ee10c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347873b2-4278-4f05-9bb7-c000952aa36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54793cb6-8683-43bb-b142-dabd807e7a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54ad363-33af-4f64-a8fd-8d9ff9a07bbf",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951a8b69-ab88-4830-ae8d-e63b2be6a899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e95caa9-91dd-44df-b07b-300f1c034135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0bc932-0cae-4b40-9421-b00f341054c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "428e63ff-fb3d-4dda-a5ea-19e21c8f728d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982df825-68e7-41b6-8d88-eff7e2df7b37",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3346092-f28e-4a94-a216-7b6f8716b51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91aa67f-32e0-44e6-a378-d82c98409069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa07711a-317e-4539-908a-387cba6b0599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de14d827-2dde-4b9f-bc1d-2663cd2abdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4064248-137c-47a5-a8a0-90dca2d0b845",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b4f563-25bc-4f04-b624-1c224ad975ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979ae7c2-b014-4995-a0f5-3405c7ac94da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf348428-5974-41cf-b451-8d88a3368c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "951cb61f-03e6-4ff3-b343-4e64dfb58a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05743a53-08f5-4dd2-8f78-85ea9ea0d3a5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b323a99d-9cdf-46fc-b9d9-0c4fd34e0fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943dd8c8-37b3-457d-a1ce-4a5a0aefc713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74837cb3-4dd1-4950-b501-898f89c6321c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c93df3b-9f0f-4c04-8182-f623bce85bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c422d5ca-bbaf-474d-bb34-99da5f0b3ca2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ff5071-9591-43ad-8a87-e428992edc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0923ba6-548c-47a4-bac7-6adea7da7410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9343da87-f691-44fd-b081-00bc3e08cdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a2d7b4-f4b4-4b92-adee-b71f24a23ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89644a8-8483-4ac0-bc3e-b6b54f998966",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179a10a1-7ea9-4d96-837c-bab006f1c47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c746ad77-92e2-4d7a-9e49-91d18b57ef05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daadcbad-5268-4df3-bdd5-56c5d5059b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f69d3920-b8e1-4715-abee-700481617399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2199ead3-ef23-42f4-b53b-54a6d1b42a64",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c844539-ffd7-4b18-90f0-f48a64b9cea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7bca373-270f-4797-8ed0-c24df7851049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3706e95f-65d1-4021-80c8-b2f5b4b7eb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a299c712-7405-4027-ac78-7ec49e22ca2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5305455-41e1-4de6-b2a2-f31a7b8cbdcb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d2a1e1-2768-4a73-9b48-be9df99ef674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3dc23f-8b88-4137-9742-55a8773eea06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2724f82-80a6-4aac-be9a-c3586162240e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d440a3b-4489-4da0-9bc9-38d756007809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68633312-9675-4509-8ebc-491f23de77c5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308cd30c-6c2d-4a6e-9ff1-50df014fbbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25fa50f1-709b-43b7-96f8-d2b78df77fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5690ce-97c1-4751-9f79-26d5e525f9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f945ca-8bd3-4c23-b212-3d73b72da3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29a1b44-eb81-4f7a-a5b7-cdeffe6fdaf5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bc1b4b-4907-4d1e-b9d9-0afc6a708fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07de6f5b-256d-4e97-9291-bc96928a11a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148872c4-da87-4aed-a618-a8ab188f52f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a29aab-bfaa-49be-9b4b-e9d5eef4766c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910aaf1e-fe1e-4870-9781-b8ecef449ba1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4949f6d4-3512-40e6-b8aa-3cdbe881f7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ed5e09-9623-4469-a4f0-1219340251c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a25874-ce1b-4098-a3b6-efa17d560c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62d7f325-0e46-44b8-9f76-1989aaa79e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b99cd2-36f1-4095-b606-bce69b467665",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1989ac2d-0d70-41f5-b383-c68ca4d80cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a819578f-1f0d-4687-9611-7d19b409a9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51524da-6ad4-4640-8e1c-5aba709f9567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b84df4f0-b9b4-4482-80c4-c2e38d8ec70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0c88a3-d651-476f-905a-c90426a930c4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9275752-3766-42e5-8ef9-c0403d66e9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669c4899-9e18-4aeb-b325-9e5a6ef81a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12114823-4b22-410e-81a3-8d766a04587f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6479ac2e-e0fd-456d-8ed6-fd9db7641602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac9860f-e98d-4b4d-9d68-28aac3bbda0e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2772f51-4ae0-4022-9458-1b6ab4c21a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be503231-a7c9-4f68-a025-151ce1927b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f5403b-4866-4e4b-954b-d0a5f0f264a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99ca5a5c-ae6a-49a9-92df-27112313ec9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25616178-ef92-4276-bfbf-ab3049769183",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9b0b3b-9b4b-46d9-9256-7a8a0ebab2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a132a4-0a8e-49d2-b4b8-c8daad18d0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa206dd-6a54-4ab9-a7ed-f677c83a58eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d913f433-a7db-4af6-b064-f2dfd2e6c96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0137eea-d0ab-43d4-874e-144e7bf3c65c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b024033-8fa6-4204-9acf-37b76a6e4f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb8fd08-6bca-49fe-8a83-3b4e75ecf81c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6e90ec-007d-47e2-8e90-14fa11e86013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c923bdaa-1b56-433b-8d32-24a22e417731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22818ccb-e56f-4871-91a4-288d8d8ece16",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54138983-9fc2-47f2-880d-df586adf42e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f586c9-6ba7-40c8-ba37-62c7a45cb732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080badcd-718a-48da-9ac0-abed5aa082f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fe9bed1-7b53-4c11-8589-5327114a256f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2207378-546e-4d7f-ad17-42a4f937e7ce",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd069cf-f442-4d2d-971b-fd16704a1859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8f9ebe-76e6-40ce-92dd-0143aa0955aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a77516-edac-4d7a-a9e3-db3a6b2407a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6329c6ac-f27b-4bf7-9df7-a750de8d8bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3071423f-fb33-4fa3-92b0-8f350757928c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee75fb2-6af1-432f-87c7-6af83737256a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22271471-9413-4fe7-972f-d1ab8aac2563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8170a9f9-a706-42ee-8c3c-9abb58d7bdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdaca5ef-3663-4526-83fe-a1730f58c67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9d6a9b-affa-4fa2-bc14-411bf580385e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ad0c79-8e2f-4366-8486-1d03b8268b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7174e42c-dbc1-4fea-9827-f1a2629e78e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc77dcb-5eb3-49c0-ab5a-e516d920d4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5a46c4-1920-4a2e-9e2c-ceaefff8d4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e8b233-1f5b-4df2-bf3c-819dfd88eaac",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b0ac0b-43f8-43e6-9467-5968cf42d3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ccc79b3-66db-4240-aa05-9bd3a86094a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86556e8f-4d62-4a9b-a945-1192cb26bb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0db49ca-1da6-4f69-9ff7-2fb2849c66ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a0f236-947a-4436-adcd-eebf078adff7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e09a839-1a9a-4a9b-b632-118512633d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1a92cc-2797-490c-8399-d8c09866a287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef09ab7-cc5e-461c-8c13-b174c54b285e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e45a1ad-13f1-47d4-9fb3-728f45c2713d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dc9119-2a1b-49a8-930b-58bce3f2aade",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7d9671-ff42-4efc-9229-93160ff967b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259e523e-33d8-4f63-aaa9-7aa8482ffc3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a4d3b9-0ff1-4ec6-ade4-1732c902df7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d01d04b-2c96-4bc2-8610-9969f5397b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31421eb8-462f-48e1-933f-9adddfa504a8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d13d22-e833-4919-a01c-075a90c28fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b597c60-8827-498c-8615-9c6116a70aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a44bccf-aafa-4f19-9e27-5a266ae76333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c56de67-37a6-49ec-bcc6-9fa4720a27c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3775465-e624-4b1d-8e09-4c95dac4567f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45a7de0-ddfa-4cc1-8dba-ce9f03065068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19eb533-8b39-428f-a0a2-b034fd36e679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d80314-4c35-47bf-9864-9d08a1514edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0345f81d-70c6-4db7-b246-215ecdec07be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82de05e8-2420-4689-ab1d-39ff0b9e8cfb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae23e47-459d-4ab5-b98b-b811bdd97a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02fda05-8df5-402b-9f96-0126f93856a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055434a4-2d60-4dd2-ba6b-d9d167afcc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e071d8-4164-43aa-851a-0c0e60501bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8fd13b-284c-4533-9816-cd8acd7e64a6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94f8603-4ac9-4e4d-909a-4018ff0dbacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6fd09b76-284f-42ba-a850-83195bc1f176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebf014e-b034-4e51-b845-0736d5e92f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "066fa6ba-9ec1-443f-bfac-a5e0b7a7fa0c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c930643-2c80-4dbc-8640-0c37422cdd37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6892deb3-815c-42fb-bf97-bba8e1f203b1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "247f9e7e-a4a9-4078-a8a3-c2c13749b456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f81595e0-d420-463a-b681-4f8292912e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e245f7-e498-4128-84a9-c414333f9469",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0359cdb4-0e80-4f0b-b97b-c2c400f29803"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6f79b46-f1fd-49f8-aead-99d9cd25132d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c0cb8cf-4cc7-4fe2-8f12-0f6eba7732ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91bfa203-9b42-45b2-b376-98408b6d8739",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73d5ce83-0c50-492c-9aee-6c8fc3a13dfa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b7d20ae8-0d20-407b-9a31-80b2a91e82cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "964495f2-0cf7-45b5-98e0-3e44c9147952"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "08adce25-4ddd-4906-a77f-972d159fbb4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ccd951fa-3c9c-46a3-a496-0960e1e07654"
                }
              }
            ]
          },
          {
            "id": "0f75680e-0632-4e3b-aa69-a5ae8028f520",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d0fcf023-794b-4378-a3b1-6dc5a4a34cd1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52271eee-921f-4263-b080-267267211a91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "389c3da4-1031-4456-a255-dd5ee28a8805"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "923cb6cb-0511-4e8b-b1d5-02a0b8d6459e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "45e16ca4-6fdf-4b58-ade9-857eb13c56e7"
                    }
                  }
                ]
              },
              {
                "id": "2beeb52b-727c-454a-8e46-1519e0b65687",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b34a78c-d70a-46de-9b1f-6a49c1b8e0e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d149dafd-a389-49d2-a2b7-393311201b1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f44c92d-b966-438c-826a-a5574e3c475b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60f99529-8360-4498-bed8-b7b90b9440e0"
                    }
                  }
                ]
              },
              {
                "id": "24abea8e-1af6-4620-9115-5281f77255a9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c67a5c03-e276-4442-a4eb-99fc5eb22d01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b7022ca-f104-4f24-a335-09d9eaac8d5f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c30e8be3-5bba-40e1-839a-928e6144d560",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5faa15af-d516-46b7-9b5f-344348e9912f"
                    }
                  }
                ]
              },
              {
                "id": "7844b8b2-6ae1-40d4-b03b-b2f846d3ddc2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f4ab5f7-855a-4dc5-a450-7f12bf04e156",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78474584-cf5f-4a19-8a9b-a0cfca8887a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5daf58ba-5c93-4b49-a5b9-47a8b7259ea1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8ed1614f-88b4-4b7f-b19e-403f60a99544"
                    }
                  }
                ]
              },
              {
                "id": "571c1515-9ee6-41f7-8048-9decd5d97ead",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f5d8815-d4f2-4789-904d-5016046d4a7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3cb6d517-345e-41e7-87ab-6b337cb91424"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a91fb653-213a-425a-9318-2b960f31f39d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dd55780f-aaf7-42c2-a005-46696086f477"
                    }
                  }
                ]
              },
              {
                "id": "8245e653-1a41-4753-a219-5d17ece81b18",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6733566c-138e-4aa3-a44d-bc83044b29e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bfdeefe9-1758-48da-b3ad-4afa748daadd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0df584a3-640a-4a84-8639-bdfee8ab42d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "38e02363-2183-4dd3-9d9e-53ff90efe39c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d8c696c9-2803-4354-92da-c281aac7ae03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "077ae9d5-6e6c-49b1-8a9d-72ca5b6dd69b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "769af528-c305-434a-8942-2acfab46100c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "be866a43-2bc4-472e-bef4-99fa6bf1753f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1e4a5fa-eab9-4a53-8dfa-08749be6bc05",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9a76ef24-c130-41ae-8f5b-9577d52ccdb7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c0cd438-0ddc-413f-a4ad-714d605537df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e38537d6-398c-48b8-b214-7dd1ddec308c"
            }
          }
        ]
      },
      {
        "id": "9d46ee41-9095-478e-aa57-dbb87a6fc5b6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "89cc7b6a-cda7-4a91-9f83-66df899a0cf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fad44785-9d7c-403c-a793-159618d4c216",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b97d3aa1-405a-4e50-8279-28b9b9b2d93a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d9f620-6d29-4a46-a339-bea4b402c1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c1eca5-54ca-44bb-9388-0c56cdbd5c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc9aa95-b803-49a1-bc5e-97984a27224a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b942cbeb-581c-4f14-a114-78f2907fff66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11847151-3172-46ac-8b10-794a8115d074",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ec6564-e3ee-4c7b-bb43-3f8720dbbad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90358f9-e211-4f1a-b107-66317e864383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e01c5e-539d-4c77-8228-12d282a9974e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "66e15f68-15e3-4182-b115-6608eb5c93c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be0f983-81c8-4473-a244-1cace7900bd1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d862397-7aee-4f97-8faa-b3f30ea072f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e21480b-1888-4630-90d5-18e17336bb71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198fd3fb-a28d-41f6-bd64-647fb4223982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4667e0a8-8dad-47a7-8c67-17f16ecb58a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bad0a35-3d74-4669-88d1-a30b1996e4b1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5929265-8ebc-4748-ad99-1933c919c278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2527655c-8667-48d0-8b46-7b2586ed6d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490ea38b-2f75-4fce-b5c9-c7570b01b176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c859b6f1-3882-42b6-b187-65554274f650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9835f6f5-f8c4-4733-9919-1d5465acd36a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4a116f-15a7-4ee3-95cd-29794918b658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37dd724-4856-4da1-b398-937238029a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57824e55-b389-4e34-a7fe-7f568d141ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d1b0ba-56aa-4c1b-bbff-aeeea3b94b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdb128e-bbb4-4151-9000-18de2f8282c8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a65b835-a93c-404c-ae3e-dc4da04bbac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096cd5a6-b5ee-4f87-9c08-738590eedf9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82106692-eccf-40bf-b65b-07664073d6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9da6b6e-8f84-4de2-aa81-b8ead2a36182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d0e350-e312-478c-9745-96b0c3850227",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671cea8d-302b-499f-bd19-a6a789d7f5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31459aa6-6f21-47ed-a90c-4844b1915517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aaf40bb-1b54-4d8e-bb86-65d0c50ba824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc244b2c-9be5-4187-989e-9ba4ab46d29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6c0ea9-a605-4f4b-a97f-ebf8a39ac47c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc3c61d-1abf-46d8-9eea-69f8b7c1219a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6270df40-a7ab-4810-9bbd-667cc4694a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2e4086-eefc-46da-948d-82d2f8aa64f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b97d587-9819-4c98-9e04-eca1e40b8b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c84b00-2137-4ca6-a3b6-a7202479ab15",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1eeb8d5-02d9-4630-b79a-f4242c198c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df5c438-455b-4309-80f6-db0ef2f829d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2beebfd2-50df-40a3-b06c-9e94b9df5073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f38d00de-db8a-4ccd-8d87-b9dacbcc574b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e11079-c5e8-46d7-8dcf-286e58747aba",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e3750b-c3f8-49ad-b77a-9327f17f9134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9cbe33e-dee2-48fd-8f19-d0fa114e2e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f74b76-8257-4b35-ae1b-8a923985642d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29f3488a-72b9-4674-bb77-d0eff8373ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6000ed81-a136-432a-9436-02f50b941cb1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450c9b12-0268-4c8b-b5f4-0132e454499c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd234713-3f31-401c-9076-5d82436cc711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5ac916-363d-4675-86cc-10a02413368f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dc01e5eb-a114-4d3d-b24e-a4dd802f2f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765b531c-e15f-4e0f-9b1f-6a69ed621937",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f10904b-a225-4bfe-8e67-9fc32e1adb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a6198e-1e98-449a-a7bb-67a7b6769c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97749f83-8e6e-4af6-94b1-d52a9b4022d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f14420b-4f30-4f02-b069-efb7c3b5f34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca51345-5b80-49f3-a8f7-bef9e5f0aad5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e6d4b3-3eaa-4b99-b721-5f7657bb096a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e412830d-90e6-4f83-bd87-e3d57290c5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1513c8-7ede-4542-bf72-3d7f88e40e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dec3afd-150e-44a0-9d05-e38b7e610155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85544200-d710-4f43-92ca-257591a2d9b5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3fd9a3-c381-4729-84e5-05ee85c3e555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f891847d-340f-4999-8d2e-5b771755e102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47de311-14d6-4bf5-a8ba-9f9d75ec37d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a9e17b3-c734-4c08-bfad-6616c05ad5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6b4afb-d2e5-464d-9793-d1e330fdeb8e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea382b3-ce8c-4944-9039-60ac4adcc72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ed9d3b-7533-4cf7-83aa-af0d3ab3aab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3468f85-6598-4ad6-b226-ed2b265d3d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3134c398-419e-4dde-a8d6-0e5ae983c676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d690c1b5-bfc6-4e8f-b15b-c53cb7a02569",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78aebc91-a3a9-4de3-ae75-c070d2b9263c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1597022a-3722-4965-8547-c64891b1e8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797940da-f66e-4440-a3d0-e8f57f4bd536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d169809c-a2c8-4926-b162-543c33b53235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c059b153-7700-4acc-89cb-bba38d59ee87",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6f45f2-df49-4cb5-9dee-3ea973e07046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec17df89-977a-4527-8255-7a1759a46e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662c8251-3aa7-428e-ab1a-64bdc72346bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d226871e-dded-43b6-a9b6-c20e1fca672b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bd54f0-2ebd-41b7-857b-0a3eaacd92e3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9059c6-f95c-4fe7-abbf-72cbd4060f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ced6ef-d916-48c4-86a8-b6a151a4e626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b8b7da-9ed1-4e59-976c-595515e83282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0e2db0-f837-41d7-8ef0-c828c5a1a06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7ec26f-a96d-45ea-b649-05b58fb4515e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23651693-eb2b-41c4-bad5-879f9ee9995e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcf4f63-8818-4924-9841-7c5b0cd6016a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b346251e-f363-4443-8609-f4e2cd0e9814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da938d06-3338-4ee9-a421-f048b9b96938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a71769-181a-4092-badf-54126fabe0c6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87af92e-7566-483a-bf99-69d5265090a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b013e0-f70d-449f-bafd-05b81487a0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccc1b26-5522-4adc-b697-39512a30f2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf587e8c-70ea-44d6-ba17-7305bb88738a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f06e07-091d-491b-9d29-0a21e04ea38f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d29a20e-7dba-40ce-af9c-0313925b2e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e6d97e-74da-41aa-8913-17aee48c862a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aca2691-4683-4d96-bf36-c749f834a19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5479baf7-35b6-4ad7-a168-98db71cec5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a67c36-ec94-4fb5-aa6c-8e4e8f656299",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33282414-e10d-404c-9dde-6cf1c4d56fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65aab2b6-7f08-49a8-8cbf-825e97c31b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c8f883-6032-4852-9456-a46abfa05465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c395e90-9f30-4bdb-8833-e7f1e64497e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1d9caa-108c-417f-8588-22814cdd77fd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e79d45f-3376-49a3-a39e-6416e4a94cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e074b2-3606-45be-b541-ab9bafd6bd03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c423e48-cc1f-4367-aa71-cee78272fd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d27f96-413d-4e7b-aeb9-157e7022cb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e660895f-5258-4610-beaa-85f9d7e2ea5a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987722a9-d072-41e7-a7e9-f5e45d61d3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e73834-7f83-423b-af94-0a19f2f87e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80b0f9f-ee32-4b5c-85dd-5eec104a8fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86c5ab0b-37b8-4ec4-b915-8f08b9d82d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0a5795-4e14-45ec-93bd-00bfbb07ac26",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51abd06e-e383-40a3-89f6-843712cdb339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75dd09dc-2b4c-4dad-bb69-07dfde6169e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9890c87f-c81e-4f1e-a147-b3704800f771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd1e32f-c887-4268-99fb-48d7f7a2422e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e310ad9-5dbc-4070-9942-250e607f22ab",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64f16cb-3bbf-44f0-a143-ec249609df89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6c7828-ffd4-4397-bfbb-19a06eb61b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5b7a45-fdb3-4524-9b35-d2fdaf3a9dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "836b35f4-1b09-41b5-95ef-b6f2bd6973b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ca0067-8ef7-42cf-afee-00553ad17f4d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea11068f-6327-48e4-a208-3ac8cdbbcd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d5b186-6c2f-46fa-9365-78297fd3b42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402cf733-0f67-45dc-a374-6847ff6b6ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7bb1ce-2daf-4693-8292-6f7bdea1c6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a678e103-c67c-4982-9f1c-e76aaa7d2287",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596cc3b3-e721-43ad-a53c-7eb96e77a98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2615e8ff-9b70-454b-844f-c5eca20436a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82366dfb-a84f-4332-aa47-4dc50da9af5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0781f6c-b8e5-44d7-9f8a-1ebeacb7ebd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb7d19a-0ced-4b6f-9f35-dcc876276613",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574508de-68dd-4b1e-bd2d-130275500f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848f9bb5-870c-4ee9-85f5-d52d2c900555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff242b65-918d-45e2-aa88-bba866ad7d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3290a377-0eb7-404d-9cfe-1d99f4823af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9c7bda-d7b5-4714-9777-2e3872d69344",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a10437d-dcf4-424a-ba42-0c55ab69150f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2075f377-a1f3-4c4a-9dea-0a3b58a4a145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0ca76e-ed06-4f39-a385-af73ec228971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa7fcd1-40c3-4965-b7f3-0bbb818ae5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4e6aa9-f4b6-42cb-80bb-febe8d5e7a7c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944b5a1d-d0b1-455d-9366-75ad584d837c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5be5bf-1e3a-4c40-b9d4-36893ed78f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d39cf82-cd7d-4b0a-8af1-187e9c2a7050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "889bb21c-3699-4b92-9a96-9c79af9da7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401a213f-ee3a-4289-8222-2974cff4daf0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d75f79-eb1d-43b0-9579-8ff2cbeca3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28829f6f-4121-46b3-af08-4c33b6c3154f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4bf2c7-f5ba-4f94-bf45-22337c7effda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "838f7b51-38d8-4f3e-be07-31a4fe17a2e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "36ad0608-3b20-498a-91df-569a3aba1358",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92a12cde-4077-4bfa-afbc-2d4e5f48ef88",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957041bc-0cfc-494e-a552-b232153df998",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "03d1c18e-5b20-49d5-961d-c8562e4594f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae699f1b-7016-4c1c-8cac-3a541b9ab436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d88c98c-4a0c-48df-9b4e-b9101097e28b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01146810-192b-4fac-8301-0b7f71263490",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8e74287-1dad-4864-8c19-d386b768a13f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd616764-e41e-4672-970f-b6c5a3fb8464",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7848f07b-8960-4fe1-9fe0-a96123489ef4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "473e4667-7bcb-413a-9793-063583876a5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0e1763c8-e3c5-46e9-bd12-c54ff4515fed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a1b08e4-afec-425c-b141-f625b63357a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d621301d-c5f3-4c3e-9ef2-218be0d43768"
            }
          }
        ]
      },
      {
        "id": "754d0a71-4afb-4d78-a77e-8cb5185578d1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c1116898-f139-4851-a9eb-dac42a37f385",
            "name": "Negative Testing",
            "item": [
              {
                "id": "695555db-0da4-4331-b3f2-8fd55e4070da",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a4a765d6-d34e-4b63-8d51-7a6284ee15a9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff40f8e4-d577-41bc-9876-83f83f19238f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b241243b-ff52-43d0-bc6c-e47a0f35e7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce989c2-d9af-464e-b939-07894e62fa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0de161b3-3e1f-45d7-a73b-961b5facdf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c67bc6c-62fd-487b-b13f-8c06e60b1c3d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cf5f20-e9f9-44e8-9094-0630c450c227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e027b87-ed43-44af-b1dc-796fb173ad05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cc868b-c078-4b7f-bc1f-df296ca3f83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e288d2e-caba-4523-adea-c13f1aa77b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df307db-9f5a-4378-b8ca-e8bb2e5db3ee",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a012b8d-272b-4817-84c7-737f317faa09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2726883-06d0-49f6-a858-cd6b9fa120c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2690f08-ec52-437e-97d5-f27f563a86fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19c3a1b2-abf0-46a3-b499-8dc05fbd3ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6747ee89-3fc1-4a2c-a311-0503864e206c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a1f4a5-2207-4608-89c0-c68bab42625e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fea16ee-1c06-40e5-b4ef-49ff3315dde1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d5e063-c2f4-4d99-af43-33a3e1edcb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0339d59-4ccf-4ef9-8349-6cc29e0da2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e19c27e-84e1-4af6-ab84-38e7db3230cc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b781ebf3-031f-4926-bf71-43a732284c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fb80a3-a2b4-4d34-a690-81152143ca69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9c3766-ca1d-4951-9b3f-911dfc6ef56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e00e141-c0ee-4a35-947b-adbb0cacc551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22910e13-d9ae-489f-8c3a-e66cf133eb44",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6beaa16f-2b05-412d-8930-612e61d8337e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3235a940-ae0a-42fc-b419-3dd58aac9a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f396e91-cd24-4fe3-8dec-56a40e025318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7c8a5b-3b4c-400e-ac8a-4f35eb4b37ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3c6521-db37-4163-9646-79b83796f723",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f743dbe-5937-40be-ab0b-5eead9ff7ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e136b46-3c12-486d-a736-08f560f55334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104b9822-4a4b-44d2-8d6e-e3ff68682a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6f10b5-4015-4926-8fba-6eb5d3f20efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f10081-949f-42f2-ba21-43f8bfd52f3f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404d7041-549d-4339-be7c-97771c153f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a70e7e-4b14-4976-9674-bd4e442f7a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3412fe58-6370-4a07-92cd-803ae4c0e2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0117b504-16a2-44d6-b9b3-d4ebc303db78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cbb56f-976e-4f78-9b21-a206ed3a405d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc26573-8587-4691-b980-b054ae26e970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654dac2e-d09f-433f-b876-ea04f44858eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e272f9-3781-4acb-bfe8-bb0d24160165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5ece44-d99e-4484-a7ba-cadf40cf9a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c45a42c-2dd9-4e24-9edf-f5d5727bb7d1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619ed297-2df3-42dc-86c2-0c8df35474db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26aa26a5-d025-4576-a33b-f277da1f3f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9f6e5f-4ee8-43f3-bd43-2fe2e8f179d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "618df258-a73a-4da6-b9fa-d09ce185018c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e604759c-8a80-40a6-8e38-282146372abb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc23bde-565a-424a-ad94-299517e31517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7c4b3b-0fff-4521-ac73-8d0c10011076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066d3a57-6dad-475d-9e6f-4d4aafec0fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "faa4b57c-5841-47cc-9671-18468fd15640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7a07a0-35b9-4684-addf-bcad4de7cf58",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0200ccd7-72ae-4d3a-b490-333a3fe6531b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da64787-ddc0-496c-ae84-9505241c0dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f302291a-698d-4367-a6b9-72b5c76dc14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11f0cf4f-d756-4908-874d-2dc49f99ded0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcefe89-23fd-4a86-b0cc-bb7e5eb8ed03",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779e3f01-04f8-47e8-979e-0fd0e58b470b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf774fd8-dfdf-4f54-bd5c-4c21646aecb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43604efe-350f-45c8-bc98-9671456da5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd86e63-3985-4b06-81a9-6fdf5ed74ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42bb5ac-22ec-4b9f-a9e7-338a0d626425",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bc7b83-e0ae-4a90-801e-e288c14a2088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b497fb-db7f-46ad-b82a-a7d94360dda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece80e07-8e6a-4c77-a4ad-75f49bda05e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7387e0c1-84c9-4fc1-9eb9-c750878e56a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0790c506-2511-4719-a68b-7130dae34eb0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d92950e-b7e3-420e-9f2d-d617c5d228d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1202438b-78c5-43ae-9b32-fac68afccb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfba748-d849-4381-ae88-bd1a4e6a5bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "93656d48-e841-4088-82e2-019161455a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee43059-b90a-47d4-90f4-06dd8546b73e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72dedb3-ceff-4b1d-89b5-778fc67e1f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4592e4bb-2ce4-4cb7-b3ad-57c1deaeeaf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c418a1-9fb2-40e2-b436-9cb07f07110d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8128a5-d877-48e7-8d51-55cffa233cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f45d03a-fa84-4264-8613-7ac9e728aa67",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af1bbfe-0c0f-40fa-a15f-450e5fe43d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad932e2-b828-43d3-9291-ae9cc30b6435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cd9190-8b97-4c87-9761-e7b396eb8652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6582a06d-aa4b-41d3-a310-85d03b249212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a21503-380f-44da-b95d-b3fd099b7f55",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d9c428-ec05-4fcf-8d40-557933f6a1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e26e8b-6fbe-4069-baba-36396f5d1dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cff56e-0cf0-466d-a821-3f0533e34894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f703bed7-6946-48f2-876a-e905cf412606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da3981b-6084-42c2-b13f-930604c92ca7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a741a7ba-46bf-47b3-a082-3f416cb6654a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c93a75-fb78-4735-98da-563eb295d154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9af76a3-42a3-44a9-ab5a-7ecbc6504c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc75616a-2c51-4a0c-86ea-6c9de95e0351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d528388b-6f13-43a8-bf41-f517eb5b4999",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796e641a-d2f7-446c-8c1b-d4eb5fc329a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00bf6dc8-69d5-4d8d-b685-b95016ac947e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf019d3c-1e6f-4ffc-b1dc-b296b0aa1bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddcd19da-b294-49d8-8845-d7b18e522a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d0571f-b6db-41dc-8981-a88bd21a2d52",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918aeadb-32f0-48fa-9488-3cfb8ad246be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be33d89-770a-4ee8-81ec-6b70bced13a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44378ba-20d8-4f86-a6ff-8f32c01dc348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "097f11f8-6606-4ee6-abff-ded3c9713830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd426769-0c18-4d67-abd7-decbdab5eedf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3902fcfe-0b10-490c-9caa-919d7249037b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323c47c8-d003-42dd-a82a-0948e096263c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfea42a-7856-4dbb-aa50-71294a1b7db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd78c7a-fe8c-408c-b2c0-9a9c083a31bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14284d33-0b1f-4339-b657-369b8b02e1aa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2e10ab-b073-4752-a032-e78635a036c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b567a622-5f8c-4cbb-a862-19fe961edac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721aa78e-7e19-46a7-ac93-beb1ac1a209a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "483babb2-2dbd-4fd4-9d86-c844ed0adf94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77fd707-f1f5-4b7b-9652-df130a8c505d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a496010-7289-4d21-baad-77e8e0a61b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a3db40-a3f2-48d1-93fb-2af7879c66ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab6dbcd-dc20-4ed5-910a-feac08db35e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "061392ac-f3c5-4178-b1fb-d3f93aea6c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4e123b-558e-481a-9547-228bf958452c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481a654c-be4f-4820-94f5-aee88c7c77b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6115f92f-cf3c-43b9-b4fc-5ed388da3610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bda3cd-1b08-49c0-8b81-75af56632543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37a3d4a9-f262-4005-976e-02e6ef6afd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4669004-491d-4472-b211-ee685e417246",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6059f687-c868-4125-bf76-0cb2e069cd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41dd3485-c4cf-4183-87c5-4dad900e61c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367d5c74-4e40-4915-baff-ea2db2894844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82a1e139-5790-4a13-ae6d-f4549a106037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5641347-5deb-4edb-9da1-2c890dcb9ea2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd6fbae-d37f-4997-9637-d4a274bc51ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093379f8-33bf-4b49-a6d2-c7816f6a6b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fe3589-aa38-421c-88e9-333160d59105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f89912e7-86db-443b-b97b-5093e4315627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477d37c8-35f1-4c63-b0e7-80334cf6cb46",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e5b612-ca04-4f69-9ee4-2f8c8d279454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12065f7f-0e8e-4eb7-932c-228027bb051a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db506ac-8b92-4e2a-b5e0-6e95710fcd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cfb3d0a-8a64-43da-af6e-95b861bf566a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fec06d-feb4-42a6-94b7-30852d7ded9c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa94bab-38f6-4a55-98c5-013e6d2f0cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7427cd-77e3-4fad-804a-98cae9aa0f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22561ab6-d2bb-4457-a6cb-f7e228816348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f768312-71fc-4d4c-8b69-ce2fabed3059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdea9dee-7d98-4bc7-b0dd-f55994a3afa4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e22c56-c4e3-4ee7-8950-0a249d7a71f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629c84ba-2230-453f-8f39-617ce294a2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5550560e-2a2f-4a27-97de-028aec55d08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "556bf6ac-8978-4ddc-a83a-c38810cc641b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be116278-5e6f-47a1-bf1c-ab697f752081",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e3f63b-3211-48d9-86af-54288fe3599a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ea222d-b538-44cb-accb-47f1bf6e536a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b22fcc-19c9-46cf-a0a8-233e40649216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e56811f5-8273-492c-83d7-5517be632e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b58cb6-4f1e-41ed-bb6e-f5afe439d907",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63485ac3-6d77-4097-901b-3ee4d0ed7c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a40749f-60d8-4527-ae0a-f33c35f87077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af2f784-0899-4cb8-89d1-4d1a7bdfcfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ccb3af-aadb-4bb8-9cb3-88442bd68bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efa4673-9ae0-4876-b940-a79036b515c5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d0d67c-f1ba-4dd4-ba93-40f1d6a4b5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7936ed46-674b-4dac-9e73-b165c58d8fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9e89d2-1e24-4c88-b5fa-d503e86eae0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68fd662e-5d68-4dc4-998d-68a9eb1d9c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6efccb-8f79-4477-b60f-108315c648b4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb4a69c-2c05-4254-90e5-7e39a1e2e5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e48f9c5-2bff-418c-9d27-ce7fd9f83cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b1496d-b5aa-459e-8d05-d904e19c4879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c87137a-376b-499a-b0be-878689949117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c869ac-0025-49da-a6da-fab2d911affe",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524145db-4ad9-4f6e-93b9-7d77285ac1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2175cd23-cbb3-4b9a-87e1-f408ecbe456d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95658b5-f97d-4880-8600-b9d46187466e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5bc567-5ee5-4dba-bf6b-862892e3c236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d905313-cf07-4717-b472-f105de4091b0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3edde0-d1b0-4863-80e8-ecb3bf251604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14f2fe7-0144-4c5d-bcba-e662ee9d5e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2307129a-763c-418a-9f89-b19471c6abad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74042cee-c2aa-4d70-aac0-91097e7f974c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bb2016-51bf-4c54-ab1a-e823c94226e6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef3cd6a-38b3-4c30-8dd4-7649816da67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275b615e-eed4-4058-9ff6-03e07bec8381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c688a972-a6a1-4ca0-8019-f13856e16f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92ef93f1-f637-4bff-b1f5-3c140952cd3b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c1f1b70b-e8a5-453e-96ee-f24cd5efd916",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7b00eab-69ac-47af-9122-05754df3a62c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46eb664e-9c32-47b9-bf4b-064a48abd369",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc68c1e-ff41-498e-8851-30561967a3ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c366c2-031c-4793-aaea-0b3e8a5ed249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a47cdc8b-f595-4289-9266-7a1f8c3f95e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bec4c1c-ff0b-4aa2-8aa1-05fed702eba9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2702eb76-04a2-4e11-a329-c9af51d87048"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a669ec1-285b-4f5f-bb7c-6a45f990d42c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce950063-2bef-4152-9a50-924e5d667b4c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3560f05-3660-473b-8a21-86fa9fb0b9b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "353b1bce-bf77-4273-8f5f-3e0d94fb5eb6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23f8910a-2f21-444e-94a6-4226ff1a22d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce193fb1-09b6-4df1-9d5d-034bf03a0ee0"
            }
          }
        ]
      },
      {
        "id": "7609b5ef-f033-4a70-a957-abbdb4f0d813",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "dda9a10f-a411-4a33-b545-1caf86822873",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0730eeb4-6515-466b-a6ba-5115587405bf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "caa40989-bf55-4772-badf-1df0d8d2bd7c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2c9c35-e056-4617-a3fb-3cde92591a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8668c97a-d559-4318-9912-e7b6c431d527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94802486-356b-435a-8583-58a6c87a6bf1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843567a1-5414-4ffa-93fd-b84ac638fcc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3341b6cd-e7ff-4837-b5fb-0c298cc0d064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7edba9b-6d69-478f-93a2-72ba1afb3aed",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c6fc6c-5ad7-44f2-8cd9-1b15b2701c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a166f40-655d-464f-b744-adc9368be0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5af757e-c809-4693-b647-bbf239ea3c85",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef5b1c5-fe2f-42c5-ad7f-f1a9c068beb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290df6ea-c385-49b1-85f1-b728e25449a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a1fc2a-c304-455d-befe-5e912ac45040",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac3452c-f739-4ccd-87fc-d7d065b0deb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212f536d-cb83-4ad4-8c23-c87ea2ab38ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11dcb87a-2ec2-4c7e-8828-b13a7cfe545d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146c92bf-4d65-4bc5-9f70-1c06431d0af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8082e145-df4f-4a76-a46f-0363eb8e4810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a400519-276a-41bf-8458-9950fdf716cc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3470284c-154b-4852-bca2-eb6c61fefa27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dae3bb5-e2c0-4a79-9cd1-dfd043e01682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5b2917-3db1-438e-8f48-5e43720d40fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7851657c-c000-4af2-a05a-205ffd21ea1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1359d5-e821-4cc5-b66a-ff91c96145d9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078e06d7-4f9d-4b76-b9a7-74a0b6917393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1b3006c-3cb7-431e-ba72-f7e429a62721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785d6bd8-7834-4c24-938c-d9f54338ea66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd6cdb0-0fcf-4046-8607-d359761ae0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ca78de-2f68-48f5-a699-c0380cec1751",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720c39f5-5663-4d01-8dde-745716efbc4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a240144-dbd2-4730-bd30-ea15fe11c3d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42ea2c0-adc2-446d-989a-4be8acc97115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8f9a80-5499-4c1f-bd8b-9cbcd0cf64ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e9b01e-03c1-4b3a-a683-703f51ab1a00",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4ebc6a-f641-4bd2-b162-a8baba0747cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c69c5bb-5f0e-4938-970a-f4ce66fa4457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6260b3e4-a6c6-4601-b970-7ba04ff11689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edd7a1d-dc47-4b61-ba0f-00f584e7b598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55385d74-e0e8-48f1-9513-82c9acd14a67",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddea8ddf-39de-4866-be58-71bb08aab29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf18f42-800c-4d9e-9608-6abb88bef2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fd5797-579a-424f-acf6-15bf0b5bfabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a844f4c-ecb0-49a3-81b5-2c6618776906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcabc5c-7c30-45a3-a9bf-33eecc170072",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633210dc-7c66-40ae-a13d-f6742da384ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1948406f-0dde-44d4-bb56-438e2a3ef44a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d9ac9c-d206-473b-b59f-759212401e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f17bf3-6527-45e5-bfe6-bb6b9420d9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8db0039-1a5b-47f0-af59-0ded918b4825",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec165a81-7f76-4140-8bfd-9769532cbed0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e59a3ce7-3a58-415d-8e65-4c2cd5d7129c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e42162f-ffff-465c-a225-3c6b7aa6623b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3c716a-6e78-4561-927f-c3bfc39bbc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a3dfad-cb07-479b-a073-c220b222969a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db9fb1e-5372-4860-ac74-b8c1327494af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8858cf49-9306-4917-9875-211e41ebc598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6afd3c4-513a-42c2-a524-55a4c881a5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a887430d-e7cf-43e2-a56c-acdd3646aa9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74422f36-0313-4bd9-b61e-81183d06ce0e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a995126-0c8f-4bde-b34b-5a0a6eeffc2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff765d39-3d61-4381-81e5-3d51c6ffd71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f11cd5-0c70-411a-a5ee-43cfa95fa2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e836c7f-522d-45eb-968a-99d20afbeb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bde27c-ce28-432d-baf7-8feddd28f637",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b3298e-2486-40f5-babf-a924ee47f82c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fc5be80-6084-4ca4-8a77-011457b0e1e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5469b8d5-5a9c-41d7-978d-e3448f9ba69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37a12ae-f5e8-4baa-8999-8dd4fdb40edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402eab55-08bc-4890-b827-b5ba70725f8d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b6de6d-8b26-4e1b-ae48-cc5584f308a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96616a86-a247-4278-8fb0-85b856cc8eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e40265-17d4-4be3-83d1-bee7b7aab9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a212fe55-b9fe-4ba4-95d1-6bf89b40bc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181364ef-1d64-4f0b-9224-ec2f27fa2128",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3336ac6c-0009-4af8-b526-ba2472e871cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8a4834-fbc9-4e32-9fba-ee64457aa82a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b614048-d450-4325-969d-7450b54b2c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824181a6-239a-4dd2-813f-bdbe49d4e651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c0e1a2-b3eb-4092-8e00-e8197bcb4203",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fa3948-f26d-4073-823d-0dc3dd30c32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b74931-46b9-49a7-a551-26caaf4dafe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2ff636-2e96-48ff-ac29-a09e3e431750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b39958a-f744-4827-bf0f-ce67925d865e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b217d62-d61c-4ec8-98ba-6ba0310003be",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09936ee-dfc0-40f8-bf00-26eed38b84b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b66fd5-20a3-4e1d-a156-0fbee93fd605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e053303f-1032-45a3-824e-490fe123c31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04bacd5a-a2ca-4b30-8eff-f5843a3eed3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c4a84c-b91a-4285-b021-54f6f143d9a1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563a7709-6890-45dc-9f6e-30675c65429d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa2394a-8fc4-45fa-bfd0-c99e7e698f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4481f50d-6795-4a7d-a893-cb09c11c1722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d27c02-85ff-4e61-bd15-82e0dc5d4fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d43d19-287d-45ae-824e-8e2405bda46d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c82e72e-c18a-43e0-8b89-c5e38b0df4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a76c0e3-547c-4f11-bb8c-0bba8917040d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1d4185-11a9-4b32-9f13-c02272d6b79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29afde21-bf40-47c8-be56-156472d55da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185d3eb3-c849-488a-abb3-fc3074ad4b29",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f927d83-bf40-4f8e-b8f9-9ca9add7e6ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79444478-47c6-48c5-b348-97115128b1dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18605bd-29fb-40e6-82c9-b00a2672d895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263ceb2f-b23e-40e3-9843-24b69e1b3afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb10e13-74bc-4063-8f1f-f61e933eb1f6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d1fb67-c999-46e1-949e-11b1c68fde2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cdea1aa-9789-43af-b04b-cfe41cd4dfee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dcaf7b-e7c3-4348-ba46-0e0ae421d17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d928805-4b32-48f0-9607-2908244023af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d0c8bc-76fd-46f0-8fe9-a16571245675",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d3a661-3dd8-4601-bdfc-72006e763c37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09430ab1-e81a-482c-b3ea-3600e13d2b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa89e26f-153f-4c02-aaa4-92f04c2a5da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be818e5b-2408-4fb3-b9c4-7606fbe39986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe0a354-f171-46b0-8186-8a5814ec6f0e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82620f93-83d5-4c5e-8de1-37dfe6e4f292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10bf2263-eea7-4632-b679-202887731b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f96b4d-4dcb-4fb8-a272-c164b1808fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d0d4fd-67c5-493a-9047-14289172cfd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f60d2a-50ec-40fa-a06a-ac1863350a01",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e801f6d-2127-4060-9686-9d377fd0c777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2021f5c-e61e-44c6-8b15-803fca5ae784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e858ea88-1464-474a-a54b-15abf15f89f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4061101-c803-4733-8af0-43a2dfc179a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ccf991-88c1-487b-813d-7878e3d86cb6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4c5a96-0f2f-43b9-815f-b744c5385c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068fe493-3c7f-4a22-9775-8452dcd6050f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515815ec-38ab-45e1-8d44-b7cc6243e74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116e1cdf-a6e2-47a0-9562-623bbe1ca860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4be99f-67bd-466d-92ae-b449864d11f5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a7726a-98b2-447f-b107-cbc2fb2ee817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "458d7954-becd-464d-883e-52f49304bf5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a2cd17-2fdb-4a90-b93c-f069793c18da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6e42c9-7e91-49e7-9e4a-407793db1100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d6e5c7-6cf1-4d11-aa88-1606dc6af5e1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6511473f-cf97-4563-bb53-c1a23ecdc490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ece3091-d05a-4649-8ec8-56a9b84a882b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7581b93d-768c-4c37-b097-51a260234f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0323c9c8-50db-409c-9988-0b47c074dedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fec7982-564e-4f5f-b645-ff1bd8de1799",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf0c5d3-9bcb-4c9c-8af0-e62e41a983a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "801c00d3-23e9-434b-9fe1-2de8afbc3f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ec6eb4-26ce-417e-acfc-6d1c0f31515a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30bda0c6-992c-4ece-9ea1-07e7cd1de282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abda4db-bf51-4ae0-b34b-3bbd96bc32ba",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6fe37a-beea-4e47-9581-a9dc729139fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a75d66fe-2e13-4cfb-8c0b-ed763745d95e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754e2789-70a9-4681-ad1b-4d601b60ca82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bf0846-e05c-4901-b635-8711b371a7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa380c2-91e2-4c87-9fdc-5cdd4fd3e4e0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd97dd6-305f-465b-be87-b41ca095bfeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f104797-d464-4d2e-8a68-f3c6ad17a2f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c756b7f9-1215-49ed-b06a-1b5753b9205f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bdc286-9924-4a4e-bc6a-e07686d17b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc3a891-6521-4ef0-aa06-4d869c764a91",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ee4491-c2ed-4431-894e-240bfdc8b4e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5da3d346-0a13-432f-93e7-942de16c0be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38da87f5-2e68-4467-af89-5797f0c9ceda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df880af-a98f-4133-b27a-a3020602bb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c0a91a-aac9-453a-9702-3eb729daec0c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad8e472-f2a0-42b7-9509-8c5909a23d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978fe845-7682-4c21-95f4-676a6338a1d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da1d95f-e8cf-4a27-87a9-6d97034cd01c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbe7608-da79-4454-96c6-138aa0aaf140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ad065b-11b9-4ad4-894e-019ae822ebd2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdf68da-eeae-4cab-b8ff-c680764959d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a922e44-1d38-4f24-b2a6-3685fa24db54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c551cbd2-bc2d-48e3-b0e3-d9f7b7a3fa20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aae408d-191d-4e15-a39a-c95c734b573f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dcb111-6de3-4b88-8627-d84eb80f1707",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bf57dc-6088-471e-88fb-fc5ca4a2564d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f66fa75-ab26-4e48-b888-248742a7ec9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f280469-f9ca-4a7c-94c6-662ae8db1027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8698191-3e77-41a2-b090-84aae2403499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ce64e0-d779-4c51-97a9-221107528fd5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed4596c-6352-4d92-bcf7-d0c174dfcee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd6a3af-3a61-47e1-87ee-7a6ee8db7436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214453d4-5835-49ac-8dda-a815293cf124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925c11f0-bca0-4cef-adb9-4f0a80b8d7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7ec22d-7ea8-4701-9bb8-557632fc521e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce59c91-6286-4319-898d-adba879df98b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56193720-27c3-430b-9525-21af9388fc49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ee2538-1748-4669-9670-98092d010561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed372503-2de5-48b7-9af6-11676bbd0191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689892e0-fdfb-4715-8c11-120b1e6eaf6d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e23eaa-6618-4ca6-bfd1-9d03ecef6506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ccbde2-dcda-47a8-ba68-de44304b9793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b0fee9-125d-44a2-bc27-a02a0d447c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025b395e-7570-4b79-b5d0-7de1f6b9a357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e52c51-9e13-4dfd-82af-03fa3944ee43",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6760e637-43de-471d-9c76-cde23005f93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3b6d47-98ec-4ac2-ae6e-0088f1656069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60727475-c9e6-43bf-9225-40ee3f10da6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e16f2a-4941-4b17-82cc-e40c8d3f92bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8940d70a-edcf-4637-9100-84fdf09013ad",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9abf3a-a26a-4829-92d5-51ff3f5ca138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "237e8092-f884-484b-b69b-f175f2632a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ea4f2b-0338-4d8d-90d7-9e3bc93820c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3f9a0d-b0d7-4f26-b9ce-468083cf63a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70ce92e-e5ab-4fd4-ae75-42090a48cd34",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15cd1ab-bef0-458a-a070-cbc92fb0e40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85177b23-9424-4493-a0f6-0a9452524ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "641f63b8-d03e-49bd-ba57-1b74ad3d6769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004af63d-36c0-4891-bff7-35127074f526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab584e8-940e-4477-9062-8e3d89208533",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e03cd2-cbc9-4ad4-b301-0fb6d53dbeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c33c4d5-17bf-4ad2-9b97-a7744e8cb75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b4f26e-4b6f-43d5-a0d3-294163e97962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "421e1969-c4d2-4a2b-a4d7-de6c72d49551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06382a4-0165-46e9-835a-6e2b98043864",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0256d36-b11d-4276-be88-6284398d9b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0d5a82-4b56-4849-993f-c158bc2f250f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78960d9f-d31b-4f91-a9a8-3ec062203a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60c04c0-2a24-43a8-aee5-30f7f65adfd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b7eb91-355a-4f81-9e45-44369309c6d7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db19a58b-3392-4e81-9cc5-77b05e0e57ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca0b76d-34e6-46e0-b4f5-c85f0e534789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d54cf2-ed56-4158-aeda-0426b8f585d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a190a0cd-7c1c-46fb-a4d6-8f3f6f255a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81dbdbc-709a-4e53-bdff-21ed77983bb1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85249ca8-f504-4723-9a3d-ce4cef47584c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd23b625-d18c-4ca1-b2ec-3b9c9f9f2406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0536633-cb0a-473c-9fca-7e4bd4f6498e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1804c5e4-2739-4bcf-ab40-2b0d05bdccfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa25c0d7-a210-48d9-bf23-e581dca36d3a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2706e16-81d3-4d11-997d-f657c4ac456f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3380d6-b1c2-4500-a38b-244231310087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f415919-7adc-4d54-9663-2743a5dfe37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c738dc36-f377-406a-824b-e14c27720f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c9f741-4b5e-47ec-903a-13f769cd2679",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c6b4b1-b795-40c1-97db-8cef793a7648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f78bd1c-2b71-4a37-9241-230e3cecc035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6938ba-efac-4d9b-92d7-02485fb96379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b50594-44eb-4aa8-a61c-c316767e65dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cfdfc2-1de9-4ba5-8d7a-c76b95a389af",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b22afd-0b26-403b-a70f-a3826c17aabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9590b3bc-5ad4-4f78-acdf-5e112f2c0c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d1e433-0a9b-4098-a2f0-a3c67e74fb0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f780f1-36f9-41ce-ac30-f21bd51d4875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9024751a-e61e-4641-80f8-01bd8957837f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6416a5f3-e7a3-4303-8f7c-0dc18f93ddaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ae7eae-0085-471e-ac0a-7982d70448ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "793d40ad-8fad-4974-b972-b37c0da54c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e03eed7-2221-4f18-b72a-a5a7e2a9474d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f2c61b-31e6-4ddb-ab82-768f521a5a8c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a26fa59-3459-4dbc-84e6-27b79a0e54a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baff887d-181c-4acc-b05b-ff2ff59fa5dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c5e386-b438-4570-a8d6-4174ad8ee44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58389fb5-6d3f-46ba-b8f5-0822f9620ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1b46a0-e968-4d0e-9eda-f8240f7954d1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e811ec-5f7e-4d43-9a52-30fe279f1332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2382774a-e4c6-4936-a327-10dbd6a0f0c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71b8071-c49a-45c0-8227-7e5b5d70c13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872b4a72-9d56-442a-aa1f-2754116f8faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5406b30-a231-4433-9e84-0aa7b556bc95",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1814ba61-dc17-4dfb-95eb-6c084a6bcfa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e5e64c-12f7-43a6-9443-d37305f89799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dea5236-e1d3-4c3d-9242-3586e5cc50d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36d54e4-d44d-4495-a208-160b005ffc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185ac542-d4fe-494a-9555-17ebce811af7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023ed46b-3dd6-4885-b749-7e16601c7b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcdc931a-c143-4b91-8a8e-1e9b503f23ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb69e92a-2f59-4c03-9df5-4b9d5ed2ffa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876cdd52-1d33-412a-aaff-3020c23a2c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14241423-7bdb-4e0f-bc72-d72a557d1a13",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1397d85-b1b1-498c-b06d-ee0aa801fb48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ff063b-4651-4546-b700-f415dbd54e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338e5fd0-6e91-4c55-9732-9684ee3fd302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f2dfa7-32cb-4f90-806c-7765cb0c23b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d731e99f-753e-4238-ada7-d57f5c6f0af0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ced53c-4254-4d1b-a7e2-a23465e587fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674efeba-ab4c-45f7-9e5f-b0eaa0d937b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3c2c5a-a2bc-46ba-b61c-82b8546e0761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a60f87-6905-446f-a3e4-75f268bdc158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df863a2-70f0-4c96-b7fe-e8fd32453d9a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92dd7b87-134c-4d68-bef0-037662ba6e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d31aa80-4c7d-45b0-b2f4-eb6376fd5a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3b441a-a09f-4ded-adf5-330c9aaa0cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e9c1b2-7848-4ec1-83d2-241b70e252d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2167a9-5244-4501-8ff3-761a124fce3c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748e47f5-432b-40b0-8247-b5bef5db53d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8f9ec1-14b1-4b4f-9d01-96d800e4eb60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6526dd5-b3a9-4ba4-b1f0-4be0e4f3bffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68eeee80-e8ba-4f2f-a9c1-2b336554994e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd46e578-1ccd-4645-af62-469bda2f9d46",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987f1aeb-7044-47ef-bc75-e1dec273817f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27b10ae-d156-4446-ab56-02c92371de93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81d79cb-c96f-4f65-9f96-0e77838143a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20dff9c2-ceb4-476a-ba36-1ac8050d74eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ba6ef5-409e-4e09-a637-424e5feb831e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ae9605-9537-4f5a-abdb-2e3d38eaefea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188f318d-6388-4d7b-b953-f177d532acfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f43e469-abe2-44c0-9225-58fd6601d79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07269fa3-02d9-4578-a999-b9b744b4f617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d07892a-8f88-408e-b1d1-3792afb6889d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bdecf4-82fc-449c-9c65-3d28dc56f4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365301ba-7fdf-414c-8d7b-263dc2d43f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2979c65c-628c-433b-91c9-9321a48ac2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "012e70e2-e8e2-41ad-81f1-f3e8aae6d67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c183f306-2d4a-4db2-992b-888b5e8a8106",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a5eb7b-300e-48de-a431-8226ce0329df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7742c8c2-4a4c-428d-bda5-507cc9efc092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea51520-3aea-4db6-8b43-8829e909f758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9294e04-efb7-402b-83f4-9a9d91bc3a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539a7e3e-d4ff-4fcf-9f77-0300918204cd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3040c59e-636a-456c-b3b7-9d1c05af00a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4425e3c-0caa-43a6-a234-b2f946736696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "985b1b54-e245-455c-9d0c-d7edaf5032d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e20f6c-a246-4fd5-931d-191d90f47ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138497a3-0e10-4148-80a0-5fa6f00ee5fd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d978de84-0c13-4d97-9ffe-f2e268b6924e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8380338e-a117-4832-979b-63f734d758b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463800a8-9054-4668-8352-ed689ee70f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d419a562-108f-4fcb-a018-c629093dde48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c6d6dd-4e4b-483a-b235-2ea3a73612a9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3f4c65-d46a-4e1e-a26a-caaa718aa782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1db6909b-7b16-4bf0-8fe2-359465519b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9a4813-35d5-40b9-b0bb-73c1a24797bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f93f00e-ff09-4cfa-b7e8-5554ee0b093a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58532448-c72a-4a4b-89e6-c4d317636040",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56652dab-4147-446d-adb3-fa61b4f4776e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "156d7636-1e8a-4e84-8ef6-3052298ab6f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97ac356-6ea1-4d12-a17f-34b613bc6184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8764642-e121-4405-b924-8daf45bcef3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cf3491-0c17-4eb5-90c9-33fd50827691",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4f7f9a-daa3-455e-bfb9-548bb6419a2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e342bc6e-f3ab-4919-a6d5-f3580bfb3414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd48fba-b689-41c3-97f1-51fdaa87e897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ea9b58-e53c-4159-a2e1-efaabef3a103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090dc6af-5e93-4da3-8e30-a5f307b207a1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f15e680-053d-4f25-8a84-ca77ce70aac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0483ca08-2270-4f1f-8eef-a7c176d5b237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902e6c30-49f3-43ae-afc4-3747f7f30c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50231d9-c32a-4b6b-accf-ca9ad771fef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b58301b-669f-4809-a1e5-2e310052d476",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d776f24-8bc7-44bd-a2b5-f01af04278b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50cd320d-a245-4dbc-a958-44bc680b7e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b7b214-7113-488b-ad97-388af134f671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ab66da-57f8-4eca-b7bc-c4ec965cda70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cc1dee-c049-4d75-87fd-3913a6a9657b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fdbb86-9b22-4a9d-a11b-e2e28995b00b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d0f3697-8a5a-4ad9-ae29-216f28039cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc024fb-2b29-4062-9606-5437023b512a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e9a080-9367-4e68-81f4-806df466c785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a1829d-5a31-4eff-a21b-7910a0d34a57",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3eb1dc0-5ac8-430a-9ee3-b3733e31cb4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c999dcc-1640-4b21-86ff-26a56f1222e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b63513-8894-47e6-9e72-91f70049cb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ba742d-572a-40c6-8506-33984618cd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fecd866-1e6d-4709-8fe3-eb483e9b5b76",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cb2f6b-ee03-4514-bbbb-55c14e677d93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a50d69-b07f-4007-844e-5497464e0188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59f8155-d539-430d-874b-d8b38cae18bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5c10f2d-8fe2-4a74-960d-07ba039e4506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86798b5-ac7a-4e03-bcb9-1ef4cb929fbd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b09aa1b-e369-44fc-ae52-ca21ad0a8764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3969c47e-6f20-4a1d-aa77-b1715b9dd9ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8eca9b9-0218-420e-aceb-c1b668014d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0e5721-8c43-473f-8f9f-cc707948d959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4692ae4c-b7e8-4a84-94a4-be37fa36b9dd",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6b579d-1179-4fe1-a609-6bf9824778a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb742c8f-e28f-47f6-84fc-2f01e7df5ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9a881a-19b2-426b-b390-f652ea100b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99d759e-fe17-4ca2-93b9-9945d8d28f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8723d64b-1cfe-4aec-8df1-1c3ca04f5113",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd64d6f-63db-4b84-8dde-f44e9b50c703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f6a7ab6-c479-4a0e-8d57-b32e5bce9ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34efed03-9108-4ad9-9deb-9c22b7933255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de299029-83c9-4eed-b47d-11dd9eb634eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4058b54-a3cb-4073-8c51-041ade3b9558",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee25ef80-3283-41d1-9469-5391b7ccb856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a0cfae4-c515-41d9-9af7-cb4726510027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e767342a-4359-42ac-89ca-ff409341023f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fc5f78-d2a1-4f59-9604-74fb2d33cadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d7509e-945f-4d8c-acc9-e31c6a9ac84f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4176ec36-0447-46ee-a937-bf2b6f75f6b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eeabd10-122f-4f4c-a9ff-000c34bcd06c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c9013f-4388-475a-9ef2-46ba8dd514ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c823854-f343-4003-a9fe-e22c4e5e2af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1d10bc-c531-4b01-ab05-0e0f0c5c98e0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4415260d-2036-424e-a27f-0a0ea367c145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d84b2f9-5902-4252-81ef-eb464bafffcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e00569-54f4-49f9-a41d-6361a020f901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a709861d-6972-46ac-bcd3-f38b6238e0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ee996b-1606-4775-8b5e-7ba1c7097483",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60a3d29-ed6d-4ffd-8514-283bfc210c41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57e3f688-0616-4908-956e-7bf4ce49846c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e637698b-b5fa-46ca-b3e8-7529a6520fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724250d1-2cc0-478f-bf9f-99f5f65a60c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8528e1-9827-4174-b033-d27d29d19dbb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6699a22a-0711-4c2d-9bac-ef97651e0718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98b0e6eb-198b-45c4-bd3a-4fd8e197fb96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa073271-57b1-4a9f-8d1e-d82549b32250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7f7e81-b381-4df4-9ca6-372bde6e5fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ec2a8d-054e-4bf1-8dec-fe04f19bf063",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb21fa9-b2ca-4c67-a42c-bdbcb2e153ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64e41b06-e33a-4bd9-8990-8c120b2ff261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8301b1a8-a501-45f7-b117-43b0cdd33bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abed09f4-bc36-4d5a-bbf2-5c47b315a016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4d3ddf-76a7-4cff-aaed-d6cbc11125c5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a56cb8-d93d-4e08-82ba-d08fa8ed0257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7416dee-b262-4636-9164-aea6379e623e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cd8bad-f7fc-4059-a055-4b2155499ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd056f42-4910-45c1-a389-0ce918a95de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d1c5e4-9722-46e8-be47-47ecf2e0bfa7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914bcf8d-0adf-4c2e-b3d4-fa4d2442b988",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94f777da-bc72-48d9-a956-8f68983de892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa88f9a-42e8-4b47-9832-67a81c1ab068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f02a69-2b64-4dc1-9841-4534d744cd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02baccf-140c-4399-a287-ae553a61d0c0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683d4741-c477-4c15-b29a-bda3c858bd62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "220dda17-95a0-49d7-a5f2-eb9c96818965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973c9000-366e-4414-b979-84ae453d68b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87249aa-fb8f-4a9a-a3f2-534e379bfb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69295b7d-be12-4b1f-a11f-43379ff3b3a6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051bb60c-2c4c-4d0b-9107-d9458cf2d071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bdc20e5-4db8-4456-8f5b-ed461aade1b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfecd162-e2b3-4889-ae77-0b4746c0cdc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bbe345a-0d08-40fb-8380-b1413416b951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deeb5d13-7a49-4bbf-8cf6-001b4155b677",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e944cb-451f-462a-a667-dbeb75c0cbc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93aaf518-42d3-42b9-b564-f1fef3aafd2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc7a26d-b4a2-4185-a358-7098941e8b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf866f20-7376-4063-ad9d-564bb031e2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62191b6-bad6-4950-ad57-3e87bca2761b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a16bc24-c5a9-4345-9648-decfd2dd1c6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eff40dee-dc82-4e0f-b946-1a77e42ef76b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8020fb-6e7a-4387-b9cf-192d335a69b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a4d948-35ec-474b-aa22-01ec2c8766a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794f00c5-261a-4c0f-aa85-d5a4e5d64f71",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65b4b94-4129-4f0d-b063-1b862613cf51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18f0446-f356-4264-961e-ef4fcd17b66d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f200c9d5-06b2-4ca7-a7da-fba1dce31b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f326eb-365c-4f8b-b3db-63b3a9ce878f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605929cd-c06e-4171-badd-b35a20db4f7e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6c7864-bc4b-42e9-bdc2-2a75bc5af056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae6481a2-5659-46b4-b7d4-931f0e806476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7616ea57-34ff-4d19-8864-6f9c7afb6958",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8a7630-3d43-40d3-b792-57fdddf38563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1d7379-599a-437d-822c-1e339aa92abc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73338039-3d8d-415c-b3ac-8a167ffd3c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74e25d6c-caae-4a08-839a-8f4e683287af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "025e8558-761e-4162-884a-783976b2c359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d715cf-bb04-4a7d-8f5e-2321871ca4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16123c8a-b50c-45d2-9593-e32f7339ddd7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c545d3a8-b8f9-4f73-98b6-ad3e8cf42d8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aab146e9-441f-4391-8623-62c69aba3403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c872e08f-1397-4e43-9db0-6cb98daf995b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acf9c8b-bd86-46f0-8aa7-d7c5cbb4c21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c779a382-34e8-47c0-9d41-0716dcae2f15",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc0cab0-f352-4a13-8424-6e95b963a2f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63263695-d83e-4318-bf6c-17988d2002a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cde797d-d562-437f-9732-63757c412b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfea309-8a4f-42a3-8c37-aa40d501cefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9bd6ca-0a41-4e63-875f-9724268dcc7b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c80066a-5f8f-4e11-ba67-8c702e0f2bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eebb79f8-da5b-4a73-b28d-4ed121bdefc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de909453-4329-4fd5-ba1a-89a1a7661e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab7b1a1-4e41-481f-b1f8-95f251f2b203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd44fefa-186e-4352-ac2a-904f6be30f66",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f7a2b9-9383-4940-b38b-12f02d6c3f0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f08e5f3-039b-40f8-a2c1-b6948a36913e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6705a39-3609-4858-afd8-9dcfd17eec85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59ec3ad-bc99-402a-b3ef-2fe5f838fd06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc6a2a0-44fc-417e-8bb4-cfea7182168a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca82274-be3f-4ee0-b998-3bbe58238758",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f25c09a0-a6c6-4540-aec1-91e47c3b7d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9809de4d-f733-4292-bf83-b48c4ca4e2a2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a338eef2-2c01-44f5-aaad-315e567fe49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cdccc1-5350-4d57-928b-2a53795ba643",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6df047-bddd-4053-8ecd-7f05887c9e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "459fc48d-ba6c-4f88-865f-4f136bfa22d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e295467-37fe-4bd7-87eb-edb086fef3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0315fb-dd94-4405-9646-bff25f42f0db"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5ebebe7-82b7-4bbd-a618-ca6f0226b5c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c6a5a4e-ed03-446c-85ae-00e140faa1d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d32c808a-89f6-43c2-a7eb-f8386a72b846",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fdc2b90c-3d45-4605-8ead-f2572ea39664"
                    }
                  }
                ]
              },
              {
                "id": "ef6c7049-ffcd-4dd8-add9-fab38b32a30c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20178f4f-e04f-416e-a34f-ad060f8a4b3a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff41178-ce82-45ac-8f21-917c3f0dc5fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "68af2f8e-2a02-44e5-a096-b489d5abd36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ff402c-28d4-4cd4-8dea-a1bdf46ebf28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69af42eb-f581-480d-bb2b-3f7372242f59"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "288212fc-767c-43f4-b42e-9cbbfcbc6d19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c867f13d-05b1-48bf-a2fe-94de28b52676"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15dbdbc4-f35c-4390-8b21-d84e6fa62780",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9692bb6e-2dde-4851-bcd9-b860fb9fadcc"
                    }
                  }
                ]
              },
              {
                "id": "0ee3ff1a-ba89-451d-af61-0aa139bfed99",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b62cccd2-5950-498e-8393-7147af3df9e6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370a93ef-0408-45da-86f9-c25a8934e9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "245eb84e-ece8-480d-bf19-bf9ea85fb481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6255da-6b14-4a71-89b9-6539c48435a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65a9833-47c4-4009-997c-ebbf52ad40ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6f222312-209a-4010-b35d-fcf8839b52f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b9b9401b-f1a2-4ada-b27d-644012753dc8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0aafdbc-0130-400b-9b11-49ea653d4f38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dbd1a257-57f4-42e4-a372-50f19f942909"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "698d323b-3885-451a-86e5-8e758e042ae9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef14fe36-aa62-400e-957a-01070615587e"
                    }
                  }
                ]
              },
              {
                "id": "3366b6cb-092f-4a95-ae14-ce2d282ee06c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d492ee4-547c-466b-b5e2-64699d40a37b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6c03091e-9950-4fdc-9bb8-82b91ae79b84"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68871293-3d74-405e-866f-c9faac878c99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d02d0c3-2cc4-4ab2-b922-49aa42abab68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15c9f49f-da9a-4e4d-9b83-129b7f2a91da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e90be65c-2f49-4812-9970-eb7244d2ba00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c82c9fa-aa06-46d2-bbd0-813d5cc7f70d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "121996a7-8d9a-4e67-b829-984b14a9b993"
            }
          }
        ]
      },
      {
        "id": "69ae8645-1a31-4d40-a8fa-af3da684d9f3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "872c3cfd-ec76-44e8-b166-4b413897d854",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd3549d5-0528-467a-8707-57dc80f05fdf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c03cd9e-20e9-4afc-9f21-d2b611b60253",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ebaae7-7af5-4ba4-b868-779a45f9c20a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5c5d98bd-35b5-4b97-b3a9-9a323456b638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31422354-dbbc-47c7-bc43-19dac03fda02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01aebf00-ffbf-480a-9113-fb85b16d9d92"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f417d1ee-9492-4678-abe9-2cf564ee9bd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cda616bf-3059-4c0f-b048-0688aef1f0c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c43ee43d-8495-424d-b433-89607744fd1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1108e9dc-3f0c-412e-bd7e-75d8ba462b13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03414fe3-b908-445e-b0e0-fb1e9589d063",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7d7c01fb-0c63-4f26-a2d5-44323ca21a20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ff54b87-10c1-4ad1-807a-cb5a0b4d6047",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5bc2b33f-f713-4487-8dd3-63495a2809c5"
            }
          }
        ]
      },
      {
        "id": "b3e5b2f8-a605-4af0-869d-a0910d9c040c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5642cb99-941d-4fb2-ad71-3f1d646703e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af7ec531-1cf2-405d-b124-e688a82dbb05",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00531224-c99d-4e14-b684-72c3273034b3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884c37e2-6cd3-404d-acff-26365a36e615",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e18a4d76-71bf-41d7-9357-24c8220c4daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a56e605-e593-4daa-9f69-11106b5d45dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e97f9c10-6c70-407d-9e16-ec82bb22d4f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95afe5f1-86c2-42b6-9df7-c10bb58ab709",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b6c19e4-22c2-4ec2-ac07-420f4418f022"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7651b7f-2b18-41be-886f-358daa0799ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e776a32-c884-4f4b-9f72-b103e90bdd93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4857c60-9a3a-4a4b-8cc2-08fa348042df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3a66ec24-6a18-4afb-83e3-e968f9786d3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb736991-77cb-4702-8411-ebd3f79afe9d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56c46f21-7b0a-45d7-8c6f-cd5129f33cfc"
            }
          }
        ]
      },
      {
        "id": "72757860-360e-463e-8a26-8f8cb251595a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ee65ca85-4b6b-4a1b-b167-81b22431f604",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc58f82b-b5e9-4564-bb62-d419cdb22a87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf7d8b84-0f26-4005-8461-ce6af36794b5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff8e689-14f9-4894-b034-f0943a67eeef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "902ec3f5-e434-42fd-9b16-1367ee074518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3727df7a-2e54-4322-857c-b168e86fe813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "616264d3-e2f4-4e91-b8c6-7d06990215b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d924f0e-c250-4709-8bc5-64b4942acb91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63500a45-f17d-4cf6-80c1-8430f327726f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "006439ac-f22e-4eeb-adbc-cd7aa990ae5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31cd4793-8cc8-4052-b9be-9e4ed705b8d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01417e73-e7d2-4004-b519-c64ec0c22efb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d6bc27d3-49b5-4514-aa29-6a86b5c6059d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c463b099-5152-4113-8d97-d4b7c134b278",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "acbbe306-99e1-496c-9cdd-9e34723216e0"
            }
          }
        ]
      },
      {
        "id": "8a0628ff-ee47-42d1-a1c1-95a322767e59",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df6cdf58-9bb5-44a8-822f-17baf21209d0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7487ae1-de56-41b7-9e47-647f53b902f6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "53c51671-75bb-4ac5-8145-cf683b19c7aa",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8223119b-a654-4821-b009-cead6e16df25",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee53449b-fef0-4eb6-bf00-4ed63af1ce86",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 11.975352112676056,
      "responseMin": 6,
      "responseMax": 246,
      "responseSd": 16.860950329171157,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689468823238,
      "completed": 1689468838092
    },
    "executions": [
      {
        "id": "10799519-2128-4d68-91a6-1bde780b36d7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "865e4eeb-c6b5-4659-9bd7-e1c00348b31e",
          "httpRequestId": "c5445c84-df0a-41f9-ac6c-7a8f335070b5"
        },
        "item": {
          "id": "10799519-2128-4d68-91a6-1bde780b36d7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ff042dbe-638c-4986-81b6-3669c4f7905b",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "c0e4c29d-27ab-498c-854d-2f73e3918b4c",
        "cursor": {
          "ref": "f219869c-b525-45ae-9686-d0d64c0d70db",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b67db9ac-d4e0-469d-b79e-890998877fe8"
        },
        "item": {
          "id": "c0e4c29d-27ab-498c-854d-2f73e3918b4c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7e9c610e-5222-47f7-a6d6-d4a82c62bde7",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "306d701c-8573-45a8-a159-b73ffc600e2f",
        "cursor": {
          "ref": "f22162ed-9d39-487b-b130-d35f4ce8c7ab",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "80d36a86-3885-419f-b3cc-2b85734522d5"
        },
        "item": {
          "id": "306d701c-8573-45a8-a159-b73ffc600e2f",
          "name": "did_json"
        },
        "response": {
          "id": "acdb94aa-0573-495f-905f-659ce62e1761",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4915bb6a-b233-4726-87ab-40ce9d34bdb8",
        "cursor": {
          "ref": "5d453ee6-afd0-4ffc-8167-cbaa76956fce",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c6832819-c709-4a58-8c8b-12664cc590e3"
        },
        "item": {
          "id": "4915bb6a-b233-4726-87ab-40ce9d34bdb8",
          "name": "did:invalid"
        },
        "response": {
          "id": "230ddf64-aa5f-45ff-93ab-f37bf12c8c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4915bb6a-b233-4726-87ab-40ce9d34bdb8",
        "cursor": {
          "ref": "5d453ee6-afd0-4ffc-8167-cbaa76956fce",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c6832819-c709-4a58-8c8b-12664cc590e3"
        },
        "item": {
          "id": "4915bb6a-b233-4726-87ab-40ce9d34bdb8",
          "name": "did:invalid"
        },
        "response": {
          "id": "230ddf64-aa5f-45ff-93ab-f37bf12c8c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad5e583-76a2-4f86-85ee-a077a58831a5",
        "cursor": {
          "ref": "fe79f45e-e4f5-4cf7-8c37-cb2e6918331d",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f8615421-0627-4d89-9989-792ee47ff2c8"
        },
        "item": {
          "id": "fad5e583-76a2-4f86-85ee-a077a58831a5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1b04e82f-444c-405b-8037-5aa3e4d11de1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 97,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f56afb4-6e4f-4e30-8d9c-0687b5c18b39",
        "cursor": {
          "ref": "af36034d-090e-4518-860c-10717b358b8e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5278b0d5-e8ce-4764-9e4b-7046cee76103"
        },
        "item": {
          "id": "9f56afb4-6e4f-4e30-8d9c-0687b5c18b39",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f2429be0-a64e-4c3e-aa8c-69c6ccd168f1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af48cc08-a195-4bb5-a327-b19370f6c2d0",
        "cursor": {
          "ref": "ef168fdb-a842-4a65-b4cb-bbb0e6fe4174",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d2917a4f-3f5a-48ca-a514-e39d9c68e130"
        },
        "item": {
          "id": "af48cc08-a195-4bb5-a327-b19370f6c2d0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "15745320-51ef-47ca-bdf1-e7efa0b71cf8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be310183-b699-4344-b724-a2d8cecb4875",
        "cursor": {
          "ref": "41565342-46ff-4c0c-865c-7a19686da6b2",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e449e339-9923-4a0b-944f-cf2e337b9855"
        },
        "item": {
          "id": "be310183-b699-4344-b724-a2d8cecb4875",
          "name": "identifiers"
        },
        "response": {
          "id": "274ac482-7fe1-4975-8dd2-2a72a7392e45",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a32a43-4fda-4643-89de-85f01be29cbc",
        "cursor": {
          "ref": "15da173e-1ed2-48b2-9176-c40751103a32",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8336f4a2-de51-4644-b388-cdd45cce2808"
        },
        "item": {
          "id": "48a32a43-4fda-4643-89de-85f01be29cbc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "59d0abee-034f-4c29-9d88-effb2a1fc07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2958d1de-090b-4566-a95e-f66067f589e3",
        "cursor": {
          "ref": "fe434e70-0199-4378-adf4-94f6a083fd69",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b41352b7-a239-4cbf-90fc-d4b0b17bd0e8"
        },
        "item": {
          "id": "2958d1de-090b-4566-a95e-f66067f589e3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4b9e05e2-328f-4e9c-8e6a-0f1a4e29a40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1e5264-80b4-4d52-9b48-e2df1d2e04d7",
        "cursor": {
          "ref": "f5c1dd45-1c89-47bc-bef1-7502ff0e6b57",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1cc190d1-0ea8-4709-80be-3e3ea27d5bc7"
        },
        "item": {
          "id": "6b1e5264-80b4-4d52-9b48-e2df1d2e04d7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9091e212-c9c6-4761-b5e3-3ef9d98b1177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90f3ab8-8e99-40c2-8c1a-423e9b0d683a",
        "cursor": {
          "ref": "fd771136-8ece-4cbf-b237-1298ddb06cf5",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b29e8051-0dc4-4bcf-afa4-cab38efa56b0"
        },
        "item": {
          "id": "a90f3ab8-8e99-40c2-8c1a-423e9b0d683a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9fda0af2-6664-41cd-b3dc-cb90c0ac862f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd1a90d-cd41-4686-8c79-b628c2a64b18",
        "cursor": {
          "ref": "7bb2a1a3-046f-4543-ac2d-f73566a19a8c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b3651f31-ba78-4620-a7ce-5a5c6cf263b7"
        },
        "item": {
          "id": "cbd1a90d-cd41-4686-8c79-b628c2a64b18",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ee58ee48-cad0-4062-8bfb-fec8a2b46a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ed77b0-9ca5-4acb-a213-5527bbe60601",
        "cursor": {
          "ref": "c9c9e121-a252-4131-b829-177d53acfb28",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bbd7c885-d78e-4694-b988-e9b1ded407a4"
        },
        "item": {
          "id": "87ed77b0-9ca5-4acb-a213-5527bbe60601",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "639f3985-b13a-411d-9f82-ef292dcc7b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0dbe72-fc29-49cc-97a2-c14055746514",
        "cursor": {
          "ref": "25000c48-4a14-4797-a6ee-f28a04681a08",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c554aa52-d7f5-4bad-8bb2-10c81ca8f54d"
        },
        "item": {
          "id": "af0dbe72-fc29-49cc-97a2-c14055746514",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2a9e92ef-b7a0-43ba-9bd4-a092a5004fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dde7e3-8b88-4f3d-a325-924a53556cb1",
        "cursor": {
          "ref": "211a6924-933b-4eed-933e-fe1ee5b41733",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2505311a-433c-466b-8a92-7caca065b8b9"
        },
        "item": {
          "id": "c5dde7e3-8b88-4f3d-a325-924a53556cb1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bb9a7bb3-89fe-4552-8c29-aab89663285a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6261cac7-e070-445c-b7d4-f2c3719ade23",
        "cursor": {
          "ref": "5aaaf408-1fd1-46d6-a754-039deb08be9e",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1cd358ed-6b7b-45f9-963b-3bf27042fa7f"
        },
        "item": {
          "id": "6261cac7-e070-445c-b7d4-f2c3719ade23",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6bbdcd68-2590-42ce-a09f-5e201f659e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c1391c-2323-4851-89e1-6087595f03db",
        "cursor": {
          "ref": "198cd824-80c2-4c98-94e8-77ea640f99a4",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "67a55ed5-0ff2-4a3b-bc12-30f4fd0f1a28"
        },
        "item": {
          "id": "f5c1391c-2323-4851-89e1-6087595f03db",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6c3626da-6556-46d0-af90-aea39b40c791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4882dd7a-0edf-47a8-bc14-ed71b3ef1524",
        "cursor": {
          "ref": "a6fa1b1a-106f-43b5-b11b-c4435169ad5b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fc25a49e-1290-412a-a9a7-e0183a0575f8"
        },
        "item": {
          "id": "4882dd7a-0edf-47a8-bc14-ed71b3ef1524",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fb6f7d07-a221-4e0d-bfe7-36de12d4895f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5832e970-96c0-455c-8085-34e96ca1af76",
        "cursor": {
          "ref": "e3b0923f-a58b-423b-87a2-8048c4790d01",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f61e3ae9-0ce8-4cf0-8999-fb306e137607"
        },
        "item": {
          "id": "5832e970-96c0-455c-8085-34e96ca1af76",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c6a5f337-aa6d-45d1-9031-d5d7c40411be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550e7d86-07d3-4475-b0aa-070229fb5b53",
        "cursor": {
          "ref": "db8b9e8a-0125-4849-84d6-a1312cbe4b57",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9c548acf-fac7-4771-99ba-98c0a4a9abf0"
        },
        "item": {
          "id": "550e7d86-07d3-4475-b0aa-070229fb5b53",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b9c34314-14fe-468a-9bd9-6c82553ca2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71cc509-8f2e-46fb-9c35-54ea4c6e8d1b",
        "cursor": {
          "ref": "ed8a9388-6e41-4f36-8611-fe39f28fb1eb",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1b251a77-d131-410d-9b40-c0d6875bf856"
        },
        "item": {
          "id": "a71cc509-8f2e-46fb-9c35-54ea4c6e8d1b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "365c16bd-7e7d-4cc7-b651-869edf3d34ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b96297c-a91a-43b0-b764-e016c68b8039",
        "cursor": {
          "ref": "480a6bfc-bd5a-4121-a00d-b6346a2f493f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5ac86ba2-57c5-4659-88f5-273a9da60a51"
        },
        "item": {
          "id": "2b96297c-a91a-43b0-b764-e016c68b8039",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "501e4ec2-79d4-4dff-afbf-5b4073f370c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7aad82-3206-4ce3-b608-1d939c9bd93d",
        "cursor": {
          "ref": "e8df2648-ae53-414a-bb15-3b4f2138cb05",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fc473204-daca-4a74-bef1-19fa14a41b3d"
        },
        "item": {
          "id": "ae7aad82-3206-4ce3-b608-1d939c9bd93d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e2ae054f-a5a4-4f89-9864-3aca81b20d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9d9b69-5cf4-4bfc-8083-f8de5536fac1",
        "cursor": {
          "ref": "f7360a8d-6f06-4413-b6c2-7ef7404df362",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "22f47c83-b2f7-4c09-a18f-22926ea4ed90"
        },
        "item": {
          "id": "3d9d9b69-5cf4-4bfc-8083-f8de5536fac1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ed65687d-7531-4c9c-906d-0c872c1b58a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60e17e9-c72e-4d20-8919-8618109ee7e3",
        "cursor": {
          "ref": "6246e293-b797-4944-b7bc-a183c90602bf",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "df2f068c-a5c8-490c-b762-21650f427029"
        },
        "item": {
          "id": "b60e17e9-c72e-4d20-8919-8618109ee7e3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e2dcb359-9006-4a36-926f-6bad71ebfb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e8631b-93cf-42b4-aa6e-36a8a2be45bf",
        "cursor": {
          "ref": "638e331c-f1a5-4e47-8042-eea5ebf6d4e6",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a16d34b9-10e9-4d5f-bbd7-4409eb8137fa"
        },
        "item": {
          "id": "b4e8631b-93cf-42b4-aa6e-36a8a2be45bf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "20016edf-7776-49e4-b49a-593dc7343abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d5299e-1d33-4378-a4cd-7502fa17003f",
        "cursor": {
          "ref": "5e627408-ae08-4f91-b305-0711db4acac0",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e8951da7-c2dc-4460-b620-214b3d918f24"
        },
        "item": {
          "id": "a4d5299e-1d33-4378-a4cd-7502fa17003f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b41f7ece-3e61-49cc-804a-74d9627f9b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb17f31-b310-403a-af4c-5c392b3ab34b",
        "cursor": {
          "ref": "ba5453d4-f19c-4ad8-831e-4ab1605edb2c",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f9bfbe1e-b303-44b9-a754-d8514a635582"
        },
        "item": {
          "id": "9eb17f31-b310-403a-af4c-5c392b3ab34b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3dbd2043-899c-45c3-b0cf-caf01d63f642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89445447-2519-457e-b6d1-f04d3e0de40f",
        "cursor": {
          "ref": "105f5201-2378-472d-b297-5952ba53849e",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "38359710-bc62-485b-af37-6d658fc53b9f"
        },
        "item": {
          "id": "89445447-2519-457e-b6d1-f04d3e0de40f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "883c9a99-4575-487b-9666-b2bebdaf73f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711975ed-1dfc-4a50-8eb6-d0d5106fc425",
        "cursor": {
          "ref": "68098513-da3a-4d71-9cb8-1d0aaec49a0d",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b7b9eb59-627d-4298-b9c2-e981b0b5350e"
        },
        "item": {
          "id": "711975ed-1dfc-4a50-8eb6-d0d5106fc425",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1ec6738a-9273-4343-a0f4-96ef68ce0516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a6d76c-4977-4ded-b7a4-62d63f6ee119",
        "cursor": {
          "ref": "da981b0f-9b01-43cb-b90d-af39fa15a65b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "79baca9f-0325-4434-aaac-5de15a2c9302"
        },
        "item": {
          "id": "77a6d76c-4977-4ded-b7a4-62d63f6ee119",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f8eb0309-b24f-48f6-8d3f-dcbff1c569ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c92f674-5afc-4276-b59e-b7b96d922733",
        "cursor": {
          "ref": "07f56496-97d3-4546-a5a3-21bd3538a429",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2699f775-9a0b-4a58-94cf-11a7a949e8bb"
        },
        "item": {
          "id": "7c92f674-5afc-4276-b59e-b7b96d922733",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "25608352-5da3-4cb1-8df6-31c8d14acba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666b6295-6774-4855-8f08-6f6bba71bcd4",
        "cursor": {
          "ref": "5f02fc9b-9b00-4445-8abf-25339535033f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d3edbd2e-78c4-4370-83ce-bb157a94b532"
        },
        "item": {
          "id": "666b6295-6774-4855-8f08-6f6bba71bcd4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "aa15de21-22dd-49a0-bc7b-c5516cef115e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d549807-f489-453e-a1b8-bb294ac0aaad",
        "cursor": {
          "ref": "f6e3c0a9-de4d-47ab-bf96-003c5ac9453d",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6547635c-ff0e-4ff9-9af1-3530e44de485"
        },
        "item": {
          "id": "9d549807-f489-453e-a1b8-bb294ac0aaad",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1bf26eb3-7103-407a-aee7-2ada8c19ab1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab239e66-2f69-4cc4-aca5-8c2a02536ffb",
        "cursor": {
          "ref": "3506a561-4deb-467c-88ee-27631e1f8125",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d6c12e1b-78f6-4bb8-a293-e2c0ff4ef903"
        },
        "item": {
          "id": "ab239e66-2f69-4cc4-aca5-8c2a02536ffb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ba848255-0af6-491a-af37-afd4d00281d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70133646-20e1-491d-a454-2e2cd725eecd",
        "cursor": {
          "ref": "473778d8-86f1-4357-a6a4-96813c7b227a",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "36c764a7-c180-4551-8747-feece63e0300"
        },
        "item": {
          "id": "70133646-20e1-491d-a454-2e2cd725eecd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "17764ba6-2e05-4266-8eaf-a5ba5a990c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6821ff04-bfbb-4b29-b8a1-b607aeb849b0",
        "cursor": {
          "ref": "06cb3763-6285-40d3-89ad-1984ac3cdd3a",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "690f2c4b-8486-4084-8a72-f317e0a8019e"
        },
        "item": {
          "id": "6821ff04-bfbb-4b29-b8a1-b607aeb849b0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7dbdee6e-cc36-4474-805b-e8da17ea5312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b163bf8-daed-4d2c-be77-69ca0e12833c",
        "cursor": {
          "ref": "2fcc558a-f6f1-4def-919c-1f09371fa3c2",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "44c4cf94-cde2-4269-a286-8bd49cab6fae"
        },
        "item": {
          "id": "6b163bf8-daed-4d2c-be77-69ca0e12833c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "752f569d-16ec-407f-8779-814c05841113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fbf6d3-3b03-49b5-bc21-922d8d96a9a9",
        "cursor": {
          "ref": "2fdf6695-4671-4c70-9103-69030847480a",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1f7c2baa-9f32-4ac9-a0f4-8a777ae3cb17"
        },
        "item": {
          "id": "33fbf6d3-3b03-49b5-bc21-922d8d96a9a9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0c457ff3-ee9f-436d-89cf-680d47da33a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3180c6-7555-459b-96ab-d2c0e0dd1d5f",
        "cursor": {
          "ref": "ddd49fb2-d476-4542-a2b3-2781430985a0",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9bca8a51-fa3a-407c-838b-0b7c1fccf99d"
        },
        "item": {
          "id": "3c3180c6-7555-459b-96ab-d2c0e0dd1d5f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "32e504aa-7015-4ae0-ac2c-80234b193eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6186b2d-3574-447f-b3c9-1b0900a19db4",
        "cursor": {
          "ref": "8d78e365-9387-463c-a068-a51ea450bd82",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5998fe2c-f424-4c5b-bbc7-15fa0634912e"
        },
        "item": {
          "id": "f6186b2d-3574-447f-b3c9-1b0900a19db4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "69b61026-29cb-4b7d-b7c2-66fa8cfa9694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ba099a-0112-4dfd-a829-423bbee62028",
        "cursor": {
          "ref": "f6ec101f-ae33-41ee-8c01-06b21bb14267",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b546e8a5-2590-4174-93cd-f7ecbd15ff63"
        },
        "item": {
          "id": "f3ba099a-0112-4dfd-a829-423bbee62028",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "33baee61-0aba-4879-8f47-72c56835b83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da096cbe-8ea2-4cec-8d96-305899d17671",
        "cursor": {
          "ref": "4407a387-3726-4546-9502-dcc794157670",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fc4c1719-041a-40f4-b35d-e91f2670250e"
        },
        "item": {
          "id": "da096cbe-8ea2-4cec-8d96-305899d17671",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5337c9e1-9b7a-44ec-b2bc-6b1f7c6b8d20",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 17,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f658b5-21bd-4604-9987-94a111a88139",
        "cursor": {
          "ref": "8257b447-0ad6-4950-aa3e-c5d1d93e3cd6",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "869c52d8-04b8-4ee0-b84e-ca10abdd7b25"
        },
        "item": {
          "id": "57f658b5-21bd-4604-9987-94a111a88139",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ab2e5d09-d4f6-4620-bb0f-5e26a41f0074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cf0848-4e4d-4723-a81f-6318d16235fa",
        "cursor": {
          "ref": "bca3f2d8-b59c-483b-a11d-07e1c0f3651e",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bf84692b-6477-4f56-9bb5-1d34a8859732"
        },
        "item": {
          "id": "11cf0848-4e4d-4723-a81f-6318d16235fa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "90d7f634-65d7-4a12-9d4f-f70b041c2360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0ffc69-fb72-4691-8d9a-8d260f88ec6c",
        "cursor": {
          "ref": "83aa0635-a59c-4234-8319-b53dbf652e65",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1de0f2b5-d300-4972-8943-0a7c34e76b0f"
        },
        "item": {
          "id": "3b0ffc69-fb72-4691-8d9a-8d260f88ec6c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a8447817-47ee-4704-9f92-85323b12f743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e34c95-b2da-426d-801a-e0e12b31555e",
        "cursor": {
          "ref": "aa43cf96-fa39-4f52-9f12-11aed6bd2c09",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fe3013b7-4e9e-4ab1-9717-7cbc1aa41b4a"
        },
        "item": {
          "id": "40e34c95-b2da-426d-801a-e0e12b31555e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "62d4aa7d-ba72-4657-965d-6d744777021a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cfc878-8b5f-4a6d-8614-488afe47655e",
        "cursor": {
          "ref": "1ce92b3f-aa11-4c53-a250-2401bf70e869",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "394c0a35-023d-48a5-9d17-f38ff4d590a1"
        },
        "item": {
          "id": "c1cfc878-8b5f-4a6d-8614-488afe47655e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1f5dd17a-4082-4d92-83d0-30e783d41a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3caca874-74ad-4242-9e88-14801063de6a",
        "cursor": {
          "ref": "a491253a-b7ef-4b65-ab82-a57874995a64",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e9e8aa8a-208b-4991-ab38-6b734b9c9f66"
        },
        "item": {
          "id": "3caca874-74ad-4242-9e88-14801063de6a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c5d8ca1a-0ad8-40d3-af03-acba264582e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af59f62b-7ed8-47db-957c-cfc1e46d2276",
        "cursor": {
          "ref": "5bd7b2be-10c5-477a-8dce-47c716fa6809",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "da0083af-9fa4-429e-a7f7-aa1875d1d619"
        },
        "item": {
          "id": "af59f62b-7ed8-47db-957c-cfc1e46d2276",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2d7dd3b6-1876-4814-b921-f7af990688b1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5180702-c0b4-4537-8804-96b64a3d777f",
        "cursor": {
          "ref": "e0865625-93a0-485c-b3bb-0097980ffcf2",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b455c3b3-8d78-4b53-9113-e26a1707fce0"
        },
        "item": {
          "id": "f5180702-c0b4-4537-8804-96b64a3d777f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4b8d1f76-082f-4fb6-80f9-dc388048a2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0611131a-89d7-483f-9e47-f6625a57a310",
        "cursor": {
          "ref": "c7347e53-928d-4565-86b1-30dcceac5b9b",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c8bce8b4-0194-444a-baca-fa69e3774758"
        },
        "item": {
          "id": "0611131a-89d7-483f-9e47-f6625a57a310",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c60d2b8b-50bd-4e41-a6da-f418ab904ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354185c0-1e9e-4926-b459-24281350555d",
        "cursor": {
          "ref": "c59f2d6f-ecc4-4d69-b082-d4522f77a2d5",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3ab8e92f-5ef0-4d9b-b227-c2c1f2cef9dc"
        },
        "item": {
          "id": "354185c0-1e9e-4926-b459-24281350555d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e79afa32-00ae-4c9a-9027-b0a1979aa52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a5bc32-8c69-4419-8fc8-63d786219679",
        "cursor": {
          "ref": "aaf1b90c-6b90-4cb6-aff6-9735cb598e62",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f47a6581-be00-4a63-85ae-02fee5d4024a"
        },
        "item": {
          "id": "f7a5bc32-8c69-4419-8fc8-63d786219679",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "10226cb7-fcea-44ac-8c87-55e0da6bfda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668b2494-21df-4d84-822a-321776ea0005",
        "cursor": {
          "ref": "88afa5a2-0088-485e-82a5-4d684cd303fb",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9b666ca0-fad7-41a5-88b5-267a2facd9c0"
        },
        "item": {
          "id": "668b2494-21df-4d84-822a-321776ea0005",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a9df51cb-05e3-4ef3-b71d-bc66da225b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8d06bb-312f-4b25-b4af-8251362f6d82",
        "cursor": {
          "ref": "f0866779-be77-41eb-aec2-176bea80e8ea",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0a697a0d-052b-4485-9020-d3e450639484"
        },
        "item": {
          "id": "1c8d06bb-312f-4b25-b4af-8251362f6d82",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a087d196-4084-4cfc-b09a-430c5817d689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca10d40-2a39-42b5-a499-60f8f93695f4",
        "cursor": {
          "ref": "6030fb55-45a3-413e-88f9-45a4f01eeb3a",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "308b8abd-159c-4ee8-aa12-567dfccbc8f8"
        },
        "item": {
          "id": "7ca10d40-2a39-42b5-a499-60f8f93695f4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b620b23d-707d-46df-b785-700cc6352ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82872a4f-08a2-4c58-b98b-09c26119d366",
        "cursor": {
          "ref": "d8be6df8-3008-4d8e-be53-f47a716e3d4c",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "be2fbc83-0e53-4fb7-9355-aa86edfb71ce"
        },
        "item": {
          "id": "82872a4f-08a2-4c58-b98b-09c26119d366",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1d216c38-461d-48ca-acb3-8239c068fa1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6f84ff-6d6f-482f-86ba-11ab7649233b",
        "cursor": {
          "ref": "1a95cab1-abdc-4e79-a8eb-b1ee9ccd4737",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cc58f028-e3c9-4c1f-b3ad-49259fb197f5"
        },
        "item": {
          "id": "5d6f84ff-6d6f-482f-86ba-11ab7649233b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "08395f46-1743-472f-acb0-f34d7ba1f021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3129af3b-30d1-495d-8a58-89ef2c0f66e6",
        "cursor": {
          "ref": "9b648ba3-3f5c-48b8-9513-cd58e9779405",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d23867a1-258a-40f2-b6ae-690c63912242"
        },
        "item": {
          "id": "3129af3b-30d1-495d-8a58-89ef2c0f66e6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e263c5ab-6b6e-478a-a8f7-ac521454304d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5abd15f-3e2f-46cd-8372-147f83126b5f",
        "cursor": {
          "ref": "63c12214-0b86-49bc-bf45-f27d3e46c545",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7fa0cf99-ac50-4a1f-9f16-b4bb5ee61b61"
        },
        "item": {
          "id": "b5abd15f-3e2f-46cd-8372-147f83126b5f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "935c852b-bc94-49f2-8913-7a28a3df1469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a9cf5c-da26-494c-84ab-33b0737808c2",
        "cursor": {
          "ref": "d4d37ada-9b49-4431-b2e6-6bd44ecb9c64",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fb8e94fd-4bb2-4745-8ceb-015ce36b5afa"
        },
        "item": {
          "id": "36a9cf5c-da26-494c-84ab-33b0737808c2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0f8c77af-28c0-4d3f-9c92-4ea994899eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513f5bd3-0fdb-4f34-890c-af3e2a460e40",
        "cursor": {
          "ref": "a7a9ef35-2a80-4fce-90b5-0325a82bffa5",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b8b02b3b-c444-4e5f-afb7-910964ca90ca"
        },
        "item": {
          "id": "513f5bd3-0fdb-4f34-890c-af3e2a460e40",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a1a457aa-d856-4285-b9d1-0e9be1c614ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51776cb1-1704-4d8e-89bb-44d0460fcf67",
        "cursor": {
          "ref": "c0de5002-fe88-42a9-b2e4-4b1c4fb1690f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fa4a045d-253e-4504-a242-875ed8aa8018"
        },
        "item": {
          "id": "51776cb1-1704-4d8e-89bb-44d0460fcf67",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "58e493de-2857-4a96-920d-ac9a4fc52512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f135a01-e5f6-40aa-8c83-17a3aa877012",
        "cursor": {
          "ref": "d4a53490-ab4f-45a7-a46d-13c03d4e1d57",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f13f8735-0e3f-40ff-a015-83872af98d65"
        },
        "item": {
          "id": "2f135a01-e5f6-40aa-8c83-17a3aa877012",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5abfebf0-c6fe-4a75-867e-87b59bddb93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9eced86-6ef2-4672-9b94-571bdc7777bc",
        "cursor": {
          "ref": "69dcab22-8c91-4d1a-a91e-d044301ec344",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fe530bab-b125-45e6-882e-469b755d33a0"
        },
        "item": {
          "id": "f9eced86-6ef2-4672-9b94-571bdc7777bc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "20b17384-3095-49ca-83dc-9d2151e90253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af16841-ed3f-4606-ba0f-df37c5b08573",
        "cursor": {
          "ref": "a6c613f7-0254-4d4f-a6cd-7ed44b099445",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c4b8cb81-ba85-48f0-809d-3c7c5392bcc3"
        },
        "item": {
          "id": "6af16841-ed3f-4606-ba0f-df37c5b08573",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7fc38ac7-0d60-4909-a95e-8b5e3dec32b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c4cb87-6704-4464-bfea-acb1bac6e248",
        "cursor": {
          "ref": "426c66e3-ea51-4d33-a53b-e709fac190b5",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "feb25837-115e-41fc-9974-9595f6bbdc6b"
        },
        "item": {
          "id": "76c4cb87-6704-4464-bfea-acb1bac6e248",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8fc001e9-3dbb-4964-8e32-9973b6d1c32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13adbe28-d87a-48eb-aa91-dd576befabf7",
        "cursor": {
          "ref": "46e9fa0c-e22a-4e78-84f0-0fc627287145",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "106fc48a-e1d2-434f-9045-5d38aa5d1c55"
        },
        "item": {
          "id": "13adbe28-d87a-48eb-aa91-dd576befabf7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "da1c3086-f98a-4439-aec6-86fcc3170e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdce21d-efaa-48c3-888c-231452c37bc5",
        "cursor": {
          "ref": "2c3d43fc-9fac-4dcf-9b1d-02db5d4d825c",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4f37cf13-b1b8-45b9-94fe-9287859039d7"
        },
        "item": {
          "id": "ecdce21d-efaa-48c3-888c-231452c37bc5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "58058ce8-0dbb-45de-bc59-a2f046533ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1851807-dea9-4cd7-90fd-6c7973bc874d",
        "cursor": {
          "ref": "48a56302-183b-42b3-b80d-2fd6dbbb7854",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "abe3cf8c-dd8f-4460-b5a7-64eb189c3daa"
        },
        "item": {
          "id": "c1851807-dea9-4cd7-90fd-6c7973bc874d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6b0b7d90-3193-4866-be09-e8f1dd3a34b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d05a66-1c57-4de6-a7a4-dac62049bdb6",
        "cursor": {
          "ref": "6ea6a8a8-dc91-49a0-a5be-15547f6ebaad",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "88c68754-7d95-4953-9795-11571ff23884"
        },
        "item": {
          "id": "26d05a66-1c57-4de6-a7a4-dac62049bdb6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0fe81eaa-7e9e-495b-b0d5-463efff9f11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54ad363-33af-4f64-a8fd-8d9ff9a07bbf",
        "cursor": {
          "ref": "946a0af9-5a03-4cd6-a016-684c90846625",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c99f0528-ca3c-4f3e-a28e-6a07d8c17cfe"
        },
        "item": {
          "id": "c54ad363-33af-4f64-a8fd-8d9ff9a07bbf",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "60755a59-ac81-432d-8ba0-1d1d5fa93307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982df825-68e7-41b6-8d88-eff7e2df7b37",
        "cursor": {
          "ref": "c4a1d45d-4ca5-4d72-aa94-637b243453c8",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "be552958-b06c-44a4-a735-ea8277889059"
        },
        "item": {
          "id": "982df825-68e7-41b6-8d88-eff7e2df7b37",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "81d7b8a4-944b-44e1-9d2a-ba0e4e89d481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4064248-137c-47a5-a8a0-90dca2d0b845",
        "cursor": {
          "ref": "6da77e1b-25ab-427e-a8e8-206f6e09c657",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1ed1c46b-00db-4910-95c2-1ef715162d76"
        },
        "item": {
          "id": "d4064248-137c-47a5-a8a0-90dca2d0b845",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "206fb663-b82a-48b7-9523-28a273464241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05743a53-08f5-4dd2-8f78-85ea9ea0d3a5",
        "cursor": {
          "ref": "fa5da2cb-23c5-4299-a848-4feb06ea584c",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4e5a697c-c8ff-4df6-9958-c79e7653eac2"
        },
        "item": {
          "id": "05743a53-08f5-4dd2-8f78-85ea9ea0d3a5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f7ca3758-db0b-4852-bd6e-a5da074c8c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c422d5ca-bbaf-474d-bb34-99da5f0b3ca2",
        "cursor": {
          "ref": "1ddba049-4784-4a75-9c12-4c2f1c9a5ed5",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6deac98c-5551-4b59-a39c-93fd81ff641a"
        },
        "item": {
          "id": "c422d5ca-bbaf-474d-bb34-99da5f0b3ca2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e37631bb-3cb4-4dcc-aa83-297ac69a1df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89644a8-8483-4ac0-bc3e-b6b54f998966",
        "cursor": {
          "ref": "214ccdb9-e895-44c5-8a9c-42c804d26f99",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0e491916-90ac-4f78-b61a-7c770fb0fbe2"
        },
        "item": {
          "id": "d89644a8-8483-4ac0-bc3e-b6b54f998966",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ba1a84db-6659-4ad1-8f87-c7c022a36e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2199ead3-ef23-42f4-b53b-54a6d1b42a64",
        "cursor": {
          "ref": "dc3935c0-419e-4899-9e5f-4c89957c3e1c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "da7c0ef8-a95e-4ee7-b2bf-573a6cd968a2"
        },
        "item": {
          "id": "2199ead3-ef23-42f4-b53b-54a6d1b42a64",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "097fc8d4-2a2c-4bab-b101-2c0b750d8c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5305455-41e1-4de6-b2a2-f31a7b8cbdcb",
        "cursor": {
          "ref": "9e655c01-4978-47d1-ad11-7bfabc575ce7",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "26c95a3d-8f8a-493f-af57-c23370ef4a79"
        },
        "item": {
          "id": "f5305455-41e1-4de6-b2a2-f31a7b8cbdcb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0db96a25-c230-4851-bc2a-df5fe93d65b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68633312-9675-4509-8ebc-491f23de77c5",
        "cursor": {
          "ref": "ef1c1967-ef35-4cdc-8b4b-0a9e3689db70",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9313e8a8-21b7-4208-87ac-6dfeee74d68b"
        },
        "item": {
          "id": "68633312-9675-4509-8ebc-491f23de77c5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c205fc7e-aded-4de7-8047-8834d6ea08c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29a1b44-eb81-4f7a-a5b7-cdeffe6fdaf5",
        "cursor": {
          "ref": "bd4bf7b9-4db1-4ada-b367-722f22bb5ca7",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d8200a7e-e426-4cae-868a-c49a10aa1336"
        },
        "item": {
          "id": "e29a1b44-eb81-4f7a-a5b7-cdeffe6fdaf5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5563b00c-41cb-43a7-88ec-a4941f34375d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910aaf1e-fe1e-4870-9781-b8ecef449ba1",
        "cursor": {
          "ref": "d17be854-ffaf-4352-90f8-9e6de4cb1ce8",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4a4280b3-7640-4ebc-9b4e-96063128e259"
        },
        "item": {
          "id": "910aaf1e-fe1e-4870-9781-b8ecef449ba1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "58a5b718-9620-48ba-90ed-379727ea6c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b99cd2-36f1-4095-b606-bce69b467665",
        "cursor": {
          "ref": "660badc5-6b8a-4b99-b423-1e4c8905d20f",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f4ea6f31-8147-41ae-b05d-cb0f9e09000f"
        },
        "item": {
          "id": "33b99cd2-36f1-4095-b606-bce69b467665",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ba7dbd2b-794d-4f61-b0a3-087628cd0829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0c88a3-d651-476f-905a-c90426a930c4",
        "cursor": {
          "ref": "c5f81d2b-c44b-4618-8b10-c1dd128ba70a",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d14ac171-f343-4bfd-a45f-ba49ed6faae8"
        },
        "item": {
          "id": "ef0c88a3-d651-476f-905a-c90426a930c4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6f7be964-7ba0-4bff-b9f2-052e1c573a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac9860f-e98d-4b4d-9d68-28aac3bbda0e",
        "cursor": {
          "ref": "8f324b5a-816f-4e03-a6d5-8c9450da3d87",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "90dcc680-e3ee-4776-860b-c49b801b6508"
        },
        "item": {
          "id": "6ac9860f-e98d-4b4d-9d68-28aac3bbda0e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c45e5d18-8016-45f4-99b2-a0299ca7d556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25616178-ef92-4276-bfbf-ab3049769183",
        "cursor": {
          "ref": "5afcd05f-80e6-4a65-8b06-47cb86718d7f",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2301c5e4-f697-4964-914c-81b99d3f90ef"
        },
        "item": {
          "id": "25616178-ef92-4276-bfbf-ab3049769183",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "095de89d-463c-442b-b364-eac58affe97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0137eea-d0ab-43d4-874e-144e7bf3c65c",
        "cursor": {
          "ref": "1066a31d-e69f-4808-9024-de10ece7a1d8",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bb7f87e0-f675-4348-a4e2-d9140b185432"
        },
        "item": {
          "id": "e0137eea-d0ab-43d4-874e-144e7bf3c65c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2e484600-a8d4-4c20-b898-abe8b72d0cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22818ccb-e56f-4871-91a4-288d8d8ece16",
        "cursor": {
          "ref": "541f1235-9063-4e20-9500-f6df40525ae8",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ce51cc84-1687-4e51-8bae-fc59ca0f0938"
        },
        "item": {
          "id": "22818ccb-e56f-4871-91a4-288d8d8ece16",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cc4b4e1d-89fa-4ca0-95e3-84a283ab627b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2207378-546e-4d7f-ad17-42a4f937e7ce",
        "cursor": {
          "ref": "eee291bc-d44a-4794-973d-31fbe005ac27",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c297a616-52a2-48c0-801c-f142d77217f8"
        },
        "item": {
          "id": "f2207378-546e-4d7f-ad17-42a4f937e7ce",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "96a256c9-9702-4ad5-b67d-9faa1cbcf23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3071423f-fb33-4fa3-92b0-8f350757928c",
        "cursor": {
          "ref": "2844a5de-0ba3-4077-9d94-569b74ab8795",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "84118396-be6c-4b2c-9dd8-0674fff75bd9"
        },
        "item": {
          "id": "3071423f-fb33-4fa3-92b0-8f350757928c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "27a48ada-b501-4950-b078-9d0f43598bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9d6a9b-affa-4fa2-bc14-411bf580385e",
        "cursor": {
          "ref": "6e37c5fc-d01e-45ab-aea0-a8428449f5bf",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ee1a8aad-7894-4222-a218-428f3f045a56"
        },
        "item": {
          "id": "8b9d6a9b-affa-4fa2-bc14-411bf580385e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8d79d34b-daf9-4183-90da-fc16bb14dab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e8b233-1f5b-4df2-bf3c-819dfd88eaac",
        "cursor": {
          "ref": "89a6b381-3d95-44bf-86f4-020d4c301646",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bb965348-008c-454f-bbc9-86e192b3b601"
        },
        "item": {
          "id": "72e8b233-1f5b-4df2-bf3c-819dfd88eaac",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "77225031-bde1-4634-8f93-c53a9082bafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a0f236-947a-4436-adcd-eebf078adff7",
        "cursor": {
          "ref": "9eefe88c-f3ff-40e8-a4b9-9752c72cf3f9",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "83ddacfc-5871-4160-9bb5-e1ab7f4c3553"
        },
        "item": {
          "id": "a9a0f236-947a-4436-adcd-eebf078adff7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5f151ff4-9293-4cc5-a300-035461aa8f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dc9119-2a1b-49a8-930b-58bce3f2aade",
        "cursor": {
          "ref": "eb849baa-cc3b-447d-afa7-cc72d010f078",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "99c522f2-c9e0-4e01-bbd0-1990fa29acb6"
        },
        "item": {
          "id": "77dc9119-2a1b-49a8-930b-58bce3f2aade",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3505e2e3-8419-4d05-a881-d1b41b1e25f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31421eb8-462f-48e1-933f-9adddfa504a8",
        "cursor": {
          "ref": "ef7a151e-e396-4d4d-a959-c7ea7647da67",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "006a25e9-8a97-4020-9e62-8a8536f35a27"
        },
        "item": {
          "id": "31421eb8-462f-48e1-933f-9adddfa504a8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f80e1bea-4e32-4c5e-baaa-dc0d61793505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3775465-e624-4b1d-8e09-4c95dac4567f",
        "cursor": {
          "ref": "c5e2d961-f866-4af2-97f1-b51abfbdf964",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "63a7aec4-f169-43b8-8924-bbc7439c253c"
        },
        "item": {
          "id": "c3775465-e624-4b1d-8e09-4c95dac4567f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4206e370-fc82-4aaa-a7c0-9cbc35b8bba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82de05e8-2420-4689-ab1d-39ff0b9e8cfb",
        "cursor": {
          "ref": "66a01739-6993-4d9f-8531-150d3958d45f",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e1272533-abc1-4cbc-a32f-e0530cfe4b07"
        },
        "item": {
          "id": "82de05e8-2420-4689-ab1d-39ff0b9e8cfb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "598b6bad-fb1c-415b-ad5c-a516115307ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8fd13b-284c-4533-9816-cd8acd7e64a6",
        "cursor": {
          "ref": "a2460f55-d73d-434e-b4d8-b65408e2f725",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "246a229a-6656-47a1-bd6b-df3d1fa1cd0a"
        },
        "item": {
          "id": "8d8fd13b-284c-4533-9816-cd8acd7e64a6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0845d252-877e-49bb-86b8-a9a98900feb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6892deb3-815c-42fb-bf97-bba8e1f203b1",
        "cursor": {
          "ref": "2e82c878-f4a7-44a7-8ab9-cf47331a35cf",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0595bf8b-4882-43e5-a0fd-721b019cda26"
        },
        "item": {
          "id": "6892deb3-815c-42fb-bf97-bba8e1f203b1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c394edf5-10a2-45ba-a2ea-4de91fa1f877",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fcf023-794b-4378-a3b1-6dc5a4a34cd1",
        "cursor": {
          "ref": "8abc4b2f-2eaa-411c-9933-dd7721d6e1ba",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4f7575e6-c632-4a90-ad31-24a1f4b42f99"
        },
        "item": {
          "id": "d0fcf023-794b-4378-a3b1-6dc5a4a34cd1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bd62f42d-a546-4706-a995-725d4c6f4a69",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2beeb52b-727c-454a-8e46-1519e0b65687",
        "cursor": {
          "ref": "f37376e3-9f72-49a3-8665-746d99909b83",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f4a66c81-d361-4f78-acf8-11e1d1344deb"
        },
        "item": {
          "id": "2beeb52b-727c-454a-8e46-1519e0b65687",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c723592d-40f1-4e87-abc2-82352eb60b60",
          "status": "Created",
          "code": 201,
          "responseTime": 100,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "24abea8e-1af6-4620-9115-5281f77255a9",
        "cursor": {
          "ref": "5657664b-2a8a-45e5-a879-5db66c860417",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6afbf16a-2b3b-4c1c-b2a8-b4f3dd76ea3d"
        },
        "item": {
          "id": "24abea8e-1af6-4620-9115-5281f77255a9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "df8577c5-d2d5-420d-96b0-c42ff77aad30",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7844b8b2-6ae1-40d4-b03b-b2f846d3ddc2",
        "cursor": {
          "ref": "ec1728c1-c0b1-4931-a986-5c45c16d4801",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ee2a9e40-47c0-448d-94fe-c101c0fcbb52"
        },
        "item": {
          "id": "7844b8b2-6ae1-40d4-b03b-b2f846d3ddc2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "509c375f-f4ca-4138-adbc-dc6e74a151dc",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "571c1515-9ee6-41f7-8048-9decd5d97ead",
        "cursor": {
          "ref": "330770fd-1244-4741-a901-87e4d4d1a181",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e1170428-ce83-4bcb-896e-64425517d9d3"
        },
        "item": {
          "id": "571c1515-9ee6-41f7-8048-9decd5d97ead",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "560fe617-2967-4b07-b653-a12b671273bc",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8245e653-1a41-4753-a219-5d17ece81b18",
        "cursor": {
          "ref": "fd114b10-04ec-4e80-bcfd-f28ed1b8e38d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "646f3e7a-e068-4627-8323-0d7e8564505c"
        },
        "item": {
          "id": "8245e653-1a41-4753-a219-5d17ece81b18",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "37c786c5-8848-4016-a459-1822f3c688fb",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97d3aa1-405a-4e50-8279-28b9b9b2d93a",
        "cursor": {
          "ref": "1317965e-56b9-42f3-b85f-5671c837e146",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "17717c6e-5e7b-48e0-b5a2-cabbceb54615"
        },
        "item": {
          "id": "b97d3aa1-405a-4e50-8279-28b9b9b2d93a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "29f0d549-9be9-4a4b-9353-1e3bbf3140ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11847151-3172-46ac-8b10-794a8115d074",
        "cursor": {
          "ref": "ae9638f7-259a-4581-8e1c-302bb263ad73",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1ca17d77-ba6f-410d-aff4-d1cb1ae6a40f"
        },
        "item": {
          "id": "11847151-3172-46ac-8b10-794a8115d074",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1d13accd-c247-4658-bf98-d7d27733e67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be0f983-81c8-4473-a244-1cace7900bd1",
        "cursor": {
          "ref": "0511ad31-1f79-4b45-a986-5e59479b6df3",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "54323f38-72a2-4a13-b6be-75c98e444879"
        },
        "item": {
          "id": "7be0f983-81c8-4473-a244-1cace7900bd1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1f419f8e-0b6c-462b-b19a-7ffed1c58d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bad0a35-3d74-4669-88d1-a30b1996e4b1",
        "cursor": {
          "ref": "c772344a-af55-4b05-8292-1fa410b67ff4",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d6faa56d-c37c-4c7b-bf93-4594aa0095a5"
        },
        "item": {
          "id": "8bad0a35-3d74-4669-88d1-a30b1996e4b1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3aceca82-b3a5-4f84-8b81-be2be9b998bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9835f6f5-f8c4-4733-9919-1d5465acd36a",
        "cursor": {
          "ref": "2c3b922a-dcff-43dd-a9fc-183d1aa181ed",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "41102082-2fe9-4635-86af-39edea1b1bd3"
        },
        "item": {
          "id": "9835f6f5-f8c4-4733-9919-1d5465acd36a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "306262f3-3bc7-435f-b979-c974f0402012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdb128e-bbb4-4151-9000-18de2f8282c8",
        "cursor": {
          "ref": "e64085e5-ba2e-4e36-86b4-0c14d150fa7b",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "842ad296-6774-4c42-8711-c05e93b4dcfe"
        },
        "item": {
          "id": "bfdb128e-bbb4-4151-9000-18de2f8282c8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e668bf8f-d6d7-4088-85de-18e4006c1f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d0e350-e312-478c-9745-96b0c3850227",
        "cursor": {
          "ref": "190d28fc-b141-4e09-a8dc-688cf209ea22",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "03076c4a-a965-4ce4-b53d-8280a7207abd"
        },
        "item": {
          "id": "25d0e350-e312-478c-9745-96b0c3850227",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6ff18a25-3dfb-4210-9da9-d7febea1ae2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6c0ea9-a605-4f4b-a97f-ebf8a39ac47c",
        "cursor": {
          "ref": "2e561912-6a31-4a21-a2c1-f731fc6187af",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8021adee-4079-46b8-bbe4-df196976cca6"
        },
        "item": {
          "id": "9c6c0ea9-a605-4f4b-a97f-ebf8a39ac47c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a4e3e250-cbbc-4aab-ac74-50896fab3d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c84b00-2137-4ca6-a3b6-a7202479ab15",
        "cursor": {
          "ref": "335cb4a4-1104-4818-b324-53dbdcae6a9a",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "47c2a9ef-39c1-412d-8762-b7ff579ef664"
        },
        "item": {
          "id": "20c84b00-2137-4ca6-a3b6-a7202479ab15",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ffc7567c-e4d8-47da-b8af-69e8070d642b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e11079-c5e8-46d7-8dcf-286e58747aba",
        "cursor": {
          "ref": "5fbf7f4e-46a4-45c6-abd1-a8cb0ebb2bda",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "aac4d212-accb-482f-96fa-cfca5214720f"
        },
        "item": {
          "id": "67e11079-c5e8-46d7-8dcf-286e58747aba",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e2ead5fa-9192-4042-a0a8-af57bed131d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6000ed81-a136-432a-9436-02f50b941cb1",
        "cursor": {
          "ref": "4f9965a4-b086-4eea-a1ea-8526dc59db0a",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ab79e718-bf43-4b9c-ae61-b96451721c4b"
        },
        "item": {
          "id": "6000ed81-a136-432a-9436-02f50b941cb1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3592dbaa-0894-4d4b-9397-d1537fa636b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765b531c-e15f-4e0f-9b1f-6a69ed621937",
        "cursor": {
          "ref": "e2bdfda6-6bd8-4db7-b286-fc39119f08ed",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "387c5bad-7d2e-47c0-9a8a-aa3c8e3731eb"
        },
        "item": {
          "id": "765b531c-e15f-4e0f-9b1f-6a69ed621937",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ce585bb0-e7c4-4a6e-8016-e70fcb41d645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca51345-5b80-49f3-a8f7-bef9e5f0aad5",
        "cursor": {
          "ref": "a375b16a-0a19-4e6f-92ba-ac0fa5e02eeb",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "68e1a439-34fe-44a2-bc75-91dca38273d0"
        },
        "item": {
          "id": "bca51345-5b80-49f3-a8f7-bef9e5f0aad5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b68dd6fa-529e-4cc4-b382-56d50fb4938a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85544200-d710-4f43-92ca-257591a2d9b5",
        "cursor": {
          "ref": "c0e05b35-f0db-4028-be0e-70c87f3422a5",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "af16944f-6a36-4bc2-954e-60aeb278fada"
        },
        "item": {
          "id": "85544200-d710-4f43-92ca-257591a2d9b5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c006d0fa-b8c4-4788-ab55-83c380cab63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6b4afb-d2e5-464d-9793-d1e330fdeb8e",
        "cursor": {
          "ref": "0930eb3e-93eb-4c31-a81d-832e9f1bee0e",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "22cd5ee2-08fc-4c51-9c64-bb2f24236624"
        },
        "item": {
          "id": "8d6b4afb-d2e5-464d-9793-d1e330fdeb8e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c3999921-4187-481e-9456-e08856aa50bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d690c1b5-bfc6-4e8f-b15b-c53cb7a02569",
        "cursor": {
          "ref": "5e0afae0-eee2-4f94-b4ae-dd18e8802f3a",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "11dc8e80-bbfa-4b8f-a568-a3db17f0af9c"
        },
        "item": {
          "id": "d690c1b5-bfc6-4e8f-b15b-c53cb7a02569",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "964cd68c-33ad-4a75-affb-101d44ef81b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c059b153-7700-4acc-89cb-bba38d59ee87",
        "cursor": {
          "ref": "38497b25-f2e1-4925-adb0-4cb537eb541b",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d3cf4ee5-d1b5-41e5-840f-c6ac2472b9fb"
        },
        "item": {
          "id": "c059b153-7700-4acc-89cb-bba38d59ee87",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "63197666-8ce7-42ef-82de-85f78acc494b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bd54f0-2ebd-41b7-857b-0a3eaacd92e3",
        "cursor": {
          "ref": "34514afe-b35b-44a3-882d-112d01b93490",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1e842930-a6ed-45a1-8675-436eb94a3e7f"
        },
        "item": {
          "id": "58bd54f0-2ebd-41b7-857b-0a3eaacd92e3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "505a1421-4ece-4abf-8269-24b7c6327d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7ec26f-a96d-45ea-b649-05b58fb4515e",
        "cursor": {
          "ref": "460c97e9-0649-4567-9449-18212b693e69",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d2a8ac7a-dfc2-48c2-8bce-ac0bf73360ab"
        },
        "item": {
          "id": "7a7ec26f-a96d-45ea-b649-05b58fb4515e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9b57e2e1-62c5-4856-818c-4eebbb37ffde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a71769-181a-4092-badf-54126fabe0c6",
        "cursor": {
          "ref": "c56309f2-6714-4f99-ab91-26faa20b2212",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7b98e391-2cb2-4710-96e0-94613eb20111"
        },
        "item": {
          "id": "c8a71769-181a-4092-badf-54126fabe0c6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8714cf24-4eda-401a-8b41-9f8d3fc4a2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f06e07-091d-491b-9d29-0a21e04ea38f",
        "cursor": {
          "ref": "1c297ad1-ff41-424f-821a-27b342de48ec",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f4735a87-72d8-40c7-b182-33110b00d395"
        },
        "item": {
          "id": "29f06e07-091d-491b-9d29-0a21e04ea38f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6e482975-7e86-421a-ba99-1874b4f59d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a67c36-ec94-4fb5-aa6c-8e4e8f656299",
        "cursor": {
          "ref": "57290a90-4388-4617-ade9-84a1b079a820",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0578d130-565b-4041-b613-0f96ad8975a2"
        },
        "item": {
          "id": "c8a67c36-ec94-4fb5-aa6c-8e4e8f656299",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "01868c47-0012-43e9-9cba-808ef683fa5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1d9caa-108c-417f-8588-22814cdd77fd",
        "cursor": {
          "ref": "e1cc8d22-8afd-4a7a-99e9-a8e7fa61616c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "885d24b4-7ddf-4bb9-a76e-eb832cae2141"
        },
        "item": {
          "id": "2a1d9caa-108c-417f-8588-22814cdd77fd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8cba2516-992e-4673-8aea-70717743001f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e660895f-5258-4610-beaa-85f9d7e2ea5a",
        "cursor": {
          "ref": "5e365c94-0e6e-48d8-9cac-4dcac9f3a81a",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fcef4352-1934-45ce-8e8c-f166afb95f5c"
        },
        "item": {
          "id": "e660895f-5258-4610-beaa-85f9d7e2ea5a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3e32fe75-7a3c-47fb-a03d-2bbef20ef54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0a5795-4e14-45ec-93bd-00bfbb07ac26",
        "cursor": {
          "ref": "92b46d07-dd28-4fc5-bf21-af82361b8c24",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "acf56d9f-4a2a-43f3-aa2a-d6f4285dc387"
        },
        "item": {
          "id": "7f0a5795-4e14-45ec-93bd-00bfbb07ac26",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d5d59313-c95f-49d2-8381-088b0fddf7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e310ad9-5dbc-4070-9942-250e607f22ab",
        "cursor": {
          "ref": "07cb0e74-4ef8-4550-8091-373c39ce68ae",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "838aebe6-7431-4abc-9f83-a343e5a4e2a7"
        },
        "item": {
          "id": "8e310ad9-5dbc-4070-9942-250e607f22ab",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1ea287cd-d846-48c2-a84d-63c6436d5785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ca0067-8ef7-42cf-afee-00553ad17f4d",
        "cursor": {
          "ref": "bee09440-5858-4ca4-9879-d36a78c2a9cf",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c04bee89-e0ed-4784-9faa-d8c539daea98"
        },
        "item": {
          "id": "a6ca0067-8ef7-42cf-afee-00553ad17f4d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2e19ec20-f93c-4fd1-b381-79cd8da9c53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a678e103-c67c-4982-9f1c-e76aaa7d2287",
        "cursor": {
          "ref": "935fe104-4193-45c5-8e8d-576a6e6d69a6",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d8a7e721-7d12-4726-a1db-916dbaa3e021"
        },
        "item": {
          "id": "a678e103-c67c-4982-9f1c-e76aaa7d2287",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6a34f9aa-393d-4047-a556-784acc4f01af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb7d19a-0ced-4b6f-9f35-dcc876276613",
        "cursor": {
          "ref": "d092c171-72a0-4fcd-a7d7-0770f37d76ed",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8aac629b-3834-4c78-a9ae-5950541d7a04"
        },
        "item": {
          "id": "9fb7d19a-0ced-4b6f-9f35-dcc876276613",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6d62fd31-e296-423d-8073-391716294440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9c7bda-d7b5-4714-9777-2e3872d69344",
        "cursor": {
          "ref": "a1135c21-e8b0-4676-ac39-0890d0c6f3d5",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ff012ca3-3f67-4b15-9bfc-51da1689870c"
        },
        "item": {
          "id": "5e9c7bda-d7b5-4714-9777-2e3872d69344",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c696b59a-4d9f-4e40-9f46-2a9a61fca863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4e6aa9-f4b6-42cb-80bb-febe8d5e7a7c",
        "cursor": {
          "ref": "f989b4a1-1b03-4e97-ba43-8e46342e0b07",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "58a20f0f-142f-4ecd-a6b2-366334f3405a"
        },
        "item": {
          "id": "1f4e6aa9-f4b6-42cb-80bb-febe8d5e7a7c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "86e56a01-f60e-4356-9a26-e7f800b13fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401a213f-ee3a-4289-8222-2974cff4daf0",
        "cursor": {
          "ref": "10daae93-a6aa-4964-a0ff-32205fed32a0",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "47e2ab98-5bf1-4157-bc4c-b1d0a579cd50"
        },
        "item": {
          "id": "401a213f-ee3a-4289-8222-2974cff4daf0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2166d9f9-043d-4274-ab78-6c1d2b1f9ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a12cde-4077-4bfa-afbc-2d4e5f48ef88",
        "cursor": {
          "ref": "0cf39df0-6175-4d03-aaef-2f6871977573",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e9f6be2f-8926-47b2-b6a4-ffb3918a1b03"
        },
        "item": {
          "id": "92a12cde-4077-4bfa-afbc-2d4e5f48ef88",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "97343d50-77ff-4533-b671-aef66e9b9762",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a765d6-d34e-4b63-8d51-7a6284ee15a9",
        "cursor": {
          "ref": "b04cd973-7b72-4091-864c-303d00bc7d8c",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e728e696-c146-458c-97c5-93928e0a8ab0"
        },
        "item": {
          "id": "a4a765d6-d34e-4b63-8d51-7a6284ee15a9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e2257807-7379-46be-b791-24258b124f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c67bc6c-62fd-487b-b13f-8c06e60b1c3d",
        "cursor": {
          "ref": "1cb22a77-d48a-4763-b379-c2a65bfc19c0",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fa3f0d2d-4401-488f-9d1a-2225126d7eb7"
        },
        "item": {
          "id": "9c67bc6c-62fd-487b-b13f-8c06e60b1c3d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c1b81934-a5e8-42df-b213-dad878b44096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df307db-9f5a-4378-b8ca-e8bb2e5db3ee",
        "cursor": {
          "ref": "20b778ea-585d-4a08-8f16-e950fc8a2711",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d31d4d08-715b-4dbc-8857-58164760fb41"
        },
        "item": {
          "id": "3df307db-9f5a-4378-b8ca-e8bb2e5db3ee",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d5eed7be-477b-4e7c-b3af-61e01a593b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6747ee89-3fc1-4a2c-a311-0503864e206c",
        "cursor": {
          "ref": "51ec4ffb-9cb4-45fb-892d-1c7542b9129e",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d01d45a2-5a52-434d-9437-afe22f81f748"
        },
        "item": {
          "id": "6747ee89-3fc1-4a2c-a311-0503864e206c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "aae9a8ba-bad3-412d-aa4b-67ad76285254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e19c27e-84e1-4af6-ab84-38e7db3230cc",
        "cursor": {
          "ref": "75464d0f-ba4b-4d9e-adc0-122c50114e90",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4f4816ea-2f63-401c-8c34-0916d0ce5960"
        },
        "item": {
          "id": "9e19c27e-84e1-4af6-ab84-38e7db3230cc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4ab38811-00ce-4db5-8cf7-0975d7661699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22910e13-d9ae-489f-8c3a-e66cf133eb44",
        "cursor": {
          "ref": "40b6161d-91c1-4f8e-80d8-45bbff33aaaf",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "752798ba-7884-4379-bc56-adc3094525d5"
        },
        "item": {
          "id": "22910e13-d9ae-489f-8c3a-e66cf133eb44",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "60de71f2-e4fb-4dcc-b556-763f6bbf0138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3c6521-db37-4163-9646-79b83796f723",
        "cursor": {
          "ref": "315bd6e4-b234-4367-b7ea-c5e59dd6f20f",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "20e37cdf-77c2-460d-a1ff-1bf223c6316f"
        },
        "item": {
          "id": "5d3c6521-db37-4163-9646-79b83796f723",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "17f3111e-0bef-42a5-99bd-4f24597aa4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f10081-949f-42f2-ba21-43f8bfd52f3f",
        "cursor": {
          "ref": "e3a52c91-44d5-4608-87f1-37cdb10787ef",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e2075c70-f1dc-44cf-b8cd-e15dfe8b4eaf"
        },
        "item": {
          "id": "68f10081-949f-42f2-ba21-43f8bfd52f3f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1a1e30d6-f809-491e-bd0d-6197f807898a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cbb56f-976e-4f78-9b21-a206ed3a405d",
        "cursor": {
          "ref": "8a9b206d-65ec-4af5-9618-b0b793f53f7c",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ac16a7d7-6899-4d5e-9bd3-b99ed8e2b4b4"
        },
        "item": {
          "id": "e7cbb56f-976e-4f78-9b21-a206ed3a405d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c502e696-07c1-472b-8140-cda8319c9e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c45a42c-2dd9-4e24-9edf-f5d5727bb7d1",
        "cursor": {
          "ref": "93c0ffd7-c375-46f3-96c0-c26a30539b72",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "99c8d136-8729-43f6-91ec-4c64472b2b9e"
        },
        "item": {
          "id": "9c45a42c-2dd9-4e24-9edf-f5d5727bb7d1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bf51cfa5-13ae-481d-ac12-c858f2d94522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e604759c-8a80-40a6-8e38-282146372abb",
        "cursor": {
          "ref": "18ea634e-b5f6-4702-9a1c-e8cfcf0a8053",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "26648387-b4cc-4d74-9e75-107fcfdb3969"
        },
        "item": {
          "id": "e604759c-8a80-40a6-8e38-282146372abb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "28687421-bf45-46c7-a763-9b3aecffb998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7a07a0-35b9-4684-addf-bcad4de7cf58",
        "cursor": {
          "ref": "a5e1536d-08a0-444a-84a4-04da06978a6b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9c374b43-41bb-4ee5-b956-072d059c3d62"
        },
        "item": {
          "id": "dc7a07a0-35b9-4684-addf-bcad4de7cf58",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "afb0b37d-53cf-4389-95db-b8252a3c4fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcefe89-23fd-4a86-b0cc-bb7e5eb8ed03",
        "cursor": {
          "ref": "56668e80-56dd-451b-846b-30c1a6e47a23",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6bae7b4d-a78a-41c2-83ae-f7e62107ac76"
        },
        "item": {
          "id": "dbcefe89-23fd-4a86-b0cc-bb7e5eb8ed03",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ec635567-e6c4-451b-84a2-d89a10dd39b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42bb5ac-22ec-4b9f-a9e7-338a0d626425",
        "cursor": {
          "ref": "469b9a39-e79e-4d82-8e7c-440702b7e358",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0bf95ffd-ee86-43bf-8017-5ee1fd5da6ef"
        },
        "item": {
          "id": "d42bb5ac-22ec-4b9f-a9e7-338a0d626425",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d794c124-eece-4206-ada2-39633b5725e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0790c506-2511-4719-a68b-7130dae34eb0",
        "cursor": {
          "ref": "14656912-dc3d-4549-bda2-ab7487680bd8",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a4193c28-138b-4728-a610-3ca2a1a65f36"
        },
        "item": {
          "id": "0790c506-2511-4719-a68b-7130dae34eb0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "941823d1-34bd-49bb-b192-1a87ce8867b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee43059-b90a-47d4-90f4-06dd8546b73e",
        "cursor": {
          "ref": "165e2085-8991-4cef-908d-7b985b2c893e",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "10813b07-df52-42a1-ae91-51fe6ee98618"
        },
        "item": {
          "id": "fee43059-b90a-47d4-90f4-06dd8546b73e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a3e09a63-ea98-4ca0-af29-fd2663c71140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f45d03a-fa84-4264-8613-7ac9e728aa67",
        "cursor": {
          "ref": "f1280de9-22c1-4b25-8efc-be0d39687653",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e218d0d6-d0fe-490a-869b-ef9311e8c533"
        },
        "item": {
          "id": "8f45d03a-fa84-4264-8613-7ac9e728aa67",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "010d2039-315e-4dd0-8a15-50e1c9aeffa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a21503-380f-44da-b95d-b3fd099b7f55",
        "cursor": {
          "ref": "779b8d8c-f7a6-4186-b345-4d8ad5dde9c8",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "197b531d-2dea-48e8-98b6-a7609cbe3d32"
        },
        "item": {
          "id": "b9a21503-380f-44da-b95d-b3fd099b7f55",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bad26ff2-c99a-4409-a429-865506d2cb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da3981b-6084-42c2-b13f-930604c92ca7",
        "cursor": {
          "ref": "3cb1213f-8836-48d5-ac93-b2a4e4e72a2c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f8c19927-d2b2-48a1-ab6e-7ef6995ed4fb"
        },
        "item": {
          "id": "5da3981b-6084-42c2-b13f-930604c92ca7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a2647e85-0edb-4898-add7-baad95eca3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d528388b-6f13-43a8-bf41-f517eb5b4999",
        "cursor": {
          "ref": "a3013664-2ee8-427a-a030-5c7d343e110c",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d617a7e4-0655-492a-a6b2-bad7cefe9d38"
        },
        "item": {
          "id": "d528388b-6f13-43a8-bf41-f517eb5b4999",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c0b01b8f-2995-4e92-b1e9-a49a0a405cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d0571f-b6db-41dc-8981-a88bd21a2d52",
        "cursor": {
          "ref": "037f57ef-c758-4bd0-b503-7d7157f3bc9b",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "715a197a-c198-4f92-a422-444d545946ca"
        },
        "item": {
          "id": "c1d0571f-b6db-41dc-8981-a88bd21a2d52",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9e7a3cb7-0322-455e-aea5-bf836ac3020a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd426769-0c18-4d67-abd7-decbdab5eedf",
        "cursor": {
          "ref": "0022a21c-88ad-49fc-81b3-382b53e3388d",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "66224b5b-a288-4b20-ac80-de8cfacfc2fe"
        },
        "item": {
          "id": "dd426769-0c18-4d67-abd7-decbdab5eedf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d7cae3d7-c41f-4d5b-90e7-8dc6c01321a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14284d33-0b1f-4339-b657-369b8b02e1aa",
        "cursor": {
          "ref": "dc036a94-e6a7-44e9-a640-8370d33be25f",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b93defd2-9009-4d70-8c7c-233e4b27387c"
        },
        "item": {
          "id": "14284d33-0b1f-4339-b657-369b8b02e1aa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "08bcded2-1185-4d54-8338-0ee0a0221d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77fd707-f1f5-4b7b-9652-df130a8c505d",
        "cursor": {
          "ref": "f0db623b-20bd-4100-88fe-b75d51c6d112",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aa9663eb-c99d-412f-9118-76165adfa582"
        },
        "item": {
          "id": "b77fd707-f1f5-4b7b-9652-df130a8c505d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2b43b5f6-a139-4e7c-a7e4-7b3f9608a1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4e123b-558e-481a-9547-228bf958452c",
        "cursor": {
          "ref": "936f6d35-60b8-406f-be5f-d4b00f8328eb",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "515af9de-7e37-4154-8ce1-084bef9f8c38"
        },
        "item": {
          "id": "bc4e123b-558e-481a-9547-228bf958452c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cfa44ee0-8b93-4cbf-9de4-e3e9a5160619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4669004-491d-4472-b211-ee685e417246",
        "cursor": {
          "ref": "70f34abd-30ff-4d79-a1b2-29aec3a7f470",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3e3b0e13-f7eb-46f4-b333-161a264bc4dd"
        },
        "item": {
          "id": "e4669004-491d-4472-b211-ee685e417246",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3f942340-0fd3-426e-8952-44f324a6aa02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5641347-5deb-4edb-9da1-2c890dcb9ea2",
        "cursor": {
          "ref": "944c7aad-a090-4f45-a5a6-468db3e7151b",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "56708845-38a7-488d-bc8b-e3c9a2d00e91"
        },
        "item": {
          "id": "b5641347-5deb-4edb-9da1-2c890dcb9ea2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "961918f4-30ee-4145-b76e-e3921821510d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477d37c8-35f1-4c63-b0e7-80334cf6cb46",
        "cursor": {
          "ref": "2948f511-291f-4f42-b138-f6d870842f92",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e7bdb184-4252-4253-a868-d0e3af73cb26"
        },
        "item": {
          "id": "477d37c8-35f1-4c63-b0e7-80334cf6cb46",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bf4a9a91-c395-4b2b-9163-48e7c5711996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fec06d-feb4-42a6-94b7-30852d7ded9c",
        "cursor": {
          "ref": "51d6fe42-9fa8-4f37-8de2-a0eb05126f5b",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "12f767c0-9f68-47b0-8a0c-e5ac8b166671"
        },
        "item": {
          "id": "96fec06d-feb4-42a6-94b7-30852d7ded9c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e6587e28-1c17-40e5-a662-def9fe97c6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdea9dee-7d98-4bc7-b0dd-f55994a3afa4",
        "cursor": {
          "ref": "af3ce1fd-afcf-4b37-bc48-667b8eadd803",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "54fcee76-7faf-4163-b990-535a083ada04"
        },
        "item": {
          "id": "bdea9dee-7d98-4bc7-b0dd-f55994a3afa4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3b0df83c-3b78-474f-b3f8-07d6cc4a9be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be116278-5e6f-47a1-bf1c-ab697f752081",
        "cursor": {
          "ref": "8f534c20-905d-417f-8235-f9d885217e3e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "488bb1bb-2b84-4377-aa57-30d4f5970ad1"
        },
        "item": {
          "id": "be116278-5e6f-47a1-bf1c-ab697f752081",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f5e4f90e-0405-4cd1-9dd2-f56681e7bcec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b58cb6-4f1e-41ed-bb6e-f5afe439d907",
        "cursor": {
          "ref": "32ebd869-3d1c-448a-b231-44cb44527406",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c06d1e09-c6f3-460c-ab1e-15d745c74a07"
        },
        "item": {
          "id": "75b58cb6-4f1e-41ed-bb6e-f5afe439d907",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "04e3c981-bbfe-4a71-85f8-08ba6e1ae0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efa4673-9ae0-4876-b940-a79036b515c5",
        "cursor": {
          "ref": "1bcd7f1f-e870-445a-b5ac-d491b29a0b64",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a34b71df-29d0-45b4-9102-ce6bca86de85"
        },
        "item": {
          "id": "9efa4673-9ae0-4876-b940-a79036b515c5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e9458c2d-0021-4833-b040-a81c99eb197f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6efccb-8f79-4477-b60f-108315c648b4",
        "cursor": {
          "ref": "2c330348-e5c5-4838-aa8f-2a4d1da9ed02",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d75b149f-a8c1-4d68-ab5a-36f6def751a6"
        },
        "item": {
          "id": "bd6efccb-8f79-4477-b60f-108315c648b4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "39b907de-e135-4ebc-9922-c289088dd8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c869ac-0025-49da-a6da-fab2d911affe",
        "cursor": {
          "ref": "100d2d73-8e02-48bc-9c2d-18dfd4e382a1",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4940b2ac-1e9b-40be-a150-1c3d51787a9d"
        },
        "item": {
          "id": "a0c869ac-0025-49da-a6da-fab2d911affe",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "445876db-bd64-4bce-8a83-28cc5a13919d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d905313-cf07-4717-b472-f105de4091b0",
        "cursor": {
          "ref": "5de33657-0218-4079-bd63-02d843b5cc51",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "41e521d4-4b85-4c68-8d67-fa4f34d85af1"
        },
        "item": {
          "id": "6d905313-cf07-4717-b472-f105de4091b0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f2f42936-364b-4604-b566-163e81a8cb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bb2016-51bf-4c54-ab1a-e823c94226e6",
        "cursor": {
          "ref": "c538b6ac-5709-42df-b696-0b1ce359eaa6",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4661529f-65d1-41d3-bca4-9eed1b6b6ab0"
        },
        "item": {
          "id": "b0bb2016-51bf-4c54-ab1a-e823c94226e6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7a6c712d-9d6f-4622-b0f4-a76347892d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b00eab-69ac-47af-9122-05754df3a62c",
        "cursor": {
          "ref": "901228ca-9c49-414d-9ca8-6e8e9a94e45f",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "658ae517-846c-4a19-b0f4-f8c8dc73eec0"
        },
        "item": {
          "id": "d7b00eab-69ac-47af-9122-05754df3a62c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9f422a87-ee86-4433-bd51-944ad3ac4aa0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa40989-bf55-4772-badf-1df0d8d2bd7c",
        "cursor": {
          "ref": "2248e6d9-d25d-4e53-9597-7d13def5f744",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d9ffb42f-72da-46f4-b4b6-b3a4846541f7"
        },
        "item": {
          "id": "caa40989-bf55-4772-badf-1df0d8d2bd7c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0c79ef84-ee73-4067-be36-e155b1762b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94802486-356b-435a-8583-58a6c87a6bf1",
        "cursor": {
          "ref": "a5dd3047-b55b-413a-af83-c949b112275e",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d75b1c9e-14c4-4140-8fba-3097c3655db7"
        },
        "item": {
          "id": "94802486-356b-435a-8583-58a6c87a6bf1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4179abbb-b2c6-49d2-b65b-c85dec99b057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7edba9b-6d69-478f-93a2-72ba1afb3aed",
        "cursor": {
          "ref": "37eea9a2-fbb0-463d-a985-0c5e5443a386",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "952bc009-3b75-49b7-b330-586050677882"
        },
        "item": {
          "id": "a7edba9b-6d69-478f-93a2-72ba1afb3aed",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2be8ee58-6843-4cc7-9e33-c4c6ec9f98e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5af757e-c809-4693-b647-bbf239ea3c85",
        "cursor": {
          "ref": "81fdb31c-854b-4cbb-9897-34f7148adc22",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2ce1db79-8804-40a3-bbbb-0357395c4e03"
        },
        "item": {
          "id": "e5af757e-c809-4693-b647-bbf239ea3c85",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8d139623-4391-4d8c-9804-7eb8b2586b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a1fc2a-c304-455d-befe-5e912ac45040",
        "cursor": {
          "ref": "912f5a79-bee3-4578-895b-3e76f4897f81",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fce8fa10-a9e7-4305-8030-18fd616c83ab"
        },
        "item": {
          "id": "d7a1fc2a-c304-455d-befe-5e912ac45040",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2de3b213-135e-45ff-a211-593f2626fda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11dcb87a-2ec2-4c7e-8828-b13a7cfe545d",
        "cursor": {
          "ref": "7d1c2986-2ae5-41bf-b887-b01fa0f24438",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "890179b4-75ef-4e0a-bbbc-e8916f17420d"
        },
        "item": {
          "id": "11dcb87a-2ec2-4c7e-8828-b13a7cfe545d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9778cfae-c9b5-461e-b39d-b508e0091897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a400519-276a-41bf-8458-9950fdf716cc",
        "cursor": {
          "ref": "f8c86ad6-5113-4115-b2bb-e1d9b03c5e0b",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9496ac3b-86e3-4109-9406-072d337cb04e"
        },
        "item": {
          "id": "3a400519-276a-41bf-8458-9950fdf716cc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c1fb4505-192b-4d40-9344-91c0b5933a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1359d5-e821-4cc5-b66a-ff91c96145d9",
        "cursor": {
          "ref": "256b4e14-aff1-4dda-8e60-69bf7cb8dd8b",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "69213364-9751-4ab6-8fe0-fabf817dc6cc"
        },
        "item": {
          "id": "3f1359d5-e821-4cc5-b66a-ff91c96145d9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6ad83dbe-08ff-4777-8520-acdcaaab20eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ca78de-2f68-48f5-a699-c0380cec1751",
        "cursor": {
          "ref": "b0a7efa1-444f-48cb-9331-e049fcefffff",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "dfad1e4e-47de-47b0-8818-7c321acb68e5"
        },
        "item": {
          "id": "f8ca78de-2f68-48f5-a699-c0380cec1751",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a953c0b4-c841-47c8-aa7d-a9bfe44475a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e9b01e-03c1-4b3a-a683-703f51ab1a00",
        "cursor": {
          "ref": "cd28774c-48f2-4134-98c5-8b7cc0853a91",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "81411e72-dd4a-4a56-be39-4b7a1a44e1cf"
        },
        "item": {
          "id": "34e9b01e-03c1-4b3a-a683-703f51ab1a00",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1ed40961-3bdb-45d6-a464-00b84a4a7f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55385d74-e0e8-48f1-9513-82c9acd14a67",
        "cursor": {
          "ref": "7a5c094d-c405-4fbd-9cbb-f8e3fd4822e2",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8ae2c1d9-fee1-40b6-a25a-802d5190c41d"
        },
        "item": {
          "id": "55385d74-e0e8-48f1-9513-82c9acd14a67",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ca936974-cf81-4307-9a36-23e2715a5808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcabc5c-7c30-45a3-a9bf-33eecc170072",
        "cursor": {
          "ref": "95a1ad4f-bc9e-4cfa-9e5c-96c6a34ee154",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b2b7b006-4713-415e-b4fd-d0fb6a8c2c34"
        },
        "item": {
          "id": "5fcabc5c-7c30-45a3-a9bf-33eecc170072",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d1624d01-184b-4de7-b4bb-32e63a5eef05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8db0039-1a5b-47f0-af59-0ded918b4825",
        "cursor": {
          "ref": "ddb942b7-8074-426f-8753-8609edcc1da0",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1e4ec524-5521-4712-a4b2-b97beaca58ce"
        },
        "item": {
          "id": "e8db0039-1a5b-47f0-af59-0ded918b4825",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "45cd362e-6800-469f-be9d-556a9f693548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a3dfad-cb07-479b-a073-c220b222969a",
        "cursor": {
          "ref": "3b49f6a3-0b86-458f-b9d3-f14864bbbae8",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fb29452e-3bc4-432b-8cdc-eeae7c10b536"
        },
        "item": {
          "id": "13a3dfad-cb07-479b-a073-c220b222969a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "074cab97-b31f-471d-8b40-6491c3c4e0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74422f36-0313-4bd9-b61e-81183d06ce0e",
        "cursor": {
          "ref": "2c79dd97-aebc-46c5-8d06-97f3706e99fb",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3176149f-30fe-43d7-94f1-6e9522f7443c"
        },
        "item": {
          "id": "74422f36-0313-4bd9-b61e-81183d06ce0e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6617435d-c68e-4d0e-bf47-28a76f38e660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bde27c-ce28-432d-baf7-8feddd28f637",
        "cursor": {
          "ref": "3be4493c-f3cd-42e3-a216-b3085950c6b1",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4c3bea7a-12aa-4c06-8b68-e6057424fdc0"
        },
        "item": {
          "id": "37bde27c-ce28-432d-baf7-8feddd28f637",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "628557e3-c429-433d-985b-b8cbf580073b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402eab55-08bc-4890-b827-b5ba70725f8d",
        "cursor": {
          "ref": "7e89f333-9a88-4956-a6d8-689c0033a7a1",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7c2dc444-f2a1-4d15-99d8-45194f2090c4"
        },
        "item": {
          "id": "402eab55-08bc-4890-b827-b5ba70725f8d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3de3f373-b60b-4d78-b6a5-5d7d36a78c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181364ef-1d64-4f0b-9224-ec2f27fa2128",
        "cursor": {
          "ref": "30282f7f-2c1e-4f78-b580-400afb51830d",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "540dbf66-6aaf-4e27-96a9-afdd729a27ae"
        },
        "item": {
          "id": "181364ef-1d64-4f0b-9224-ec2f27fa2128",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6c48a753-5dd6-4db0-851e-8851a5f49329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c0e1a2-b3eb-4092-8e00-e8197bcb4203",
        "cursor": {
          "ref": "77f81d00-bb8a-4572-9f91-3758dfb1aa65",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ea8c99e1-4ffa-4727-bc2f-4ba6ef05db08"
        },
        "item": {
          "id": "f7c0e1a2-b3eb-4092-8e00-e8197bcb4203",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b1783aa5-2216-4b01-9ebc-095d777ec162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b217d62-d61c-4ec8-98ba-6ba0310003be",
        "cursor": {
          "ref": "1fd40128-609b-4e7b-b1ad-30bea57457c5",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cc041a7e-51c3-4f4a-90d8-ce4d34782dfc"
        },
        "item": {
          "id": "5b217d62-d61c-4ec8-98ba-6ba0310003be",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8d10260b-9842-4bec-b984-bde2df79f8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c4a84c-b91a-4285-b021-54f6f143d9a1",
        "cursor": {
          "ref": "65c63b26-a225-40c5-9f41-42bcd2682e4a",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d3efe144-e1cd-49e8-bbb4-c89acbc6a831"
        },
        "item": {
          "id": "59c4a84c-b91a-4285-b021-54f6f143d9a1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "47c8909f-c5b4-484f-a434-b24bdf3145a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d43d19-287d-45ae-824e-8e2405bda46d",
        "cursor": {
          "ref": "83f77a56-01bf-42a3-a13b-18e06cd829b0",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c27a049b-5811-446a-b850-d4131d27bca4"
        },
        "item": {
          "id": "e8d43d19-287d-45ae-824e-8e2405bda46d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6a981c05-bdb9-4fd8-98ae-f061312c047b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185d3eb3-c849-488a-abb3-fc3074ad4b29",
        "cursor": {
          "ref": "759ee363-ea60-48c0-8121-c8ab58f0fde9",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "687b054f-fa54-4c99-90cc-d6b363846b3b"
        },
        "item": {
          "id": "185d3eb3-c849-488a-abb3-fc3074ad4b29",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4539b416-af1c-43af-838c-c3e40e2b112c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb10e13-74bc-4063-8f1f-f61e933eb1f6",
        "cursor": {
          "ref": "db08b220-e1e8-4d6e-b37d-45ff569cdf59",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4790d105-55f7-4154-8698-c23403961ca4"
        },
        "item": {
          "id": "afb10e13-74bc-4063-8f1f-f61e933eb1f6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "53d13d0c-275f-4aab-adf1-085ea8eb7a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d0c8bc-76fd-46f0-8fe9-a16571245675",
        "cursor": {
          "ref": "954536d7-e2fb-42d8-9563-76dd512ad38f",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b3e078b6-e31f-4b38-bc5a-b4c21c2f19ef"
        },
        "item": {
          "id": "95d0c8bc-76fd-46f0-8fe9-a16571245675",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c4ecfc22-a275-4b02-bee2-a132946b66a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe0a354-f171-46b0-8186-8a5814ec6f0e",
        "cursor": {
          "ref": "58b16994-b43e-42c1-b289-00e1f99327e0",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c4dafdf6-7e69-4762-9b57-5d44a3e5389e"
        },
        "item": {
          "id": "afe0a354-f171-46b0-8186-8a5814ec6f0e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f9bbd10c-cbdb-4963-89ce-ec13d0a017f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f60d2a-50ec-40fa-a06a-ac1863350a01",
        "cursor": {
          "ref": "69ec152b-dc2d-4ad0-9558-3cac5788e410",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3ec4dfae-ec48-49ad-87f2-56199407c231"
        },
        "item": {
          "id": "b6f60d2a-50ec-40fa-a06a-ac1863350a01",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "337b68e3-bf77-4461-a56f-c63eaeee63a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ccf991-88c1-487b-813d-7878e3d86cb6",
        "cursor": {
          "ref": "10729408-689f-42d1-8683-01dbb0b787e0",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ef31beab-c7d1-4d5a-8b0f-dfd8bf2c34f7"
        },
        "item": {
          "id": "35ccf991-88c1-487b-813d-7878e3d86cb6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f1962300-4b68-4ec6-9d7b-30e6d0f72fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4be99f-67bd-466d-92ae-b449864d11f5",
        "cursor": {
          "ref": "bf8176bf-b87b-46e6-8784-273d8cdceedb",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f79e6c39-33e8-4fec-ac19-9dbb8d1757dd"
        },
        "item": {
          "id": "ac4be99f-67bd-466d-92ae-b449864d11f5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "342ae42b-b466-4235-b58f-1f02e02f4d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d6e5c7-6cf1-4d11-aa88-1606dc6af5e1",
        "cursor": {
          "ref": "09974288-4a0d-4c60-b963-e6ae519a6c24",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b188774a-1be3-4d2c-ac65-e78e01a402fa"
        },
        "item": {
          "id": "b8d6e5c7-6cf1-4d11-aa88-1606dc6af5e1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "033318b8-86ab-4bf9-a52c-9a458170164b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fec7982-564e-4f5f-b645-ff1bd8de1799",
        "cursor": {
          "ref": "4caef3c9-e868-49eb-a927-bd324c1fc49e",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9f1c86b9-1f6f-46d8-a17e-335509043df2"
        },
        "item": {
          "id": "6fec7982-564e-4f5f-b645-ff1bd8de1799",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3f61b7bb-e933-45f2-86aa-e8bd462ac479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abda4db-bf51-4ae0-b34b-3bbd96bc32ba",
        "cursor": {
          "ref": "596810f7-c2bf-4524-83a5-614bd12189f7",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7f079850-94dc-4d75-8b60-aee99292ae4d"
        },
        "item": {
          "id": "4abda4db-bf51-4ae0-b34b-3bbd96bc32ba",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "309f81ff-d572-454e-9db4-2e6954f38279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa380c2-91e2-4c87-9fdc-5cdd4fd3e4e0",
        "cursor": {
          "ref": "81a08c75-0cde-4421-892f-2132a1b8f80b",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "13a41c33-c096-4ec8-9e84-2a6c43482173"
        },
        "item": {
          "id": "cfa380c2-91e2-4c87-9fdc-5cdd4fd3e4e0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "44339008-6107-4687-a8e8-00261f2174aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc3a891-6521-4ef0-aa06-4d869c764a91",
        "cursor": {
          "ref": "c1a9e3a4-3a04-420b-b9de-aa3318b68720",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "91f0c793-6dc4-4438-af6d-9c42a3e84ad1"
        },
        "item": {
          "id": "5cc3a891-6521-4ef0-aa06-4d869c764a91",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0a283e02-3f13-4802-a93f-d10b924274b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c0a91a-aac9-453a-9702-3eb729daec0c",
        "cursor": {
          "ref": "f362a44a-5c44-4cb1-8d27-3656d632b588",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "85b66401-6f8a-4f2b-95ed-e7ad66e316df"
        },
        "item": {
          "id": "62c0a91a-aac9-453a-9702-3eb729daec0c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "33517c50-0b21-4c48-b6cd-563e80e705aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ad065b-11b9-4ad4-894e-019ae822ebd2",
        "cursor": {
          "ref": "613f81b1-787c-49a2-83ae-2cbf4a720964",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3f84ad8d-d494-4cfe-a65c-8e1e97a86981"
        },
        "item": {
          "id": "56ad065b-11b9-4ad4-894e-019ae822ebd2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c07d8577-6a5f-4aa1-96c5-7ad0d2df64b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dcb111-6de3-4b88-8627-d84eb80f1707",
        "cursor": {
          "ref": "e000dc38-9570-498a-b501-f267667ccd99",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4fd06639-adf8-4c8f-908b-337bc4bb372d"
        },
        "item": {
          "id": "29dcb111-6de3-4b88-8627-d84eb80f1707",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "10cef02c-93d4-431e-b459-a1278ca94e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ce64e0-d779-4c51-97a9-221107528fd5",
        "cursor": {
          "ref": "855cd835-8bfb-4101-b6c8-03f379a098af",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0ad1be8a-8b0b-4f5c-8943-32cff3ccbee2"
        },
        "item": {
          "id": "d5ce64e0-d779-4c51-97a9-221107528fd5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b9f68bad-672e-419d-93f7-96254ab70205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7ec22d-7ea8-4701-9bb8-557632fc521e",
        "cursor": {
          "ref": "ca7d9a22-d25a-4c56-9583-c1c598e4b89f",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "51056b7f-1f4a-4aa9-b9f8-bd645ef89e50"
        },
        "item": {
          "id": "1d7ec22d-7ea8-4701-9bb8-557632fc521e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9594cf94-58d4-48fc-8e01-7a6f0beddc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689892e0-fdfb-4715-8c11-120b1e6eaf6d",
        "cursor": {
          "ref": "7771078e-9eb9-4263-aa18-69c39c0fb156",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4ce53797-98e6-444b-a6f5-5892df8ccdd6"
        },
        "item": {
          "id": "689892e0-fdfb-4715-8c11-120b1e6eaf6d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7e57256d-c4c2-4663-93e7-fb3485cb922c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e52c51-9e13-4dfd-82af-03fa3944ee43",
        "cursor": {
          "ref": "3bd13e4c-7211-4210-a02a-d37a234b321a",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "08bea126-9fa5-4d5a-8a1d-5d04c1cd107a"
        },
        "item": {
          "id": "64e52c51-9e13-4dfd-82af-03fa3944ee43",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "721f752d-0e71-468b-a964-c377f1c98511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8940d70a-edcf-4637-9100-84fdf09013ad",
        "cursor": {
          "ref": "f89b0641-f0d6-45c6-b033-8d3d190cdf53",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6215c867-7e55-44c1-bb74-21dea8b3528e"
        },
        "item": {
          "id": "8940d70a-edcf-4637-9100-84fdf09013ad",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5cf2aefb-895b-4c5e-8427-dc92d2d8e1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70ce92e-e5ab-4fd4-ae75-42090a48cd34",
        "cursor": {
          "ref": "53238b5b-bf61-428f-bd38-6cdfe94f8c6f",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "30a45f18-1ec9-45c1-b748-625c236f378c"
        },
        "item": {
          "id": "e70ce92e-e5ab-4fd4-ae75-42090a48cd34",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ebb06744-2605-4242-99ba-b943a0687c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab584e8-940e-4477-9062-8e3d89208533",
        "cursor": {
          "ref": "bc5396db-c45d-44ea-8634-63f27f18696a",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "dd58932d-2a9d-4cdb-9e0c-406d3e421319"
        },
        "item": {
          "id": "bab584e8-940e-4477-9062-8e3d89208533",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fbb438d9-2b81-4657-999f-9dc1a5131ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06382a4-0165-46e9-835a-6e2b98043864",
        "cursor": {
          "ref": "f2f6bfce-1620-4fca-aeb7-508172b90425",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1b40cd6a-1497-4922-bb76-eac5aac5605f"
        },
        "item": {
          "id": "d06382a4-0165-46e9-835a-6e2b98043864",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b44b5024-f398-400a-a6cc-cfbf39fd2536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b7eb91-355a-4f81-9e45-44369309c6d7",
        "cursor": {
          "ref": "e50aa29d-3131-485b-95b9-8637ff635341",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3f07b36f-c85f-47b3-8226-76b294bb8fe5"
        },
        "item": {
          "id": "74b7eb91-355a-4f81-9e45-44369309c6d7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6ba7ac6b-ab23-4077-beea-4171b2376fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81dbdbc-709a-4e53-bdff-21ed77983bb1",
        "cursor": {
          "ref": "0a40646b-5550-495c-931a-069870b6d33c",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3a494c85-f298-47c7-a9ce-2c0c8c758c1f"
        },
        "item": {
          "id": "a81dbdbc-709a-4e53-bdff-21ed77983bb1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d709cfb1-3935-411f-8f65-5aa0616b3b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa25c0d7-a210-48d9-bf23-e581dca36d3a",
        "cursor": {
          "ref": "705e8fbd-d52e-4319-8af4-b59af856035f",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "442ceaf6-5779-4f9c-8283-1202c01201ca"
        },
        "item": {
          "id": "fa25c0d7-a210-48d9-bf23-e581dca36d3a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f025b6d0-3304-4331-89b1-30529fb410f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c9f741-4b5e-47ec-903a-13f769cd2679",
        "cursor": {
          "ref": "74cfc17c-7757-4d79-8275-ce34cd310946",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e16c94d0-7ce0-4e73-b08b-781f30af311a"
        },
        "item": {
          "id": "13c9f741-4b5e-47ec-903a-13f769cd2679",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "24fcbec9-c954-447f-8ece-bc7f59a4612f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cfdfc2-1de9-4ba5-8d7a-c76b95a389af",
        "cursor": {
          "ref": "4a5f8f2b-ab79-4a37-9c8d-3238e8cea4ff",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7e3222ae-15b3-415d-9277-45eb7e0a1ba4"
        },
        "item": {
          "id": "71cfdfc2-1de9-4ba5-8d7a-c76b95a389af",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d36d28be-5f99-4e4a-aca0-ef2f8dece8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9024751a-e61e-4641-80f8-01bd8957837f",
        "cursor": {
          "ref": "17fcda73-07e0-4124-b474-09f235ae2b7f",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "02373eb9-a7a6-463c-89bd-090735e835a4"
        },
        "item": {
          "id": "9024751a-e61e-4641-80f8-01bd8957837f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4e6f1c11-4970-4653-ab75-49f7c3837f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f2c61b-31e6-4ddb-ab82-768f521a5a8c",
        "cursor": {
          "ref": "1daf61ca-620c-4184-8fe2-96c92b8b3c86",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "68deb69e-a214-4122-9ee5-9aaab9fc5367"
        },
        "item": {
          "id": "a5f2c61b-31e6-4ddb-ab82-768f521a5a8c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "37c29e00-8818-4e53-b228-958cb0115523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1b46a0-e968-4d0e-9eda-f8240f7954d1",
        "cursor": {
          "ref": "5d264741-3d20-4e54-82ca-131179fa98b2",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e85009c7-9861-48a5-bd6c-26c22fbd8dc9"
        },
        "item": {
          "id": "bc1b46a0-e968-4d0e-9eda-f8240f7954d1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "393162d0-e9b4-4eba-98ce-46b3d684981c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5406b30-a231-4433-9e84-0aa7b556bc95",
        "cursor": {
          "ref": "e83e1ddf-cab1-41fc-a00f-7443eab69620",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9dfe3004-a811-470e-9c7b-c65eb064598a"
        },
        "item": {
          "id": "f5406b30-a231-4433-9e84-0aa7b556bc95",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "13b33d5c-11e7-49a8-bcc1-240d13b15c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185ac542-d4fe-494a-9555-17ebce811af7",
        "cursor": {
          "ref": "1f274ebd-19a7-456e-aff3-26f841f4a441",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cf189551-92c3-44a8-8bdc-5c05cdadc402"
        },
        "item": {
          "id": "185ac542-d4fe-494a-9555-17ebce811af7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5b94ee72-53c6-4858-bee4-35131de97069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14241423-7bdb-4e0f-bc72-d72a557d1a13",
        "cursor": {
          "ref": "bf30db5c-a67d-4b75-98a3-6958aa12a1eb",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bdd42292-5356-42bf-adfe-fc755856d5af"
        },
        "item": {
          "id": "14241423-7bdb-4e0f-bc72-d72a557d1a13",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "61d9294f-d56f-4861-a5fa-7cc7ab7bd91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d731e99f-753e-4238-ada7-d57f5c6f0af0",
        "cursor": {
          "ref": "d538329c-8c1d-41f2-a39c-ab5409cc33b0",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f1d0fb6f-0e0c-406f-9738-91b5f2804b72"
        },
        "item": {
          "id": "d731e99f-753e-4238-ada7-d57f5c6f0af0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "31244ded-50fe-408c-893e-1ae4e93c09c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df863a2-70f0-4c96-b7fe-e8fd32453d9a",
        "cursor": {
          "ref": "c1871f8c-7772-4ea8-a15b-040598d9bd9c",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0103527c-b7d5-4a65-9c53-bbb61cdf640f"
        },
        "item": {
          "id": "6df863a2-70f0-4c96-b7fe-e8fd32453d9a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6881f796-66b2-48d4-9244-ac3a2a57aab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2167a9-5244-4501-8ff3-761a124fce3c",
        "cursor": {
          "ref": "034bb545-26b1-45f3-829f-67604b9be244",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "971991fb-72ba-475b-859a-e675ebd0cfd5"
        },
        "item": {
          "id": "bb2167a9-5244-4501-8ff3-761a124fce3c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a16bb098-3454-4f42-ba87-2a5bebc7c64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd46e578-1ccd-4645-af62-469bda2f9d46",
        "cursor": {
          "ref": "6693c33a-aef2-4356-b4d0-1fc0e2be20ad",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4e8fe4e6-612d-4148-b9ff-138bb89b15dc"
        },
        "item": {
          "id": "cd46e578-1ccd-4645-af62-469bda2f9d46",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5336314d-1aae-4914-acab-e14fa164d59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ba6ef5-409e-4e09-a637-424e5feb831e",
        "cursor": {
          "ref": "9a27e80d-541f-4630-b8a3-74f42c348099",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b599d822-24c7-4f78-ba45-16873fb34900"
        },
        "item": {
          "id": "22ba6ef5-409e-4e09-a637-424e5feb831e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f31227f4-67b5-4f42-ba4a-87ccb7b145f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d07892a-8f88-408e-b1d1-3792afb6889d",
        "cursor": {
          "ref": "49c2ac74-b3e5-4a42-bf5e-f0caac769306",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ecdeaee1-95a5-41a1-901a-ee83a2b02416"
        },
        "item": {
          "id": "2d07892a-8f88-408e-b1d1-3792afb6889d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7d30baab-353e-43e8-b2d2-ebd79a31cfb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c183f306-2d4a-4db2-992b-888b5e8a8106",
        "cursor": {
          "ref": "e879ed7c-c5e6-4a50-8eb7-940be2c14df8",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3751f5e6-5d0a-4bfc-9244-bbc0a50f6c4a"
        },
        "item": {
          "id": "c183f306-2d4a-4db2-992b-888b5e8a8106",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c09e15ab-9383-4549-9624-6b0d4255f601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539a7e3e-d4ff-4fcf-9f77-0300918204cd",
        "cursor": {
          "ref": "7061b8ad-79b0-449c-aab3-09df975b1e4a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "716b3be2-42f8-480a-b1a5-4d749fa7b611"
        },
        "item": {
          "id": "539a7e3e-d4ff-4fcf-9f77-0300918204cd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b3cff379-3048-4bb6-86bf-0401f19fe96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138497a3-0e10-4148-80a0-5fa6f00ee5fd",
        "cursor": {
          "ref": "c1c9df56-580c-4880-ac34-174b1623aabd",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4064f09b-0f80-4ed5-90cb-ef36a6feda8d"
        },
        "item": {
          "id": "138497a3-0e10-4148-80a0-5fa6f00ee5fd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "af5bb2e3-3e17-4d66-a68a-77c9255a18fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c6d6dd-4e4b-483a-b235-2ea3a73612a9",
        "cursor": {
          "ref": "acf67882-53a5-4ebd-a7a4-925d13c63404",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "893ec7ad-2b20-49a5-80d1-62c00c9ee9ce"
        },
        "item": {
          "id": "40c6d6dd-4e4b-483a-b235-2ea3a73612a9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "da76505a-c32d-408e-aa85-6f3e6cb5d25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58532448-c72a-4a4b-89e6-c4d317636040",
        "cursor": {
          "ref": "a581eee3-157b-498e-bee0-e438ff3c8bd1",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2872a6cb-f156-4cef-8f6e-beeac5813a7d"
        },
        "item": {
          "id": "58532448-c72a-4a4b-89e6-c4d317636040",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b198175f-dd21-4803-ae71-260133013b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cf3491-0c17-4eb5-90c9-33fd50827691",
        "cursor": {
          "ref": "a5a43b7e-3e9b-4859-ae5a-a05efaf1e4cd",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "69fdec06-711e-41d0-9dcd-6a6e99e337e1"
        },
        "item": {
          "id": "32cf3491-0c17-4eb5-90c9-33fd50827691",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "200a1fd7-e815-4da6-bb69-af7ab014f985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090dc6af-5e93-4da3-8e30-a5f307b207a1",
        "cursor": {
          "ref": "e6f6e2e2-624d-4ed4-8bdb-28295a3dc051",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5541f082-9b35-450d-a5e0-4b8818bfc5fb"
        },
        "item": {
          "id": "090dc6af-5e93-4da3-8e30-a5f307b207a1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "24091b85-dcc5-4f99-b76c-5d56c17f468b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b58301b-669f-4809-a1e5-2e310052d476",
        "cursor": {
          "ref": "89308658-7549-437a-b752-2da5ff4a7b30",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "466bfe32-1b54-410c-834a-db8d0b684791"
        },
        "item": {
          "id": "6b58301b-669f-4809-a1e5-2e310052d476",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5bbb48b3-0c32-4920-8740-c6eea67cf10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cc1dee-c049-4d75-87fd-3913a6a9657b",
        "cursor": {
          "ref": "895b85ee-f7bc-46c2-a59f-6de8c7b0bff6",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "85461e73-6d7c-44cd-ad5a-a338a8378112"
        },
        "item": {
          "id": "36cc1dee-c049-4d75-87fd-3913a6a9657b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2fe0605f-c1c3-4257-a0d1-8e446b428f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a1829d-5a31-4eff-a21b-7910a0d34a57",
        "cursor": {
          "ref": "2b866fba-5a39-4fd3-bab1-b7bf6b417da4",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f38e0694-2415-47b3-bd38-01011121f535"
        },
        "item": {
          "id": "98a1829d-5a31-4eff-a21b-7910a0d34a57",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "983266be-c079-4815-af9e-3a58de79fae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fecd866-1e6d-4709-8fe3-eb483e9b5b76",
        "cursor": {
          "ref": "21ad33fa-5ac1-47f6-8394-d00224d0ef4a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "324b8717-fe7f-4d8a-b75e-5e2b5e660dd9"
        },
        "item": {
          "id": "3fecd866-1e6d-4709-8fe3-eb483e9b5b76",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9a7815df-17df-4149-83bb-5220c9582f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86798b5-ac7a-4e03-bcb9-1ef4cb929fbd",
        "cursor": {
          "ref": "e36b0427-bdf4-4124-b518-20f20a0fcd8d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "82561d8f-a339-49f1-95b7-563a31fb8d6c"
        },
        "item": {
          "id": "e86798b5-ac7a-4e03-bcb9-1ef4cb929fbd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1aaeddb5-df03-4fce-a34f-d92a5dba7fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4692ae4c-b7e8-4a84-94a4-be37fa36b9dd",
        "cursor": {
          "ref": "f9e71893-4db8-47b2-acc5-90112b9cd9df",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b209c067-d73c-4308-ab79-1fe2defe292f"
        },
        "item": {
          "id": "4692ae4c-b7e8-4a84-94a4-be37fa36b9dd",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b5295993-bdda-4923-8ca3-eafe70af5ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8723d64b-1cfe-4aec-8df1-1c3ca04f5113",
        "cursor": {
          "ref": "38cbc407-22a1-4ae8-8fe0-5a17a4223a3f",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b254fd9d-ac55-45ac-a318-82fdc1734606"
        },
        "item": {
          "id": "8723d64b-1cfe-4aec-8df1-1c3ca04f5113",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2c55c09b-82c5-432a-8026-e8ad1eabbbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4058b54-a3cb-4073-8c51-041ade3b9558",
        "cursor": {
          "ref": "c112323b-9c80-4fd0-a910-0d6d931e7470",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "2758b8a8-5956-44d0-aa04-3bca90ca1865"
        },
        "item": {
          "id": "c4058b54-a3cb-4073-8c51-041ade3b9558",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f600cf14-0581-4403-82f6-b51ac4fe1508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d7509e-945f-4d8c-acc9-e31c6a9ac84f",
        "cursor": {
          "ref": "06af0f85-0835-4c78-b546-2b8ca6b5e08f",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a9d4eee0-5228-44e2-91b3-8c0d4b1d699a"
        },
        "item": {
          "id": "84d7509e-945f-4d8c-acc9-e31c6a9ac84f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "35198274-b9b1-4bac-98a1-ed1206c7cbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1d10bc-c531-4b01-ab05-0e0f0c5c98e0",
        "cursor": {
          "ref": "f4405557-5617-414a-89fd-b6383af68cb1",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a3af971b-1caa-464f-8c31-9cc2b7d36a2e"
        },
        "item": {
          "id": "bf1d10bc-c531-4b01-ab05-0e0f0c5c98e0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3f0443ad-9658-4454-8721-1c315c8add97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ee996b-1606-4775-8b5e-7ba1c7097483",
        "cursor": {
          "ref": "21634bd6-5291-4c43-aee3-6a2e41368e46",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b381fa7a-aad5-4da0-9d52-5d717484c021"
        },
        "item": {
          "id": "74ee996b-1606-4775-8b5e-7ba1c7097483",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5e4fc93e-a6a7-4ba3-bf7f-f2e14c1a80b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8528e1-9827-4174-b033-d27d29d19dbb",
        "cursor": {
          "ref": "5160eaa3-d83a-4e66-84ca-e68d650479e1",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6c6cc4f2-2a48-4ac8-ba1e-c6130663aa1a"
        },
        "item": {
          "id": "7a8528e1-9827-4174-b033-d27d29d19dbb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1c2ebc7a-e85d-4884-8760-41869d512528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ec2a8d-054e-4bf1-8dec-fe04f19bf063",
        "cursor": {
          "ref": "09c04049-05a3-469a-ad51-97b0e5b837d4",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a93d9f75-b4c4-4f16-86af-ae54b03a937e"
        },
        "item": {
          "id": "06ec2a8d-054e-4bf1-8dec-fe04f19bf063",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0108b4b6-5d8c-4e59-8560-fb431e2e614c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4d3ddf-76a7-4cff-aaed-d6cbc11125c5",
        "cursor": {
          "ref": "baf9c4ed-6b15-42a6-8b72-b8f93c60cd0e",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "18d57fa4-ad89-4fef-9a16-36027e39bc0c"
        },
        "item": {
          "id": "ef4d3ddf-76a7-4cff-aaed-d6cbc11125c5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ed1de2cd-139a-47be-863b-7877916874d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d1c5e4-9722-46e8-be47-47ecf2e0bfa7",
        "cursor": {
          "ref": "a284fa19-636d-4697-b05a-0438ac47c997",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a1826e54-b874-40a1-b642-55feb927d715"
        },
        "item": {
          "id": "d6d1c5e4-9722-46e8-be47-47ecf2e0bfa7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9f44f738-6872-49d2-aafc-05214aadc2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02baccf-140c-4399-a287-ae553a61d0c0",
        "cursor": {
          "ref": "4cf3d157-1153-4372-8763-1b60871d8d0f",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "79cb5c03-a97d-4733-bf3b-f60307d77ca6"
        },
        "item": {
          "id": "f02baccf-140c-4399-a287-ae553a61d0c0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "51c3242e-4658-4dde-96ef-2e1af3f68340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69295b7d-be12-4b1f-a11f-43379ff3b3a6",
        "cursor": {
          "ref": "b8ce4d56-36d4-41a2-9e7e-dea85fc0cec4",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e526f644-1780-4a9e-a9ad-4aa7e84ba8ec"
        },
        "item": {
          "id": "69295b7d-be12-4b1f-a11f-43379ff3b3a6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "599fc75b-4f74-48b6-b048-e13640faccc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deeb5d13-7a49-4bbf-8cf6-001b4155b677",
        "cursor": {
          "ref": "93c05c10-7863-4c4a-80e7-91c69b586065",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "179db807-9f9f-4925-8b0c-08f794967dbb"
        },
        "item": {
          "id": "deeb5d13-7a49-4bbf-8cf6-001b4155b677",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "703d5678-2053-4a9f-8647-fb924300e32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62191b6-bad6-4950-ad57-3e87bca2761b",
        "cursor": {
          "ref": "c13fde36-3209-479d-95b5-7e0380447cf9",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ec3b774a-7e30-4be8-aecd-4016b115bfb6"
        },
        "item": {
          "id": "c62191b6-bad6-4950-ad57-3e87bca2761b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "61c3f8d0-0788-4140-8756-52344eb78b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794f00c5-261a-4c0f-aa85-d5a4e5d64f71",
        "cursor": {
          "ref": "62340f4a-455d-4bbb-914c-ee5a25b7ed40",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "aed731d4-d9ad-4cde-aa98-890df4635d6b"
        },
        "item": {
          "id": "794f00c5-261a-4c0f-aa85-d5a4e5d64f71",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "babc2d12-b7a3-4d29-9d8e-a35a65abb1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605929cd-c06e-4171-badd-b35a20db4f7e",
        "cursor": {
          "ref": "9d7b68e3-e14f-4710-882a-23b8a8d3acb0",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a9c2d3ec-27f5-47ee-a85f-fda9c86a38a9"
        },
        "item": {
          "id": "605929cd-c06e-4171-badd-b35a20db4f7e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a084984a-8478-4b3a-9955-bd9d40a3304c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1d7379-599a-437d-822c-1e339aa92abc",
        "cursor": {
          "ref": "425aa129-bd51-4922-8fbb-44095ebe17a3",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5d23c0e0-8564-43a9-b8fa-eb2b8104b177"
        },
        "item": {
          "id": "9f1d7379-599a-437d-822c-1e339aa92abc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a2a9ddac-ce1c-4f47-986a-16d6ee0c1764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16123c8a-b50c-45d2-9593-e32f7339ddd7",
        "cursor": {
          "ref": "a4b84fcd-40e4-4626-82d6-b699104d5b9a",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f643a513-df8c-4af8-986c-887a6f1d060a"
        },
        "item": {
          "id": "16123c8a-b50c-45d2-9593-e32f7339ddd7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0466124b-7bfb-4813-8ef1-f65c8d5bbaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c779a382-34e8-47c0-9d41-0716dcae2f15",
        "cursor": {
          "ref": "c713ba06-4d61-439d-a6a2-d2f63b4bcc2e",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "04ce37d0-dc34-45e6-b743-10311a588e08"
        },
        "item": {
          "id": "c779a382-34e8-47c0-9d41-0716dcae2f15",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5bf4752d-eb0f-4978-8653-876f8d575896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9bd6ca-0a41-4e63-875f-9724268dcc7b",
        "cursor": {
          "ref": "aadb23c8-26d6-4c06-b099-439d4f3fcd8d",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "af3f2611-4215-452e-a0fa-34d4fc722266"
        },
        "item": {
          "id": "ce9bd6ca-0a41-4e63-875f-9724268dcc7b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "69f047f2-cf0b-4da3-a406-3b60e1086c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd44fefa-186e-4352-ac2a-904f6be30f66",
        "cursor": {
          "ref": "7946ae10-6596-4d37-9a3f-d2640e914360",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "81e9395b-b08a-4cb9-ac92-ec5a30353745"
        },
        "item": {
          "id": "fd44fefa-186e-4352-ac2a-904f6be30f66",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0a2fc3af-40d3-4570-81de-f5cd5c2c35d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc6a2a0-44fc-417e-8bb4-cfea7182168a",
        "cursor": {
          "ref": "53a85a4b-ea40-4ac9-a940-be02f1a02c3a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "466f2909-e606-48ff-8ee2-ac8c320f89d7"
        },
        "item": {
          "id": "3dc6a2a0-44fc-417e-8bb4-cfea7182168a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1c4b144b-7b95-4dc2-a428-7484e1cd7d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cdccc1-5350-4d57-928b-2a53795ba643",
        "cursor": {
          "ref": "36299c66-6bea-4151-867b-8b2c9a590159",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "bdc4b8d0-66b8-4b79-808f-7fccab6d8760"
        },
        "item": {
          "id": "53cdccc1-5350-4d57-928b-2a53795ba643",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d75a4524-fa4c-435f-a688-de7c1d46700c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20178f4f-e04f-416e-a34f-ad060f8a4b3a",
        "cursor": {
          "ref": "d89060c3-56ce-4e7a-bf40-9ba5f0af6fa9",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e9e8c4b1-3e15-43d5-a978-0309ed4e43c0"
        },
        "item": {
          "id": "20178f4f-e04f-416e-a34f-ad060f8a4b3a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "848dedf3-df02-4d73-a3b1-f8a2c0f3f131",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62cccd2-5950-498e-8393-7147af3df9e6",
        "cursor": {
          "ref": "7698b15c-66c0-462a-bdc2-76ba51dbd71b",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "24624251-67ce-44db-9f1a-17a056e6d834"
        },
        "item": {
          "id": "b62cccd2-5950-498e-8393-7147af3df9e6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ff9acb58-41ce-41dc-ba94-290b984d63a5",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b9401b-f1a2-4ada-b27d-644012753dc8",
        "cursor": {
          "ref": "e185f2f1-7f6f-4e72-b635-2a16ec3dcd49",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a286dc05-297a-45ea-8280-ecf42351c9a0"
        },
        "item": {
          "id": "b9b9401b-f1a2-4ada-b27d-644012753dc8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9a4abffb-2499-42e6-8484-60266457cc9e",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3366b6cb-092f-4a95-ae14-ce2d282ee06c",
        "cursor": {
          "ref": "3f601ece-cb70-427e-b498-4f526c4addbd",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d5e26810-9875-48f7-afa8-0a533e793c0b"
        },
        "item": {
          "id": "3366b6cb-092f-4a95-ae14-ce2d282ee06c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cd89d141-fb4d-4c9c-8871-214d29b904ed",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c03cd9e-20e9-4afc-9f21-d2b611b60253",
        "cursor": {
          "ref": "948aac71-1102-4170-a091-cdddf949e799",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1d6194f4-f928-4234-86f4-91ceb91f9d3c"
        },
        "item": {
          "id": "1c03cd9e-20e9-4afc-9f21-d2b611b60253",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d48ca52a-cf71-40be-8abe-a5884c092313",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c03cd9e-20e9-4afc-9f21-d2b611b60253",
        "cursor": {
          "ref": "948aac71-1102-4170-a091-cdddf949e799",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1d6194f4-f928-4234-86f4-91ceb91f9d3c"
        },
        "item": {
          "id": "1c03cd9e-20e9-4afc-9f21-d2b611b60253",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d48ca52a-cf71-40be-8abe-a5884c092313",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00531224-c99d-4e14-b684-72c3273034b3",
        "cursor": {
          "ref": "42185266-25f2-400a-a1c2-5f64f7cd09cb",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bfa9aef2-a0cc-45c6-be8f-64802bfeeda9"
        },
        "item": {
          "id": "00531224-c99d-4e14-b684-72c3273034b3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f89c55b1-0edb-4e43-8294-effb1a18dae9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7d8b84-0f26-4005-8461-ce6af36794b5",
        "cursor": {
          "ref": "867f94a7-9253-4362-8d3e-7447cf1d5437",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "156953b1-5cdf-41f6-bbf2-4844f147db43"
        },
        "item": {
          "id": "cf7d8b84-0f26-4005-8461-ce6af36794b5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "645a1532-e157-4266-8f15-f7cc4be5f27b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}