{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a4993112-149c-449e-ab6a-5ac0b36aa9e9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "67cbe875-f86e-4050-b2a2-ef580789167f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11218a53-cccc-4885-8f0f-948b2e289dd2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a24fbeb1-9f51-45eb-924f-bf84f7f97ec5"
                }
              }
            ]
          },
          {
            "id": "6770a83b-83d4-460a-893a-66954fcea10f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b8baf34e-0e1e-4038-90bf-2112b9e47ce7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9b3b8c88-d007-444c-91e1-649e17b9add3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "768a5540-5423-4f50-a4e9-add2aba0d72f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e6ec37d5-ad78-440e-9f77-e2a5b4fb7e57",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ff6d37e0-f3db-47de-acf1-31d1cbfd96d1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78d08f33-8517-4106-b2bf-c88a9d2f3249",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2b9b49a-6bde-4834-a449-5cb9253eaf14"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4620e58-907d-4ceb-b444-88aaf652161d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e49a247-66f9-4626-904e-35bfd3124878"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "15f6c1f2-3620-4c7e-9f1b-ce7818d47bc5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e7d0199-b48d-4338-a60a-8be86d62813c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d216123-ab9e-473c-b215-d5d43e3bc6ba",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dedd40f6-f02c-4d80-a99b-097db505810b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59b07cd5-75cb-427c-859b-c44f2f723cc3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "944b756e-1578-4326-b2bd-69f60c8aabca"
            }
          }
        ]
      },
      {
        "id": "269f1c25-f475-4db7-9c77-eed3b1fa98bc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "76178c76-5e37-4288-9d43-5ad4954a08fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9c41b12-a3f9-42a6-8980-fcfbd5488697",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "81caf5de-24ea-4415-b4b1-a1a552212c28",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5ebaf9-8cca-40cb-bb27-682613ee1a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "136b95b4-515d-47bc-b7ea-11b9104ec2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca211e7-d625-4f0f-a54c-d60000ea4d4a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b494b17-12a9-4b56-bf83-312b13296211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed8404b7-1776-4aaa-a48e-ef34862289ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c8a598-d90d-4cea-bfd0-10189ca0200b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1eb092b-100e-453e-9440-dbc05b2f55d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0552193-6355-40ec-b88d-0a498b5b8912"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a788d6ee-0459-4907-a519-b5a2b1af6085",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f72cdb8f-4baa-4020-a11b-0741f8d94788",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a190eeda-d79a-452c-a875-9b8fd506f7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbfda1a7-f5a5-4982-bd51-0652a7f3e14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71af5ee0-05c2-44bf-a72c-e446af7dd60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1cdf2a-7bff-457c-a2fb-2be975e7c921"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d1825fd2-40d0-4130-8f6c-32ba52e68a27",
            "name": "Positive Testing",
            "item": [
              {
                "id": "00eca6fe-a737-4ef3-b59f-177583714401",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b596be4c-7bea-46d4-a344-a2449aab1312",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "28aaa23d-4fa2-42f9-b2af-f5f1d29d3ae4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d42b72f1-3ae6-4ad7-9e57-5381460ace69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8201ea8c-fe26-4595-8874-3dcef43880df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00fdb8b5-047e-4450-8d04-4fdec4e5cccb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2bf4f62-221d-46ea-b3a3-d35370066180"
            }
          }
        ]
      },
      {
        "id": "11eab599-d17b-4379-aca8-cd17d810f9ee",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "dd09b00c-3632-4547-bdb8-6191b52e2730",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e2af565-65a3-445e-9018-180f856efb3d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "26c14c35-a2db-4c8e-ad6c-5ccde0e5a3af",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b5673f-6f31-4bdd-92eb-70183423e28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd785d7-f957-4f2a-be39-9a19cf598c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc8910b-77b0-4bc3-8988-1675c8c8f971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e561b912-eb80-4233-af96-1a8ffc0fdb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd82efe-bac3-4e13-a895-9919459b5b9f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec454f0-2241-4ace-bdca-c7c46f9bfbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e8aa37-5ebf-4b7a-a0b6-e73445826c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecd1d07-f108-45f7-adf1-7c2cb2edae4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a41d8904-bc50-479e-96cf-68143dbbbd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e741ef77-38d4-44b2-aa1b-fc41deba34a5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbecdad9-0bbc-49f7-a955-275c0709ce2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b521df3-59e5-4df9-b9f8-bf1b71fb720b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57e5cfc-7103-4e00-93ba-c63db8a6f0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16b83acf-16ba-40d3-be0c-aa8e2e32d033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfe415a-9f9e-44ac-8589-4b671fafa43d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56129f4-33e3-4fb6-92de-7d267f4d83c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8fa91e-1da7-4086-b22a-10af24bbece3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b42b29-61de-4198-8168-050993acfaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "089ce5fc-1490-4738-ace6-072431075aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39d0eb5-46ba-4d4e-942e-383711ef3202",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ccc975-6074-4ee2-8105-f403d657ca28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef95432-4ffd-4ce3-9ac7-1846a31f1a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c899b0-d5c6-46b3-8089-c8632117ae76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5dfd77e-1b00-4b10-ae0c-3cdfcfdca2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c731779-752e-47db-b2e9-468dcc78d9c7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce12e1b-c319-430c-9d83-479c0cb272a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b8a95f-7258-4bff-b8d4-b813780968de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e446b5-9c89-4c9e-a7da-a7660ed0a069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae1cb591-c6a3-4871-be0c-22a997c543c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b98696-28f3-40aa-a1db-e59e4aad0473",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8675c32-ef60-466d-9a42-85d406be6f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d46b54-5d68-4651-bdda-80fcda802908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5a7fa9-e7ee-48a3-8f12-6d31fa0b17c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab1cdee1-6f9a-4b91-9e5e-551765b1a15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb183870-0dcd-4243-baaa-c7f28af7c5cf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5775ae-c913-4fa5-845e-57d578207c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8bf6c16-d475-4775-9b66-6f9c61f78f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48913b65-9f82-4178-8792-edbe102c472d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dee69538-f5e5-4220-88d3-33f937098bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c309959c-5d09-4777-834f-d0ffad8b7d47",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7cb516-bdcd-420e-a26c-b2bbd4c6c275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766e5665-27fc-4745-9017-67b3aacb5500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9638a133-8a8a-4813-a839-5afbcda3a87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11255e1c-7b13-49ce-9f39-6459d566d931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225ac055-0f70-4a56-96ad-ad4bfa837148",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d26754-0899-4dea-b996-b2df060faadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3512972c-0460-4c31-b43f-894d17709a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e40cc1e-d703-4599-a4a7-176449d28f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddb870ef-6a04-4708-aa8c-5dcb9c5e4110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8340b3-cf27-40fa-a18d-c22e40241b2e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f942fb81-7206-4e3b-a94d-4dc442cb84ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c8450d-49af-4153-8d49-64336ee06106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43ba643-507e-41e0-bd50-24fe4d2f9565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ee7275e-b9ad-4b92-a29c-7cabcd4be189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0d1e71-eb64-4d68-a4cd-c1cdc826b1f4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df810d2-e53b-44f1-9fa7-523af142e584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b9cf14-b660-4c30-9330-4f1d5cd8183e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a7992e-f965-46b0-ac53-e3c56a8156da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13c56f67-d3ca-48b4-aa90-64bfac04867c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd42f054-9798-4d4d-bbce-e172a7ca04fb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ea0f4b-1ba4-4696-8cc6-5a65fe779989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91d13a3-8ae2-444d-af7c-0ef88b19a4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd20f931-4ec6-4437-be34-26bbed8377b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10b498b5-ce37-4d0b-a4fe-e389ecb5c249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ab1299-a54c-4b9d-9f74-ae3c4e74e29f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c866ca0e-aacc-4a5c-8a53-75153f6eb1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd1dee4-29c1-42cd-b573-607a431d76bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751bbc85-c07a-432b-a837-35af2d47fad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d35abc2-21ce-48dd-8176-3c0d8ec5c7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661f42e0-41e5-4e44-8ae4-1eb771f453e3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd0d907-644f-4a44-8cb8-da58d7c252c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ce7122-7c97-4c28-a542-df1292d5e3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56374d2-de39-49d0-9557-ce36f060ba3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b917316-6c53-413f-a05d-db96fb2ec597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6c18b6-0bc0-4176-ac83-5935b7df4142",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd3b080-9b35-48af-a69c-ca939bedbba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7256f3f-6527-474b-86e4-55f8f70cb9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c5d685-46d6-4ec7-b4d3-ce4d68f8b5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97aecd92-bd86-478d-9526-63f7df8180bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7efc767-5aed-49c2-b45f-a008b5aa4569",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc21f3b-7ffe-4640-beaa-89f832719e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0042b97b-beb1-4e2c-b745-537291d338fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3194c0e-4815-40a6-87f2-e95a36a91016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20d1f675-2430-410d-b7cc-8cc53f8e0dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00160981-f325-4fb1-a98e-4b7ebf4e525a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d779688-5dca-468c-bb95-fa0fce475465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f2e21a-4187-45bb-a974-0e75b641a1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e972fe85-7786-413e-8e3d-685cee1873f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee758890-6250-46f7-977c-e51f0d5cd4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b820df-f07e-43f7-9312-b22ff54a701c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad1356d-9e0c-4705-8154-7d67a1d909b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0185f3-bff2-44de-b9bb-af3f118cc8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb886fe-8c99-4676-9b23-6170b8804e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72b5ca4e-d751-497c-8628-6de76b533d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af77f1e-75a5-49d9-8ccf-d06aa3cca6ff",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbbb940-c40c-4bd1-bbda-ab1d6f8db866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650ec959-a54a-44f4-b181-8432cb27c12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3799aa5-3c07-4366-af98-29ae6c298d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6cfa61-9ce2-48b5-b0fa-80f3d54187fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6868b51-7247-420d-9153-fc66a0800f26",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43676ffd-2e20-4b78-a527-cbcf35d00da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d5d5dd-c642-4e5d-9d5c-d324e1718661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c47a4d-bde0-4fad-b5be-9373d2dcfe71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1df0914d-cd83-4409-b9e9-3b52843593d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f012c350-263b-485b-bf66-29b04ff8f902",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff4d3ff-2d80-4ce1-b91a-48c9885452e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a405dc-40d6-455e-9059-ac4ee672aca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f1da0e-0c6e-4a14-a438-089f5f96d58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76617b63-b04c-42ec-bcb2-01a234402adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76f24ab-f13d-4b79-9fc6-7dd760214b18",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd9a2c0-091a-4507-97fd-b16590877bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd46c551-ec73-4b59-8545-d488a268be3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b0305c-3aa7-486b-9740-6010b7231073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5210bccf-87bd-408e-85ad-e09995f43372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef5e5d4-0eee-43e3-b36b-46332ea4cacc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec702d9f-8c3e-44da-805d-f42934b87456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb97893d-d34f-4e5c-b1f7-11e1a01e4081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a0f309-a3c9-4f7c-a51d-56d9d4facfa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d29fc725-b10a-4781-9be1-ead7ee6024f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfdf6f6-92d5-4c93-835f-0b572f317e09",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ad1490-447c-49b0-afdf-c8577851358c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a21d16e-ab68-4e09-a67b-5b472f88671b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8158d89-138b-4a07-8489-1d5f1919fd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cba976d3-dd86-4aa4-97a7-c35146b500e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33999d7d-292a-4030-bab4-9dad64bc9d35",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1edfc90-4673-4a97-aa79-c865cd262668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1aa150-faa9-45b1-9a92-e76225554711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8b144c-6c36-4e55-b87d-0cf25d66776e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3ae35a-622d-4085-bc77-2513748502b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d9a055-c813-4a4c-9438-c348d135e616",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c98fb10-b774-4d52-a51b-10fdd7f640ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b0d380-724d-4385-bf30-8b4d8884c3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ec78b2-0f8a-4562-a123-f44e5396118f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d310d5e4-bcd6-4cb7-9bf7-b173f5d8f180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990b36c7-9f0c-47a1-af51-d5d5d2ab35b4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6827069-b7ed-4f27-9ca0-720062de647e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13c864e-76b4-472b-b272-aa3e56e980e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c275d22a-52dd-453c-91fe-6bb94e433b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b90d91-ec6c-4155-aa54-7e284d069d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af92556-10da-4973-8a25-40d14e4e6ed1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd530a09-ee66-4a3d-87f5-9903ec016b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c26a45-c0d6-4bd6-9bb8-05fa3ee4f606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd5e052-2c32-4167-85d4-262a3bb5f253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68bb65f1-da1b-4286-9d02-9632ff3e7b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f5c3bc-3e53-4d60-9486-5af906f71896",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f53e26b-341f-4ed2-9ba1-ae0d32bcc388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a36ae6a-d840-485b-b183-bfd09269501e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4a6276-a9ab-4f19-b170-c5aeb336fc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c20298ed-e1b4-4afd-b509-af199d1c726a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e5d922-6267-4434-ba52-1f37e397bdef",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5d3d49-9096-4f94-bf1d-7ee795b62245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732bf9b0-65c3-4110-9252-cd2c1da9999e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220ea566-981a-476b-9801-74efaa4e479a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43156d3e-fd61-4f2a-8b15-9f3291eaa0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d59eca1-0ee1-4af5-8e5c-5072ab2c8433",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6464dd39-f268-4b41-af9f-8f5b4d1a4412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff626b3-4ab2-4fa3-b2b9-216c2f25622b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05e540d-d63a-4dc9-9ef1-c38025198de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee4cdfa-1b7f-43d1-9a21-b7f70d2ccd99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df066e2-7371-472f-80e9-78fba7a67be2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f0c98c-4c93-4cd1-9ee6-47f5741837a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de30b83-6b19-434e-91bd-efda105e9df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead8e9fa-6421-4302-ac5d-10ef03713786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8588a26-7286-4c60-9858-9e572ba74bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef33a09-f800-460c-b80a-0b924f7617d3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab90f29-815e-498b-9be5-7b960b0f197f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8afc021-0515-4841-86d2-619209ea6768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074848d9-8ce5-4bec-ab87-f88bfe891052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc41c09-732d-4edf-a12e-df44e88373ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf76275-7819-42ef-8e6f-61faa8a2e4fb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c060beff-9dcc-48da-947f-4827e2058e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3728886-d198-4cef-a9c5-f858027516e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca232ee-66b5-4d7c-851f-11786981f387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "07702079-285b-41da-bb30-e5faed0a00a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201c0b7b-7670-4fe0-9109-0442aed71e64",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf78cb2-7c68-4f98-bcc9-09468336c62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1503a984-700c-4b5b-82dd-9c724eaa52e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c994ce-bf24-46da-910a-8beea0a3bddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9587f974-2eae-4cb7-a957-3e2bb6c416ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4badb78-5d26-473e-9a9b-44cdfb5f82b3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d06fce-298f-4362-a93c-656c492bb147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbb78ce-f06d-4d4b-ac56-a127cb6ac09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b333ee-c50b-45cc-a95a-23e83d5aa4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbaa4317-f3b6-4129-933c-8ad894aa6363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0113b27-6b5d-4b12-bacb-7532ef503e1e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b068434-3bfe-4b20-b602-9dd9fbc1fc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58fe941-2f2b-4a40-863c-8d337c187e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8d2cb8-d667-4d9f-9fe0-d076f37111e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d3969d-afde-48db-8fd6-a506ed6e1956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0203d93f-7759-4a3b-b593-8ac56b13ed45",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335f8fa6-4fff-4435-9093-1f9690a6bcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fcc6793-ea04-4dc3-b773-24b247efc8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0711eead-4caf-4228-8fad-6553efd1861d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f894a94-a884-4df0-a9b4-6191c292a165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490a8c13-0129-4d86-96c6-9a1080079d03",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d610ffa0-c94b-40ae-a14e-40caf2fecd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5887a028-9ba2-4b7c-a46a-e32480ad0c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74375f1-db32-4dfd-b87f-f822826ff3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "200c172e-e704-417b-84a8-29676b857adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315d06a2-b3c7-45fd-973c-a15e80dd6be8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2408a8c9-4d35-4930-be7c-9a98bd284810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71fa9d51-fb70-47b4-8155-57da5c5c5e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdceb66-8de0-412b-82c8-2206924b2fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad631050-77c0-4479-97e2-9a3c317543d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545f8054-0bd0-46c1-9ddb-ff72ce99ed54",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0f682c-5a1f-4419-bffc-6adcaa7a3bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb407a7-943e-444e-b6d9-4cd8c0f20e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc69cfe9-3730-4537-a956-b9e36962fbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6a2954-a562-45ab-8b42-b7078e341f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827d88d5-da00-484e-a18c-09e142d842f8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcb8b21-a0a8-4012-9db2-c2c9f7cb66dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c2d5e5-a8f5-430b-8132-0552512e4482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f385e3-7928-40b5-895e-5526b7cef6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1a40f0-d974-4656-b476-f235ca32a72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fefb1b-9077-40d6-9405-0ab3ca287f5e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c51e1eb-5654-4689-a99c-d76142d0cc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e155503b-a21c-4af6-bcb6-20dfc1e8aed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c65a32c-afdb-4a89-8bb8-72de08404c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1945875e-bcb2-422e-9741-f6333cd988cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10400ad5-5cee-4fde-b5ec-6fb68275bb9e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f48ff6-0648-4ac2-b29b-33f1fe2fba13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15ea6e8-7d85-4452-a513-a77a83d19ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1e8f93-4f76-4568-aaf0-004e1a7bc81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf15f34-c91d-4d28-aa66-50e033997424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7d2853-970b-49c5-ad0c-746521d952cb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c672c70c-83a8-4ed2-b30e-929b6f3c29e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e8b651-01a6-4319-a394-299aeff4c94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8329ef2-da60-4804-8272-0a6d0d9825aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9817489e-7d95-4568-a4f8-d823cb59d7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18dcb83c-00f3-46c6-8f6f-3a920a6639a7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fef5c8c-51a1-467f-8d56-4c40ec2c9c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73403f37-3b5d-48f7-ac00-b0dc24f2f2d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f39279-f980-4345-9d6e-fe08224933fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eba97bf-617c-448e-97f8-cdcc907dbd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d1311e-b2c5-42ed-8fb9-951be517b3dc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7e6584-43f4-4550-90fb-5e12d85c9f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d08264-38c3-424b-b4fc-deff333ec711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bf6a86-f99a-4a25-817b-3497096f04b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1b7c6d-a437-4f5d-a4f1-e26a02958bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20852de-b23e-4f11-84b2-aa934df80815",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b475fd3-faf0-423a-85e2-90819771b479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd3c335-b9b6-4eb2-8d75-2aa1a33434c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7883b761-34c3-4b52-afb0-513ba06fa62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96f97beb-e266-485f-a4d6-8fe5f5e40cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d299be-d0cf-4387-a12e-6574488ddd0c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41012c16-935c-425c-9e47-f7d0ef66f9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cadf2e6b-5756-494a-b44f-0ed3f2b4edc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75839813-1cbb-486c-a82c-91f1afa522f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db016122-c3fd-4a46-aeac-dfceb9844543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cfa54c-ac5f-4889-919f-a9d9bf47a14b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd87191-b3e8-4de8-a93a-15855b2be3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0b1bff-27fb-4e79-ac49-5b6e906eedce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1348e34-84b5-4277-a735-21828e6781d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c8d411-605e-4be7-bd04-e0f977d944e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d44a33-6e47-4736-b1b9-3318772baa21",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec708ed-ebaa-4dcd-a8f0-032244ffa0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b60d8c-4a63-4ffd-be40-65121dd9506c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21da272a-f17f-4f1c-a930-972fc1fcf025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aea0902-42d2-4fab-bbea-ef0042a522d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76d5fb9-aa0a-42a9-8aa8-a50978c7d305",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db8b502-20cc-4ae3-904d-dfe8d83df318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafbd0a8-20a4-4780-b505-0e1d6afb4283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d1fb10-8698-4c27-a32d-e0689bea44fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13b1862e-2f3a-4054-81eb-de9d3a904d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb563144-08f6-48fc-a5f5-8722682a7510",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75c78d1-244b-4304-a306-3489a4a5da41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74207985-1926-47dc-b54b-97d27062db3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e3bf11-0eb6-4068-ab09-b28986b991aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6ac701-f558-4132-99b6-68ce158666dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd10a9e4-8bc3-4339-a4c1-6fc6430ea76c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90e538f-686c-4984-ba25-b3a607cf596b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba649b8e-060e-4507-9da7-1e176ce7c44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62323236-34f0-452a-abb0-47861588215b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd30c69-2e9d-4682-86bc-b4026f243d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7646a943-0da0-4e87-9d75-97e3b19466e2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccad9fa5-9a20-4c7d-a937-a43dc82a9ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830a9406-deb3-4830-b11f-1d93b462afaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf3fabe-b54e-4b34-a9fd-91723bd98bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa7ccf9-89e0-4431-af56-aac04a1131b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac7f2d2-69bf-42e5-9d10-4ea98726f78a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb05ae1-2fe8-4d76-898f-b1643a3299be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19275916-2ee1-4dee-a015-aca3a849b14f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fbe8da-479b-40a8-8214-b1995b7d2599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d63802e6-778e-430b-86be-8b17470ba3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb47c8dc-1830-4759-b665-db4b98101dc6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508299e2-cdd5-4f9b-9106-44bd3fa39880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce256ccc-4f2e-4b75-97dd-e85a5a373080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f5c04d-0e2a-493c-8222-85d0cb1115a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4af2a9-3c21-4d9b-9d19-d95957537f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf37561-d6ac-4f76-9f6d-fc9f5771ec19",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc10851-5483-4e20-9c16-d3c474ece142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fa19eb-34e2-4936-a0bd-f49b5e49c5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7aa0d8-2ae2-4cdf-a897-ad1d1504fc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe275ca2-401a-4b77-861d-454eaf2a1cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e036cfd-899f-4efb-af3e-eee816ac15a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd68ba8-7b18-4fce-951b-990d20b4cdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6006854-d3fd-429a-ae50-80f6d7c542e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993517d5-320c-4c2f-aa15-6893be9511b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c536431d-bb99-4c20-9941-02205adcf935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca05ba4-06a7-4143-85a4-08860d15a478",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b81a951-47c7-42d5-a68c-b5acab6124c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9016e5f0-2bd8-4066-8258-47a4b1f9bc56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028f8c52-24a1-4a44-b0bb-565cd1e0cfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee15ec2-0aa0-42ac-ad16-1ad4a594714c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4971d0-0290-4c46-a839-449d4929d7ae",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93141d26-1cc9-4ef8-ade4-e15a2da261a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0a711e-690e-475b-8932-5d21edf19310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36388799-f0fe-44fc-8029-f82bae1aeb68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d555f0a7-f4b0-4d54-9b8a-a6c10a5db408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813f0acb-c56d-45d7-a8ae-806613cec285",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce661841-85ef-4184-80a5-85e80334cf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f496e04-7be2-4101-8df0-014a9918ffb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e330beef-5ab2-4a03-860d-2b0d01af1f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c498c5f-4923-4bdd-b315-f59182b7526e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6120ec34-7865-47b0-8911-1311085091f5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07c60bf-6034-4471-ae75-298cc6c5ac23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3fb0690-1a6e-4826-b714-9e0c208c45ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6e7577-6fae-4575-9b10-a891e5c1aa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64cd04cb-aec8-455e-b8a0-cd404b85e78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a36365-55b7-46d4-bdc8-8c76bf9e675b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc402dbb-6382-455a-baa7-0f4128cbf91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903b8c82-7088-44eb-8052-cda2cac0b12d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8de260b-db72-44ea-9f9a-255ee76c0040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1089e7f4-67af-46a7-8670-08fb250c31f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee7512a-bb23-4250-aef6-e3591d6c7773",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80c3daf-a83c-4a6c-a2b0-045bba8a0763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8641c1-f247-4f3e-ae11-53d79e6d8c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32731013-69c1-471d-b5a9-98238be7f863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3ad6c4-748d-4f34-80b9-86847820e414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eaba95b-4c2a-43b2-b73e-a2ac753511cf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c28c61-2ba6-4d7b-861c-3c1a101f774c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fbe794c-813e-44b5-95f4-706b7f8c48ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccab07c-b254-4c9e-b1b0-a714a0dc2d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "959feef8-507f-4f64-8bd5-66352cac56eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee77a00-c7d3-462d-b6b9-29fd173259c6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205bea40-b9cd-46f6-8263-deca9e0c4a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d48dc6-8eea-42bc-b25c-93198f2015b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38f36ae-31b4-40ff-b481-77d7d521de76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d25e77-a46c-473b-8b36-3b7b0bc9fea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cb0bb3-89d0-4059-881f-7282a78a179b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8e4983-6760-438d-91d4-c7bf3ae02830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367c257c-6e17-4366-8ddd-921bf11dcd71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01bcce8-bfca-4593-b13f-13c6eca01c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a836a122-0c48-4a2e-8b16-7bb13f52bfa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3031f89b-946c-4574-b489-679f98b3747f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5194f3ea-d597-4e7c-b4e2-9c5573efc6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446cbca0-2e68-4b16-b688-12c236e3c2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd42e7b-5062-42e6-be19-e1b16456a15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73128fe9-f78e-48a0-815e-170195291cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4e773f-54f9-4378-8a99-dfe5040ca37e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0fd122-64d5-4d11-a691-61cd09a178b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c3e648-8843-49f0-8f6b-8855401b0a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d233522-9e7c-4332-bc20-04895a0b0d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e922ec96-e4cb-4e94-95ae-22f81290d938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3348dfe-3832-4019-9b06-f479f422349c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba588cd-428b-4cd9-90c6-700508544862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5705f56d-f817-43ac-9ee3-377de310146e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179aeb6b-b928-4191-b192-e98758d56412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "373f2882-a8e6-4919-b8d9-e28e38c55d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f27cba-deb4-4226-a5dc-eaeca56ad03c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005fe854-2440-42d4-aa5c-5ae2d3dc1a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f74f43-61d4-44c6-9298-8c267067f02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195d0a6f-3bbf-4fef-adc2-fbef9e7cbe3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe5fa47-4650-4e7b-aa02-385fce94dd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7cf234-1d70-4785-9c46-155f17071552",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b445d6-7b47-48fe-ac6b-24efd8218506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132dad11-7a6f-4d1c-8637-6e341b974ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317eab90-b39d-432e-8b04-4b4f2b0702c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5394f9-817f-41a2-9f26-5af5254b8fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f038dd28-387b-4de4-8750-1cbcc06c099f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a46e54-ccec-4b2b-9a9e-b633e6527bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db41aa94-134d-4134-b677-8d715f51aeff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f478215-a109-400b-84c1-664099482748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd34383-f1f3-4bf7-9068-923f22ee8931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1657959a-56a5-43e0-953b-74c8a9c3e4a9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edef00d5-92a2-4065-bf23-f09634ddc9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7efd66-5dc0-4e18-b0ee-fbf91ebf30b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3def3575-f6e4-484a-a753-1cdb2da86feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1dd857b-b6c3-40a2-aff6-013a1847e8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7a6c59-df42-49a1-baa2-ff3e025c3440",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b050bd-4c67-4c00-b328-6ceb3ab6e321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6a0e5f-ad05-4b6a-9966-7c836e9e195e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031363fc-46e8-40b7-8fb9-32a838f6406f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eba35065-cc57-4b56-8960-45266aa177d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e5c310-92d3-413e-9fe6-650639d80040",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3202e9b-13d4-40f8-882c-89bb3e830d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3a090a-06ba-45d2-97cf-b80dfe5bd19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c97120-9c25-41be-b5be-8965693e3bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b51a5a88-f9d7-4c4f-91e0-fd0f2c19acfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f891d131-20f7-4fdd-ab9e-043ffe5bcea3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8508722-3756-48a0-af70-8fa1cb3f5b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa7befd-6aa4-4994-9567-2e129b9a5d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd61073-752d-4c2c-b7ca-3235957d9db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ac84dc-5e54-4c83-ba53-cfcaf5fdd7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc12ac76-e1f9-4480-a240-83e90f9dc45f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd6f6c9-a71b-4a1a-b8bf-c858d1db320d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb2bd9f-583a-4197-ae44-26c88bc6e124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509d22d6-cd75-4171-9971-bd542fa2f37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c87594e-2f47-4d0e-8d2c-3ac450662e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c35e6d-7bca-4d69-979d-b89ad857e3d9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a111a1-d82b-4b5b-aac4-f63f453e1021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0057342-25c0-4884-adb8-43d4a21b8bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83255188-f991-4b9c-af66-9fc80bd15bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ae947c-0b47-439b-92ff-90013786c8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c863a51-ceba-4865-a94b-8b8edab7d406",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37a9e26-41fa-4b37-b29d-1747d0bfd49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f6bf4a-f0ed-4884-af35-41297546c05e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e0f99a-d985-4c31-a9a6-2c92bcd1f9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "475c090b-72be-4805-9167-b9be3186791e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636acc24-0fd9-4923-9079-4e351e2a0ddd",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b7b9eb-1040-41af-a1b4-bc34616b3deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d30fad-2713-47d2-b6f0-85cdb3c2313f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45c7db7-777d-4e94-b813-89a5e585a48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f329f36f-6c1b-4dea-be30-bf2c7b79db7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e160dc9-45bf-4a7f-80e7-7190bfbce661",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b54380f-bbb5-4da4-926b-ca89d5454d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2c3e5d-2226-44b8-910a-636d1084ad4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64810d3-018b-4db7-a091-6a92cbb7dbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1935ee51-5b97-49fc-9efc-6f7d2f349843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348c49b7-849b-49da-84b8-261cb61b8b47",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f109dd4-1d9e-4a9a-8c5e-dc53064defef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e982f37-34f4-41e6-b522-7d9a63631ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517d9a7a-ec08-470e-8c1d-279762eb25be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28c4a57e-5ca9-4241-84c8-c11f5a09f8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8a7b06-2f80-40a0-9c7e-abd347d78f27",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a14d32f-92e0-4bb1-bdca-da9e49f94eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c8e2ee-2ff3-4278-82ab-72ee1b0e2586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441fa42b-b735-443f-8ff1-00753bf09a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02fdd79e-ed19-4835-a60e-25eb37a346c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8113216-0fd8-4782-b14b-a1f3c6809043",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd84b00f-98cb-4211-8aac-c2804d7edbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19247b8-29f5-4db0-896d-b842f1cbb373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497eb0e5-8f44-4b7b-adb2-c7074d92522a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "466e922f-3757-4fa0-ace3-f20a85c844cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106f4b2e-3d74-4c5f-acc6-03c02c2720ee",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ae17aa-d636-49a2-a0bb-6b5c68fb6c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e56f7cd-5d9c-4f9a-a67f-605f3b654c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71b2718-74e5-45c2-b767-c15aef38b042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b1b9ed-c721-4567-9989-dedf4915c19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef007de6-68ad-42fb-9efa-64645d62847d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318a72ff-9684-460c-970e-507ede9be47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd9b695-91cf-425f-9cf3-8bdd82af7c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9f9e32-d275-41d2-80a7-3d115eb1bb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e02a005b-9fe2-4d2a-89c9-e8c6993005cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0de5e57-8781-4311-a4c1-e2562d118873",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2e73ea-fc77-45f9-aaa9-556705cb4a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef6bd02-17ce-4b0b-97a8-6cc398323ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d588233e-9cb5-4461-96ce-d5413262fb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6672e11e-f57f-4d2c-a19f-191b2c645d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1429c4cc-1a9e-4269-a457-73cbfcc2348f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f87e342-a62b-4bc5-b3fc-d00f38da7daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6e0808-36f0-4c91-8b74-3d4091652d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5839de56-5c7d-4d52-af59-8c0f74ba253f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1527e920-c8bb-4428-8018-cf9b53e6c33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1594a02e-184a-4fd9-aa62-ffb3461f8d48",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fd05fb-44d8-4540-806e-fbd119fad9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e87530c0-8ab5-4c49-bbc6-b0febf4b1c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b802b7-acd4-424e-9ab5-5b5f2c97ea9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1dddc5-eb99-4e1a-885a-ecae1a334e50"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2bf939b0-ab6f-499c-8171-71eb8b0fb1d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "825c57b4-0405-43d5-8a4d-1827082e8e11",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e9e914-5fa3-4b56-a2ad-b972b5c0c0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdf21077-7bdb-4cb4-8aef-12ad55c76464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3f3807-9093-4292-a63d-1cc5dce1763a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8335602-0b43-40e3-833c-ca4765160d22"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dc6faa0-6eff-4fbd-bc4a-5f284ed3c317",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e349547b-79bd-4919-b106-a8278201483c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50b01c98-a3fb-4769-8924-1b8a2be13a4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1901118a-175a-4223-b13f-072e7c3df430"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8ba4d180-40ee-408f-9765-629d0d8711a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9ab2bec-d390-4b02-a116-0fcc6aff01b7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e8a88a53-e7fa-4030-a867-c06bfd8373ac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1cfea4cd-bf40-4e7e-93b4-6b1a501277cd"
                }
              }
            ]
          },
          {
            "id": "eb38727b-3cf6-4b8c-9a56-594f4ed3e0e6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "feb2c421-e977-41fb-87bf-9ea769850259",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fa1fdf1-6f75-4f6f-a014-799c399fd5c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6fa99e8c-0738-4437-8911-c82155d4272c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebf9c13f-7404-40ca-8ffc-b800acad7baa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6b5fa63a-71d3-45d4-bdec-780e49ca4c33"
                    }
                  }
                ]
              },
              {
                "id": "ed16cdf5-377c-47f2-9316-2706c807e7be",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a69451c8-7258-4a39-83ec-057ea921e4f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "513e1281-a973-40bc-a463-b883b9177169"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60c10794-c516-4e32-a94e-8de8d57ccee4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ea8d5967-4945-4333-964c-930ada033c63"
                    }
                  }
                ]
              },
              {
                "id": "ce0f4c34-71aa-438f-9c61-7ba532ecfe97",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ad81190-6f4f-4069-b0ae-21ba7b28402d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "642e1fb6-01fe-4872-aee7-d03bc394bc67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "780da26e-1eb4-4507-bdde-3bb6e6ad8c6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "68bf9820-c945-48c6-a431-b8222c4b1518"
                    }
                  }
                ]
              },
              {
                "id": "c05daab5-b4c4-4e43-8d77-a0f7f7174d6a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45c276fa-85cb-48c3-b27f-a575b511d51a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "543daf13-cfd8-4cec-a6da-f4aed1de966c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f79266f-e272-469c-9dde-adcd46d443ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9aee6cd6-84e9-4239-8491-d4a5ea1ff1b0"
                    }
                  }
                ]
              },
              {
                "id": "372e861d-3b88-4a75-bea4-1e55f79506ab",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bba09da0-a963-457d-816e-70ee2c9de5ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32d13694-21d5-4b1e-908f-96a0eda93829"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c6b5398-2169-487c-a0c5-b390e6648147",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ac6410d5-6412-49fb-8fe3-729ac3291e6a"
                    }
                  }
                ]
              },
              {
                "id": "3f94f7a7-6ed0-4988-bef8-99c8b34a7910",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db21795f-0d5c-4b85-99ab-fa4657893e15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d283f28f-4cdb-455e-9508-63e2b81aebc1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1befdfe9-44d0-4cb6-a520-0a537811c132",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e8dbc7a-257d-4eae-9fb4-b0ce447e6070"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a99a01c-7b6d-4567-952f-7b3b0eac5b26",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ebbf0e0-aa42-4f31-8304-cb38b562f623"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "19d0f998-bc9c-4fcc-a56a-4159e903c5e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a465e30d-e581-40c4-8376-f81609d058a7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df8ea294-37c6-4cbd-b637-1c109a33ce3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6bf84dc9-615b-4859-807a-a589b0283dc6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9fbcdc2-1568-4776-8083-fb28fc1024cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "505f54e9-9ad5-4d21-9a1d-cb8917161754"
            }
          }
        ]
      },
      {
        "id": "520bade7-969c-45ec-8fc9-0928e5f9ecb7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "83a4a9cf-7ec2-4f15-98c7-dbcaf3521a81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34753037-4b51-426d-8178-41a134b67b52",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ff6aaf7f-012e-454c-be4a-816da8fd0e33",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9846c0-daa1-4c22-849a-9593626612dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2f8831-8e81-4b89-8da2-573cfc953826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9dc685-fb67-4735-b010-848626163ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e970d615-6e72-4efb-9690-7dc52b1f9c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d724f537-d12b-4dce-8230-4939d6edf077",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07042fca-80c3-4189-bc7f-4bd04da5e110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed7cd7f-e140-4dd2-82df-50588c9826b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3593a365-0c11-46fa-b6c8-a212d024f08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "991e5a35-5189-49e7-847c-cf11f2e813cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31287292-a1f4-485b-8170-5453b6aa8d72",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bccbded-10fc-46a0-af02-78e7cbbb11c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654a5634-25b3-4fb7-846f-1323e9843412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9c7ed5-1656-482f-ae48-3ffa07d7aa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0066db-2269-4eaf-bd32-198d7edb86b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e1b151-dfac-4308-9964-9560160c3111",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b26e58-3df2-42b6-86e1-c4224963acfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7519f01-88e6-4386-beae-9d412b2a79b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a42a02-1b87-4a50-9362-08d651d08056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8abe6c-fab2-4bc2-89ea-61e71dc83ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521fb77e-e22f-4529-84e9-00821188f751",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e624e4-f976-4338-a80e-675541183410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573ace4e-44d7-477b-b09f-b3eab5dc8dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c5ba8e-5a3c-4d33-be3d-2b65c46bfdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd50cfe-dda6-48a7-b24c-1f32281bcd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cd5645-984d-4347-ac79-2bbaabf6a26b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e4838c-de15-4b55-b507-7abf292910e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c91744a-73ff-4345-901d-206cfabc1f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ea8df8-409f-464e-9f14-eeda10689378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8edb37f0-e560-41c8-a136-ceb7279b58ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e38567a-c66d-4e49-8394-e19a9328f982",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720312ea-ec2d-496b-8872-b1fc6774ff15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3e67c3-b3f3-4878-850e-bdfb90b05eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79095bdf-5a67-4d1d-b962-5b3c60dbdf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "073a9521-7c68-4144-9c5c-bd8bd702e6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a4220d-ace0-4cfd-917c-e92506c568b9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af802da-b58b-45f0-aaab-5d4be33c1f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20eb1d49-03a9-4049-b2ed-255132ae8ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f2c0b7-af8b-4512-9316-b40f63337494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "daf2ef58-96c5-4c52-bf0d-7a4e31be6f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b4ec80-1fad-48a5-95a8-0932cb645d09",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b12bef-f2bc-4623-97ba-87bb59eefddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95209bd8-c752-4095-9e5f-d89c99264dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b93f31-e9e3-482a-b782-924e4b717de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0778a96-bf5a-4325-b9ef-71d0b7356efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e77c60-15a0-4415-95ab-adefba816798",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa81987-182c-4858-b0ab-490b990fe6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8177ef2a-7e84-4020-a245-1edebb96ca3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e79d852-868b-44a1-b76f-84b5d8331936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a12ea2a-d155-46ea-ad84-0e5e0d474b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f360cde3-d530-4d7b-85a9-3869eb2e7c0b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703be98a-925d-41c8-a8ee-0dc7eee5bc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbd2d33-1b7b-4991-ae2d-6f5205430eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b55a295-6356-4044-b88a-6bddad9333bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1d06ca02-2afb-44ef-a2e5-a982fb66b5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed524f3-ef9a-461c-a034-a3394cccec3e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ca5a71-54f7-479d-8f18-fd70abba3bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5979c1e0-3134-4ed6-94ff-b7dfde36a87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65558f7b-7191-4b4a-8db0-956d92a11efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32b31b4c-9e19-4f30-b39d-d5a4d5097d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd9b013-e513-4311-a76d-d4032640c224",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebb64e9-f371-46b4-8985-177894124bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3cb2d13-47df-4cea-947f-7b373fa7c32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9dd06e-2634-4bb6-96d1-efa37bb300a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b25d33e9-abc7-4cb3-b82e-5f758880bbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e5a8ea-b633-4295-95f2-0d1dddff99b3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31405f42-b5a0-44ea-9e00-ac55464f770a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0ee8ea-47f2-42e4-bb2e-224aff0d6a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d455ff63-f832-4120-af2e-7425997d4580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2277e0a1-d5b9-4ede-9b6c-8aa05707a001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824c1126-2907-45ef-ae3d-b160ab24fe52",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcf6c2c-d720-41c9-a93f-ded096e50134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8198edbf-f9fd-49e4-92bd-d9475ad81252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9be8b18-145f-4da0-a255-5ad0b06abf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa2c608-5544-4cb5-b869-ce8c40e3e2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2a0d8d-105d-4962-901f-43a3b1ad2bfd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f5fb01-3688-4c1d-a93b-7f077eed5b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc6ebf4-66ed-4364-90b1-ee3dc060661e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e8d719-68a0-4ce7-93d4-b27e4c9f565c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8615545a-61cf-40d3-b435-bfb737bcf0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91304be3-2b05-4432-9b33-4e79446530d3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90f51e0-eec3-47aa-837a-4cb08abeb7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbc9369-5ee7-4c04-8617-a94c501e8c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff1ded7-c7d1-46e5-b8e1-8245c8e20231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3fc5fa-0959-4137-9b2d-06cd3937310d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1cfc77-5c08-471a-bc56-688a7da3a28a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73aec654-b964-4522-a388-860f1d04e103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33266dca-0eed-40eb-a3ec-18e847d15049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bbf8a7-6fb5-481c-8dd1-ae68cbebe5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd30a94d-1a70-4273-a5d8-a277a32b0d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f33602b-8fee-40c3-96ba-432b1597bf35",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3c9110-8ece-4989-877c-c46df1330b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13200056-008b-4b8b-b223-c57fb0e3ad6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb103b43-c763-4432-9d35-546f2af8499a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "015d0fec-1ca6-4349-8b2d-79931771eeaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7a0375-aa8c-4ee2-a12a-04064e60f5c0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5647bd-dca2-43c2-b13b-23fa1364dbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2f7a13-0e1a-47da-b090-cfd43056bd0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84afeb2b-f423-4e83-b186-005ca39404ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38a70316-c0e0-4111-8165-316ee6238f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7036a26d-be84-41c3-8e0a-ec87141d3c8d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd5bd6f-6705-4779-bd83-7dce1df1c68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5828d6-0a27-4fca-a033-eb31e7b6d72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961e4001-9cef-41d3-9576-cf566608f0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a44fa7be-0fd1-46bf-bd9d-cdd582690a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddeaeee-c267-4afc-b2af-f76c79ec5179",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e3e30f-1c46-4903-a335-67bb84b96bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5261afe6-58f7-4a62-ace3-7a2474bd4881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eecb7ec-3915-425f-a46d-7a1fe2d40834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2164074-ed97-4647-bae2-55e5832a05a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67a3dff-4156-4110-92d4-6e25a7abbefa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7738e91-952b-438b-ae00-800a1f637097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274f3d48-41c7-4025-b4e0-f9d05a8b0051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3ce8b7-941e-440a-893f-d0c79a0b6429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbbb94eb-942c-4f4b-a5d4-3fb642a26c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35a725b-c73e-4505-a2b1-6d64aecb20bf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aafb80e-97b2-4c1e-a840-ada95e6b82ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d23f919-2bfe-4bd4-84d4-186bc09debb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84167c90-6754-47d4-8fa9-461c4f3540c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "791d742b-754f-4e41-a004-6575fcb42517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbffa78-f3d5-4826-bb52-1d98179cd391",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "247da1a8-b3ce-4808-bfbb-bdef8954ed9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163c35f9-d466-4f18-9d72-9e7960063b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f265d6-4a64-491c-810d-8408429fc09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29afcada-decb-4198-b7f2-06bcd1388735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc21fafe-0a1b-4cc2-85b7-e6d1975fc479",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9145ae18-cfc0-482c-b652-39596084d0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b825a540-eac6-4fcd-8893-5e6d8096f56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86281d53-9c29-4619-bbae-6d270efdeba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42b89112-cd26-4b6a-85d4-52d9ab49c030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e806b2-56d4-44af-8fe8-d2896c3b271f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ae7e6f-d7db-40b4-96f0-029a478be279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b50c35b-f8e2-4003-90ca-f34aa5cb8be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080415c5-9de5-4e9e-a62c-eb41b08de98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "220c36b3-2a38-42c5-916e-57f3e3af9f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b66443b-c1c4-47ee-b7f9-3a02a0b36a07",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01dcf5f-b601-49aa-af7c-63ce5be48768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5143dd67-e7fe-4bd7-aa90-70d4c9d1df92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cd7489-ea25-4f40-badf-240c07f7c77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d37d13df-6ceb-4576-953e-916f4c5c13eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153712b1-cb92-49a4-9ea2-b79e522c3d79",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8cc8ec-e075-4b9c-8276-41d86773f89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37a29a2-250f-43e1-a999-95e2f3fc675a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c625dce6-6fba-4da4-8cb6-ea94ade2a0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18de06b0-bb29-4fd2-9924-e8531ff6b606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5c33e2-c8a9-4705-ba74-4fa42658b17a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d605936d-893d-4145-94d1-9ec42eb72efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5bd259-bc78-4d01-87b8-c42cec64037e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb78500-0207-44f3-884c-e21ff4fff836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "778c2b60-9507-4131-b673-91099054fd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1686c64-1998-4097-8fef-0f9825feee35",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9774b940-248e-4c7b-91b7-2cd9e62a9eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed299b49-ddc2-4e89-b28a-8260d350907b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949a3a85-b22f-4e97-924d-82bc04e11300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c367a749-1294-4f2f-9dbe-439aea6f935d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a43d3b-9e98-47f4-aca9-b973137a06f0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a068a9-5866-4c5c-8e4b-552f46e7d8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee310a88-b04b-451b-a631-7ac1d79c718a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83bf0c6-c220-45fb-8c7b-488b560c0324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6369bd5-ba65-4999-9eb3-a7114d9b0962"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "72d6d9cd-da65-4c6e-8bc7-60c7540be1f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d8f7ed2-483a-400d-aedb-e7289d98b987",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d56b6f-0f71-4444-b7f3-a23211acc299",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa46fb0-f2bc-4bf9-903b-049b98f10a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87be7953-00bc-4516-b4dc-f62d0925dbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e940b26-f026-4068-b055-99e783464dac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc32b320-7f7d-433f-8377-9b83396513ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bdcc8e7-139b-4543-a353-bca4330c0b09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "472499b0-217f-4a29-9c4b-677d205fd599",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d14ac6d-6f9d-4cd3-8676-4ca5d735d84d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24504d52-6aba-4b01-aaec-8a25cdf94fca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3c0b7e61-169b-4fc5-baec-713628a569a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9572c415-7236-47e6-830e-3af87a6fee14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5117df3-6345-4cfb-8077-e1293d7b7f21"
            }
          }
        ]
      },
      {
        "id": "8fc872f6-c5d0-40ab-b8e7-080b9aaacfcd",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e239b48b-5514-49b2-93ca-20db0437a0a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1fe2b251-f8aa-4bbc-90a3-10f05158f17d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e34b4618-7ad2-45eb-80d6-84e6af19a839",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40debb55-e2a0-441f-a37f-2c4fe911c316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03dea33-1614-448a-830e-091f0ee7f7c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494b86a2-ac93-4cc5-9f28-e3bc42d8b1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0fa8819-07b6-4b37-bd3b-44dd71dfc237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c572494-c828-4f24-ae91-2d8bc5ed9042",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4184fe9a-29ea-492d-87dc-4dc911db3e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa786c6-4173-4525-8d30-dbc7ee7d8e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7735f628-7b28-494a-82bd-3172e1e8189f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b46004-cc47-45f0-805a-2b9f7e74e1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df52149-62b5-4478-a0e4-25c3055e992f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c6ae90-0ece-42fa-9463-ab6d4bb985da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c26c0a-5538-4d1b-aac0-ec02e6144381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6487b6-5b52-41c1-a8b0-4ce71f29636c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "366cf42d-6e0b-494c-910d-50206ad29b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc90ed8b-312e-40e6-abc8-b1c8765c2fca",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866670ad-1fdb-4a99-a928-0dda53e17064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db527598-eb59-4d22-8547-537c9f93774a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad66dcc5-803e-4497-ab7c-edd7ddcaae58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b53cba9-1fff-4d90-8e12-91324c8cc09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ab1c98-6985-43dc-9a4a-3081c84b0aae",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94e367e-bad0-400b-af5a-79537f774671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524ac3ac-c73d-4dfa-8fe8-f98900d0db49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abed303-b50e-4dec-a44f-45c1a7cfc858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32f999c9-b763-4fcf-b50c-2365115587a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0455329-120e-473f-9633-af44cc0719c6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcc4292-f36c-40db-8da1-ce6522ac0172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e800ea5a-e9c2-4e30-98a8-5a1b007988b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4de967-4523-4b40-95ca-5cb0ba10d931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3062bada-5caf-4075-b105-74bcd020b2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898982b4-5f2e-41a2-8db8-61b47cb75d2e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2e4b4f-be53-42ab-aadd-04173f372a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4585448-a482-44b0-872b-2a62f514dbb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7368f5-008b-42d4-959b-de8613003485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3d856f-ec6e-4a00-9f06-9ea0b62fe3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55ad64f-de51-49f9-a254-8f028cc64e75",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa95665f-0d18-4ed0-ac9c-45c8c134aa14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "034f130a-d8c7-405f-b07d-cfab9fc61d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c2425a-87e9-4664-9976-7bfe3900f676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "611993c1-1ec0-466b-93bc-6fd46cf9716c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d63b89a-c4c9-4e64-9ad6-3c02da73b7da",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ff0b3f-e9db-46ee-9336-232f96bca3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71acc90-5636-4e99-bc7b-3d197b046516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ae53ae-3e96-4f52-b421-68399fbf48d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f14e9a6e-8193-495e-abbd-65059e9ff155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1faa1de9-c572-4d33-a0ec-23e802c98a38",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe33cd6-229b-4d0b-b898-6300c01f5c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f9d224-523a-40a7-9e97-476a095c7569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d1c4a0-158c-4097-8ec4-43887244b77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d358f042-4fc6-4def-8fea-3dfc1cbbd7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad24a2f8-5d9d-4708-8ea3-ab56db2f62f5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a362dec0-d62c-4092-8491-0f670885f91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a204ccbe-b741-4d8f-a3d0-044e94664761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a08aa16-aa85-4aa0-a31c-91184e081f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bc40cf78-0b66-40d1-8256-7eb67c3ea542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8a072d-c1b1-4bd4-95cf-94d0c40f498d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd946a5-3281-4d40-880c-c8ee8bbea945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a51faf-25e4-4a91-bc90-00cc1294ba49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed75f92b-53d2-46bb-951d-a82bd8bb8925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b4de44c-43be-44a8-af38-3a245044121c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2989d793-3362-42eb-a11f-c6336cf83e38",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44111945-29f1-4875-99ba-4fad28ffca0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655ab17c-154d-4301-8c4d-fae6ece493fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3157e5-8bca-444a-a4c9-5edee21275b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d75db4e2-94a2-4558-9cfa-79da7883b204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff80e10e-33c4-494d-8313-e54706fddbb1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecb769a-08a1-4c6d-8ef0-1d15463163e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf98175-248b-4de1-89c5-09de960e27e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5ef45c-02c9-4c85-93e0-238843b9e6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a43acbb-d61e-420c-9599-06749daf75f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafcdde9-b66b-4858-b614-464ddfebe4a9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca495eb-4f2f-4089-9592-80c609660a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8dbc12f-bb54-41c8-aab9-b41bf98f9574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18fb209-d517-4705-aa35-07ada043be19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "11e3ef66-b2c9-4217-a2b6-ecfbe26d7815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f94e48d-a422-4e67-9dc5-24ce1f6beecb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c98c15f-1ab2-495a-a3ab-32193e76266b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc75db9-f2a2-4f44-af7a-4ccd8b661b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45d57b6-b79b-49f2-acb8-9d7b037b6277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7844d145-274d-4870-a6b5-d0859d54d953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a685e1f4-6d7a-4b3e-aa56-a838c5594e2d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9987cad8-4600-4722-9a24-42749f31e88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bdbf3c4-c8c2-4dda-a72f-5e6ba957d9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1da591-02e9-4a79-ba4e-f0a2aee8f47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa992f8d-b9ec-4692-9dde-e0a80b8a5c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea173d5-0654-4f08-bc19-51ef8a4e8f06",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7757ae58-dcc3-47be-986a-b5237d1a858a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930e3cad-a0c6-44ae-8d23-32ad226c9703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e041176-bc84-4428-b774-09d141e8f7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af9a4d1c-79ed-471a-a96c-501e62ff968c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13231657-6c38-451f-bb58-133c85a15972",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6235605c-3313-47f6-aec6-ab9d3663b6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4746b4-9405-4b05-b841-30798d851f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5ddceb-0159-4da7-830c-91caedabe319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d02bada-9b23-4883-888c-0dbefa7283a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92151e9-a0ad-430e-99bd-c76d3de8383a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf10d25c-5934-405a-80ba-1a4e8e585512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6488fc-5fa8-443f-ab3d-5e6621451808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a9f909-c44f-4c46-b058-53101d91b7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce53818-265a-44fb-a97a-b88473cc088b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cba270-acac-4db7-adb7-113a0c89a546",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0bfa5d-3dcc-4386-a4ed-d17ec63b60c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a34e59-738d-49a8-911c-89f08eb5cbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2428f0f0-7343-4901-b9e6-e9eb4eb644cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf041a0-5267-4e9b-b6eb-3071c1f15c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbff14a-53ee-485d-91ed-becea48375fd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33becd5-3b5a-4876-9c83-cdac716156b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebedb17-02ae-4d89-9305-cb5762437625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1562442d-87f3-4f2c-bce2-586bfa230e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5daba6ac-77a4-48fb-8d57-cd522816f7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc37099-4de0-4dae-b57f-5ec997a0dabe",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7811c1e-02c4-4893-85a5-e01474767254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dad2461-d741-4fe9-9238-9c40da175c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b4b79e-2032-4aac-9a3c-9d2bb71045ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b687454-6fe1-47f5-8580-e5fbec9628a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d03ba80-be9c-4c94-afde-2b9f30062e15",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6d8e82-1bc3-4aa6-b879-c0828073fb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16aa6492-63ea-4c27-af68-d047a5a6db87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8d9129-3250-4a3e-aae7-4c5372a34360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6bf998-cfe4-4c60-9ba6-5bc2dc7dea2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33661bd6-c0e1-4964-bcab-6a9fb738db4a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314d9359-a9f1-4cb4-bfdb-0d7aa0b85098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96053693-0585-49c7-89ac-70ad8ed099e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca1dece-f2da-491c-94bd-e43409a79de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe5acd0-a409-4bca-a4cf-4f5235b76f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84b40e9-44ec-41c9-a80f-ac5e43d05e68",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05d6b4a-b12c-4e6d-b973-bbca4338a54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3ceeff-0c53-49b8-ba07-3d10e667249a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa30d784-091d-4a70-818d-2bdcb327004e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a14856a-9cc8-4e53-9570-1595b5785e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23169cd5-eb51-46a5-81d1-14594f7b2cec",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e333d25-14cc-4b93-bca9-4ceb8ab9c18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afaf30f3-6f73-4a7a-bef4-13e61b53ac34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620258e8-f2d3-4a4f-95fb-7d5815fe61d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51b0eba3-17b8-4804-ab68-87cadb466d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88a45ff-48d1-4876-ac8c-8de180530abc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac998fcb-4b64-4df4-a43f-fd374a1f336f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c9daa1-2099-4c88-abba-d63ad827adfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445d924f-5e3e-4cbc-b411-61a1cb6fe2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ccb787e-72bf-4982-bd91-5e04a307f662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28220ddf-8559-487a-84b4-bf19bec8a0b5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1c7af8-b8cb-4d8e-85cc-441972ce7f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c630324b-b3e6-44c8-be7b-e52c12b733ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275ba232-9c49-4584-b866-bd611f579b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47604200-63e0-4823-951b-fb02a0fd7d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345859e7-a150-4cfd-a291-3cb0599dfff8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2ee192-4614-4397-b30c-00cfe4a41a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e888bf11-36c8-4c31-9b15-0166ecee0844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea10197-58a2-4284-9868-ed08740d1a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cad95f5-1257-407e-98ff-fbd95b9efe50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b3d068-f665-4a0f-ab16-d95c3f3c24d2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0aaf688-b916-4533-b1f5-f3f123674217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0d48e3-9bb1-4a85-ab4e-f9527964e4fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba60280-53dd-402c-9912-af05d67f9da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28789fb5-a5c8-4a34-a10f-528ffb089519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fca0f2e-07e5-46b7-8fb7-d96d717ede27",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12baed27-5c71-40b6-a9aa-3c399acc7a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f0a931-d8d3-4715-9f17-35d329f1489c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82918fd2-e9c5-40fc-87b3-b4618e9c7f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "615f20a9-f693-42e7-badd-fcb236b1542c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe09ddc-475a-454c-849e-44ce2b2c2296",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2674a6ed-2759-4dcd-adcb-e612d343bf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d554418e-e5a9-44cf-98b2-2a8a6f9ef468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882b1abc-32b0-44e9-8897-1387d78a8d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f5cff6-7d9e-4ceb-b12d-66f6a8498b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e69c7b-8345-4131-b29a-964d1ff2492e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c53a7f-9bc8-479a-8395-a7a03dc57bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218ba478-ad92-467f-9fd8-d904dbb07e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcdf24f-c28a-4e34-99d7-2ca9b705a3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0542070c-3b74-4911-9c1b-c920a5d11e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4466ae7e-1019-4d55-a3ce-65bececf8e45",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37958824-6d61-4201-af9a-998a55ffc103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "299c31af-b64e-44f7-b1fe-8fde08baeac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a9ee92-b7a6-409c-9bae-4cc2743492b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ecce9cd-64fd-4b32-849b-5517e6bbf216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcf0696-965d-454c-9601-2e2af2bc1a1c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f28776e-2208-44d3-b77d-f0776931d7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65f448a-9e03-41bb-89eb-816aeee26da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d2ebcb-e1f2-4234-991f-f01abcdf8799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e63215e6-205e-426c-ba36-cda6217b8f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1447810-506d-4d2b-99a0-93f59ed795b0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6121c703-d951-486c-8b1d-3d09674f1c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f407e4-e31f-40fb-bfb1-14b0b8211bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b835ff-710b-49f1-9263-8f5e7c64cf78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3185ebd-a209-4a13-89f9-65a3a00ff329"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fc3d6a77-62a9-4d41-a593-44da960d4a0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98629ae6-8fef-483c-9dc1-016fa4059ae8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6ea219-b1dc-444f-bf3b-9d3292b1f13e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "062b0a0a-b81a-46b8-b94c-17e03289d4fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d665b4a-284c-47b7-9011-06799b2418e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d40182e1-bdb5-4e15-8287-aaf1370c1f19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ea6ae97-415b-469f-9584-7242cb28f876",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "502dbbd0-44db-472e-9767-33fb7e50d368"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70085aaf-35cf-4904-b535-508d522ff431",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "397eefdf-7b2a-4f83-9ba1-3ef6f157b057"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1348df3-3965-46ef-9bed-5e29e67d4ffb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b0a6438-49e5-4159-a5f4-ff22f0e738bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d09406e-95e5-4ad7-bf8c-c632bf3ddae6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "632ac28b-10f1-418d-ba34-e5c8be9af7c5"
            }
          }
        ]
      },
      {
        "id": "8e2b7c45-fe69-4bb5-92ed-f92f2c921be8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e00c316d-596f-405a-b1c0-fcc89bdc3047",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56cf9df3-2ab6-4928-96fb-4f8568c6fc6b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f0900bf3-6217-41fa-b607-21ba7e3923dd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d35964-dc4a-406c-8ad6-8ad37ca60fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5498bb-e359-4807-b04c-553a5ea2c3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d222fadb-eaa5-4256-99f4-7238ea195c5c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22dab738-8095-47ea-8a36-a6bbf40ae86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9289b7b4-9d97-4096-9cc7-3da1c79eebf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efbd514-7225-4414-b058-4b79ad96f2e7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c20a433-4228-4715-838f-5a690e11132c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4e6594-f969-4a70-a498-d914b937cf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e3280a-9553-431c-9377-cda4ff16a859",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee06b2ac-e736-40d3-ab08-2675de76a5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d126840c-3fe2-4aaa-a468-45ec2ce9bc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef04834b-9376-4f34-9c10-0bcce6566d61",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6203787a-afe0-427d-951e-23cfd908a45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25fe2811-3c50-44e5-8954-23af75c7443a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6e172a-29f3-4554-af3b-38401121e5e7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccac391-9704-43e7-91ab-70d3abcd9148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30163a77-7fa0-466e-8312-af8c18641d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6b7091-18b6-44a4-bf2a-868df994adec",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2254d96-8a11-4a98-9fd5-ae78c4cd23f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf3b5b7-223a-41b6-9813-c5e94fd91512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9e26d0-dbe8-497a-8319-7cbfa971bbf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f06849-81a6-47fb-8e43-fc14aa2c31f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51024f51-63b2-49ff-b847-785dce6d638f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba580b12-2b27-4749-8c42-a6bdb0b70ecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0d0d8a4-9a67-4f65-91e2-7367b99d9956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d679af-f88f-438e-bc61-26583f5b79c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312897f3-1989-4e92-bd5e-47e87e2a58fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25690c74-1b3f-4848-9639-e4b42f046a25",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9029ad47-07c0-4e52-a541-6d624f9b6100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48d5b51c-3b5f-4f10-baf0-1710645af327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcaf00f-c7cc-4e63-bfb8-48afe3f7945a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67975204-d58e-4122-843e-3ee35342db70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cb15b1-bc60-4870-b1e1-3eecc433837a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911ba7d9-866a-4a44-80aa-0008c63c9160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8af64177-16af-49dc-8f64-a9d3cee47c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457c3b39-a3dc-49a9-b49d-1533cfbf06fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1496caff-8b5b-4c55-8d36-71121e03ee1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e25c754-66f1-4d56-8cd4-0f54b2d05633",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fc6214-0705-4261-8bdb-c1e04ab4cc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c418715-3b47-4fa9-ae4c-6d049a65fb5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5604e01f-d81c-4f84-9bb7-e1f723d209e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4333f565-31a2-47f7-9272-9d1631fbcdf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eaa5d01-ff1c-4062-ac74-43508027d6f7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2397c4b-a005-4360-b14c-4be328cd6a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b28a361-0c62-4737-baba-30581dec0a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "776de5ec-a519-4b11-ac89-eb8afda3a1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a83453a-d170-44ee-bf89-91506b55d4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd21ca80-6f4c-4d68-b869-b0270b7f7ad1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487d21fb-93c1-4427-9b78-cd091ff07309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "147c6316-184b-4070-9d24-121a33847707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f4ea5f-9d71-42a3-8d6c-0df707a0ded6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba39057-4e03-4d6d-9446-7ff21cdbd030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feacd9ec-03f8-4598-be98-565a09885b1f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcaeb120-c7bf-4b43-8e13-6011b2155d72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7a5118b-b1d2-40b4-9364-5d71773bfa4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c320f8-0578-4fe1-83f1-7371a7b9ee67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e60f3b-5e99-4b0c-a054-e0c84986ff3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21511422-316a-4111-8166-9c705d36bf62",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40bdb66-3917-4052-a87b-1a4261f859d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5780055a-90c8-4906-8432-3a15a269e834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b6ffd5-66f5-4c2a-bd19-c65209f82523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ac8e75-8d81-44ee-bf0b-4cd8b66d2c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e458f4-3b2e-45e4-97e5-0279bba6c724",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c10a9c-ffca-477b-a4cd-a5eff67695fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deed25f7-807d-4079-bff2-0a81f59c26e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7503f66-df3e-463c-9d12-fbfcea19d58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5764cec-5e51-4dfb-b339-8de950193426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16c4d44-5bed-42c9-88f2-7fc50304c79a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6669856a-2a75-4cee-b42c-ff2a362f39f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658decfe-6c6c-43f3-bc4f-fd47176696bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c859593e-d69f-4a7b-b0ab-3853cb00cd05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fbe8fd-9b69-4b12-8bd4-f3070b7c6e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63c3e92-95b9-4659-ae8f-d24a6531f2b7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fef2274-f87d-4c0d-8dfe-ed44bf362378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a5c866-c3a6-482a-a718-e9ba7c4d783c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba72aae-7f95-4e1c-851e-a38711148152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c024c420-69eb-43f1-8d2b-4e9b579f874f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10978798-91bd-4e5a-b96f-563e3158b712",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56c4db3-154f-4dde-96e0-e3d413f33ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da0b5d2-7550-4498-b90c-c9d1f4b89af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a859bce1-3304-4f4c-85b7-575df71e9059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d949b6-8272-450d-8df6-154fc71c8b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18f36fc-2d42-41ee-bcb5-20b81081d681",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec00bebd-bea3-48f3-9fd9-991f52959233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94001ce2-ccb6-495e-96c2-7cfc8c51a23b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e664fcd-0625-4871-8d34-e6978c4346e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c61fdbb-89a6-475d-a253-164d89a2b834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8952fe13-1c8e-4d9e-ada9-7118e568bb3a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461ec582-888c-431a-a0c4-a839b85f1881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56eeef0d-5a95-4031-8057-c88184822bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79619696-2500-40e7-ac21-b948d6910a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aeb1ae1-2668-4d01-a7c6-9a69c3a24800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f723c685-5e4c-433c-8e2b-33c2095e1568",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f918f3da-a7b6-4706-a0d2-2a840e76775a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16ea9b4-c9af-40ee-90ad-001899600149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5188de41-3895-41fb-a688-a1fbb986fdce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57646aee-55d5-41c9-9910-65154ef7517c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d5227f-7831-4b8d-aa44-3ad6035fb31d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5528fd-fbb2-46df-b58b-cc64f6e247d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e424e68-349e-494d-b3be-ad9cd2a6a521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9bcd00-6f12-49c7-b8f1-657eecba757c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b3b4db-64f3-47cb-8110-35b2a2330e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b002c0-c9c1-403b-bed4-f46d75afe27a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa37f4cd-3754-42e7-9617-8c20ba14fff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07b32460-db88-46f3-88f8-aad9cbc1877b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ef2711-d079-4987-bc15-f9c59759d452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ec96ad-cc79-44d8-b6c7-33abd64f067e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5644e5-aac2-4556-a9ee-cabaae69ec0d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f750f26-5737-45c8-89d8-356eebf1b993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "866d66eb-e734-4f18-a565-1c6e027ed79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86966a30-db78-4952-a7fb-4ab1b9011dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d2fe0f-e8a3-4f4f-88d2-e8fe11c3f0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0661d39a-d6be-4a06-9356-958775ba532a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9febdece-75d4-4290-a1ea-5846ac6fa35b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3292af8-ed19-4315-91e8-2c28cc011bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f641f6-743c-4c55-ae3a-71d88e558075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b886208-4f78-446b-bc3a-edaef9191aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c175bc-007c-49ee-8e59-03901fea3969",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752a0b0c-47ee-458b-b52e-7a2722bcc76e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4301ab15-c64b-4926-a526-f4dbbe344b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bc18ba-a3dc-4d14-9f29-f3c1cb0fcb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64b4a71-30ea-49c4-8bf6-b580ebb86cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25c5c2a-a020-4d4b-9894-dcdff6d4c5c8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c062a417-bdc1-4634-9271-614f61ee7482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ab2133-41ec-4fad-b7b5-fa6ac475652b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842cb5be-2803-487b-87bf-e3a78ab85769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328d97b1-f99a-40f0-bdad-b76ed0717ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f28aaa-c50f-4887-8aa9-61b26eb07b1d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101aa5e6-c218-41f4-b77e-fea774614723",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b47550e-5b15-4376-9a99-c58d5ace7ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bb8993-08d6-493c-a8c3-6ce97c9ddbd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22fca31-9c63-48bf-a5cb-d795323890c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75f5612-6e12-4fd9-8f5e-e60c17d2029e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4404d34b-e16d-4703-a427-aaf734eba9f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "984e315a-ced2-4f85-8884-ba78d8e3d154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdd482a-6047-4622-a054-f12f66993464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5fcd91b-4114-40fd-8b8a-6fb97a9d1740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e55bf5e-3be4-4420-b26a-3dfc92d21d56",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798b8e16-f310-40cf-84bf-0b7d6aa24a47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a008aa4-11bc-4de2-bac0-b33feee99a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49ecea9-be82-4722-97e1-3eaa3040c044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af20d112-b075-417c-b86a-006f89326d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de868779-7c87-4f7f-b89a-8bfe57e7789c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a8f9ff-06f6-44c3-820e-05a59d844064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3b85cb8-874c-4b24-978e-e784c774d28f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f927283-af54-4704-b7d2-30bc8d6a10bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fb2abc-02f3-4600-8187-ccdaa170eac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02c0acc-47bb-4242-98ea-d168b5020cf9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79ada95-27f8-4373-b86d-6060af17248d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd2684a9-50a0-40d3-8b56-537d4f1e5a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96b3a43-39b2-48b0-bc44-048c41942789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dff9622-589e-42bd-b92b-4c1c89891b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455a8b90-e7e5-40fe-a543-e500b187364d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1defe8b2-d4aa-4569-8d16-77d812787ff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "044b3060-64e0-45f3-861e-c6ba2cbe9497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06a2060-f556-48c5-ac6a-e60db936f7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f83cbac-05ca-4242-b925-e85aabfac05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2c0dcc-7a5d-4348-b667-b52ee8d9f063",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c112b073-90ee-4515-a075-17fe3a0a71c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6e2bd2-d50c-4241-8ee9-a159673e037e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e348c5a2-c75c-445c-9604-ecd13102fbf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa25ada-2efa-48d6-aeb6-b8d93f2014a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9722df25-9791-4ce4-b468-7b933164beb3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e688293e-2fd8-48f9-accf-27bc41f18319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383aacf7-ab2f-4fcf-a7c7-11fe1082c3fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8dc4f7-0080-4a93-8bc8-c84307488448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058a9bf6-a091-406e-b328-6984a79c8b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f060c6aa-a670-476f-b2c1-d249a59bf26d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8d67f4-3251-4d83-a17b-cfdcfba9d4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3262abb-9014-44d4-9c70-69a39201cc79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e089c05c-9e5d-4806-a3bd-c67f3ef9e4aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98547d0-b14a-45b9-b566-6e38975f6b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4868479d-f664-4869-bd53-b8a378773524",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b5c621-ec64-4193-86da-972fe0886486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1a52f6-d021-4888-b9ef-373756c90dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8a3871-5229-4787-8675-98b735c052f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620b2121-52ef-4a86-b3d1-ee606d0e7dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb6c7dc-5e1b-4470-8ce0-cc76c566614f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b4c9e3-01f9-4575-9f29-7b884f53be1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b1bf49-8284-4b73-a114-b5d345e9c568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "231313ba-96e1-471f-8c2b-f6859022f68d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64928964-9097-4b96-80cf-5f45047c6b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8bbe44-89ae-44fb-8a3c-0b7b444db606",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9ee5fe-e396-4dc0-8919-9e5489909fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0f62b4-8b63-498d-9815-1381902f6846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c872395-72aa-4fee-864a-bbc9e4be7c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3e57df-3798-4b81-a1d5-d143c83bef4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9eccc9c-dd36-45be-b4dc-d607edc6f0ac",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef060c6-0d29-441e-a32e-b3c6ec814bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d33d756-eecf-4ad6-bb5c-1a41c3e20d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f55f867-64b3-443a-95dc-f295d22567b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f569a0-0a7e-429e-9bf9-41df810d2c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f0c49b-9c62-41f3-bf33-7b410216b84b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bf8e4a-eeac-4854-acc5-09fa84434b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf724c88-b6a6-4689-870c-89e2e6cc74cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6512c7-86fa-49fb-81e5-76fa9b02df66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb535c9e-2fd8-43dc-b9d3-b94a1527e895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07c0c21-c6f0-4000-9152-180e6cec373a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52572eb-f351-4318-80ec-64384578d028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1ef1cc-6e70-4715-8f15-8f8f090a9f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7f3212-6d84-4733-b45c-fac24def3f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769e3ea6-3ab0-4c0f-a395-4a6f37f60e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316a7bcd-775a-4b2b-93ab-c1ce2992d527",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773e38bf-5d74-4a2a-8a1d-eb86dcc15c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b22c26-087a-4324-acbe-5172af3fd2c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96773d59-4569-4a80-a47a-93f256859bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff6daa0-c65d-4654-afb1-16cf5b406161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035a06e9-d7c9-40ff-8165-5da86c99e39f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd59f719-a0f9-4868-8245-d3643fcc8efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1ed129-942a-47c4-8b69-1a1dce70f667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2d7bce-9baa-45bd-abd2-6dd8bb58d2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0bdb54-57d7-4047-ad7d-e10f3eeb07b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17f87f0-1010-4284-9062-cb0cac716a31",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c078942-4237-4a9a-99b5-9bef11dbcf6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32770ebe-2982-4e61-99b3-e57cf6d4d8ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698fb2c0-10b8-401a-a250-0c3a0310ad3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a1393c-c9e9-488e-9926-6afad175a15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b778239-66cd-42a3-980d-340609358c0f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98d8bf3-314d-4251-9c4c-5dbe8d750dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e0b0bd-acbc-4f4e-bd49-33510735a249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb894cb-a5fe-40f6-8b49-e22514db68dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc08712-62bc-4a69-877a-972568e9104b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a011ecbe-ec9c-4380-8d67-7712b14884e1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9d5ad7-c33b-4cac-a31b-dd5fe56c436f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698948bd-f227-45f2-af21-e461e44e8c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdf2b19-e0f6-47ef-a712-30eee93fd430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a55dd0-aa32-4228-8c6d-72776123cb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45ae779-6bb7-45ae-813b-2155c47a36cf",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afddd294-fad4-400c-8395-1625ec64e5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14aab6a6-cc9e-482c-a804-ca889682f3ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8028745-8e57-48e1-a43f-7916ef179afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835538af-2fdb-40c7-8843-a1d16e4d5b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcc8371-1a32-41d1-9f08-27e7672d1acf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982a2241-3a6e-4b7f-9d26-0210502cbb2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24bc302e-96e2-4d6a-80ea-597dc37684cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf739600-3971-4fe3-bcfd-2b8604031a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90545f8-7648-4e90-8a45-bcb5fec18cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb02322-fc5e-42d7-9056-e930e4b685f8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610e2f1c-f643-46b7-b14a-1e1746b68cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b399e992-6b5a-40a4-a3bb-cb0618b719c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc45181a-ec3f-45b6-9a12-2a76825a0488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f65e64-6b92-4229-b550-a8e5e215cff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d56f5c-2ccf-4ed3-a41b-bd6fc556143f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2709fff-4bc4-47d1-9d9e-85a1f042eb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e517e1d-b8c5-43d3-8575-fa47f23eeef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e73afe8-754d-4f17-af48-a3005cc7020c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f46763-1387-4d23-8ef1-6a28055144ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5cb587-f699-4492-8b30-53ef6ff1e2b4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f3e447-067c-48f8-b9ca-168e1834a40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361d201c-afcf-44d2-87eb-033aee0304ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ccca8e-8fd9-4bd5-ad9a-1bed8c4307a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41abd34c-6746-42c4-abd5-ff108b0f448b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f88267-965c-44f6-8989-afa8259bd917",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345037ec-3e66-4d0f-b2b8-b496001af707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9850c0d9-229c-495c-b698-c5c3b163c11d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dae556-6ed2-4994-b71b-4682ab4493d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e499094-2593-480e-a1df-a264b1bc0f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2038a5-b65c-465d-acd7-674b790fa1a7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcdb929-61a6-4f42-908d-5c4b5764c3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac36c51-bdef-4f31-b8a7-80f316c26439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1ef1b2-39ea-486c-9dd5-af76f9ba7277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f28409c-3e53-4504-9bc8-0888c650c677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3affb7-2bf5-4855-b766-41ab534bd198",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140ff420-c761-4a15-b55d-5c7e225d2976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e73954-ce67-40f3-a4ef-61f0a43efecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa68ace-61a7-4704-b5c2-7d84118d8110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b40d7f-07fb-4a9c-8e4d-43917f65b47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b48f145-ebf2-48b2-85fc-04b1fa2f65e0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941ae851-b2e3-48bd-a0ec-c0651ee90139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a92cd93-afc3-49f3-bd28-c597b701b7ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2c71d4-09bc-417f-b7b1-122049465b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba476a5d-c3b2-41ef-8a61-bb09eb439547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8f6da3-9d21-486f-976a-def5b209dc33",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881f4684-57a7-442b-90a3-6acabef8b0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8d1055-c85f-46f7-9d2b-60b0f0713c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4060b2-3a29-4eac-93b5-e2eb80c9e21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b024bd7f-42d2-4e6b-86f9-ae3496467a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4e1025-1197-4b72-b161-cfd1229eb3d2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e96491f-65f6-4e7c-83a3-160f5396f11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77f2a14-2168-4909-b57a-387b0999e1d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba75fb1d-4c83-4fb3-bd10-b1ee694575c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c80b42c-1722-4f13-a328-7823409c9bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898f19f8-30cd-436a-9168-7bd2e0231568",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7af2ec0-c59d-4c37-b99c-0b520aa24670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62819ba0-7475-4c41-910c-91a73f549a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfc769e-e486-4ad1-85ec-b6cd98d54a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1b1aa7-21a8-4d16-8d98-c8401462880f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46341db7-9c93-426b-8045-fa58450bd8b9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a71ac3-fc3f-49f5-9c69-33528944bee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b16280f-ce2a-4d5b-a4fe-47bde367c1a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d2f0ea-d078-423e-b1ed-e7e2beff70d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48bf1508-9d39-4e6a-adcc-2b01bbf08f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d61db44-3da0-4feb-b991-526075788542",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66530f2-8105-4ac8-b181-f19e88a1a187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89cd95d8-0f45-4f3e-99f9-97c7141f1bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6ed2aa-ef9c-4f6b-8eeb-fcec62af1665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96f512d-fa54-49a1-9edf-406bd0d7717b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42edc932-5590-4894-828f-4e59073586a7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e720842e-a974-4d9e-a197-1c12ae7a5faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d75468-bfe8-47c4-aca4-eb2d21a0ba12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e477163-02a9-4d0b-94a6-a823ea657627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c3b583-c52c-49bd-bd4e-e8cbf531291e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2a0218-498c-4c3e-bc0c-57e155a70bd1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d4c89b-387f-4486-afc0-92a2b23179c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d564e12a-eec8-482d-9e75-48fbd1c86588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74aea6f-f853-460b-b2b9-0482182b29f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0129fb-3f94-47bf-b8d4-9b711bd5b55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5dbe1e-f8f4-40c2-b408-6f9f53105848",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ce88c8-9e7c-4b41-95e6-5147aa543d2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30caac8b-de67-4984-9760-7d94fc6641e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1d902e-b398-4505-abf7-62ab7014f105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7505ea-b6f9-48b6-9c3f-7cdac7660c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4a36b0-90e0-4f75-9515-eed04208d4a5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f996813a-0ff1-49b6-8faf-1bd28b9f1acf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb08e56-0971-4cb1-9017-fa8a3d401d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872cf3c3-746d-4bdc-869b-4d48e3338b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9717e216-aeba-411d-bb0e-71ca503711ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cf542c-0cd4-4e79-a057-ff879d97ee80",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd875ea-fa05-44eb-8c75-08a361881542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6343964-f69b-46c8-b97c-7a38941c66ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c2b663-c97f-4828-ba4c-880855f03d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da7d3fc-6594-4b79-bbc4-43859fe7c596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18afd2cd-3cca-42b9-b3bf-a897ab21dc41",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7aa36b2-0bac-498d-a417-0a09cafb2981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d82936a-6d27-4881-ac91-37e645c92d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2711589f-8b87-4a15-bd37-20d4039a05c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d507076-7a3f-47ae-ab54-96e4318af20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2320e606-869a-4bc8-b1fe-c3a6ec148da4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34931d3e-977a-41c2-a4a6-f7d24f440a75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93a38796-b205-432f-b7f0-f60d5881814b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672afe1e-a378-4c11-a6db-e54ff8e6b64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ddeba69-c64f-4c4d-a9c5-e297cafaecf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4832ac0-9556-4d51-a3a9-ae72994271f0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31807428-ba2e-42cd-bf87-b71e49bd962d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d23b3e2-8ae9-4377-b95f-03d67b9c662f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a6b20f-3424-4bbe-a666-a513fad7f36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852c6d19-a652-4a61-b1e3-34ebb06e6a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1fe53b-9c3b-40e5-945b-8f1210e0ed7c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200e081a-1346-4010-bed7-1214fb30ccbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4e3a66c-a58e-4eb2-99a5-f55bca98e057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6dbbcaf-58e1-4c4b-b766-f833a03929a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ddc08ec-9b01-484f-9377-0d90e5eef82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2064b7f8-e3a8-4f18-819e-005fe4c9ab76",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bf3c27-5b4f-43a7-bcc2-ae305f1111b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de657813-7591-41d5-9f1e-54f382a8c9ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aee2143-ca8a-47ed-a9e5-2ffd969ab89c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f20cb0d-7b3c-4d07-b35c-a45bddc54977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce1bf7e-c9b1-4835-969f-fe96f0fcd251",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d8f52f-0e1f-44c3-b216-402d884ff881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88b2b148-d799-43e3-8dba-ccabe2a70fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc1ac60-01bd-42ba-9a6e-b7d4e199ece6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7888a4-cadf-4400-9315-1f624b3cfa90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275afba9-2131-4ed5-9715-04ade2f0aa3a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a08c015-4e53-459f-ab3c-6f0c6f4ae756",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "054d555e-c5e5-41c7-98a2-0383f01969dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bcb94d-bb05-4162-83a0-2e1e203469f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8e00e4-4fad-41f4-9c66-13a2f3efe173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff689d8-7afd-41f6-a45d-fa15cbc91c72",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5d3f54-dd44-4469-9be8-bc84b9d0af4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dceb510-5521-498f-b8fc-2bbe6d190126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d73998-a2ee-485e-b78e-106e0bf55207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72891157-47b1-4987-8322-195384160d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa8a2c0-f52a-4cca-ae1e-2863c0092032",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607f1eb2-8379-4015-91d3-8f8d81ad9c4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25659bed-7371-4583-91d3-00cedae0b9b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4d5600-04bf-48a8-a733-5338da8e6a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a67059-f963-4a57-b6cc-128332f37a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6679a098-8b3c-4280-ad4f-7e20cd8e5429",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e20715f-3713-4a58-ba71-11cf7f4dfad8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5803f924-f203-40f4-915e-c35dbb8cb7a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866284c7-7f9f-42bb-b9d4-73acb493e9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0561fb27-d5c1-47c0-81d2-4a4decb0b1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3aed2b-60b7-4e2d-a4a8-2dbda617348b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d46082-f2e0-4d6b-a893-8b9ad67cffe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "102b9433-fad3-4db4-8c8f-2cb9ce7a31dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70062fcc-5007-471e-9c0b-4f74b0c6f099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a1974a-acda-42bb-93d9-791d69478444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93238de0-6e7b-4d9c-a5d9-689768896bff",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c15fc2c-ea77-4b39-ad2c-2fb20d9aa012",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd606798-c243-4808-bddb-4c9dac2c3c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e46a9b7-2999-40a9-953a-03a39813e975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab658555-ecfb-421f-b3cd-ad09e4d8d49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd656940-c790-4c5c-be21-9e4c27ebb2ab",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8416daf2-9778-4682-bf8a-f89938708d52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d00d49dd-60c8-4f11-be81-eea1c2aae88c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccddd5d8-f183-459a-92e2-76a371e0729f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2d33d7-c255-4992-b702-721a3e33dd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0478309-f1af-4a8c-a006-1d1db57945c4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388b0550-76e7-4ff0-9aee-4efe2019c941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db6f438e-80ee-4b3b-b92c-e215a7f53eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad420b6-98d1-4169-b265-07d6a0388654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51518b4-ede7-4bfe-86e0-46fe31c5ec9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e12ad9e-092a-44fb-9a54-3c9d093af520",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67aeb3a4-a460-478c-8e6b-681cddac03e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46ae63ed-99bd-4cde-8312-ac85379bcf3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8753442-3c37-48d4-acd6-94f47911b18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306b82f5-5c2a-4f02-a5d3-d9f4bd362240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0d730c-c7f2-4847-900b-ca3358ebe277",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1eee75-64a3-48fe-b288-ba0b7ee05559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9ceade6-d936-462f-8ae0-86602f8af02a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cb342a-c484-4638-8e2d-b8de57fca976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f600d57-acfe-4493-a72e-da4ee5929c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042aa5a6-ca05-4367-9d6d-9dde7d03e7ca",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8882a8-a836-4ac8-b1a9-f1b810b6a87f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d076865-e9be-4818-b866-a743ce56c25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12d42b8-1830-4ddc-a84e-025cfbae1885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39729df-2a87-4f3e-aabc-99b287a059e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca617da-5a65-4be0-80a0-b08163064def",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45c1c21-8f6d-4066-a327-a86488b2584d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "085ba54c-d5f4-4d4d-a5b4-98e6153364b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e817582-b68e-4883-b5f0-4258319bcb75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e95192-109a-4c77-90b8-3fd7e91f9a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9ebf84-c381-432c-bb61-2bd3b907213c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c7b738-7e2d-4ed5-8867-b90ccf1dcdc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd8d9e9-ab43-4361-a1f9-f40f8c515568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f129659-75d7-4508-96c2-0dd175c06cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1e642f-0ae8-44cd-bd63-9f80bf7183e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec34d7fd-0fd0-4337-b027-978eff4c81db",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2e7127-a567-4a52-9652-3c87111cb366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce6913a6-317a-47d8-8d7f-56c1b97976db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90004fb5-ed0a-4876-aed0-c87ab6130f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915fc5cb-cad3-45d1-af84-7161224fbe0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05e5c51-101d-4516-b0e4-855af80b4251",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959ab8d0-c28c-405a-95b6-45fdbe57d644",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8047eb96-8b45-47da-acf5-ce8e1426b3fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0d1091-bd20-4faa-8856-7dbed100ee4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704671a0-5a5d-49be-a669-db29c08b2c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbf1ae4-0dc9-46ad-8b25-2753d3970934",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47406e26-2ec8-433d-81f3-6aecb2a8554f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cea2e94-0ead-4b20-8073-fc8e55a0a121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7dd8d6-f2f4-468b-9e22-0508e5540a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59510055-5bb4-4cbb-8341-a05ab695d3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec04795c-1997-4e27-8c28-1f15d1b7ae70",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb34f023-8b37-4663-a75f-f28e1363fca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deab4bd2-cc56-4842-a5c2-bf7e9ff1b4d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ce5479-734f-4452-bcab-20c4ad4dbd71",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466f23f5-f0cf-43db-a050-c8b4b8f9d03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d0244a-0874-4a7b-ba8f-088027d6b73d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb3839e-563a-4457-9373-499892876c1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaa01677-b41e-4cd3-820c-2aa87ddcff39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70239f72-e458-4bba-8a11-e807c70f8a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcd68c7-15b1-40db-8c67-48d5f6034368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4772111-bc37-4e56-aa64-29bc514c53a7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2d29e2-4c70-4540-ab29-43ab3fbac74f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fa36069-fd6d-4ec5-9a76-bfcc94fcccb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14667a6-0f7f-45e4-89bf-8e344ab8e4e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843a80b8-e1ac-4f25-b74f-ad4c30cf2827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3cb3f3-ecec-472d-bb89-421280bc6857",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3b8c84-db1f-410e-b2ff-437a11f72fec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68bd93b7-408f-4a88-bcd3-23ad9d4f074e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e1b101-5458-4a85-892d-d214778fdaa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58190bb8-7d77-4b67-aa9c-b279f15e47a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a722bc4-69c8-43f5-a2f4-1e137646e5e7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a42e83-6049-476e-9378-e3c773dcf2e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04903191-d970-4241-acb4-835d5347b503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb37e758-7da1-44bb-be6b-273c24fd4aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0718f8cc-fb3b-47dc-a160-aa3b8d745712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1601de50-92eb-4d06-bcbb-1c36f08d4fd1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5afc1c-1b43-47c9-884c-745f8cbdbc1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70bb7669-bc5f-4430-bd5d-3957957aa463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f229e0dc-67f6-4550-9ff5-3cab70544050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba455a9-924c-4843-bc85-5232272cbb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652bcfc3-15bf-4041-9e77-9890dddbd52b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55df3b07-3b6a-4efe-b703-d7b1562bcecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c159a28-fac3-45fa-9215-2469e8fd793c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bfc4cf-d477-4ec5-91cf-9cef1209a90a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81be327-2565-4488-8a73-d5e04c30f020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc6fbef-9a73-4c40-908b-038b508f982f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf6b2f2-e98d-4e18-888d-b52d443d28dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6194cf6-6267-4b3c-b7ca-fed139f8a485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802c272f-78d2-44f1-87f8-994ba6eb8c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c77e339-ece1-4eac-bc55-60b3d73af17c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56876602-38ab-44ef-bc0a-fb4fd97a8e31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9809866b-230d-4c00-a8a1-c2b68d709741"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52cbeec7-1fa3-47d4-b2df-edd480bf4a12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a35fc087-62c0-4ae0-a56a-d35912d1d3e7"
                    }
                  }
                ]
              },
              {
                "id": "09e82f32-5e7c-4bac-b6c2-76c79c212d9d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f557bc0-7e00-4c85-8a73-91f1b6b249f5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa961773-d7bb-43eb-b4a8-a0e64069692c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e11a0f5c-dac6-435b-87e6-c59c76c995ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2543ce7-70b5-4114-a27e-14c22d1ae256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "411ba04c-f078-407d-af30-15962f048cc8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbdbf642-0a78-4ace-bd49-ae44ec994949",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c13ff4b2-9046-41c2-b60a-2f285eb9eaaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a11ab60b-c876-4781-a18d-147dab35ee86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "870255cb-c09f-49d8-b6ff-ecf210c72e04"
                    }
                  }
                ]
              },
              {
                "id": "b1f61408-0a07-4636-b5e8-b5b7df6a87bf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "905996d7-9104-44b5-a857-c929230976d2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086c09b1-6eb3-4bc6-a4a4-c1373b0f67ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0a6f1eb6-2e34-4258-bcea-6ec3b1c2c521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d020d5dc-8333-4255-b413-d370207499fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e388460-d806-49b5-818e-5f3a9b83ec91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e12bae44-5bb0-41b7-a007-3a98caa65f9a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5a6c17fa-da86-4808-ac53-b1c31bc79d39",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "543bff2a-cdb1-4f66-a19f-207cccabc270",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a4afe743-0c19-4f6e-8384-b0a5eadde023"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d676d30-5d91-46b5-8545-a5a3fd5b93e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87a2a887-96dc-4338-8064-10eda6baf3e2"
                    }
                  }
                ]
              },
              {
                "id": "a2cd0497-46c0-4a1f-ad59-4bd51edfc916",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea98628e-f314-4711-9494-e3a3a8faafce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c2ec048b-3faf-4d12-8407-657cb1730838"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "921f0dde-f1c8-4129-a2da-8b9f13466bca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c75c207-a649-402e-bee9-ccd0d3af2d19"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c31207f8-1f1f-4ab9-bf8b-b6f6f1578bbc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d8a8c20a-ced4-412d-b878-3ce68d15cb0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05d28b2c-bcb5-43c3-8a79-492ac7d31bef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29e7a789-e0c7-4904-8010-499a04156455"
            }
          }
        ]
      },
      {
        "id": "8b5c1349-0e67-460d-9831-d924ed030c11",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7c840103-ae58-4c29-abbd-c6dd87c8d496",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d23dab8-69ae-4c0e-a45c-d9637dd604bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8240218-6083-4286-b616-f41378343e99",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa5503c-ff00-4d96-9735-4e5eb7fbdd48",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4036e1d7-7754-436a-9e13-92c2cd557077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaea3ca0-3e5f-42da-b1c7-fb22e514a9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4fcd0d4-bd11-4f34-8ecc-bc9c06807e25"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef95d1e2-df83-4243-902a-d39516e13d11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9de37352-c1cb-4214-8af3-b322f93b30e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab70e46b-8b8f-458d-9397-093d89f5eed6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36f2ec51-9dbf-4ebf-a70f-697c0b87c1b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe35807b-c93d-4be3-a683-95aa58e1853c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5a39ee9a-2e71-4754-88c8-c1f38ba27452"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3598443b-f731-43c7-b2a5-0d36348499b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86bcad65-e0a7-4849-b04b-6d9dded1b625"
            }
          }
        ]
      },
      {
        "id": "9c6123c4-4520-4e20-afd0-0e3aa5b4d12d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ade81927-8cea-4206-aa05-baa20ea0e39c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "261d04f0-17bd-4482-b711-614dedebbfb5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2bc9ceb8-6f95-4e58-96cf-ae5212614722",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbedcaeb-89d4-4a5b-af95-b1361fad9d3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b716f9d-4eae-4ccf-a428-9a248a93516f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a441c594-8dcb-4f83-a20a-68b903b64eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "561a1283-b2ae-48ef-9024-563d221d53a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dab6605a-ace0-4039-bc25-d1868da38c11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f855d144-f665-4ea3-ada4-b3021d67450a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f357e42-e0fd-450b-8163-fe4be9a27b31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e523b42-8b8f-4928-b466-89b55c51b3da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6ce6b37-37a9-43dc-a712-21059386858f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "82e0637f-bc0f-48c3-8ca8-50f2a30a9d6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c6d754a-5aae-4366-a471-8cc216953847",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79cfcf55-87df-4b4a-9671-e79caa11e92d"
            }
          }
        ]
      },
      {
        "id": "b7a633ac-80d8-4587-8a26-977c66a01336",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b15b5c48-b50a-4c4b-a63b-52ee0369e797",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64251210-a2f3-4cf2-a15e-592c78550f96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "212dfe50-b6f7-45c9-85f6-568b5af2f557",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb81318-84a0-4f2a-89be-e0026f9f5b54",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e607d78-a97a-4b0b-9d74-8da799e987e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5510b0c1-fbbf-488f-9f27-09957e244a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e75d715-9e42-498b-9681-5bc560612321"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c8a35af-9da9-471e-9afc-3390c346760a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "641803f1-a560-4f13-ac86-2531e8a49a94"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82b80b3e-fb46-4576-976b-c3ae862e35f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2a678ec-f533-487c-b421-50fb8a505341"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7784caed-3cf1-42ea-862a-687aa719cf3e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bcf896f9-352a-46d8-b19d-84864717119a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d5941c5-5ac9-4bb2-b5f0-410c6dcf3bb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2748fe37-7001-47cf-bcb4-941e6ebc79ae"
            }
          }
        ]
      },
      {
        "id": "ff674595-1d7c-41df-a347-4eb9d65ccb9d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "199d3249-927c-4ad3-a9df-e87edc3fd46c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f96578f-9274-4ae5-952e-0eb1870de2ea",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "62f342af-09e6-4880-944b-f07e4a7d1cb7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25d6ea53-d775-49d7-a98c-9cc58d8a0f6d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ceea17b6-6087-4927-8053-ea684cc16a5b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 136.669014084507,
      "responseMin": 6,
      "responseMax": 9348,
      "responseSd": 792.4508446285796,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691886803032,
      "completed": 1691886853253
    },
    "executions": [
      {
        "id": "67cbe875-f86e-4050-b2a2-ef580789167f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "abb97cf3-1833-4f48-88fd-8ebe2af18611",
          "httpRequestId": "326112a9-bb46-4fa0-913c-a663a9239e0f"
        },
        "item": {
          "id": "67cbe875-f86e-4050-b2a2-ef580789167f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "64c99d2e-3075-4ff7-ae57-ff6dbebc893a",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "6770a83b-83d4-460a-893a-66954fcea10f",
        "cursor": {
          "ref": "5133b9d5-65ae-4f83-96a9-d51f45b72359",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ec257f5d-e484-4e2f-905d-41c2875180be"
        },
        "item": {
          "id": "6770a83b-83d4-460a-893a-66954fcea10f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d16c9ebd-eab9-4044-8973-43c16fdd8f3b",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "ff6d37e0-f3db-47de-acf1-31d1cbfd96d1",
        "cursor": {
          "ref": "a4b33138-f249-4ed6-8471-294d483415a7",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "971d2129-86a9-4a15-b48c-e6662fc21171"
        },
        "item": {
          "id": "ff6d37e0-f3db-47de-acf1-31d1cbfd96d1",
          "name": "did_json"
        },
        "response": {
          "id": "5087e7b6-270f-4619-96fc-61d6bff40f72",
          "status": "OK",
          "code": 200,
          "responseTime": 437,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81caf5de-24ea-4415-b4b1-a1a552212c28",
        "cursor": {
          "ref": "5f1d31c2-8ddf-4aab-8a2e-eefb7471db99",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c0275235-546b-4960-b30b-e80b67acb1dd"
        },
        "item": {
          "id": "81caf5de-24ea-4415-b4b1-a1a552212c28",
          "name": "did:invalid"
        },
        "response": {
          "id": "ba4d2685-2a03-4439-88d5-26004e101fa8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3901,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81caf5de-24ea-4415-b4b1-a1a552212c28",
        "cursor": {
          "ref": "5f1d31c2-8ddf-4aab-8a2e-eefb7471db99",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c0275235-546b-4960-b30b-e80b67acb1dd"
        },
        "item": {
          "id": "81caf5de-24ea-4415-b4b1-a1a552212c28",
          "name": "did:invalid"
        },
        "response": {
          "id": "ba4d2685-2a03-4439-88d5-26004e101fa8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3901,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca211e7-d625-4f0f-a54c-d60000ea4d4a",
        "cursor": {
          "ref": "d00a34da-f426-42d8-907e-cec200dce739",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6edb566c-c98c-43d1-85e9-bf29b3598138"
        },
        "item": {
          "id": "cca211e7-d625-4f0f-a54c-d60000ea4d4a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7fea171b-700a-48fb-9e08-2cb224a9ea8d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c8a598-d90d-4cea-bfd0-10189ca0200b",
        "cursor": {
          "ref": "b5a3766d-74e7-45ea-adaa-ce889cde7510",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "40c5dbbf-6227-4e9e-b230-9e0cba242fc0"
        },
        "item": {
          "id": "22c8a598-d90d-4cea-bfd0-10189ca0200b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "177765b1-adfc-497a-8959-b5f9e3df3973",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72cdb8f-4baa-4020-a11b-0741f8d94788",
        "cursor": {
          "ref": "0c340281-9873-4dee-beba-5feba37e44e6",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f577a8a2-7b81-43b5-a90e-aed7983851d9"
        },
        "item": {
          "id": "f72cdb8f-4baa-4020-a11b-0741f8d94788",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3f7235f0-61d8-40f5-858c-e4225f605bc9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00eca6fe-a737-4ef3-b59f-177583714401",
        "cursor": {
          "ref": "f3060338-f9fe-48c1-97aa-46facf2a0361",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "497b45ce-f20a-4c59-afb2-5bda5e80a178"
        },
        "item": {
          "id": "00eca6fe-a737-4ef3-b59f-177583714401",
          "name": "identifiers"
        },
        "response": {
          "id": "7d909c6f-54d2-41db-8a4c-3bd8b932d6a1",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c14c35-a2db-4c8e-ad6c-5ccde0e5a3af",
        "cursor": {
          "ref": "27356fd1-96a8-4d1e-bd50-c3ca37fb8798",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6d01115a-c2f0-4a0c-8c94-18b2c473a8dd"
        },
        "item": {
          "id": "26c14c35-a2db-4c8e-ad6c-5ccde0e5a3af",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8b6a742e-0d95-4bef-81e8-e10dcb79f9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd82efe-bac3-4e13-a895-9919459b5b9f",
        "cursor": {
          "ref": "bfbe292f-2c1a-46f9-a77e-c444c0da617d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9bd673a6-bc31-44b9-b997-c72d1edf2fbb"
        },
        "item": {
          "id": "2fd82efe-bac3-4e13-a895-9919459b5b9f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ea90f0eb-4ae9-4248-9955-d11956170191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e741ef77-38d4-44b2-aa1b-fc41deba34a5",
        "cursor": {
          "ref": "263d6539-b9ce-43bd-b524-cb5a93069de4",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "96233a52-c64e-42e5-a536-c568cf34a815"
        },
        "item": {
          "id": "e741ef77-38d4-44b2-aa1b-fc41deba34a5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "059a21b8-270e-4910-adec-c5ad99d8e655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfe415a-9f9e-44ac-8589-4b671fafa43d",
        "cursor": {
          "ref": "011a8d9b-06c4-48ac-bc40-4ebe83f2ad33",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "eeb1c2b6-8f93-473f-8879-bb9243514dff"
        },
        "item": {
          "id": "cbfe415a-9f9e-44ac-8589-4b671fafa43d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b79df5d7-0afd-4cb4-8255-8d1f337ca829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39d0eb5-46ba-4d4e-942e-383711ef3202",
        "cursor": {
          "ref": "a024e24a-b83e-41d2-8161-04d08c5a12d5",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1738052a-c5df-455c-93df-f89429ab3a2a"
        },
        "item": {
          "id": "c39d0eb5-46ba-4d4e-942e-383711ef3202",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7ab381e4-3ee6-494d-b7de-7cd5a00753a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c731779-752e-47db-b2e9-468dcc78d9c7",
        "cursor": {
          "ref": "34cec462-db42-45fa-9457-69564234e53e",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0d8a5811-b351-45b8-958b-884a1939d165"
        },
        "item": {
          "id": "1c731779-752e-47db-b2e9-468dcc78d9c7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4aa5657f-06c0-4a09-a775-5b70091241f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b98696-28f3-40aa-a1db-e59e4aad0473",
        "cursor": {
          "ref": "cacb7551-7006-4bc2-b6c6-b5cbae0f048e",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e1086e36-c970-4f0d-9a23-49694204c394"
        },
        "item": {
          "id": "d2b98696-28f3-40aa-a1db-e59e4aad0473",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ff0f456b-66ab-41cc-9f37-f245cfdc3e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb183870-0dcd-4243-baaa-c7f28af7c5cf",
        "cursor": {
          "ref": "8ed646cd-cfc3-425e-8d69-99c49d3b60f3",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8e2b1581-b75f-4b8c-8837-02520b2e0f79"
        },
        "item": {
          "id": "bb183870-0dcd-4243-baaa-c7f28af7c5cf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "93ce49f8-1906-45d9-b8ca-8f6af154cf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c309959c-5d09-4777-834f-d0ffad8b7d47",
        "cursor": {
          "ref": "39a2c26b-9613-450d-9aaa-d09bb1e44526",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6928710a-2b5b-45e2-9ac8-8eab11a879df"
        },
        "item": {
          "id": "c309959c-5d09-4777-834f-d0ffad8b7d47",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d7974a0e-9977-4468-b36b-1fe5bbd04b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225ac055-0f70-4a56-96ad-ad4bfa837148",
        "cursor": {
          "ref": "4ac4bc8b-115e-4358-80dc-62013a152a93",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7364279f-8176-4ef2-9f4e-9148361eb03d"
        },
        "item": {
          "id": "225ac055-0f70-4a56-96ad-ad4bfa837148",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cdc6c08c-49ab-4ab4-bf2c-ae265992d49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8340b3-cf27-40fa-a18d-c22e40241b2e",
        "cursor": {
          "ref": "5f13e512-ea63-49b8-8506-156d5714939d",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3af5e81f-ef9f-4c11-9064-59c0dee36d0a"
        },
        "item": {
          "id": "eb8340b3-cf27-40fa-a18d-c22e40241b2e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f9ae83ab-be79-44a5-8105-5c773c84a90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0d1e71-eb64-4d68-a4cd-c1cdc826b1f4",
        "cursor": {
          "ref": "47ab76f7-534f-478d-b00a-bfe518b8a90d",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4f7685c8-1899-45d3-8f71-a34198dadae3"
        },
        "item": {
          "id": "8b0d1e71-eb64-4d68-a4cd-c1cdc826b1f4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "16fae3d8-4adb-4aa1-9799-5ebf4c5fe37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd42f054-9798-4d4d-bbce-e172a7ca04fb",
        "cursor": {
          "ref": "b2fc7067-4ddc-4f5c-97ad-bf72ca7ee8fc",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c3454ef5-da1d-49aa-a03a-5746e1a8617d"
        },
        "item": {
          "id": "bd42f054-9798-4d4d-bbce-e172a7ca04fb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cb56fbfc-79f1-46b8-a5fc-8c60d7389bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ab1299-a54c-4b9d-9f74-ae3c4e74e29f",
        "cursor": {
          "ref": "812f4417-723a-4b86-a0af-d54075ed32ae",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a430417b-4612-4af7-8b17-3d3eadf98d85"
        },
        "item": {
          "id": "f1ab1299-a54c-4b9d-9f74-ae3c4e74e29f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cf1204df-0281-406f-9d2c-38e769b009d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661f42e0-41e5-4e44-8ae4-1eb771f453e3",
        "cursor": {
          "ref": "d212b69b-c861-42b4-9035-9ae72e8bedce",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3e48afa2-ca80-4b6e-884b-108aac93e607"
        },
        "item": {
          "id": "661f42e0-41e5-4e44-8ae4-1eb771f453e3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "48355fcb-fe55-4f87-9f00-eec3c41337b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6c18b6-0bc0-4176-ac83-5935b7df4142",
        "cursor": {
          "ref": "7e9f5be3-6a39-4bee-9057-ddf28dbc53f3",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d15111aa-8f9e-43ff-976c-8ce27c2f7a7d"
        },
        "item": {
          "id": "db6c18b6-0bc0-4176-ac83-5935b7df4142",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c9a529b6-c90e-49c6-b72d-d2f3b4d7c05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7efc767-5aed-49c2-b45f-a008b5aa4569",
        "cursor": {
          "ref": "d1c8c85a-8a9c-4626-9708-a11009be5dc7",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0b69b583-39b4-4fe6-a023-1d939442913f"
        },
        "item": {
          "id": "a7efc767-5aed-49c2-b45f-a008b5aa4569",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "615934dc-c98c-41a7-ac3d-2946a1880676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00160981-f325-4fb1-a98e-4b7ebf4e525a",
        "cursor": {
          "ref": "d2427e48-424e-400f-a802-813cce79a533",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "33a05d3c-8d2a-43cf-a7d4-aacf5a3e2810"
        },
        "item": {
          "id": "00160981-f325-4fb1-a98e-4b7ebf4e525a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cc0c5677-542b-4388-8f6c-33b23b6b5ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b820df-f07e-43f7-9312-b22ff54a701c",
        "cursor": {
          "ref": "cb7207a8-3abc-4d35-8630-6a51e9039e92",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "91a1818d-dff8-4c27-83e3-9ef4df814eec"
        },
        "item": {
          "id": "62b820df-f07e-43f7-9312-b22ff54a701c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3be1ec55-87f8-4da8-8fe6-142b42ed2d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af77f1e-75a5-49d9-8ccf-d06aa3cca6ff",
        "cursor": {
          "ref": "d0fc3e85-cc6e-4a8a-8628-2bb7a69acb0e",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2f106c36-844d-43f8-b86e-a0417ec692e4"
        },
        "item": {
          "id": "5af77f1e-75a5-49d9-8ccf-d06aa3cca6ff",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ac35491f-9599-4677-b9d4-877d9f5e037b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6868b51-7247-420d-9153-fc66a0800f26",
        "cursor": {
          "ref": "7b8b52c1-ebb5-4217-9967-b6c76aafc1c6",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c2fbf5fe-599e-4883-b156-adaade36575c"
        },
        "item": {
          "id": "c6868b51-7247-420d-9153-fc66a0800f26",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "927560a3-7383-4cee-8b7d-0b6b0374fe4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f012c350-263b-485b-bf66-29b04ff8f902",
        "cursor": {
          "ref": "51b9793b-f99d-44a4-ad1b-aaa8f70bcc1a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2da25abd-e7b8-4e93-9810-32b01a07e8d3"
        },
        "item": {
          "id": "f012c350-263b-485b-bf66-29b04ff8f902",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c614dec8-2006-4066-8b66-3a90777575ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76f24ab-f13d-4b79-9fc6-7dd760214b18",
        "cursor": {
          "ref": "872e0a1f-3c0a-476f-be6a-717745d3c552",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "98bac1ff-2c76-4b4d-8eec-fd19ea1b646e"
        },
        "item": {
          "id": "d76f24ab-f13d-4b79-9fc6-7dd760214b18",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9b453037-57bb-41ec-8d6c-dc64c9128acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef5e5d4-0eee-43e3-b36b-46332ea4cacc",
        "cursor": {
          "ref": "ffe9cf8a-df0a-4bbf-b597-a82112428e04",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d3864ab1-8eee-4d27-ad4e-1817450baf49"
        },
        "item": {
          "id": "8ef5e5d4-0eee-43e3-b36b-46332ea4cacc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "78dcc1cf-9496-4965-be22-6a1ce4fc3aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfdf6f6-92d5-4c93-835f-0b572f317e09",
        "cursor": {
          "ref": "f9d1e959-0a94-46bb-83c5-6b9b774928ba",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "06801c07-1220-4a3f-a57c-3f891c34ed52"
        },
        "item": {
          "id": "2dfdf6f6-92d5-4c93-835f-0b572f317e09",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f3dda158-5aa5-4e5d-8d9b-6c71d026f4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33999d7d-292a-4030-bab4-9dad64bc9d35",
        "cursor": {
          "ref": "470ee6ad-43de-411f-9438-26e3d86648e0",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b28a9d7b-69b1-4bb2-996a-76526864f972"
        },
        "item": {
          "id": "33999d7d-292a-4030-bab4-9dad64bc9d35",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5b1b7d8c-a85d-495e-bbd1-c9f2e99793a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d9a055-c813-4a4c-9438-c348d135e616",
        "cursor": {
          "ref": "18662b28-e4cc-40f8-9605-dab33951525e",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "55607a4f-678c-4157-be7c-f96124cc7aee"
        },
        "item": {
          "id": "b5d9a055-c813-4a4c-9438-c348d135e616",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b3351259-30cf-49aa-951c-61b25979cf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990b36c7-9f0c-47a1-af51-d5d5d2ab35b4",
        "cursor": {
          "ref": "026c0f24-ca3a-429d-8de9-4319ae10e488",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0982205f-d877-4528-8283-55727614f896"
        },
        "item": {
          "id": "990b36c7-9f0c-47a1-af51-d5d5d2ab35b4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9747a644-50b4-462b-8148-b3848a74cb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af92556-10da-4973-8a25-40d14e4e6ed1",
        "cursor": {
          "ref": "bfb1ce1b-f029-4ff4-b31f-5375dab609d4",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "55f78011-49a3-4c73-bd23-3fed4f850880"
        },
        "item": {
          "id": "7af92556-10da-4973-8a25-40d14e4e6ed1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bdfb8594-416b-4750-acc0-1053397499c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f5c3bc-3e53-4d60-9486-5af906f71896",
        "cursor": {
          "ref": "5eb3a42e-6388-4e19-800b-b3cc8ac2cf41",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6954d461-1789-4e54-bb46-057358657234"
        },
        "item": {
          "id": "54f5c3bc-3e53-4d60-9486-5af906f71896",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "25f70341-9173-433f-9894-aeb0b9f40bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e5d922-6267-4434-ba52-1f37e397bdef",
        "cursor": {
          "ref": "be768aea-c14d-4914-9226-82c73960aab1",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "16b7a031-a21a-457e-aab0-045d08d9120f"
        },
        "item": {
          "id": "07e5d922-6267-4434-ba52-1f37e397bdef",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0ab245e3-ade3-446b-8875-36b5e49d3386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d59eca1-0ee1-4af5-8e5c-5072ab2c8433",
        "cursor": {
          "ref": "9446dd0d-9dc9-44ac-8df7-8afccee13558",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e863cafa-bf83-45d1-9b43-7328c5ebac43"
        },
        "item": {
          "id": "4d59eca1-0ee1-4af5-8e5c-5072ab2c8433",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2b572ad1-99bb-44bb-8f7f-e37edd0094f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df066e2-7371-472f-80e9-78fba7a67be2",
        "cursor": {
          "ref": "fe73e69a-d60e-4e7a-bf82-681de8ed8fb3",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4ead51ea-de86-42d1-9e6b-b9fc6e5a6c2c"
        },
        "item": {
          "id": "2df066e2-7371-472f-80e9-78fba7a67be2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "96a03406-e8b5-4f6b-b566-0d1c99bd196c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef33a09-f800-460c-b80a-0b924f7617d3",
        "cursor": {
          "ref": "47adccdc-180d-446e-b0d1-a8914f96d535",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7dc08607-3fa6-410a-908b-5462c798fa34"
        },
        "item": {
          "id": "bef33a09-f800-460c-b80a-0b924f7617d3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "01294c5f-3cd2-4f90-82c4-0387eb7ac9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf76275-7819-42ef-8e6f-61faa8a2e4fb",
        "cursor": {
          "ref": "2d968a12-6676-48ae-ba7d-c9835da25fd7",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9bb3f93b-c6f3-41c4-8e9e-59fdcf53bed5"
        },
        "item": {
          "id": "4cf76275-7819-42ef-8e6f-61faa8a2e4fb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "46386f0f-f6de-4a45-a5f0-c0300106817f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201c0b7b-7670-4fe0-9109-0442aed71e64",
        "cursor": {
          "ref": "33d626fb-8243-4d50-8963-0664fac54caa",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "eaf59e41-2d04-47e0-9b2a-9637c940b347"
        },
        "item": {
          "id": "201c0b7b-7670-4fe0-9109-0442aed71e64",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c435068a-52bc-49d1-8b8a-07244540fa90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4badb78-5d26-473e-9a9b-44cdfb5f82b3",
        "cursor": {
          "ref": "dc16a73e-bf8e-4674-a09c-cd991c7c7e34",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e9781a3a-b6cc-4b58-9f15-a44cca901d99"
        },
        "item": {
          "id": "f4badb78-5d26-473e-9a9b-44cdfb5f82b3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f6b7a590-dbe7-4d83-8005-fe9dc219cc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0113b27-6b5d-4b12-bacb-7532ef503e1e",
        "cursor": {
          "ref": "55ea8d3f-55b4-4665-b4b2-9d974efa1ab0",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "69e516a0-6c75-4934-be12-6c20afca4757"
        },
        "item": {
          "id": "c0113b27-6b5d-4b12-bacb-7532ef503e1e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4ccacaf7-4293-4078-b230-f410d078b634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0203d93f-7759-4a3b-b593-8ac56b13ed45",
        "cursor": {
          "ref": "6344d5ff-3bf0-4a6e-bec6-21600c85f637",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7697aa50-7a73-450a-859d-46bbc1c5ff8c"
        },
        "item": {
          "id": "0203d93f-7759-4a3b-b593-8ac56b13ed45",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f3986e4d-22d7-466d-991f-7990f6da815b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490a8c13-0129-4d86-96c6-9a1080079d03",
        "cursor": {
          "ref": "360059b2-05f7-4d34-a043-cfacaf7cb08a",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "af8b5f44-fdfb-4ed1-ad92-03f65f8b63f6"
        },
        "item": {
          "id": "490a8c13-0129-4d86-96c6-9a1080079d03",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "334925c8-6cb0-4032-8fd6-acfdd25a4673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315d06a2-b3c7-45fd-973c-a15e80dd6be8",
        "cursor": {
          "ref": "9ae7aed5-736e-426b-a551-efb66a22b101",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e63aaf02-05c9-4a24-945c-ac00a7908b82"
        },
        "item": {
          "id": "315d06a2-b3c7-45fd-973c-a15e80dd6be8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a3d28ba0-9995-43d7-9f27-db9f65e2bbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545f8054-0bd0-46c1-9ddb-ff72ce99ed54",
        "cursor": {
          "ref": "71e1dc43-fec8-4c1b-85dd-e8fd2108ee94",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "11e573a9-64ad-4e8d-b580-db3afebca154"
        },
        "item": {
          "id": "545f8054-0bd0-46c1-9ddb-ff72ce99ed54",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "de37c2d4-8581-456e-b688-a26d3074de9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827d88d5-da00-484e-a18c-09e142d842f8",
        "cursor": {
          "ref": "4fe89563-2b35-46dc-88e7-8f83e4bc4987",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "051e8eee-7283-43cc-b89b-4d928052302c"
        },
        "item": {
          "id": "827d88d5-da00-484e-a18c-09e142d842f8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "276b2d16-9be2-486c-840f-322c2d79be6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fefb1b-9077-40d6-9405-0ab3ca287f5e",
        "cursor": {
          "ref": "5b1ce46b-b43f-4ba3-b0ed-7cb246107846",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cdb53efb-5333-4edf-b4a5-ea4d2fc17bd4"
        },
        "item": {
          "id": "84fefb1b-9077-40d6-9405-0ab3ca287f5e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "da7b4b7b-aada-4d47-ba4c-166cc9345125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10400ad5-5cee-4fde-b5ec-6fb68275bb9e",
        "cursor": {
          "ref": "f7853b17-2974-4af9-9b97-d16e0434448a",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bd94ead8-effb-4873-adbc-e3e4b328598b"
        },
        "item": {
          "id": "10400ad5-5cee-4fde-b5ec-6fb68275bb9e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0a68fa68-1757-4682-8225-991f8a4763f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7d2853-970b-49c5-ad0c-746521d952cb",
        "cursor": {
          "ref": "72fbb721-8b14-4c8c-b7ce-b5e7eee5ef4b",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ccaa9b31-2e5f-4e69-be46-10d8a3f7df09"
        },
        "item": {
          "id": "1a7d2853-970b-49c5-ad0c-746521d952cb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c2236768-04be-4ecc-bcb2-cbcc7812609a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dcb83c-00f3-46c6-8f6f-3a920a6639a7",
        "cursor": {
          "ref": "b9d1d0f9-921f-4a69-8eb9-5f6a9d4b1dbb",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "04507cee-ea91-4d3d-91c8-aab193c244e0"
        },
        "item": {
          "id": "18dcb83c-00f3-46c6-8f6f-3a920a6639a7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "99669563-6bad-40da-8189-7c82d6d7771c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d1311e-b2c5-42ed-8fb9-951be517b3dc",
        "cursor": {
          "ref": "87e642c6-f42c-46dc-9c12-11d0c703c995",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fd10dea7-6eb7-4ca2-8d4e-6880cb350c71"
        },
        "item": {
          "id": "95d1311e-b2c5-42ed-8fb9-951be517b3dc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f55492fc-49fc-4fe0-a6cc-98537757fa62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20852de-b23e-4f11-84b2-aa934df80815",
        "cursor": {
          "ref": "6965d207-33da-46c2-9103-7b2a713b6163",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fe6bfad3-b565-4ea8-adf1-4d32448a6e62"
        },
        "item": {
          "id": "a20852de-b23e-4f11-84b2-aa934df80815",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0ef48c50-d0a6-4bc1-be8d-04a0c34b924b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d299be-d0cf-4387-a12e-6574488ddd0c",
        "cursor": {
          "ref": "0a36aa22-3673-428f-8ad9-2b1039117c26",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3c24edec-820a-4189-96c6-72520e43332f"
        },
        "item": {
          "id": "f5d299be-d0cf-4387-a12e-6574488ddd0c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9e38dc84-68c1-4ec6-8510-2a7334d28444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cfa54c-ac5f-4889-919f-a9d9bf47a14b",
        "cursor": {
          "ref": "0b3b27fa-8c49-4369-9c3f-5b8c18dfd69b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "34d21cc4-6945-45ae-8766-8dc0550d7bae"
        },
        "item": {
          "id": "96cfa54c-ac5f-4889-919f-a9d9bf47a14b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fc844173-55e0-4c10-972c-4423ea5b6466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d44a33-6e47-4736-b1b9-3318772baa21",
        "cursor": {
          "ref": "fd7f19f2-0ff4-476d-8e90-49a1175408fc",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2f97446b-94b4-498b-8d29-8f1252fba54d"
        },
        "item": {
          "id": "85d44a33-6e47-4736-b1b9-3318772baa21",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0a1caa23-a053-453e-9439-2224bee31e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76d5fb9-aa0a-42a9-8aa8-a50978c7d305",
        "cursor": {
          "ref": "eafbdc8f-c81e-4a8b-87f0-77a99a116376",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "652c951b-735b-453f-8a55-c604c943a011"
        },
        "item": {
          "id": "d76d5fb9-aa0a-42a9-8aa8-a50978c7d305",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "66fe7f00-e4e5-4c73-8ea6-b3baa04e98e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb563144-08f6-48fc-a5f5-8722682a7510",
        "cursor": {
          "ref": "1b5bff2d-2343-40ff-bf41-d0228ef86e04",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "54d47e88-c1e8-4916-9166-70c574e1bff9"
        },
        "item": {
          "id": "bb563144-08f6-48fc-a5f5-8722682a7510",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d030931d-f932-4e96-a54c-d708edea5f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd10a9e4-8bc3-4339-a4c1-6fc6430ea76c",
        "cursor": {
          "ref": "6bc14607-f4d2-4405-8403-a29499fc912e",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "db2d4439-2305-4709-b16e-ca1141115792"
        },
        "item": {
          "id": "fd10a9e4-8bc3-4339-a4c1-6fc6430ea76c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "09d094fb-bbc2-401e-8f05-72cd2e93fcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7646a943-0da0-4e87-9d75-97e3b19466e2",
        "cursor": {
          "ref": "816aa2c0-2801-4849-a861-d4999f14a2f1",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "47bc42b2-f779-4e78-8472-7906a69fd85a"
        },
        "item": {
          "id": "7646a943-0da0-4e87-9d75-97e3b19466e2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0ce1dbe2-8f35-4aa2-87a9-7d0f9275c91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac7f2d2-69bf-42e5-9d10-4ea98726f78a",
        "cursor": {
          "ref": "beb6dcc6-caa9-442c-9217-850a0035f23f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b05176b4-8698-476c-a6b4-77d82f19cbd3"
        },
        "item": {
          "id": "2ac7f2d2-69bf-42e5-9d10-4ea98726f78a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b18d2005-2235-45df-a4c5-6584eb84825d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb47c8dc-1830-4759-b665-db4b98101dc6",
        "cursor": {
          "ref": "449af53a-f468-4eca-944c-cc866f9c64a0",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "110276c9-e688-4a09-ac49-6f0ddbd00949"
        },
        "item": {
          "id": "fb47c8dc-1830-4759-b665-db4b98101dc6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "565b9709-83a4-4727-9130-6d620d44e7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf37561-d6ac-4f76-9f6d-fc9f5771ec19",
        "cursor": {
          "ref": "c758e843-ebdd-4135-8ad8-6c9af3c5a4cd",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3e7f763e-20be-4377-8398-e894ae00b2bf"
        },
        "item": {
          "id": "3cf37561-d6ac-4f76-9f6d-fc9f5771ec19",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fd48442c-9e4e-48bf-8ae7-350c642e5582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e036cfd-899f-4efb-af3e-eee816ac15a2",
        "cursor": {
          "ref": "eb967ab9-33de-4bcc-a491-73b31bbca4cf",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "407c771a-1461-487a-9a80-d55d853cf3d4"
        },
        "item": {
          "id": "8e036cfd-899f-4efb-af3e-eee816ac15a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ba2e1d9d-0bb6-480b-9ed4-121f6184d418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca05ba4-06a7-4143-85a4-08860d15a478",
        "cursor": {
          "ref": "bbc17652-7d7a-49d2-b2e4-b96ae007c9ee",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a68970fe-a897-4228-ae5e-fbf46f4b4886"
        },
        "item": {
          "id": "dca05ba4-06a7-4143-85a4-08860d15a478",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7314aac8-db27-45b0-9401-62b9560c182d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4971d0-0290-4c46-a839-449d4929d7ae",
        "cursor": {
          "ref": "7c9323ff-2ade-4970-abad-46a932ef4123",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "83898cda-195b-4813-8738-0320600c1415"
        },
        "item": {
          "id": "0e4971d0-0290-4c46-a839-449d4929d7ae",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9c524614-3ac2-4229-9193-f7bb275b2b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813f0acb-c56d-45d7-a8ae-806613cec285",
        "cursor": {
          "ref": "ccbe8774-4569-4da1-b134-e17b31d64ea8",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "44934247-a511-4df2-af41-8e474ed0acec"
        },
        "item": {
          "id": "813f0acb-c56d-45d7-a8ae-806613cec285",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ed55e3a5-9124-4c3e-8fe7-60e76d784892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6120ec34-7865-47b0-8911-1311085091f5",
        "cursor": {
          "ref": "6302a830-a7d7-4a09-8df3-e7c849eaeb3b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bd8f10bd-4e3d-41d8-bca8-50d367ff8cdb"
        },
        "item": {
          "id": "6120ec34-7865-47b0-8911-1311085091f5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2d86257c-ee3d-4e77-8985-fa247c8ac7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a36365-55b7-46d4-bdc8-8c76bf9e675b",
        "cursor": {
          "ref": "4a6d545e-5c8d-488e-a400-1dad10ab239f",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e036f9c6-b7ee-4749-a53f-faa05d997344"
        },
        "item": {
          "id": "95a36365-55b7-46d4-bdc8-8c76bf9e675b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8bc05cbd-5a27-4f84-8bc6-09443e17ed1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee7512a-bb23-4250-aef6-e3591d6c7773",
        "cursor": {
          "ref": "9aea9e3a-cb6a-4aff-bcf4-195b6859cc81",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a99c58a0-b113-4df3-b9ad-7a7118e9a7f8"
        },
        "item": {
          "id": "fee7512a-bb23-4250-aef6-e3591d6c7773",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6c337c1f-5ac2-4504-ada5-1c607e11222d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eaba95b-4c2a-43b2-b73e-a2ac753511cf",
        "cursor": {
          "ref": "40ec344f-f446-4c74-8759-93c367dc2dec",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "90a96df7-54f9-4254-bfc5-293d6047f37f"
        },
        "item": {
          "id": "0eaba95b-4c2a-43b2-b73e-a2ac753511cf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ca902c69-2dfb-498c-9970-5c62966c73ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee77a00-c7d3-462d-b6b9-29fd173259c6",
        "cursor": {
          "ref": "18eac9df-bcf3-45bc-81aa-a74f924ed069",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "33eabe77-6dc8-4a8e-bd33-cb412c4e2b53"
        },
        "item": {
          "id": "0ee77a00-c7d3-462d-b6b9-29fd173259c6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b1eb99cf-5525-463b-b0f3-99d36f26d61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cb0bb3-89d0-4059-881f-7282a78a179b",
        "cursor": {
          "ref": "8b513af0-89af-40fa-8ca0-104bd753f184",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "dd36271f-4b3f-438a-89d2-5cc01de6fd4e"
        },
        "item": {
          "id": "53cb0bb3-89d0-4059-881f-7282a78a179b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "355721d0-ebf9-4ccc-b62d-458cf13a3504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3031f89b-946c-4574-b489-679f98b3747f",
        "cursor": {
          "ref": "6b2c2666-a622-4a39-a844-8b95384449e7",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4188c20f-b989-4650-8a93-d9336e06f49e"
        },
        "item": {
          "id": "3031f89b-946c-4574-b489-679f98b3747f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c744c26a-aa69-4433-a9b1-dd92e3e2ca42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4e773f-54f9-4378-8a99-dfe5040ca37e",
        "cursor": {
          "ref": "f4a71dd7-909b-4d9c-a88d-dbca38602c6a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3d0197f0-4283-4815-9fbf-d7f3bb51e5aa"
        },
        "item": {
          "id": "da4e773f-54f9-4378-8a99-dfe5040ca37e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d449e8c7-ac86-43b6-b08d-94a3b60fab27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3348dfe-3832-4019-9b06-f479f422349c",
        "cursor": {
          "ref": "569eea3f-4dc1-48a0-918a-f4dd80feeaf7",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "85e2d6d1-79ba-4276-b450-30a224554f02"
        },
        "item": {
          "id": "d3348dfe-3832-4019-9b06-f479f422349c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f2f4c828-4587-42c6-8f7a-abae59d43392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f27cba-deb4-4226-a5dc-eaeca56ad03c",
        "cursor": {
          "ref": "9272ed05-e115-4d2a-8e52-1609e5983dfb",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "70c98d77-81f0-416f-b3db-07f9fc6d304b"
        },
        "item": {
          "id": "19f27cba-deb4-4226-a5dc-eaeca56ad03c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5f3e79b4-3ba5-44cc-9ada-a2ce0904c6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7cf234-1d70-4785-9c46-155f17071552",
        "cursor": {
          "ref": "7b346093-3ec2-48fe-a0b7-080b03170b8e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f9e0c008-c452-43d6-af31-a5ccecb28e1d"
        },
        "item": {
          "id": "7b7cf234-1d70-4785-9c46-155f17071552",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "49f7278f-9ce2-41cc-aea6-204c20990bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f038dd28-387b-4de4-8750-1cbcc06c099f",
        "cursor": {
          "ref": "2b8c7280-28db-4143-aa29-0a0f98f8f720",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "50349a5a-12dc-45e4-af71-4684fff09b7c"
        },
        "item": {
          "id": "f038dd28-387b-4de4-8750-1cbcc06c099f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e622b486-e06b-4af4-a420-a25706abc673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1657959a-56a5-43e0-953b-74c8a9c3e4a9",
        "cursor": {
          "ref": "9f2c728c-dc4f-4f03-aed9-e4361fc62827",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6511fceb-63c1-4c6c-9a63-dab6d980323a"
        },
        "item": {
          "id": "1657959a-56a5-43e0-953b-74c8a9c3e4a9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "de5c1b14-690a-4f5f-8ab1-97474c93f02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7a6c59-df42-49a1-baa2-ff3e025c3440",
        "cursor": {
          "ref": "dc6e41b6-7a8b-4391-97af-5da0cd85a399",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "36d16cf8-45c2-4b39-ad01-e9db54eff991"
        },
        "item": {
          "id": "9e7a6c59-df42-49a1-baa2-ff3e025c3440",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d52d83dd-56df-4261-8d85-d53679b93c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e5c310-92d3-413e-9fe6-650639d80040",
        "cursor": {
          "ref": "cc7d5582-ddaa-42b2-b4c8-d7e77d69ef51",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4ae73791-e6da-463b-ae82-ca04bde157b9"
        },
        "item": {
          "id": "69e5c310-92d3-413e-9fe6-650639d80040",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "444a2b48-49ef-4ddd-832d-277aabceff0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f891d131-20f7-4fdd-ab9e-043ffe5bcea3",
        "cursor": {
          "ref": "c4b28210-81e8-4f94-ba62-e23a8e640443",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6290cc8f-d066-4ec4-b51d-a9be331e706b"
        },
        "item": {
          "id": "f891d131-20f7-4fdd-ab9e-043ffe5bcea3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "89ee2c1a-5c4c-424e-a552-7897d510d067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc12ac76-e1f9-4480-a240-83e90f9dc45f",
        "cursor": {
          "ref": "4cbbbb5b-ff89-4103-b862-851439a8912d",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "798eb7d3-f327-47a4-aafd-5e01d3e239b8"
        },
        "item": {
          "id": "cc12ac76-e1f9-4480-a240-83e90f9dc45f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0163ee03-ec4c-4a42-a155-7b81f868b16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c35e6d-7bca-4d69-979d-b89ad857e3d9",
        "cursor": {
          "ref": "5131ed53-7118-4916-9798-40e27c3e013b",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4bdf5d9c-cabd-4e27-87a2-82d59aa8cf63"
        },
        "item": {
          "id": "a5c35e6d-7bca-4d69-979d-b89ad857e3d9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "07dfeba4-86a6-40c5-8510-4cf2a06a3843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c863a51-ceba-4865-a94b-8b8edab7d406",
        "cursor": {
          "ref": "a3cfc5cd-e5ed-4e05-a7c8-181a6e63f5a1",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "61137cd6-0e43-4079-b704-e7e61f946a07"
        },
        "item": {
          "id": "5c863a51-ceba-4865-a94b-8b8edab7d406",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d9dcca99-1751-413a-914f-0b6e3980419f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636acc24-0fd9-4923-9079-4e351e2a0ddd",
        "cursor": {
          "ref": "7db130f7-4993-443d-bdd5-9a6c6c961dfd",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2eef3141-ef19-4931-9bce-f95653cd5b9d"
        },
        "item": {
          "id": "636acc24-0fd9-4923-9079-4e351e2a0ddd",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9fa11829-0511-43a5-b8a3-1ec2972a05a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e160dc9-45bf-4a7f-80e7-7190bfbce661",
        "cursor": {
          "ref": "716fe815-a944-4dad-8035-dccad34534df",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2b7efcc5-158a-4091-ae4d-d3e697c3422a"
        },
        "item": {
          "id": "3e160dc9-45bf-4a7f-80e7-7190bfbce661",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6c46ff7f-ff15-4057-81d7-e89799a84f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348c49b7-849b-49da-84b8-261cb61b8b47",
        "cursor": {
          "ref": "ad83df7b-7a9e-4e5a-8f9a-a2cafeac375a",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "be1e59d1-bd74-4375-af4d-3debc778a819"
        },
        "item": {
          "id": "348c49b7-849b-49da-84b8-261cb61b8b47",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4042c257-5886-493c-838c-df45a9f73ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8a7b06-2f80-40a0-9c7e-abd347d78f27",
        "cursor": {
          "ref": "a4c07e8b-bcfe-4205-b82d-57e813b6d6d7",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ebdc3a76-d630-47f0-8fe3-8450c2dd26eb"
        },
        "item": {
          "id": "1f8a7b06-2f80-40a0-9c7e-abd347d78f27",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "083340cd-fed7-4a25-a38e-a07261a4e8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8113216-0fd8-4782-b14b-a1f3c6809043",
        "cursor": {
          "ref": "6f663131-853c-4919-a7f9-6f3c35d9fd7b",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6d34acfa-820b-4416-af31-e40bf6ae3ecb"
        },
        "item": {
          "id": "c8113216-0fd8-4782-b14b-a1f3c6809043",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "de9ca15f-8e2b-4d5e-a6cc-c6d1ef2647d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106f4b2e-3d74-4c5f-acc6-03c02c2720ee",
        "cursor": {
          "ref": "62ec19d5-18b7-49d4-92c9-bef91fa5b9b5",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f59a2cb0-9f79-4e0d-a521-76a24f61a0bc"
        },
        "item": {
          "id": "106f4b2e-3d74-4c5f-acc6-03c02c2720ee",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e28fdd52-5725-4d1e-98d5-fe7bf1b0df82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef007de6-68ad-42fb-9efa-64645d62847d",
        "cursor": {
          "ref": "8c39748f-d6a9-4c9c-b507-ab2086e350a6",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "19d62dc7-05ec-4d08-96d3-fe9b360190f6"
        },
        "item": {
          "id": "ef007de6-68ad-42fb-9efa-64645d62847d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "689b4149-7ca6-45b8-8512-bd4c799c83d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0de5e57-8781-4311-a4c1-e2562d118873",
        "cursor": {
          "ref": "33ddbdef-6873-48d9-a3ba-3d69a56f17a7",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c21ec2d2-3cde-40e2-b977-51d5ddc7c3fc"
        },
        "item": {
          "id": "d0de5e57-8781-4311-a4c1-e2562d118873",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "598fa113-3660-48e5-a2c1-26fe2229f950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1429c4cc-1a9e-4269-a457-73cbfcc2348f",
        "cursor": {
          "ref": "c27365bf-4f60-4f83-af2b-6edd84dda754",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cfeb628f-4d01-4965-951f-8f0f4f3423a6"
        },
        "item": {
          "id": "1429c4cc-1a9e-4269-a457-73cbfcc2348f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "378700b2-b7e7-499d-81e6-f28be2955c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1594a02e-184a-4fd9-aa62-ffb3461f8d48",
        "cursor": {
          "ref": "af5169d3-48a6-4900-b86c-cff0a3603a60",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "44120b31-8d08-4dca-b191-b87cf4544439"
        },
        "item": {
          "id": "1594a02e-184a-4fd9-aa62-ffb3461f8d48",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "46a11997-8daf-4184-8278-90fcbc3773e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825c57b4-0405-43d5-8a4d-1827082e8e11",
        "cursor": {
          "ref": "b70e5dab-2a26-407d-9305-39175c3866be",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "490c672d-ffbf-48a3-950c-3f78bddc2e66"
        },
        "item": {
          "id": "825c57b4-0405-43d5-8a4d-1827082e8e11",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "42b97a16-5fa8-44f5-a03a-fa3e79779028",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb2c421-e977-41fb-87bf-9ea769850259",
        "cursor": {
          "ref": "27614bf5-4d86-4bd5-9621-33eb7e5c7f9a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5ec338be-88a0-4bf2-97e3-ba91a2813660"
        },
        "item": {
          "id": "feb2c421-e977-41fb-87bf-9ea769850259",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1b1eef78-2821-4c33-838f-9c5c90da3020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "ed16cdf5-377c-47f2-9316-2706c807e7be",
        "cursor": {
          "ref": "3c8f6b8e-3353-403f-9dc4-ac6b1a678bd8",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c36f2f2c-77b1-4603-8dc4-053c66d93b15"
        },
        "item": {
          "id": "ed16cdf5-377c-47f2-9316-2706c807e7be",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f79a452e-fa9e-46e3-b244-e543d44d4cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "ce0f4c34-71aa-438f-9c61-7ba532ecfe97",
        "cursor": {
          "ref": "8227ab94-3af1-4210-8c96-523d18bb78f3",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "beba9547-aa83-4515-8c09-798d39ab3940"
        },
        "item": {
          "id": "ce0f4c34-71aa-438f-9c61-7ba532ecfe97",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8ea6637d-34eb-4d72-b217-2270a32d7286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c05daab5-b4c4-4e43-8d77-a0f7f7174d6a",
        "cursor": {
          "ref": "54c934ac-0da6-481e-8e0d-4b89477de4d0",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6504bbe8-186c-494f-92e0-88bfd5989490"
        },
        "item": {
          "id": "c05daab5-b4c4-4e43-8d77-a0f7f7174d6a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "469a4194-7af6-415c-83a3-b7da1905cbea",
          "status": "Created",
          "code": 201,
          "responseTime": 9348,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "372e861d-3b88-4a75-bea4-1e55f79506ab",
        "cursor": {
          "ref": "7cd06257-42bd-424d-8c72-3675e592c9f7",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6e0e2d4c-9e44-4979-8a2d-295becf723b7"
        },
        "item": {
          "id": "372e861d-3b88-4a75-bea4-1e55f79506ab",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d5785d1a-1352-4560-ba88-20ea9909cc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "3f94f7a7-6ed0-4988-bef8-99c8b34a7910",
        "cursor": {
          "ref": "25d54572-bdfc-4262-a7b4-4c275c17b848",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3d0351b8-77d8-4fbc-b01b-52ff6df3c679"
        },
        "item": {
          "id": "3f94f7a7-6ed0-4988-bef8-99c8b34a7910",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e0716208-968b-4776-aefe-edaed6e24590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "ff6aaf7f-012e-454c-be4a-816da8fd0e33",
        "cursor": {
          "ref": "8ae881e5-029c-4794-b6ae-407a439694bb",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8f12bc8b-ac3b-4a48-8a51-fc4c42b5d99e"
        },
        "item": {
          "id": "ff6aaf7f-012e-454c-be4a-816da8fd0e33",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2173ed37-b0f2-492b-a0b9-4b997483dbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d724f537-d12b-4dce-8230-4939d6edf077",
        "cursor": {
          "ref": "01ec476b-a08d-4e2d-952b-13ebbdecffb3",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "29216a6d-a3df-439e-8176-ae09935b2bef"
        },
        "item": {
          "id": "d724f537-d12b-4dce-8230-4939d6edf077",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3aaf0cc3-0d9e-43d0-be2b-04a3ea119a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31287292-a1f4-485b-8170-5453b6aa8d72",
        "cursor": {
          "ref": "8aa0e240-672e-40f3-bd8a-a5724edd004d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "74340748-9db6-4e9a-8dba-0a683ce928ce"
        },
        "item": {
          "id": "31287292-a1f4-485b-8170-5453b6aa8d72",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "528c493e-f818-4ed3-9fb0-ba06a0790489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e1b151-dfac-4308-9964-9560160c3111",
        "cursor": {
          "ref": "17d0bb28-f325-4361-8ba0-f9c5d03f09d7",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3e69e370-eed0-417e-a792-e398e86d6e3b"
        },
        "item": {
          "id": "41e1b151-dfac-4308-9964-9560160c3111",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "98487adb-145f-40c2-b688-865a61268854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521fb77e-e22f-4529-84e9-00821188f751",
        "cursor": {
          "ref": "67bb893a-f6c7-4cb1-90d4-854cfc4b8a10",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8170cde7-90a1-48ec-807f-5e538ecaaf2f"
        },
        "item": {
          "id": "521fb77e-e22f-4529-84e9-00821188f751",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b2e90511-9552-4091-afa7-5edda7cba408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cd5645-984d-4347-ac79-2bbaabf6a26b",
        "cursor": {
          "ref": "cd7204e4-3148-4a93-bb96-d8443af7c401",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "49f17bfb-4a47-4532-ac0c-ed1e4d0639e8"
        },
        "item": {
          "id": "b8cd5645-984d-4347-ac79-2bbaabf6a26b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5fa3de08-ba1f-4427-8e67-3bbca90bd5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e38567a-c66d-4e49-8394-e19a9328f982",
        "cursor": {
          "ref": "ba107f03-5ade-45e1-a5d3-0ea4cd6b2f33",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c1455a23-5993-462a-9a2d-d86c18f9dd66"
        },
        "item": {
          "id": "7e38567a-c66d-4e49-8394-e19a9328f982",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f6257d4f-c0dc-4190-bef6-2916d6d2d69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a4220d-ace0-4cfd-917c-e92506c568b9",
        "cursor": {
          "ref": "6c237b61-6f52-40e7-8bbd-b3e6e83f9182",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7057ed91-cf54-4074-b347-75cbc6642a5d"
        },
        "item": {
          "id": "54a4220d-ace0-4cfd-917c-e92506c568b9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a38b5379-ca8e-48a2-a965-be6b28a50f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b4ec80-1fad-48a5-95a8-0932cb645d09",
        "cursor": {
          "ref": "05db912c-a9f3-499d-85c4-aba5bbf8e1b5",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2d33442b-e69f-47be-8e51-29896201d7db"
        },
        "item": {
          "id": "d1b4ec80-1fad-48a5-95a8-0932cb645d09",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "eff6c4f9-4edf-47ab-abb1-a8dd4bd1eb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e77c60-15a0-4415-95ab-adefba816798",
        "cursor": {
          "ref": "4cff1b86-134a-48c1-b20a-128b9612e803",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "286068e8-e810-416d-90f6-e5fda605caaf"
        },
        "item": {
          "id": "c2e77c60-15a0-4415-95ab-adefba816798",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ad3101a3-3a19-42c8-8081-5fc0bdd54e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f360cde3-d530-4d7b-85a9-3869eb2e7c0b",
        "cursor": {
          "ref": "cd0e4e76-eb85-496e-a250-7a50c20c4f9c",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8ae8720c-2f09-4cb9-96e0-4fafd5f25262"
        },
        "item": {
          "id": "f360cde3-d530-4d7b-85a9-3869eb2e7c0b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f44c0c79-0d5b-4c17-bbe0-7c34667060d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed524f3-ef9a-461c-a034-a3394cccec3e",
        "cursor": {
          "ref": "271f121d-5915-4619-9833-25c48d00271e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7bfe0dcb-9142-4ad2-886d-5d9da8b0e753"
        },
        "item": {
          "id": "aed524f3-ef9a-461c-a034-a3394cccec3e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9c843b07-565f-4b12-9f99-d75e57d34eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd9b013-e513-4311-a76d-d4032640c224",
        "cursor": {
          "ref": "c90c3e05-7e5b-4dee-8578-51dbfb28d9fb",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "68cdb116-770b-41a8-a84e-167f64d66093"
        },
        "item": {
          "id": "0fd9b013-e513-4311-a76d-d4032640c224",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d45079c9-5fdd-4807-9306-adf9f2d87c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e5a8ea-b633-4295-95f2-0d1dddff99b3",
        "cursor": {
          "ref": "407aae63-5fb8-430b-bfcb-c2a46cde336c",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5b1cda06-1609-458b-8474-cfc17eeeedf7"
        },
        "item": {
          "id": "a8e5a8ea-b633-4295-95f2-0d1dddff99b3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "29ef81b6-13eb-4df0-bd93-22a6cdc0ee8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824c1126-2907-45ef-ae3d-b160ab24fe52",
        "cursor": {
          "ref": "1af7a094-5ef3-477b-bb03-bb8b95a9f6f7",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "18bed6c3-743c-4670-bce2-17ee98eba6e1"
        },
        "item": {
          "id": "824c1126-2907-45ef-ae3d-b160ab24fe52",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1fb36274-92f6-4d5f-9e2a-8e82afa0437b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2a0d8d-105d-4962-901f-43a3b1ad2bfd",
        "cursor": {
          "ref": "fca7a332-00c6-46ca-9daf-d1140f942cd1",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "299d0dbe-a0cd-46ef-8be4-a56d81b4b66d"
        },
        "item": {
          "id": "da2a0d8d-105d-4962-901f-43a3b1ad2bfd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6ff07908-af08-4fc2-aa32-62defe1d4bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91304be3-2b05-4432-9b33-4e79446530d3",
        "cursor": {
          "ref": "d919bb2e-3725-4d34-8075-29f8bb76e2b5",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b0a768b2-1d49-41eb-a7b2-09bd481ce9a7"
        },
        "item": {
          "id": "91304be3-2b05-4432-9b33-4e79446530d3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1e55a601-a8d8-4e13-a0b6-74b866b41fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1cfc77-5c08-471a-bc56-688a7da3a28a",
        "cursor": {
          "ref": "5724c858-4372-4f17-a624-09af26ab4eb7",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "629d095e-1ec4-412a-8090-6b43d7ceb49e"
        },
        "item": {
          "id": "9b1cfc77-5c08-471a-bc56-688a7da3a28a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9b2927c5-bc12-4899-b9f0-dac0647805b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f33602b-8fee-40c3-96ba-432b1597bf35",
        "cursor": {
          "ref": "8f4ef101-6b65-48ca-abef-40ba7a90dad6",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ab0d7571-b78e-42c5-9639-c4366be49c4e"
        },
        "item": {
          "id": "7f33602b-8fee-40c3-96ba-432b1597bf35",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7bc20b6d-04cf-43ac-a6a3-9b50d2021c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7a0375-aa8c-4ee2-a12a-04064e60f5c0",
        "cursor": {
          "ref": "7a186951-a380-40b3-abd8-a07b43d850b0",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f52f5034-df22-4ced-9423-9080dcf951c8"
        },
        "item": {
          "id": "7c7a0375-aa8c-4ee2-a12a-04064e60f5c0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8c769ecf-3251-4cde-a0d0-0434def62af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7036a26d-be84-41c3-8e0a-ec87141d3c8d",
        "cursor": {
          "ref": "e80cddb8-796d-464d-a328-f0e3a9b53083",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "711df3fd-6b45-4e49-915c-e46ca30a2aa9"
        },
        "item": {
          "id": "7036a26d-be84-41c3-8e0a-ec87141d3c8d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8278d7f3-be5c-4f8f-8ece-389ee5ea1218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddeaeee-c267-4afc-b2af-f76c79ec5179",
        "cursor": {
          "ref": "a59aa492-0e33-4f8a-b272-ccaa1c367f29",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f22f2efc-1304-49d2-91ee-ea55d32b7f3a"
        },
        "item": {
          "id": "0ddeaeee-c267-4afc-b2af-f76c79ec5179",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6cb1430b-35e0-491d-8de5-9d100391da27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67a3dff-4156-4110-92d4-6e25a7abbefa",
        "cursor": {
          "ref": "119ab167-d61c-4b8a-b639-8995f2f0baae",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "81e71934-80a1-418e-82c3-a5e3cb122087"
        },
        "item": {
          "id": "b67a3dff-4156-4110-92d4-6e25a7abbefa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "44854759-95e7-4316-b76e-37fad17c1910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35a725b-c73e-4505-a2b1-6d64aecb20bf",
        "cursor": {
          "ref": "977fdf63-642b-4284-9c2d-d0cbb6f0b139",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "449dece3-349e-48b3-b373-12317dd3d814"
        },
        "item": {
          "id": "f35a725b-c73e-4505-a2b1-6d64aecb20bf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "95064d51-2670-42dc-9a1a-ea26351527b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbffa78-f3d5-4826-bb52-1d98179cd391",
        "cursor": {
          "ref": "058a64ed-2591-41da-ac81-cee92e054c3b",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7a0bfb34-755b-406d-819f-189ecd0326b4"
        },
        "item": {
          "id": "2fbffa78-f3d5-4826-bb52-1d98179cd391",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c94d8bf7-97b6-4cc6-b20e-f36a4126170f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc21fafe-0a1b-4cc2-85b7-e6d1975fc479",
        "cursor": {
          "ref": "f4349a4f-903d-4611-bf4d-22d3f53efcc9",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "940ff153-efa5-4505-a56d-0eeb2aa510e2"
        },
        "item": {
          "id": "dc21fafe-0a1b-4cc2-85b7-e6d1975fc479",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3e8a0728-9299-4ff8-9e04-d3722655f263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e806b2-56d4-44af-8fe8-d2896c3b271f",
        "cursor": {
          "ref": "902da121-0652-4074-a4dc-ca125ed28d3f",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7c35647a-ce4c-4da4-b1cc-65d4aa96f9e3"
        },
        "item": {
          "id": "b9e806b2-56d4-44af-8fe8-d2896c3b271f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8fcaf67a-add0-4296-b225-948a533f19ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b66443b-c1c4-47ee-b7f9-3a02a0b36a07",
        "cursor": {
          "ref": "f492df5f-34da-4da2-9503-05122ae458be",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "37caedff-0301-49d6-8d24-614fb8b3bf68"
        },
        "item": {
          "id": "6b66443b-c1c4-47ee-b7f9-3a02a0b36a07",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "274f6936-5d4c-43d9-9edf-fd0310a60444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153712b1-cb92-49a4-9ea2-b79e522c3d79",
        "cursor": {
          "ref": "74d01b7d-1631-4313-9b73-270b48889803",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1808a9f4-0b2c-4613-bc52-8a40d1fc1dec"
        },
        "item": {
          "id": "153712b1-cb92-49a4-9ea2-b79e522c3d79",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "39ee07d4-a3eb-4307-b951-e679c4de4e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5c33e2-c8a9-4705-ba74-4fa42658b17a",
        "cursor": {
          "ref": "d23f55b0-204d-45bd-a56b-7843accab207",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e5b32ffe-9729-49c1-90ad-2f2578852517"
        },
        "item": {
          "id": "ed5c33e2-c8a9-4705-ba74-4fa42658b17a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "652e7591-1e6b-4c9c-b87e-ce99015a30ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1686c64-1998-4097-8fef-0f9825feee35",
        "cursor": {
          "ref": "e787d2ab-62ba-4e09-bd92-9c8e358a85a5",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c3db4e00-ceec-45bb-bc5d-29bdc33657de"
        },
        "item": {
          "id": "d1686c64-1998-4097-8fef-0f9825feee35",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7bb15c4e-5ea1-49c7-ac25-1ecd06b15667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a43d3b-9e98-47f4-aca9-b973137a06f0",
        "cursor": {
          "ref": "78d44900-959b-4b0f-934f-4b2d28f4d65d",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dda2f56f-4a70-43e4-aa5b-52d08e450c15"
        },
        "item": {
          "id": "c5a43d3b-9e98-47f4-aca9-b973137a06f0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "887d9b72-829f-4df6-af5b-935376258e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8f7ed2-483a-400d-aedb-e7289d98b987",
        "cursor": {
          "ref": "b39facc9-1997-4325-ad8d-7d2c289ca869",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f1d67760-ca14-4c6a-8b9e-902c334819df"
        },
        "item": {
          "id": "3d8f7ed2-483a-400d-aedb-e7289d98b987",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aa0db114-6dcb-4853-aded-32ae9cea264a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34b4618-7ad2-45eb-80d6-84e6af19a839",
        "cursor": {
          "ref": "4053a429-78d5-4dae-b2f3-b63c674bfb5b",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c8454b1b-7aca-4f98-a428-e7f3884803e4"
        },
        "item": {
          "id": "e34b4618-7ad2-45eb-80d6-84e6af19a839",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "07c47dac-8749-42a0-b192-a49be617ccda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c572494-c828-4f24-ae91-2d8bc5ed9042",
        "cursor": {
          "ref": "cedcebf0-8ded-46cd-9a42-078ac854350d",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "75e5c212-3c90-45bf-b462-777f9889df81"
        },
        "item": {
          "id": "1c572494-c828-4f24-ae91-2d8bc5ed9042",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9c2ad7d5-571e-4287-ba5f-09123118d223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df52149-62b5-4478-a0e4-25c3055e992f",
        "cursor": {
          "ref": "a3c4d373-0d50-42cb-beb5-00abf78e7d43",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ac5406f4-254e-4e6f-ba83-366a6bd66069"
        },
        "item": {
          "id": "7df52149-62b5-4478-a0e4-25c3055e992f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cc99b4cd-d397-40d6-9c10-0d25823158dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc90ed8b-312e-40e6-abc8-b1c8765c2fca",
        "cursor": {
          "ref": "811dddd2-55c1-40e0-ab15-ad5a371f3922",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a0f171db-1bad-4129-b1f6-64d01bcade41"
        },
        "item": {
          "id": "bc90ed8b-312e-40e6-abc8-b1c8765c2fca",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "665ef375-48f1-42bd-9728-46c29f23b015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ab1c98-6985-43dc-9a4a-3081c84b0aae",
        "cursor": {
          "ref": "8381038e-9222-45cd-ab2e-74cb1dcac992",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "531038e7-544c-4a4d-8db1-39811db53e89"
        },
        "item": {
          "id": "46ab1c98-6985-43dc-9a4a-3081c84b0aae",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4659e259-73de-43de-bc38-55aaab9bc5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0455329-120e-473f-9633-af44cc0719c6",
        "cursor": {
          "ref": "29f0a22d-13d0-4473-be78-568c059f3b8e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "738b6df3-5215-41d0-bc80-537f01585933"
        },
        "item": {
          "id": "e0455329-120e-473f-9633-af44cc0719c6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e0c27788-ca6c-417d-a4cd-705ebf103ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898982b4-5f2e-41a2-8db8-61b47cb75d2e",
        "cursor": {
          "ref": "c5d09e0f-a901-4062-893d-6170ffb8dfea",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a8d91468-394b-40ce-aa41-89d0ad74de2f"
        },
        "item": {
          "id": "898982b4-5f2e-41a2-8db8-61b47cb75d2e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4415d5bf-f49b-425b-8a66-f454116eb4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55ad64f-de51-49f9-a254-8f028cc64e75",
        "cursor": {
          "ref": "7ab1b51f-76e3-428b-b4ff-4efdaae49d33",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5c3b4658-47c7-4f92-8d35-f6fa643667c9"
        },
        "item": {
          "id": "c55ad64f-de51-49f9-a254-8f028cc64e75",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "eb03b61e-0813-442c-aba4-5d9922be9179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d63b89a-c4c9-4e64-9ad6-3c02da73b7da",
        "cursor": {
          "ref": "38692522-15c5-4faf-832f-bac4ecfa915b",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e9e1cde7-4d21-4c54-8921-1fba694d4580"
        },
        "item": {
          "id": "5d63b89a-c4c9-4e64-9ad6-3c02da73b7da",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f080008e-d3ec-4c32-9010-6c0732d6aeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1faa1de9-c572-4d33-a0ec-23e802c98a38",
        "cursor": {
          "ref": "f966dbb8-ea47-4543-85a5-67c9526a29b4",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "94cd7252-6cf7-4b93-b210-5e87b7e21d90"
        },
        "item": {
          "id": "1faa1de9-c572-4d33-a0ec-23e802c98a38",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1f0cc175-83f1-415d-b3e6-1fd2383a7f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad24a2f8-5d9d-4708-8ea3-ab56db2f62f5",
        "cursor": {
          "ref": "06e6aed8-809f-4d83-9272-b84c11953835",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1df240fd-bbdb-4634-b9f9-f87c38d93970"
        },
        "item": {
          "id": "ad24a2f8-5d9d-4708-8ea3-ab56db2f62f5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "07d7652b-9b82-445d-baf0-c4f01f0c01ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8a072d-c1b1-4bd4-95cf-94d0c40f498d",
        "cursor": {
          "ref": "572dfc89-1058-47bf-87e2-2ef7ab6d5ec0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "90d14868-06be-49cb-9165-6be6645c7f9b"
        },
        "item": {
          "id": "9b8a072d-c1b1-4bd4-95cf-94d0c40f498d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a6e392ef-c248-4d5b-8b9a-b8e126270273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2989d793-3362-42eb-a11f-c6336cf83e38",
        "cursor": {
          "ref": "14232351-c05c-4e9c-8207-8025a4c99f88",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a385420e-cf4a-419f-9d41-f12bf0bae3a2"
        },
        "item": {
          "id": "2989d793-3362-42eb-a11f-c6336cf83e38",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1826e7c2-15d1-44d3-904e-c6524f23fff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff80e10e-33c4-494d-8313-e54706fddbb1",
        "cursor": {
          "ref": "df8f4816-d77a-410a-ae43-3c5fd26955d6",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "95458d39-de63-4d61-a19b-12acd2da8226"
        },
        "item": {
          "id": "ff80e10e-33c4-494d-8313-e54706fddbb1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f4d51a7b-a341-4d66-83a5-f8dbb229c908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafcdde9-b66b-4858-b614-464ddfebe4a9",
        "cursor": {
          "ref": "bbd04319-1988-45d9-9210-6e92e59327be",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "eb314390-4de7-45a6-a031-2d7fc07fa93a"
        },
        "item": {
          "id": "bafcdde9-b66b-4858-b614-464ddfebe4a9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c257fff1-f441-4c19-ba88-3d9593aaa25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f94e48d-a422-4e67-9dc5-24ce1f6beecb",
        "cursor": {
          "ref": "02322383-0e63-473b-a561-c5abc052f350",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "dc05535d-945d-476b-ba0a-b9e4f577c72a"
        },
        "item": {
          "id": "5f94e48d-a422-4e67-9dc5-24ce1f6beecb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6ed284bf-4dde-49d2-833b-569e787530ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a685e1f4-6d7a-4b3e-aa56-a838c5594e2d",
        "cursor": {
          "ref": "16b7eeac-78d2-4795-b517-c039460d7f87",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a1869edf-6212-4ff1-b4bf-025d46e5d7eb"
        },
        "item": {
          "id": "a685e1f4-6d7a-4b3e-aa56-a838c5594e2d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4a6361e5-6366-4339-8ccb-d7a205b6f730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea173d5-0654-4f08-bc19-51ef8a4e8f06",
        "cursor": {
          "ref": "ce75ea39-e3e3-414c-a828-897a25537523",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1a0cdfb7-caef-42fd-b6f1-05417d508e63"
        },
        "item": {
          "id": "8ea173d5-0654-4f08-bc19-51ef8a4e8f06",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "54ff3813-1e74-4263-aeb6-1b183fad18cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13231657-6c38-451f-bb58-133c85a15972",
        "cursor": {
          "ref": "e1e22c98-d020-4c80-bd23-c9f1ea7ac073",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e4ff1c71-1998-42b8-987a-2675fb8998f9"
        },
        "item": {
          "id": "13231657-6c38-451f-bb58-133c85a15972",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "69d5f60a-0bb5-4f6d-a473-1194dc2ab13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92151e9-a0ad-430e-99bd-c76d3de8383a",
        "cursor": {
          "ref": "6db8d3bd-3d72-4ef2-a819-d10144508c68",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e7641962-10f9-4714-bda4-4a75a62482d4"
        },
        "item": {
          "id": "e92151e9-a0ad-430e-99bd-c76d3de8383a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d97c88b6-adfe-4680-979b-2e219014787a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cba270-acac-4db7-adb7-113a0c89a546",
        "cursor": {
          "ref": "36dccbae-0f94-4509-9556-74037dcb5dda",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "92bbcce6-85ab-414a-9b37-dfecf8411b94"
        },
        "item": {
          "id": "f9cba270-acac-4db7-adb7-113a0c89a546",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0a9eb132-fd03-4ecc-8d70-0e54a9074984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbff14a-53ee-485d-91ed-becea48375fd",
        "cursor": {
          "ref": "3fabd7e8-293c-4655-ab08-917d77815d96",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f28ee427-388e-4435-a2ab-cc2ebe4a9d7e"
        },
        "item": {
          "id": "0bbff14a-53ee-485d-91ed-becea48375fd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3f66eeae-9213-430d-a696-9fc66d740b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc37099-4de0-4dae-b57f-5ec997a0dabe",
        "cursor": {
          "ref": "8724f92d-174e-439d-8fa6-4676dccd69ca",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6a68fb2b-c302-4387-bf78-a2a36ca485b9"
        },
        "item": {
          "id": "2cc37099-4de0-4dae-b57f-5ec997a0dabe",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "77257f18-3400-4370-bbd0-3d202ffeb270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d03ba80-be9c-4c94-afde-2b9f30062e15",
        "cursor": {
          "ref": "50374572-c09f-43c6-a51e-c7eb6b6a4ba1",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "93ede151-fd6d-4d2a-8f0b-f8d1da95c543"
        },
        "item": {
          "id": "8d03ba80-be9c-4c94-afde-2b9f30062e15",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "72634ee0-66fa-46be-8aac-57abc9b8e36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33661bd6-c0e1-4964-bcab-6a9fb738db4a",
        "cursor": {
          "ref": "6c1f24fb-54ed-4462-b07c-73254880f9d4",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "47476831-8fe3-4d95-9dcc-eacb1d3d688f"
        },
        "item": {
          "id": "33661bd6-c0e1-4964-bcab-6a9fb738db4a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "11a2779e-8ecf-4778-b33f-917704d7adcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84b40e9-44ec-41c9-a80f-ac5e43d05e68",
        "cursor": {
          "ref": "c5645629-7b50-42c0-9a42-ff7c89f2512c",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "05b0183d-8008-47bf-b797-37211adc73b7"
        },
        "item": {
          "id": "f84b40e9-44ec-41c9-a80f-ac5e43d05e68",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f3cf0d12-745a-41c7-ae3e-b2d4ea4b84e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23169cd5-eb51-46a5-81d1-14594f7b2cec",
        "cursor": {
          "ref": "9c53831a-2cd5-4383-b2f6-93de6cf562cd",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "69e4f147-a733-48ca-b543-2139c3564e66"
        },
        "item": {
          "id": "23169cd5-eb51-46a5-81d1-14594f7b2cec",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ecb92006-e7cf-41f9-82ae-e414e71bd155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88a45ff-48d1-4876-ac8c-8de180530abc",
        "cursor": {
          "ref": "5e329a8c-b1a8-4ad8-be02-f1c94a32a491",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "215c5fbc-c72a-4155-9ec6-2153b611d5cb"
        },
        "item": {
          "id": "f88a45ff-48d1-4876-ac8c-8de180530abc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "39b579cd-a34a-47e7-9054-1616b73efa86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28220ddf-8559-487a-84b4-bf19bec8a0b5",
        "cursor": {
          "ref": "c7144caf-cfd4-4de7-b34b-d4d198b93b46",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4c384647-06b3-4ce9-adef-d50dbbf22b1f"
        },
        "item": {
          "id": "28220ddf-8559-487a-84b4-bf19bec8a0b5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c72cf50c-66c9-465b-921d-0c6bc2806900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345859e7-a150-4cfd-a291-3cb0599dfff8",
        "cursor": {
          "ref": "dd1838e5-078c-441d-a7f1-527eeb85b5f9",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2c485d89-529a-497a-80bd-5acaebe15ee4"
        },
        "item": {
          "id": "345859e7-a150-4cfd-a291-3cb0599dfff8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9ae4431a-0cea-4b2b-b5d3-8b012f120028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b3d068-f665-4a0f-ab16-d95c3f3c24d2",
        "cursor": {
          "ref": "3608bf44-d94c-4c6b-bfdd-f6c1cb01d030",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "67c86fbf-c13a-4421-a903-16232c3ebee9"
        },
        "item": {
          "id": "45b3d068-f665-4a0f-ab16-d95c3f3c24d2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dbbabecb-ef05-4ca0-8865-9b84150e5620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fca0f2e-07e5-46b7-8fb7-d96d717ede27",
        "cursor": {
          "ref": "f63741db-fcd9-4c95-9ff6-816b9a88a486",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "32239443-d4e3-4304-904e-724ea08effd2"
        },
        "item": {
          "id": "0fca0f2e-07e5-46b7-8fb7-d96d717ede27",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e5d6a33b-c79a-43d1-aa23-72e385edce58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe09ddc-475a-454c-849e-44ce2b2c2296",
        "cursor": {
          "ref": "42b480e7-31e1-4538-a297-f36a01a24e65",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2b16e39c-c883-4255-aef6-48a60a1f7a30"
        },
        "item": {
          "id": "bbe09ddc-475a-454c-849e-44ce2b2c2296",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1a5d52b1-0b35-4204-a3db-8fa53cc1d047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e69c7b-8345-4131-b29a-964d1ff2492e",
        "cursor": {
          "ref": "c467586b-5872-4695-92e6-a21217efc5bd",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e32e9850-f9a3-4beb-9320-363c6e9f3c49"
        },
        "item": {
          "id": "a8e69c7b-8345-4131-b29a-964d1ff2492e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4033c1ee-061d-4498-bda1-937290dbb5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4466ae7e-1019-4d55-a3ce-65bececf8e45",
        "cursor": {
          "ref": "ab597579-1d22-40e7-abed-ee923df48456",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "908db3c0-fa36-4040-8370-0a4bb796ceff"
        },
        "item": {
          "id": "4466ae7e-1019-4d55-a3ce-65bececf8e45",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8cbdc2cf-4bf3-419f-addd-37e459fe86be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcf0696-965d-454c-9601-2e2af2bc1a1c",
        "cursor": {
          "ref": "56b21891-3079-4010-abf8-6738617dd281",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c0744d22-0118-4f3a-9cdd-4524da8e6d3e"
        },
        "item": {
          "id": "3dcf0696-965d-454c-9601-2e2af2bc1a1c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d54712ac-41cb-467c-ab30-312c50e512cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1447810-506d-4d2b-99a0-93f59ed795b0",
        "cursor": {
          "ref": "9db947f4-9be3-405b-911c-23dd7e5a9915",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "48b7f91f-4081-4df4-86ad-a39b616af5ea"
        },
        "item": {
          "id": "a1447810-506d-4d2b-99a0-93f59ed795b0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3e559d54-09db-4ba6-8a30-0cf1676075dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98629ae6-8fef-483c-9dc1-016fa4059ae8",
        "cursor": {
          "ref": "b1b4e6f4-0487-419f-a292-f8acfc1fcd15",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "dadc6481-6726-48d7-9cc3-ef320397fbbd"
        },
        "item": {
          "id": "98629ae6-8fef-483c-9dc1-016fa4059ae8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "155a5280-e0ed-4126-839f-0d529defd435",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0900bf3-6217-41fa-b607-21ba7e3923dd",
        "cursor": {
          "ref": "43aefcde-9cb1-4dcb-8546-c940dedadc91",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dbe94f3a-99a4-46b6-b496-85ae901282f1"
        },
        "item": {
          "id": "f0900bf3-6217-41fa-b607-21ba7e3923dd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b379fc3f-bc3b-4895-af02-be2ebf665391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d222fadb-eaa5-4256-99f4-7238ea195c5c",
        "cursor": {
          "ref": "c26db727-3e2e-4c6a-99a8-76cff9c6ccfd",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b4e84b1a-7547-4a9e-842b-b154e0f66acc"
        },
        "item": {
          "id": "d222fadb-eaa5-4256-99f4-7238ea195c5c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2cb60b55-580e-4d01-a2c7-ae36cc78a79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efbd514-7225-4414-b058-4b79ad96f2e7",
        "cursor": {
          "ref": "36b9a4ee-0e10-4224-91c2-648298b777bc",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "79931d80-1d94-4360-b25e-57d63c3e61a2"
        },
        "item": {
          "id": "1efbd514-7225-4414-b058-4b79ad96f2e7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "070e5243-2af9-44ea-81af-3966237e6f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e3280a-9553-431c-9377-cda4ff16a859",
        "cursor": {
          "ref": "0b7d8aa5-42e1-4e27-8c53-9533f08441bd",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7c2195e4-6198-46f7-8fdf-680b4abfb4bf"
        },
        "item": {
          "id": "75e3280a-9553-431c-9377-cda4ff16a859",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "93cf0e79-6973-465f-a129-7fbb1528711e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef04834b-9376-4f34-9c10-0bcce6566d61",
        "cursor": {
          "ref": "e46dc0fd-b2b9-42a5-9e83-d25835dc3990",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8a906194-6fbf-4302-a555-480da699fc87"
        },
        "item": {
          "id": "ef04834b-9376-4f34-9c10-0bcce6566d61",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6f9dcbe2-8682-4121-b199-041e630f1494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6e172a-29f3-4554-af3b-38401121e5e7",
        "cursor": {
          "ref": "03205459-f266-480d-a206-d0e4424ff982",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "16d2f14b-af50-4a27-9018-7547321e1fdb"
        },
        "item": {
          "id": "fd6e172a-29f3-4554-af3b-38401121e5e7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a722aa4e-c400-4ff7-9713-9fc9b06d3271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6b7091-18b6-44a4-bf2a-868df994adec",
        "cursor": {
          "ref": "b98ed362-d8b3-4a96-989e-c01a1e197670",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c578b516-e5dc-421a-a1ed-d17d921aa886"
        },
        "item": {
          "id": "ef6b7091-18b6-44a4-bf2a-868df994adec",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dee6e712-f047-4c50-a2bf-34f81a7c3063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51024f51-63b2-49ff-b847-785dce6d638f",
        "cursor": {
          "ref": "94edc2ac-e0ff-4eea-ae6f-4741bd01817e",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "955d546e-6d0f-43ba-bf32-648c72f1314a"
        },
        "item": {
          "id": "51024f51-63b2-49ff-b847-785dce6d638f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ee621d94-41a6-4760-bbc8-a1c638100e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25690c74-1b3f-4848-9639-e4b42f046a25",
        "cursor": {
          "ref": "943afa3a-8a8b-49e8-be8f-5e90f583b898",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f4e575ed-c2a9-483f-813c-43e7e696a5e0"
        },
        "item": {
          "id": "25690c74-1b3f-4848-9639-e4b42f046a25",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "16cc05a1-c69b-4e34-b4c9-39f04882d29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cb15b1-bc60-4870-b1e1-3eecc433837a",
        "cursor": {
          "ref": "bc3c6c46-608b-4b04-82a8-ad67f400a9a8",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ea1df990-db5c-42ab-8aaf-7f550197cb8a"
        },
        "item": {
          "id": "07cb15b1-bc60-4870-b1e1-3eecc433837a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c5657f68-85c4-4ded-8f8e-d9c77cb79455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e25c754-66f1-4d56-8cd4-0f54b2d05633",
        "cursor": {
          "ref": "bdaa0154-5651-4882-8845-4ae65c6c7ad0",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3c2a7646-4a5a-4961-aa32-9bf4ffbbd804"
        },
        "item": {
          "id": "9e25c754-66f1-4d56-8cd4-0f54b2d05633",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1f45f7d9-0366-4650-afea-afe75706250c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eaa5d01-ff1c-4062-ac74-43508027d6f7",
        "cursor": {
          "ref": "5bc98632-55bd-46c8-9de3-930836ea7822",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f1c8281e-8d7a-4320-8ced-0691b477d093"
        },
        "item": {
          "id": "6eaa5d01-ff1c-4062-ac74-43508027d6f7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c6757561-c812-469f-85d5-04b3cc90dea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd21ca80-6f4c-4d68-b869-b0270b7f7ad1",
        "cursor": {
          "ref": "c7624638-e3c6-4ffe-b20a-5aaf08cd0d98",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2bc64375-7237-40fa-8260-298393955b37"
        },
        "item": {
          "id": "bd21ca80-6f4c-4d68-b869-b0270b7f7ad1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fcfeb05c-fa02-4ce4-acaf-46a3a8ced4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feacd9ec-03f8-4598-be98-565a09885b1f",
        "cursor": {
          "ref": "6787c3fe-a9e3-4713-8c14-6b388c66013f",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2508ec38-e836-4c59-a9e9-6f2bd9410cf2"
        },
        "item": {
          "id": "feacd9ec-03f8-4598-be98-565a09885b1f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "424be920-a35d-484d-bcb4-145d4044be6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21511422-316a-4111-8166-9c705d36bf62",
        "cursor": {
          "ref": "b055b6d0-29de-4558-aedf-dc1a66732e16",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b5e1b881-4c75-4992-8031-84efdd8b3af6"
        },
        "item": {
          "id": "21511422-316a-4111-8166-9c705d36bf62",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "79361f11-28bb-4eb8-a515-82f83f922fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e458f4-3b2e-45e4-97e5-0279bba6c724",
        "cursor": {
          "ref": "28c236bb-ccdc-4bfa-8c13-43cce5517094",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "56de6816-2189-4434-85a3-b63de822f56e"
        },
        "item": {
          "id": "42e458f4-3b2e-45e4-97e5-0279bba6c724",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "911e2ec2-f89b-4575-853f-5954a653d036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16c4d44-5bed-42c9-88f2-7fc50304c79a",
        "cursor": {
          "ref": "4e407763-df88-4533-92d2-14633465f488",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c3f632db-d3b9-4ee1-8ded-3f01010306d2"
        },
        "item": {
          "id": "a16c4d44-5bed-42c9-88f2-7fc50304c79a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9a741fd4-ff3f-4bdc-9cf7-e1667702375c",
          "status": "OK",
          "code": 200,
          "responseTime": 337,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "b63c3e92-95b9-4659-ae8f-d24a6531f2b7",
        "cursor": {
          "ref": "ab287124-964f-458f-a833-072dedf7c704",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "36364ba2-5618-4a4f-a985-8ae382ffdc2b"
        },
        "item": {
          "id": "b63c3e92-95b9-4659-ae8f-d24a6531f2b7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "99f414bf-36c3-488c-9249-19da4e79c06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10978798-91bd-4e5a-b96f-563e3158b712",
        "cursor": {
          "ref": "33cdc827-53d8-4459-bbcb-dd582142775f",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e7bb60ae-b72f-41c2-86fa-75ccd0f37da5"
        },
        "item": {
          "id": "10978798-91bd-4e5a-b96f-563e3158b712",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "21b5993b-7fa2-4c4c-8b62-fc0e2ef20773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18f36fc-2d42-41ee-bcb5-20b81081d681",
        "cursor": {
          "ref": "5be9d4c1-4457-4c78-b860-86524b358ee6",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e7f7f145-cc3a-45ff-a901-2eb558a052d6"
        },
        "item": {
          "id": "b18f36fc-2d42-41ee-bcb5-20b81081d681",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b043c452-7963-471d-a11e-6d0ee2687743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8952fe13-1c8e-4d9e-ada9-7118e568bb3a",
        "cursor": {
          "ref": "9788bf03-96dd-4178-8081-8ca014726bdb",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2efd4ef2-9df4-44db-b542-d1e94c057f0b"
        },
        "item": {
          "id": "8952fe13-1c8e-4d9e-ada9-7118e568bb3a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "65066d3a-717e-4e9c-a8f0-0fb0ad184bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f723c685-5e4c-433c-8e2b-33c2095e1568",
        "cursor": {
          "ref": "8cebe6bb-3637-48f0-911c-d93cff612487",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8d0fc0b4-7850-4fb8-bbbe-f362347549d7"
        },
        "item": {
          "id": "f723c685-5e4c-433c-8e2b-33c2095e1568",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f4788a86-eaa0-4d56-85ac-176bfc5c29eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d5227f-7831-4b8d-aa44-3ad6035fb31d",
        "cursor": {
          "ref": "b11c669f-6cec-4d8a-b9c1-dd8cdf6cbf29",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1d2f1da2-f99f-418b-b523-bc402bd73e06"
        },
        "item": {
          "id": "e0d5227f-7831-4b8d-aa44-3ad6035fb31d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d1e9094a-375d-4866-94a4-f54958839966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b002c0-c9c1-403b-bed4-f46d75afe27a",
        "cursor": {
          "ref": "f5309b54-4995-4dca-931d-69d1183c66e6",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5852bb05-4a80-4deb-843e-b59814f48d6f"
        },
        "item": {
          "id": "10b002c0-c9c1-403b-bed4-f46d75afe27a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d6078b21-c28b-4ce6-8725-f123e6432476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5644e5-aac2-4556-a9ee-cabaae69ec0d",
        "cursor": {
          "ref": "f119aa60-464b-4ac8-bd80-8b07f34e5c00",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4cd6b89d-3dbc-44e1-9324-140376aafb1b"
        },
        "item": {
          "id": "bc5644e5-aac2-4556-a9ee-cabaae69ec0d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "caeda4ae-9746-4662-8103-6f5247c6a2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0661d39a-d6be-4a06-9356-958775ba532a",
        "cursor": {
          "ref": "11d70712-8c28-48a5-ae3c-f3483e1b4c4a",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "55d4dbd7-a551-47e4-b897-1c8382b1915f"
        },
        "item": {
          "id": "0661d39a-d6be-4a06-9356-958775ba532a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "40ead7e9-b03a-43e1-b7f1-d45fb4a07885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c175bc-007c-49ee-8e59-03901fea3969",
        "cursor": {
          "ref": "a5215a41-c6a5-41b4-b056-f5bbfcf1daec",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fde330f0-3a1c-405d-a584-af6160e89b59"
        },
        "item": {
          "id": "91c175bc-007c-49ee-8e59-03901fea3969",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e8c36188-5f69-4ecb-b6c1-5dacf23aff7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25c5c2a-a020-4d4b-9894-dcdff6d4c5c8",
        "cursor": {
          "ref": "67f92781-fcd5-4469-be6e-5eea3a63f1c4",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fc5ffc44-0a73-4330-8697-517f7d2053d1"
        },
        "item": {
          "id": "c25c5c2a-a020-4d4b-9894-dcdff6d4c5c8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e876d6c7-3b26-4854-a000-8e0508c7fe45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f28aaa-c50f-4887-8aa9-61b26eb07b1d",
        "cursor": {
          "ref": "10123ec4-6972-4df8-8cbf-130757ad016e",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "21394255-e148-474b-8f8e-23b666a68176"
        },
        "item": {
          "id": "53f28aaa-c50f-4887-8aa9-61b26eb07b1d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "63173cca-0e48-4819-8bbe-d6fe474fb639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75f5612-6e12-4fd9-8f5e-e60c17d2029e",
        "cursor": {
          "ref": "1cadb88c-f40a-4948-8a82-f333143b6173",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "71ddd831-a98e-42ec-bd2b-f1ea2dc45bd4"
        },
        "item": {
          "id": "e75f5612-6e12-4fd9-8f5e-e60c17d2029e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "63761840-9ca7-4160-bc4f-4486d1d31a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e55bf5e-3be4-4420-b26a-3dfc92d21d56",
        "cursor": {
          "ref": "8bb711bf-a778-47b0-b8f4-e2a703a08e77",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "02d83e37-af60-418a-9de7-054a6a9e7edb"
        },
        "item": {
          "id": "3e55bf5e-3be4-4420-b26a-3dfc92d21d56",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "72c4d931-af0e-48e2-8126-3cb09823d51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de868779-7c87-4f7f-b89a-8bfe57e7789c",
        "cursor": {
          "ref": "2eb6e135-3e5a-435c-9f92-4cfba5c21f6f",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ae50b217-6eb5-4bf9-b8ff-4032ead3dab6"
        },
        "item": {
          "id": "de868779-7c87-4f7f-b89a-8bfe57e7789c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "165b6dd3-01cd-40cc-a00d-8932e093d218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02c0acc-47bb-4242-98ea-d168b5020cf9",
        "cursor": {
          "ref": "11c6ac5e-5825-4cf6-9217-69d15eb1ed37",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e5f5b040-e5bd-454f-bc77-e5a84e350dca"
        },
        "item": {
          "id": "d02c0acc-47bb-4242-98ea-d168b5020cf9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c3584fa4-10ae-41f8-95c9-b37e12af8c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455a8b90-e7e5-40fe-a543-e500b187364d",
        "cursor": {
          "ref": "6181c5d2-ad2a-48a0-86ab-35142bbc5afb",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fb0b47f5-1845-4ffc-9cd8-cd33ba32ed4a"
        },
        "item": {
          "id": "455a8b90-e7e5-40fe-a543-e500b187364d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2c873243-7c51-489a-b2ad-da75687a1431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2c0dcc-7a5d-4348-b667-b52ee8d9f063",
        "cursor": {
          "ref": "18f7103e-e5e1-4470-8314-4f3699b17016",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "246fc510-1b73-4fe1-82da-5aa63880cd71"
        },
        "item": {
          "id": "3b2c0dcc-7a5d-4348-b667-b52ee8d9f063",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bd27b4d8-6ce6-4be2-9672-d2b6533b9438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9722df25-9791-4ce4-b468-7b933164beb3",
        "cursor": {
          "ref": "b0a1bc16-0fca-4cc9-bca2-29f3dec5ea36",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "feb2adcf-5a20-47d3-880a-acdac62e9311"
        },
        "item": {
          "id": "9722df25-9791-4ce4-b468-7b933164beb3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1e266935-1677-4d4b-8119-852ce239f0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f060c6aa-a670-476f-b2c1-d249a59bf26d",
        "cursor": {
          "ref": "ff2cdbd6-6b4f-4a0a-b6e8-887d344e7b43",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d6445ed6-7150-4408-b181-38a5dcc5eeed"
        },
        "item": {
          "id": "f060c6aa-a670-476f-b2c1-d249a59bf26d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4902e385-4de7-4f70-95c9-549f5bf3ff37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4868479d-f664-4869-bd53-b8a378773524",
        "cursor": {
          "ref": "9eb8cebe-53f3-4a3a-b9b5-4e3206e6f9c4",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5dfd3a2e-5825-4a54-94b1-cb72c6511ae6"
        },
        "item": {
          "id": "4868479d-f664-4869-bd53-b8a378773524",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "02ad8df3-68f6-476c-b468-0b41dc4c36f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb6c7dc-5e1b-4470-8ce0-cc76c566614f",
        "cursor": {
          "ref": "9ccbe47c-1bcc-47f7-af0c-2582f2880217",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0c0eb49f-c82f-4844-9b70-3e748c8868b2"
        },
        "item": {
          "id": "8cb6c7dc-5e1b-4470-8ce0-cc76c566614f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3deb068f-a8a8-4029-bc99-fb48584e190a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8bbe44-89ae-44fb-8a3c-0b7b444db606",
        "cursor": {
          "ref": "c82a752e-4fc6-4d53-9992-7adf620e686e",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "89ce6dba-d2cb-4bac-85f0-4546a9d5c776"
        },
        "item": {
          "id": "2b8bbe44-89ae-44fb-8a3c-0b7b444db606",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b27c869e-7f4d-4d74-bd62-13a7a6fcead4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9eccc9c-dd36-45be-b4dc-d607edc6f0ac",
        "cursor": {
          "ref": "1b21bf27-10ce-4e97-aeaf-6e99a83d26a3",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "957e5efb-5d75-483d-8068-68f268001289"
        },
        "item": {
          "id": "f9eccc9c-dd36-45be-b4dc-d607edc6f0ac",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1c348c6a-bcd3-4795-bb03-07562395f4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f0c49b-9c62-41f3-bf33-7b410216b84b",
        "cursor": {
          "ref": "b0c27461-e465-4471-9a0b-069a286cda8f",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "944a005a-0817-4ba6-bbb8-0d2d7b1acee4"
        },
        "item": {
          "id": "b4f0c49b-9c62-41f3-bf33-7b410216b84b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2b089084-bf36-4d73-9c18-a75cf15072db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07c0c21-c6f0-4000-9152-180e6cec373a",
        "cursor": {
          "ref": "7e96bb31-7798-4319-893d-261f12462656",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dc97941d-8f35-46ba-9958-599bb1173026"
        },
        "item": {
          "id": "e07c0c21-c6f0-4000-9152-180e6cec373a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9599323d-cb07-42b0-91dc-dee3caea9790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316a7bcd-775a-4b2b-93ab-c1ce2992d527",
        "cursor": {
          "ref": "a0935b15-1392-48bf-a129-5779e814727b",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9f22c238-dd26-4a8b-8563-c20b8e47262e"
        },
        "item": {
          "id": "316a7bcd-775a-4b2b-93ab-c1ce2992d527",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "01f72a25-e78f-4fbf-948c-a7ac5ab19699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035a06e9-d7c9-40ff-8165-5da86c99e39f",
        "cursor": {
          "ref": "919239d8-95ac-4a0a-ac25-929454465f95",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6e56c35e-a301-42c5-a531-6cb7e9bc9319"
        },
        "item": {
          "id": "035a06e9-d7c9-40ff-8165-5da86c99e39f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fd41d160-d4d1-424d-a38d-f53e06a89a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17f87f0-1010-4284-9062-cb0cac716a31",
        "cursor": {
          "ref": "c360454b-2834-4f90-b6bd-f5374a54246b",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "290ac502-a1d9-475e-86c5-5356a4ce08e6"
        },
        "item": {
          "id": "a17f87f0-1010-4284-9062-cb0cac716a31",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0b0b0dee-263a-4dca-848c-114266d44332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b778239-66cd-42a3-980d-340609358c0f",
        "cursor": {
          "ref": "81982280-b0ec-4c52-a5c0-6acaa7feb5b0",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "835988d4-07d0-4b37-8976-bfac8a2679ef"
        },
        "item": {
          "id": "8b778239-66cd-42a3-980d-340609358c0f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "74d35067-cd69-42ea-afe3-e5f18936fa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a011ecbe-ec9c-4380-8d67-7712b14884e1",
        "cursor": {
          "ref": "edcb8087-72f2-4cb8-a98e-fa5992518384",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "736e78ad-7aa2-4455-975d-edd970bd3232"
        },
        "item": {
          "id": "a011ecbe-ec9c-4380-8d67-7712b14884e1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "163c9f68-7ff2-4d98-8822-d7da4123a567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45ae779-6bb7-45ae-813b-2155c47a36cf",
        "cursor": {
          "ref": "b8ca31c8-7df7-4d68-9835-412b922b3bcf",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8fbd6c9d-ce3f-4e46-8ed4-9abd8a25c6ec"
        },
        "item": {
          "id": "c45ae779-6bb7-45ae-813b-2155c47a36cf",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c0d0f57b-a627-4d26-88b3-35a433fd099a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcc8371-1a32-41d1-9f08-27e7672d1acf",
        "cursor": {
          "ref": "a36185d5-ac1a-4989-b9d8-0800d4df9b0c",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7a6d1ff7-53b6-4ed7-a9aa-927c0d448b4b"
        },
        "item": {
          "id": "4bcc8371-1a32-41d1-9f08-27e7672d1acf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c8286e63-e069-4e5d-b9f4-dd6708f595ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb02322-fc5e-42d7-9056-e930e4b685f8",
        "cursor": {
          "ref": "49f30c1e-60a4-4028-b5c3-27506bcc4f19",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fd071ee0-cc6f-40cb-99bf-addd55ef0607"
        },
        "item": {
          "id": "6eb02322-fc5e-42d7-9056-e930e4b685f8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f1fcefc9-52a3-4f1b-9415-e3e14f57694e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d56f5c-2ccf-4ed3-a41b-bd6fc556143f",
        "cursor": {
          "ref": "c6f518f6-001c-45ac-bff8-544205cc2ccd",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3b289a4d-166a-47d5-903a-24b0c7c7ae9f"
        },
        "item": {
          "id": "57d56f5c-2ccf-4ed3-a41b-bd6fc556143f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "69679e3a-9f6f-4a25-81d0-5eb213ee3895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5cb587-f699-4492-8b30-53ef6ff1e2b4",
        "cursor": {
          "ref": "7722362c-a97b-43f3-a125-4a3970ca9737",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cba895a3-2d21-4f5e-8332-f73926c5da28"
        },
        "item": {
          "id": "da5cb587-f699-4492-8b30-53ef6ff1e2b4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b5ec0ae6-9479-48d1-94d4-80ecc3cf579e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f88267-965c-44f6-8989-afa8259bd917",
        "cursor": {
          "ref": "381ef56b-00c4-46db-9651-83975de2fddd",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fe252f57-96c1-452e-8895-5ec5e255dcc9"
        },
        "item": {
          "id": "e5f88267-965c-44f6-8989-afa8259bd917",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "61986dbe-efbb-4cfd-bc77-bea9571bd5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2038a5-b65c-465d-acd7-674b790fa1a7",
        "cursor": {
          "ref": "91ac05e5-c9d1-4ff7-b68e-b114f327e61f",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f1fa5449-301f-4e85-b06f-55cd36cd60a4"
        },
        "item": {
          "id": "9a2038a5-b65c-465d-acd7-674b790fa1a7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4c2df2f2-68ad-49bd-8d2d-f5853353e23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3affb7-2bf5-4855-b766-41ab534bd198",
        "cursor": {
          "ref": "4f287f7a-4500-40af-bb05-df65cba60d49",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7a045ca2-fde9-476e-b1a3-9560c227f2d2"
        },
        "item": {
          "id": "7f3affb7-2bf5-4855-b766-41ab534bd198",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ddb45591-0e80-4a71-9078-1f4cafec4ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b48f145-ebf2-48b2-85fc-04b1fa2f65e0",
        "cursor": {
          "ref": "5ff0aba9-1b22-432f-9ff5-2fc1f88150d6",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8696aac0-297b-480e-92b8-49ad0b1bbf14"
        },
        "item": {
          "id": "4b48f145-ebf2-48b2-85fc-04b1fa2f65e0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e0ddfdb0-9f1b-4431-9d37-c8318d5d22df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8f6da3-9d21-486f-976a-def5b209dc33",
        "cursor": {
          "ref": "49dc73a7-e5ef-4691-9016-8e9b2588e162",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "09ff1e4b-609a-4a52-b413-fbfe93d51e6c"
        },
        "item": {
          "id": "cb8f6da3-9d21-486f-976a-def5b209dc33",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4daef622-ab4f-445e-a401-24c75ac41c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4e1025-1197-4b72-b161-cfd1229eb3d2",
        "cursor": {
          "ref": "e209c331-9bf5-4711-851f-5d321c651697",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c55c7d88-3e6c-4628-9a51-8a1385cd68a9"
        },
        "item": {
          "id": "7c4e1025-1197-4b72-b161-cfd1229eb3d2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "dd92b6a7-495d-4cc6-add0-10f1094cd196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898f19f8-30cd-436a-9168-7bd2e0231568",
        "cursor": {
          "ref": "dd3531c2-ecc2-426f-b2b4-f1d626099b7d",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bb48c121-90a1-4fa5-9818-1e9824c4daf9"
        },
        "item": {
          "id": "898f19f8-30cd-436a-9168-7bd2e0231568",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "02d36e44-1574-4d90-8ed0-925da42bfed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46341db7-9c93-426b-8045-fa58450bd8b9",
        "cursor": {
          "ref": "a464f928-e6f3-4e4e-8b01-930e4963ab13",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c012ec3b-bb4e-42f3-95ed-58f38137b187"
        },
        "item": {
          "id": "46341db7-9c93-426b-8045-fa58450bd8b9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8ef71fbc-c1ac-42e3-8e73-e5ac929bf9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d61db44-3da0-4feb-b991-526075788542",
        "cursor": {
          "ref": "ee4b7feb-a83d-4eee-b6d5-c88dd181bee8",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c28cfba6-18c7-4515-bb3c-e0df2d965865"
        },
        "item": {
          "id": "0d61db44-3da0-4feb-b991-526075788542",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d48f0752-315a-41ed-a798-1dbd7287885b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42edc932-5590-4894-828f-4e59073586a7",
        "cursor": {
          "ref": "0b772c39-76ef-4eef-baf5-fb686cd9ebe7",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6bf61a5d-3872-4786-b3a7-68dd5fe1087f"
        },
        "item": {
          "id": "42edc932-5590-4894-828f-4e59073586a7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cacb030a-5cac-4af5-a139-eb2cc34d5960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2a0218-498c-4c3e-bc0c-57e155a70bd1",
        "cursor": {
          "ref": "476d6262-7569-43d9-a220-f3abb302dc41",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a38e1104-8bf6-4124-b523-6f18e40c3c96"
        },
        "item": {
          "id": "ef2a0218-498c-4c3e-bc0c-57e155a70bd1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "43eea0ee-13eb-495a-8664-c498f3df57fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5dbe1e-f8f4-40c2-b408-6f9f53105848",
        "cursor": {
          "ref": "2929ff94-a3e9-47b8-a94c-29333089634c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c26e2e1e-8a32-4594-b2b1-0b9f4fa10782"
        },
        "item": {
          "id": "2d5dbe1e-f8f4-40c2-b408-6f9f53105848",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e69ffdfc-2724-4a5f-af92-0b9be5c73371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4a36b0-90e0-4f75-9515-eed04208d4a5",
        "cursor": {
          "ref": "ed7f9421-e145-4adb-8f3f-d90dbf1b69ca",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "be5534e2-9a31-4339-9074-d61754395748"
        },
        "item": {
          "id": "9b4a36b0-90e0-4f75-9515-eed04208d4a5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a2bae90e-3f84-4a54-96be-da158e7b6435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cf542c-0cd4-4e79-a057-ff879d97ee80",
        "cursor": {
          "ref": "3fa194c7-e254-48a6-b9f0-6dc8e921ecc1",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "521cc4cf-bf27-440c-9bc7-d1bcb2e272e2"
        },
        "item": {
          "id": "89cf542c-0cd4-4e79-a057-ff879d97ee80",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fe78dc4b-d5b9-48e5-b86d-c85d0ba19096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18afd2cd-3cca-42b9-b3bf-a897ab21dc41",
        "cursor": {
          "ref": "25ee6283-bc3b-43bb-8b95-14bcdb3b2c45",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "eff2142f-477a-4689-94b4-de81688e57cb"
        },
        "item": {
          "id": "18afd2cd-3cca-42b9-b3bf-a897ab21dc41",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8689e4f2-b674-4d7a-8e60-008d3f5caa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2320e606-869a-4bc8-b1fe-c3a6ec148da4",
        "cursor": {
          "ref": "065af996-92e0-4565-8c9f-b4508b8e0c16",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9f1aea3b-b51e-4cee-ac4e-cd39ca94c550"
        },
        "item": {
          "id": "2320e606-869a-4bc8-b1fe-c3a6ec148da4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "90f45965-1b6e-48ad-9fd0-dfa92f2a1631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4832ac0-9556-4d51-a3a9-ae72994271f0",
        "cursor": {
          "ref": "4998faba-5821-44d6-b15d-3e6dbc271362",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "07e48b97-83be-4bb3-9927-535a004d70df"
        },
        "item": {
          "id": "c4832ac0-9556-4d51-a3a9-ae72994271f0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "412ac0e8-a7c8-4e44-9461-75b50d761c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1fe53b-9c3b-40e5-945b-8f1210e0ed7c",
        "cursor": {
          "ref": "e10bc655-a9c3-4b19-82d2-21b63178b0c0",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "cbb962ed-dda0-46d3-92eb-a2ec5e4be1ce"
        },
        "item": {
          "id": "4e1fe53b-9c3b-40e5-945b-8f1210e0ed7c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c5832b3f-be7c-40f5-936d-3857bd082d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2064b7f8-e3a8-4f18-819e-005fe4c9ab76",
        "cursor": {
          "ref": "2482e436-610b-4e17-86ae-01fd4b5ed1c3",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "49812c59-8541-43fd-8b9b-f7136dd489a8"
        },
        "item": {
          "id": "2064b7f8-e3a8-4f18-819e-005fe4c9ab76",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "42ed7acc-306e-4f31-b514-948a92f04bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce1bf7e-c9b1-4835-969f-fe96f0fcd251",
        "cursor": {
          "ref": "25492bc4-84d3-474b-8241-a3a4d065eb92",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "58ad6bec-82ba-41bb-8c63-d35de51b90a1"
        },
        "item": {
          "id": "5ce1bf7e-c9b1-4835-969f-fe96f0fcd251",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "32744ecf-ec3b-4811-ba4a-13b9980b7272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275afba9-2131-4ed5-9715-04ade2f0aa3a",
        "cursor": {
          "ref": "6ce06ff5-b49e-4ac0-8f32-83111a8894ad",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6dc2bed8-fe40-442e-b014-7abe655502dc"
        },
        "item": {
          "id": "275afba9-2131-4ed5-9715-04ade2f0aa3a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "be0188e8-85d9-4c8c-8697-7fc99cbc567e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff689d8-7afd-41f6-a45d-fa15cbc91c72",
        "cursor": {
          "ref": "947664db-4ae3-4f61-a867-a9c8ee4c91f4",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "132ba221-e748-4c41-8010-2c02b9c441eb"
        },
        "item": {
          "id": "5ff689d8-7afd-41f6-a45d-fa15cbc91c72",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "641ee683-3859-4849-9550-c81c96d5c828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa8a2c0-f52a-4cca-ae1e-2863c0092032",
        "cursor": {
          "ref": "b00b8e2c-9408-4cc5-a5ba-0ad5475f79bb",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5fa7af55-5751-4110-8f22-1454c9346b9f"
        },
        "item": {
          "id": "0fa8a2c0-f52a-4cca-ae1e-2863c0092032",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "88ecdc76-50e2-4bd0-a2ce-bbed943ece2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6679a098-8b3c-4280-ad4f-7e20cd8e5429",
        "cursor": {
          "ref": "2b7c5d72-2f66-4307-8409-06afcf7efcb0",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6858bd5b-ff4a-4300-97e9-cafe7c381a4b"
        },
        "item": {
          "id": "6679a098-8b3c-4280-ad4f-7e20cd8e5429",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "73af0c7d-5036-43aa-b8ab-50f4d2a0eda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3aed2b-60b7-4e2d-a4a8-2dbda617348b",
        "cursor": {
          "ref": "f4ede000-1dbb-487a-8da4-f394e0c35944",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "420e0ea5-3927-49c7-bedc-d0948937c5c2"
        },
        "item": {
          "id": "1d3aed2b-60b7-4e2d-a4a8-2dbda617348b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "88eacc7f-c8b4-4cc6-88c9-df6c6ddd020b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93238de0-6e7b-4d9c-a5d9-689768896bff",
        "cursor": {
          "ref": "b76f24ec-34ba-4227-ae9d-7e372d26ebe3",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "67a55f31-3a8f-4e65-b37a-b14906deac7a"
        },
        "item": {
          "id": "93238de0-6e7b-4d9c-a5d9-689768896bff",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9a3a8ac1-dd41-4ce4-9150-a8c4d15a8b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd656940-c790-4c5c-be21-9e4c27ebb2ab",
        "cursor": {
          "ref": "4965820b-4043-4e2a-a728-11adfed11b6c",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0e74133b-7164-40c4-abf1-56bda97aa1d3"
        },
        "item": {
          "id": "fd656940-c790-4c5c-be21-9e4c27ebb2ab",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "27746d11-4e5b-4ff8-9a30-9eb4725b5443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0478309-f1af-4a8c-a006-1d1db57945c4",
        "cursor": {
          "ref": "37bf4cf4-eba5-432c-b425-32ee1d110c02",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b2a66815-2ca0-4a70-a984-0a76cb943416"
        },
        "item": {
          "id": "a0478309-f1af-4a8c-a006-1d1db57945c4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b2117725-eb0f-4cb4-a8ab-49cbd96971fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e12ad9e-092a-44fb-9a54-3c9d093af520",
        "cursor": {
          "ref": "88f2c5c0-42d1-40be-bc41-eed6ca6c5400",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e50d99e1-56ee-4596-b35a-c8e9b303b697"
        },
        "item": {
          "id": "1e12ad9e-092a-44fb-9a54-3c9d093af520",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5394e8b0-477a-40a0-9bf2-05adea902550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0d730c-c7f2-4847-900b-ca3358ebe277",
        "cursor": {
          "ref": "edc4bc9f-a658-4d6a-8b47-f723234cbbfe",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "99860925-ec71-4897-a958-7cce7b1806f3"
        },
        "item": {
          "id": "5f0d730c-c7f2-4847-900b-ca3358ebe277",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b5f6c6d3-5905-4cb9-8bb9-d7bd0e5d15eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042aa5a6-ca05-4367-9d6d-9dde7d03e7ca",
        "cursor": {
          "ref": "786d740a-6173-414c-b0fb-c0617ef23d4d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "292f51b5-2f91-4a03-a5b6-3047acabc159"
        },
        "item": {
          "id": "042aa5a6-ca05-4367-9d6d-9dde7d03e7ca",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "45a60037-f39a-48e8-a45d-1bfa321358ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca617da-5a65-4be0-80a0-b08163064def",
        "cursor": {
          "ref": "25c2a43d-dcfc-48e2-b298-2f5022999e34",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9476b797-996d-4d0e-bea3-086a6e81944b"
        },
        "item": {
          "id": "5ca617da-5a65-4be0-80a0-b08163064def",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "98bda596-1923-4ef2-bcb1-d89fc6eefc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9ebf84-c381-432c-bb61-2bd3b907213c",
        "cursor": {
          "ref": "11e1efaa-5318-4248-8f35-bd3ee030ccb6",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d0807065-f970-4446-bb36-6f81598a8dc9"
        },
        "item": {
          "id": "0d9ebf84-c381-432c-bb61-2bd3b907213c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ba6f6a2a-8eb3-45e0-8f03-f7922b5a6aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec34d7fd-0fd0-4337-b027-978eff4c81db",
        "cursor": {
          "ref": "94e6bf36-7912-40fc-b35a-6ff98ff43280",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "63df45a0-d321-4951-816e-f9dd248adfb7"
        },
        "item": {
          "id": "ec34d7fd-0fd0-4337-b027-978eff4c81db",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0a086740-3f98-4ac3-8ba3-40a8442d7b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05e5c51-101d-4516-b0e4-855af80b4251",
        "cursor": {
          "ref": "b6bb01a1-60ca-427a-92ff-4a09bd04d437",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7af97e3d-4c71-466a-ab6a-88d8909ff7e6"
        },
        "item": {
          "id": "b05e5c51-101d-4516-b0e4-855af80b4251",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f34c55bf-3077-42de-a08a-55cc2a8a176c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbf1ae4-0dc9-46ad-8b25-2753d3970934",
        "cursor": {
          "ref": "5f4479ca-a83b-4c31-ba70-7cdaf4eba687",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3653ec81-fa79-4b9e-9e5a-e97e38c8e706"
        },
        "item": {
          "id": "bdbf1ae4-0dc9-46ad-8b25-2753d3970934",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "189d1b5e-08ae-48f9-a83d-b97bed6386d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec04795c-1997-4e27-8c28-1f15d1b7ae70",
        "cursor": {
          "ref": "5b5ab7e0-b974-4138-b24f-63bb4faf7d67",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "95866955-5a67-4f5b-b120-78ad07ab5b18"
        },
        "item": {
          "id": "ec04795c-1997-4e27-8c28-1f15d1b7ae70",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b77c1ce3-4356-4bd7-b3ad-e9f38c3e6238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d0244a-0874-4a7b-ba8f-088027d6b73d",
        "cursor": {
          "ref": "5392e53e-bf5d-4128-a6fa-a816038c1c78",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "78255d09-1549-4a76-83d0-dc634ff7a567"
        },
        "item": {
          "id": "56d0244a-0874-4a7b-ba8f-088027d6b73d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "23f2898d-d9d4-4b9b-8d56-1ac95bb7c5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4772111-bc37-4e56-aa64-29bc514c53a7",
        "cursor": {
          "ref": "c7377cba-fd60-4de0-88be-d4516cb26831",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "40921ae9-d45b-42b1-b621-f1bb81c02f29"
        },
        "item": {
          "id": "e4772111-bc37-4e56-aa64-29bc514c53a7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c56b09c4-5db2-4012-88be-52c2df52371e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3cb3f3-ecec-472d-bb89-421280bc6857",
        "cursor": {
          "ref": "490a0861-b110-41c7-8933-4f6445933eae",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9e1bbf0e-0e82-466f-adfe-869afc809a77"
        },
        "item": {
          "id": "9a3cb3f3-ecec-472d-bb89-421280bc6857",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a5e8085a-8e58-46fa-86a8-8013e689f1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a722bc4-69c8-43f5-a2f4-1e137646e5e7",
        "cursor": {
          "ref": "82a412cb-fd0c-413d-9b9b-06157b9e973d",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "50ae0389-cd3a-4432-a4fc-e9fd67552223"
        },
        "item": {
          "id": "3a722bc4-69c8-43f5-a2f4-1e137646e5e7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "716556c3-1944-49c5-9c66-e9f334a9a7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1601de50-92eb-4d06-bcbb-1c36f08d4fd1",
        "cursor": {
          "ref": "55d74312-1b1c-4b62-a9cd-e9fcaea550b7",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5cf8e978-50de-4817-af9d-804f562368ba"
        },
        "item": {
          "id": "1601de50-92eb-4d06-bcbb-1c36f08d4fd1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e8e463f1-9b79-4f23-91c1-e5227401a7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652bcfc3-15bf-4041-9e77-9890dddbd52b",
        "cursor": {
          "ref": "0f84309a-6ec7-4027-ad9a-cf0238b48d8e",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b50d2e34-c70b-4950-a944-cd5f0dc62761"
        },
        "item": {
          "id": "652bcfc3-15bf-4041-9e77-9890dddbd52b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "47efde6a-469b-4ae1-af0f-d91e16de6795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc6fbef-9a73-4c40-908b-038b508f982f",
        "cursor": {
          "ref": "67fa3e8e-5f28-4efc-854c-082e18f69638",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "714b401e-e615-4548-8186-77ea693c5559"
        },
        "item": {
          "id": "acc6fbef-9a73-4c40-908b-038b508f982f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0bb536c8-4b86-4547-9606-496272261eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f557bc0-7e00-4c85-8a73-91f1b6b249f5",
        "cursor": {
          "ref": "5e2d6720-231b-46c6-abf6-8e7770d63610",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "526e4a7c-df25-45af-9786-f0ab84cf2e38"
        },
        "item": {
          "id": "9f557bc0-7e00-4c85-8a73-91f1b6b249f5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "974edbe4-7f44-4b73-bef7-318f66943611",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905996d7-9104-44b5-a857-c929230976d2",
        "cursor": {
          "ref": "16a9fff4-4eef-445c-b378-0507d608272f",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "44f7b492-45d4-41f6-ae60-30e8b03f09b2"
        },
        "item": {
          "id": "905996d7-9104-44b5-a857-c929230976d2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "49b46e58-8811-4c95-84fd-0ee61a7e7fc4",
          "status": "OK",
          "code": 200,
          "responseTime": 106,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6c17fa-da86-4808-ac53-b1c31bc79d39",
        "cursor": {
          "ref": "3c2d11e8-29b5-4185-b31b-fcfa1d180852",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "77370678-07e9-4262-be14-e3ac1452bbd1"
        },
        "item": {
          "id": "5a6c17fa-da86-4808-ac53-b1c31bc79d39",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a52cb181-9ac3-43e3-903b-a2cbad1562e6",
          "status": "OK",
          "code": 200,
          "responseTime": 6001,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cd0497-46c0-4a1f-ad59-4bd51edfc916",
        "cursor": {
          "ref": "88a73607-552b-45f4-a49c-9d282aca3651",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4c01ea92-23f5-476a-852d-c3e5b0fad06f"
        },
        "item": {
          "id": "a2cd0497-46c0-4a1f-ad59-4bd51edfc916",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e1a2d723-2eab-42df-813d-17dcb127c7c7",
          "status": "OK",
          "code": 200,
          "responseTime": 3083,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8240218-6083-4286-b616-f41378343e99",
        "cursor": {
          "ref": "9a2c6bf1-cd72-48ce-974a-2ce8f59ddf73",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "20eea844-bb12-4c1a-8e66-73fe7d7aeddb"
        },
        "item": {
          "id": "e8240218-6083-4286-b616-f41378343e99",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b8d5f427-78dc-47b7-ba20-8850a9c5c6f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8240218-6083-4286-b616-f41378343e99",
        "cursor": {
          "ref": "9a2c6bf1-cd72-48ce-974a-2ce8f59ddf73",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "20eea844-bb12-4c1a-8e66-73fe7d7aeddb"
        },
        "item": {
          "id": "e8240218-6083-4286-b616-f41378343e99",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b8d5f427-78dc-47b7-ba20-8850a9c5c6f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc9ceb8-6f95-4e58-96cf-ae5212614722",
        "cursor": {
          "ref": "35b418bd-e33a-4c6a-afda-97c236197321",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1d22d5d9-79b2-4b85-8a9c-0c394869d09b"
        },
        "item": {
          "id": "2bc9ceb8-6f95-4e58-96cf-ae5212614722",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "982b7a8f-882e-4eda-b072-4ef7c2e69081",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212dfe50-b6f7-45c9-85f6-568b5af2f557",
        "cursor": {
          "ref": "d5a2873f-d796-4b1f-98ef-572fdd72e65f",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "26c40ca1-9382-41f2-bdf6-27db9ffd8856"
        },
        "item": {
          "id": "212dfe50-b6f7-45c9-85f6-568b5af2f557",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0e8577f6-5f3e-49d3-a64c-4070d1dd7bdb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}