{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ed506b80-1df9-4bd3-8249-a5493fa5d8af",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d0ec3a86-92f6-4fb6-83bd-972029e5da0d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0730eb88-346b-42d8-926c-010e74142a1b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6e01bb6b-a47b-4174-ba49-7073927f7572"
                }
              }
            ]
          },
          {
            "id": "f77a522d-906b-4d6e-bf07-55e5cfd3d8b0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "13fada95-7219-485a-a1e1-9dd209dc7bc7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7f496d55-a519-4b4c-b4fb-e6c0a4f317db"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d8c3f169-cfaf-4644-b0cf-17abc33fa97b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4dca284f-190f-4efc-9963-cf0c04ef1ce5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "43402ac1-c09e-4ef5-9541-b304ec4dbd81",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24811205-7f57-4b49-8c22-c7d3add017f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ac29683-f40b-42e0-9eb0-5b072aee0767"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2039f59c-7f97-4b8b-b7a9-861b5276a411",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "033df35e-3d85-4da9-9a55-be274a66aaf8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3bdd6e94-0696-4d13-b5b4-1aeaf562651b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a72c6cc6-440e-4f96-8448-a5b9967ae9d9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "165290a7-950e-4971-a856-2b106489b303",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7326deda-0280-453f-a0a0-f0cf6cf2cdb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8783119-ffe4-4c46-8e47-2457aadedc8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a30432ec-93df-468f-a96b-4d877a4cfd79"
            }
          }
        ]
      },
      {
        "id": "52f4322d-1a0f-4d69-9d49-48e939dd6f95",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "271daa43-f227-436b-96f6-7b295a35c001",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3bf81ff-ab69-48dd-8e7e-687d41e17094",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c389282b-b89a-4e35-8d28-34e2362dc749",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5493c0e7-a3da-4a70-9585-1022169fecd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57f94943-63b5-412c-bf8f-f664cfbdfd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da2774e-0f3b-4ec4-8511-b9a8982ffea3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b716f1-4473-4683-a5e2-800453025bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c9c645e-2fa6-4d22-8522-0551187c040c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9539ea9-8ac7-4655-afea-ab6f751d8cb0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559eb6b5-fc87-4ac3-ab74-0c1e9934582f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7cccec8-b4d9-436a-8503-a759f00c5bb8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "37f8933f-ead7-42f9-8392-cd8f2d1bc7c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10305b85-e2d1-4863-88f4-b566362d7730",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4a5f3a-2a3a-4ac7-b3c8-a1081079cbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e35c5122-0a50-48c0-b71f-6559c807463e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417881c4-2d88-4ad4-b620-8e32dcff738a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f3f4e9-4e51-432a-8431-c458fd483659"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c4ba0c8a-f09e-4805-93ba-3ecdee3aeaff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3921ce4a-7d9a-4563-8df1-ed7815438720",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56607ffd-9455-49e8-aa5c-912b0166e723",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "53bb3c6c-ee73-4b7f-8b33-571ed9e137f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a427fc99-6b56-4217-a242-a486c4fed747",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b1d582b8-4126-471e-a36b-e04869fc9f76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0046e2c-0a34-4535-aa26-7dbed4c1770c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d7f1c61-1c5a-4095-8e40-d5aea86a5eb4"
            }
          }
        ]
      },
      {
        "id": "bb8969e6-bded-4cc2-bfa6-5c812baa0704",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7dec3369-2d17-4243-baa6-72f5352d02a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8ed6bfb-53cd-4c17-b73b-409c9b99baa8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8509a298-cca2-4e0b-96a9-d8eeb6b1001d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4405a9-b5fb-44df-aa1b-56d24e05d679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544af012-d065-4c8d-b0a2-6ba7d8800b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9c30cd-680b-4dea-9e22-b59dacfe7c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a46867db-15cd-463a-887b-b3564af0cfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1c3801-eb34-455a-b140-91afe19fbb42",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ddba2f-e511-4b0b-9ffc-9f40405e9100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de51cb64-6606-4a23-94b1-b4c65222b625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14c882b-480e-41ea-ad16-9b1afc366ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8e04960-0bc6-4930-974c-e7d44127fc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baec17ec-ba11-4917-9bd0-8e1467a539dc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4875b120-7dc1-4242-ab0e-1b10c9725519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213c2f92-ea4d-4c59-83a7-3fae6335e949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337492cf-341d-4812-98ac-7c05125ed0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b493377b-f713-41d7-b267-f7644b3c39ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697ecf60-3602-46aa-92dc-e4a905ffae95",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd84028b-9341-4175-ae9c-b09f6920f08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59424af5-1c3e-4fd8-a526-064bc992fed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc33a993-a81b-4346-80cd-66df2dcb4262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "168d82ca-6365-48c3-91ed-3b78b61393a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c92b5da-6f49-4266-b3b5-26148d38263a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6feff708-4ee7-48a9-a384-5864fa77170d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b80672-3e5c-4475-a8f4-89e2e3e1ef3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5f7c8e-fc3d-4fb0-b6a4-2e5df4f1f15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5902d44c-4acd-4857-b7f9-b58d7089a493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74affd8f-8154-41ac-b9d4-8e21938280da",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4076dc3-8302-44ca-89d5-ae8874119d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ac59aa-6af7-473a-84d2-f692acf12a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52373693-4761-436b-98c7-247e3b75ff73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a66d3f49-e60e-438d-abd0-cf7edfee9444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02ba3f6-54fe-4775-95a0-25c8c1d28c73",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce472b42-33f1-491b-b45d-809f2a8a018f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c5f77b-9c98-4ce9-9d67-bf67c79331df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bf73a2-a013-4b19-8942-cb207d853c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47a02c32-bc45-4d2e-b8df-e269a2a11ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37a3049-5e7a-4bf7-bdfc-1666fc1c5d39",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd89aa9-f88a-4a16-a11a-009389084099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5705b84-005e-4042-801b-227e24f657d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3810ce08-595d-434c-88e3-d0d303fc6df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "059055de-f018-457d-a78e-51b57b21c71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc498fec-a426-4591-b39b-ae7cd43a3410",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15c20dd-d52f-4e4c-8df2-ca36bc81e9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5074a851-1289-4f34-9376-37330139c7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9575e175-f784-4b40-92d9-1d5763753eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ec1a6ff-9d4c-46ae-b8ec-ffc934391a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ffe8e2-9010-48ea-87ac-beae40bc105d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d00f21b-9152-41d5-a81b-48e7c03d8bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4a1a6e-46a5-41ae-8b29-cfd89545cf8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0103489-a512-4d8c-8f69-4bf96d98ff76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32e9ae15-eac0-4112-8c20-f5e3d8466740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981c43db-358d-4f6a-bafa-706a06c84c49",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a84bc79-129f-47e1-9932-6a8a29472ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73fccdd6-be14-43e3-bb8b-fc61c1e40e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e981c1e8-6e6c-4d6a-a194-e27578def1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c96f7b1f-0948-4b26-938c-ce350040af08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccae3333-7c48-4b1f-b732-e71236bf0dd6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8d2da3-e2b4-4df3-9a4b-e5441a6e8256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340046d7-bec6-4eec-b61f-a87856e7e0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0d4ad7-6fe4-43e4-bb1e-be0174f1546b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d93085e1-9456-4244-9e74-783333e61552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2270262-a976-454c-99ab-e18959241b3f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db549748-df3b-4bab-936c-0f2b9a05cf27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7f37a1-5744-463f-8ced-c0d695f1387f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5dc3302-d0bf-4e18-b9d0-d6227bc8afef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7eee4b30-e2d2-4073-b3f2-5162cc4ec8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ad52f1-a6d9-42ad-afe8-b3df586fa535",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a688ff82-264f-45dd-80b2-a8008d0014d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42100c0f-ccf8-47dc-8c84-70388aa8365b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230e3b83-16d8-4254-a36b-65af4f71f013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1707369e-27bd-45f6-acf1-480af1c0dc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d12807c-f031-41bd-94fd-aad5153eb9db",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1502da-88ad-46e9-9975-ed0447d90d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ee3a49-0aa0-44ae-b4e6-ad309f38b0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9327458f-bfe5-479e-bc54-325cd99340c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e48c080-da07-4a17-9277-516bbee8439f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9d5994-638d-428b-82c8-90464105f647",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488e3abb-0fe3-4a67-95da-ad03ef70f665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba798a01-20af-4044-b684-c9477f480f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58560cb6-2ea5-4624-855d-bfbeaabe8671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1394b4a4-1a3e-46f4-940b-ed452a1bb34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b651d2-fd94-4bcd-806b-abacfe6b1a37",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0632ca1a-b158-4bae-8cc9-34ae03bc6435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f0dbb3-18a0-4460-a852-d9a8d203d426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a41a0ac-1040-45ef-afd6-ed3bd5fd53ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec04193d-3aa6-4d21-aa72-71104e852e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d020e2e6-687e-4aa5-a901-2d8659617fa9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ec9d57-fbd9-423c-b9c1-f46e4294a643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad1f97a-4aba-4400-8f82-4da1d27a4ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9399982b-386a-4231-8bfa-8efc662c4899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba013f9-feb0-43bc-bfc0-5e1b685c39b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e3449b-b42d-4ef1-82d6-87d3440896e1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016113ac-a96b-4589-aef1-236aee70d129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f7a649-767e-42e6-a5f4-696d3cbd1323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce899358-dc7a-4100-ba35-4cf02ea1455a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbc1035-a4ef-4ac6-866c-4b7423b4d355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acedcf06-ff2b-4f6f-9fc7-1759a6b815a9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94b6e10-86d1-402d-92ac-ec0822b66678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe15c55-7475-4c61-869d-da442940e007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad66e179-07ee-45f5-89b7-f101a937c8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "706e50bb-07b6-4d0e-959f-dca29942ce23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c911024-c581-4424-a30d-bff1daa302d5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ef98ce-240e-4d42-a1d8-2a90a716c16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214d35f2-b5ce-4f28-887d-852be83943af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bdb4dd4-78c6-4688-adac-1b63d45d75cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1fb7d1-66ce-4a71-8b9d-a41466650c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826ffde3-97c8-4a16-84ac-74daa15b00a4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921715ac-090e-4011-b649-4d159b0609b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8396033e-1e42-48c7-b98b-f1fd0b75531e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f740cce-1d45-4c11-926c-a150fcb8fc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "94e13b1b-0800-49dc-aaf5-d2c61dd8084d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfe8b6e-9cbd-4198-9f64-88089860da28",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0633294d-e1e6-412c-8e6e-97d227942e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15da818d-3ec6-4b0d-8398-32c90daa1bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c15d0e5-bcca-4341-9a89-289ffd4f94eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a9524b5-2535-4bb4-a30e-d606a80dfa18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41084480-750c-4932-86a1-61a127f5b116",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a88a984-8ef8-4384-9bc9-7282ec6688cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc90497-e8bf-4912-adcf-e6d729517b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08cdcfc-cbc5-4657-952f-395e98846c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc7f441-14d7-4ad6-ac68-b3e4b3b43258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d60163-7364-4073-905d-663223cc8b35",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5688eb-7d69-433c-9c51-d5317148222e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b435b80-e365-4b7f-ad1d-ddb998036ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97bf2a2-6b74-4eec-9002-c55d07f7505e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d75978a7-fdcf-405a-9f24-fba5786a4bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c64cc5-5cfe-41fa-bca5-11ec6a7b5a3a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3d1e1b-6d39-4786-ba7b-1d5cfe639432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435d47d8-046d-48f8-be82-7c52d3b4d668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8570c5df-f2cf-4c66-ab1f-b7340cc600ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aefb0538-1c37-4a9f-9d32-04b21ec88e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d756bc3-0cf3-4b7a-a1cc-2af3dd145be3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec148bc-e779-4eac-81d4-886cab120b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54746f7-ca36-41c6-8cec-efc7baa031d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5694f157-c18d-4194-8bb6-28e408656a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4583ef-dc9e-4e90-a63f-7b333f4d0458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53499fb8-04b1-400f-80d3-26bacee3892f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab631167-cdf0-4bf0-bb47-7351123b756e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ccb8090-b387-4519-9642-02e994027294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388296ed-cc03-4aaf-9ec8-8f7e4c2bfdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba266012-7436-4f4d-907a-538f25ca870b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dd3742-0cdd-475b-a110-2108a5a53a59",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238fff5b-9f47-4450-80e7-bf729a816a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e987cf6a-56cb-4c1b-9817-03b1a5d1d33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60dbef83-1f17-427d-82d6-2a558a79cc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2b1f6c-cfac-4eac-bd41-8ed23b25fca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf6900a-e449-44fe-afa1-572972dbc161",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e679336-5a1a-4f94-b19a-138db30d9c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f68a06-1a84-4fe8-b3a1-e6e53cc591f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4ce898-b267-4989-a88e-b771c5c9a0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "939cb896-f8d0-49be-9a57-0abfb603f953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9aa3d32-4cfe-459a-96b7-c2e113681c84",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2233816-a0e6-4e16-aaf8-37354a1b0ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c2fa41-7228-4e80-a125-6c60e5e76041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5903fd23-e986-4780-9c5a-767e4a1db102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d56e63e6-59df-46f8-9d61-eb80514cf3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444a11c9-9915-4f73-b5c8-726b2d2bde87",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8b7fae-76ba-4cf5-8976-48365120a0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4ddf51-ca35-4b1e-9510-96571a13f799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1cde40-c452-4ddb-a3d2-a69d13ef52df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddfa5268-c3f0-4363-84d2-240f4f2f6111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddbb8ac-5a1d-4692-8434-e401fc03e1a7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e86e23-1782-41bc-8c5f-2c82b80fcdf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc00947-3586-4ba0-bdc5-d7d606d75099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd9cb4c-694d-49f2-927f-65003bf8b222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e9ef59-2479-452e-825c-33eac336f57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370439e4-44cc-4956-9261-60b2b27e33f6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a347612-5f6c-4669-9b2e-8b29493c99bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5b77af-61c9-42d1-934e-13249dad8d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2651273f-8e1c-4f0c-8c28-c4a969411f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1837e5e-34d7-4aa9-9520-bc5a448e6f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36c1b1b-173c-4379-a647-c718aa9c0082",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b06864-9bf5-4718-82d2-b6e294b4158c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0724db10-8c67-41f3-8165-461e5961a76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d409c279-c073-4208-8be1-51ab381609ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d5178cd4-5afe-4edd-ad79-6faaecba75a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89612f9e-f519-453d-858b-a585526142ef",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243a43b0-b90e-459c-a400-fb52b036922c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6691ca05-8af2-4474-b743-2de15a12f10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71844f62-1b26-4f54-b6a4-d322b5b8428f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39cb22c6-2ef7-4fe4-912b-0d3eed4bbe8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f592c5cb-2b13-4828-9f3f-201d8c2b41f6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf025b8c-7319-424f-b0c7-51182d88d346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6520ae-b55e-4f98-9eb4-7246a8031d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a7988a-5b0e-4a95-9b07-871324fe57ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3dbec1-f7b0-458b-9c2b-fd237f5ad77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267926ca-a076-4aeb-a06f-b076b225ec58",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0654b30b-6614-43cf-af20-e2f8e7909487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f5b091-0a70-496a-b2a7-9a464d00db78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04db180b-a2eb-4d78-820c-09e42e0e9be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d91f08cb-1464-4053-b653-0c84c1e22eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65eb401-c449-489f-bfcf-f2cdf8fbf1c9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d475d145-dac7-4533-bfe0-dd84efb06819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f64721-5861-42e4-877e-ba60a4644eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cdd8a7-f648-41fd-9bce-5bd1787fb80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca920da-2fce-4b4c-b3dc-4bccc5706080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3898235-8ab7-4202-a398-dbe5234974d9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ead498-73d2-4d8f-9c7d-e7533ea479c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87c8588-901c-4ed8-b6a3-42e381143fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9579c2-8ddd-4093-bbb0-1be9b4635386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6aad5153-dc67-40fd-819a-dee5366e7ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d8f72f-b979-44be-9b0c-6548eab652d0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d8e4f1-ca74-4b55-9a8e-a4aa18661c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c103b6-6a70-4897-bdd9-e7d90529a020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8783e2-949b-4479-b900-3721041a5e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd2efc4-5281-4014-9777-4b15682f23e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0fb766-ca55-4bd6-92fa-8197ac58de1c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee50e5cb-3f08-4988-a1b9-7c03c533388c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8faf9b-a44a-4a08-8136-b2d8bd4993a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e0c7d6-23d2-46a6-a536-1346ea790567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3261efab-3441-495c-995f-6e9033a64d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38740270-57a2-4003-8c1d-1bf0a6f5d510",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec97994-ba9c-4e6d-bd41-c9daacf831a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29dd7ea-8949-44d3-80b6-c7d8646bf4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfb95b3-f806-4d92-8199-3f6952e57e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd39ac3d-0787-443a-8129-1c73e86ad6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db00ad2-68d1-4776-bd98-fe39d1caa4c0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306444fc-5381-4aba-bf71-84c71fcf98ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dfba521-ef90-41b6-b846-a519b9cb1ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca352ac-1aff-4a78-847c-df66870d170d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa36448-64ce-4704-a1bb-d54eb40b7570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b4b08c-c0cc-4d77-8a79-d88636eaccad",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2174c1-6bd4-4386-b8ed-578375971f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c99ce5-b667-4012-a13a-af24637e510c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65eb441-e0ed-4019-83a3-e03df7727787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5119dd68-61f3-497d-becb-4800e34a90cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba2e6ba-c1a4-4e0e-b98f-8118382000c1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e76d46-31ab-4808-a70d-11f87705c75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e486d6-3cb9-4e5a-a6ff-b6fe796a2631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eea838d-e77d-4191-ac58-7b6a49bd7ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64970524-dd92-4a25-9126-316bfd0a7022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba75e39-1881-4931-82c4-5576d8fc28bd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca77402-c58b-4824-a4e3-ee77ba9a9821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da30a698-0f21-462c-87a4-b9f1dd657545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ddefd4-3420-479e-9275-bba8d984c5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89acea3c-f411-49ee-92b2-bc5b5e1c7650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58802dbf-72a2-495e-b7c2-fbe814ea12a1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4487230-cb1d-46e7-9e31-93a1ae2e34cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fac11c-ee2f-47d4-b672-9dd3cb3c1764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d60ccd5-5e49-48bf-97db-88da82f211d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ba76d7-4a54-441f-8737-69bf7d25c8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070f1632-dedc-48bf-a11f-3b2711083e97",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30ca13d-8c96-4292-bb68-8013a7bc5586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e9b1aa-b236-4fc3-9e79-3c35e6e7b5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bede4cd8-2e53-41c3-bec2-5f7cfc37fa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53e1c1b8-f10b-43da-9872-5bc996b3c87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c832f508-55f0-48a1-9fe1-f10039f5104f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bafe7d0-1760-4648-88bd-acbcbbf65dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2b0ca6-3af4-4088-ad88-ac653e9f6563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e66a3e8-b24b-40d1-a2b4-ee477bc88348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ece38bc-766f-4e71-b819-492de7c414d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ab8c14-4d1f-400f-9469-8174777ce6da",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf94e957-3930-4a50-9d4c-6adf4df75cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5739d6df-d6f5-4c08-862a-ea4d75ed2d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ade822-2b08-4f50-9424-5e7c61b1eb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "09eec7be-0586-4e6c-86dd-5f87a212f2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e91287-c3a5-43cc-a101-c3bd68355ca6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff6935b-41f5-404b-98ed-31b496f45260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814d99be-a0b5-403a-b546-e98e4d6107b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa168604-cb08-4a08-9b9a-94cfe51fe322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6a694c-40fa-426f-97c1-0f53d59ddaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a847cc-3491-4617-aace-cb0176157651",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0c22db-bbed-40dc-9bce-e347cfe7092b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c8d70e-bed0-4510-b935-d2f2530d8406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acb9bd0-3893-43fa-a5c2-2d94528919d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb66d2b4-c8b4-4a6d-b7a0-1d4f9d82a7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2256c44c-51b5-4068-b175-e8f5704f5591",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ac6fa5-8c77-4446-8810-79883d6f3d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d906591-ac2e-4027-93bb-6fa763ae700c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afa9c56-1496-4ba6-a485-42ba361737c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fbb27f9-fe83-4cce-9ea5-2234e4e34076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99cc0af-637b-447b-a760-a55b0e865875",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a5088b-1607-4066-9f5b-930b60ac7b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0dfed0-e312-4289-8093-723bd08c7d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151df2ec-03e3-4e73-825e-194fc380ac3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "232e7116-3311-4984-b829-5eec7bf99eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0da79d-5ca5-41ce-878f-b602d9c48826",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa951d31-7a42-45b7-a906-ce3c7a24c41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba565bcc-46f8-4982-9f77-09fb9f0a6e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7a79d2-9452-4333-9f98-bc5c6e53136c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1afb7e25-0a6f-4045-8885-95c515438743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a268ff6c-377c-4516-8d19-130ed3bf1f24",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a72bc6-4abb-48e5-9735-12a59ba2904b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56d30d2-c57b-4647-b608-9faa68de7a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501bfdc1-07b5-41e6-8117-faa6c9defd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a31a037-ae50-4cd2-acf1-389c218c3d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec55f5a-f2f2-4983-8df0-bed024dcf329",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3e31f2-4261-4543-9667-add5420e7ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80f4cdb-56ab-4b92-ab7c-51a664c297b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7021cee-d97f-454a-8646-a9a63db7c2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdef04f-f941-4efc-80c0-9197d6f4cf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d36392-c157-475a-bc07-7bc42060e761",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1c2228-8c05-49c9-816f-9d5ace3f52bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1778153-45cc-4034-bfb1-25feee34ed1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13273171-0e77-4528-b437-d92a6783bd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4578ec7-bb2f-4989-99f6-ae7ac516c505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bed081-dff4-4acb-92c2-46b0fde3d84f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27473b7e-d972-4187-ae9b-632dfb5f8ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb964e3-f524-493a-90e1-ee39722cecf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33b71a1-c0c6-4608-917a-c1e05674343c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "86eaa1ab-fd9f-4139-b11a-3f14f0142f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d96278b-f859-406f-b58f-50a337ee7892",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abe70d0-142c-46a6-91b9-d5584041b4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c153c8-820e-4295-9693-576ccc8e0169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5d7c1a-4e40-4fc6-bcee-a8be98a4087b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a264020-d4a6-42fd-9388-d1ba2b119490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7c8e6f-a132-4d5e-8848-934f68a9aabd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4841485-2bad-41ba-a59a-c6bdd090ef11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416ee66b-02ff-4b9c-9410-3b4fc224837a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7729e111-eda7-48e8-ba4c-46f1bba4aaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad49d811-11bd-4fab-b240-97f7014f0f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b71a7c-d508-4093-9dd8-935ec03610bc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e382b2f4-7637-4b78-8bdb-fdcce1a58056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec4a6c1-c7bf-4976-bd9d-4b42b37f301e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859e3370-4cf9-4c23-b964-14dc1c040b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa69e2f0-664b-4497-9ad6-72944210130d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2578de63-fbc0-4cdf-87b3-34e469fb3c18",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ce4932-0cc5-4dca-b89e-817caba2d69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff42cb7-44d7-4496-ad18-19c46c55128d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39711bfe-8b7a-4886-a395-de4756d245c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1a0397-6497-4ce5-b728-91c12150d2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b06c5f6-d5a3-4e66-8aad-ada279e352d6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c363a7d-f3d9-4a14-bfce-8e4aa0387420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b14bcea-591d-4039-b43a-ccf3347b6e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711dc0af-f968-4357-97c5-2e4ddd02b808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0d6f69-2613-4e76-8928-9eea7c10cd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac8c775-57fa-4a18-b4bd-ee18963e116c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdfbbe9-29e9-45e1-b9f2-3f5872833735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4b4aab-90a2-4e3c-a487-48b753cb86bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d232702f-3559-478c-b039-ccd834a42a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4a60b9-31d9-4946-a09d-b6b26390e110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de611245-c2a6-439d-af19-b3ac9555aa96",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a36b841-0c55-4dec-ae1d-ac0c6561e9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac181b7-2802-400d-a327-fe26c458cae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc14f2a-27e5-4c36-a65a-e169b5b2a367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5db5dbde-c90d-4ea3-ae75-05d522a09434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b70bf74-3877-420c-9f84-50bb5eecc680",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dae4dfa-7e0c-4e09-9eec-e8cbf9e3755e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0b2f88-029f-4b64-a133-1e69589da2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49891190-6003-46e2-bd31-413c0f160bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "de7b07e3-d0cf-4b4b-9d67-63c78df57935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29395bc7-b012-443c-93cf-d7343655ed9d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c486191c-cbf6-4d2a-a078-73e9ea5c7cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c27e0a0-c030-4e1e-b804-fd042164118c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7abc21-ea4c-4671-af86-7348bb33c1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b39cedb-7e7e-42e5-ade9-0805951bac88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7a76a8-46d6-4cbb-835a-25c78133bb36",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edc96e4-4867-43ab-abdf-108a93146ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ce6c2c-fcf8-4e85-85ad-fc0adcea1c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f049c5-6c49-480f-8522-bde31e44d4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c97e55-9bb8-4ce0-b215-0b42f674d847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c264e7a-47ce-4990-86cd-61207c0b2dd7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a51ec21-f0e3-4f32-8496-123faa681611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1c5de9-a5ee-49b1-9daa-5fc2bc3808f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367a5f17-d333-4dfe-9f60-8d42b5aa352b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f53ad1fe-99ea-4a62-9fb7-9ee9bde0669a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd19e1f-f502-482a-8a46-0359d36dbc7b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8edf51-946b-495a-915d-29dcf55ffc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bba459a-f582-4e9c-bd6f-a605f523f14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0223152-95d4-42a6-b038-870a9b870051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b65a56e8-1dcb-4ba9-8cae-7f8dbae05c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297f74dd-c041-4d6f-a3cf-d4256b040beb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98dab17-ceb5-4ba7-b9fc-d8c86cb59b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98db3e31-3879-470f-ab27-0a822eaa6d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8d14a2-0c00-48d0-9ebb-bc50fbe859b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "239f3b14-a4cc-40d4-836b-82307a212b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35c979d-9c17-4675-8d45-dfb22f818bee",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e918aa1-4d10-4eb2-bb93-b1cc1ef2a0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87389029-7692-4daa-802a-09285c3f3c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69193bba-a608-4d1d-ba1c-06046b79f5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c2ecef-c9ab-4bab-b6fc-5db3f1f89c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1499e43d-21e4-4f0c-8364-4b2ef985d9a8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c95f5c0-efda-440b-9526-8bf598aa86ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c053b77-ee2f-4caf-b717-07307d11e521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914e053f-e5da-4a21-b36d-5acb177c7c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "af5d6c4c-3f90-426a-8560-62689c2be03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8c2533-8c8c-4804-9695-b52db72fc3be",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9246485d-ed87-407d-a30a-e3843a48dfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a079709f-30c2-4df5-8816-108276bb5904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9725eb3c-cfaf-45a8-ab93-a3c4a8a72be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2d08a8-aa07-494f-8a98-18dde181a4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59516a8e-e67e-474c-aec6-b2517ac7550c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bf113a-b162-454c-a07c-939dd5cccbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61fb240d-7cff-42b7-90c2-f3393bd72b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88fc70a-2450-47fe-95d8-3613dccfb2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac67177-6907-4a92-ab1f-cf939f6ddff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d37a852-7d30-4eff-a006-e4b19d982bfe",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043f036e-d452-45fc-9be6-39ce867b8466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdc0c60-1554-40f7-9b16-a1d4aaac1776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462eff8c-0d9c-45a7-97ec-913b1e92cd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd43d6d-60d7-47c7-b2a7-bdec2718a1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edd29e5-9084-472f-942c-706ca49ad4cb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e3ff7c-ee17-4cd1-be2c-f1fea02c27e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c941232-6ad4-41fa-88ed-00ccfeec9da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9474d24-eb92-476a-81fb-f6871652e26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a188f62-ee9d-4fc3-95d4-36d9b55258ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a104a0-8e52-4d07-8e5c-abaf76651cb7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c407849d-a98a-40c3-80ba-d51cef65ce65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c490e9f5-fcdd-43af-950d-802986a8baab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343be763-e1ca-4dfb-af24-ab23cce0699a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "166ee289-70ca-4a22-bf22-144bf972c0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406118af-cf66-4183-8803-58e9ba82666a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ef96c1-d39d-4ac0-a9d7-cb74c1fc98c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc5e798-2c38-4e9b-9143-2b9ba13f8bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5669c31-b5b6-4e06-a5a7-978b1d27eaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9d1a83-7bf4-4de7-a3fb-27e8fe296a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cab812-7dba-4883-a525-0fb1dfad6f5d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e9a6e1-098d-47ec-bc06-974cec0dafdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd543c3-1de8-4edd-8f15-c62f23a0cd48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8638777a-de26-47c8-8a60-1d8db5d32813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50ec1b7c-eb2e-4b53-b278-17135778e6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9bc6ef-4cba-4ba2-923d-32273a2a64d5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79b20af-539c-4b93-8aef-c3d10b3dd1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc9a835-3403-49c9-a31d-2983f7ac0926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568c4404-eddf-4a41-88b9-827eb978eb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47ad8841-32ac-4cb4-a005-133928507fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1f7140-e836-4737-b4c1-540f808bc8bb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc842550-6a53-4027-8bcb-291e3fa909ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b148054-9621-46cd-9d04-0a444b9e2afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad3e527-11f2-43ac-8f68-3764ebc4ed99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5101723a-b7f3-4dc0-9ede-2a915cca00dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa02961-8522-40bf-9cf7-41e394a74907",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce58f24-3d84-421b-a08a-be5e0e4f09eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbd3560-54e7-41c6-a11b-165a4191eba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc1f926-6b54-4593-8a33-5c2676c683b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65681e03-5a38-4c9b-bff3-945003212900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19cc2a2-e0ca-4bdf-bbaf-644f0dc2500b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011fddd1-3e3e-4644-8056-947899a34901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d6cfa9-a69c-45ba-9b0a-2335027cac53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775f55bd-6583-401d-b432-33b461ee6209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "290d3848-912a-443b-9e04-615eaef93933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78032c1-e5f2-43c3-8810-1f709fb4b850",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d14c664-30d3-4b52-acb8-ac640e7601a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a1f49c-ee75-47b4-acd8-0dd2feec411d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687870e2-f7d4-42ee-ac5e-963eff5735d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "47022742-dfeb-4f4b-bbc2-3bd2d3d38c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a3b1af-4502-4ffa-be1d-2d3f5e98facc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2397b849-a525-44b6-aa05-005320c018fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fbedad-25ce-466d-affb-7f1f21b18936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00dbf361-c5cf-491a-9076-318547df7ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8569eda0-08e8-434f-abf4-a88700baee14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7705b767-bd47-40c4-a1cc-5c1e11d3dab5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d26df9-6036-4860-b5e5-4db033677a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d781fc-53f5-4a28-a888-f0d5582ecdb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf42589e-e9ee-4246-b65d-5707684a18ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e64c1f17-a607-4450-9c4b-47d3ebeeb545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57ffd62-5544-4147-855c-d78191190806",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d418cf3-a387-4b37-8449-6222c9ad5384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0aa1a9-bbc3-4983-8326-351ab91c18da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a24d077-3638-4348-ac62-86e115567f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fccdc8cf-d8b0-4ea6-9653-999960ea99f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18184985-cdd3-42a3-ad4f-351809cef5e6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6690ab-d6f0-4450-89c7-ffe527552d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3213ea-ed80-45e5-8be2-8e4e8607796a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3370eaba-1a47-42ad-a30f-f20954f9db3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "21ab64d8-715e-4e92-ad6a-54c6cd03da3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9129ab-b772-4d07-a0b0-6e9bdab0a20a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7015309b-d4f5-4738-9dd6-1618c4c59fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c3fe2361-e94f-4038-9a72-197c8cfa1dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2b62a2-5aa6-4280-adb4-12deb1c0314b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2886e790-f2cf-4f03-adaf-4325262d394a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "caa3c0f1-ebdd-4c13-ae1f-adc7db1bcee9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8c799d7-3eea-4c58-a268-cfbc067174c7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90540f74-cee0-4ead-89d0-1d2dddf9678e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dac83c20-eb9c-403f-bf98-d6dd11939bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26a0ab6-3de7-433d-9a84-a938163bd5be",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91a07a21-d442-4280-b86e-0b8f317999e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb098bf6-36d3-4d8f-960f-b883a3d03392",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "981b0fbf-2a3b-4a1e-9883-e034da8628f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ea0c535-8795-4b20-b11b-17782ba9e0fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b80cbd7c-5005-4b31-afdf-d4d786cdc7c1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5c0c692-0dcf-4957-a1f2-19a6ebe8738b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aef8e458-aa3c-4dbe-b984-a44e3003bf7a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a20ce7b6-026c-4476-a508-28fab329856b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e387b61b-a858-4cad-a8a3-1e90aa3d8808"
                }
              }
            ]
          },
          {
            "id": "2c1d9710-b3ef-48d2-a5f7-b068ceb55453",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4d9d6a36-ab79-4253-bd4b-2573bf20dabf",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "08748107-c380-4596-aa52-b39f383b3b34",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769535e5-406e-449e-bb84-78e4ee49f04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "17a36c59-1a3f-4942-a50c-6459a4178d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54907d0d-c8a6-43eb-a00e-79c45a6acd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15bce3e-b27d-4143-b66a-9b53f83c43a1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d4206ff-21e7-4ac3-9ba4-a5515399428b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac136828-4373-41bf-b526-50b558bb89d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "032a938d-b5e3-4c9b-a98d-ab851d3f1989"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dabd2bab-c9bc-4a67-b40c-c02e205b6bee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "866655ab-f84d-48ce-bb90-4b26dfdd243c"
                    }
                  }
                ]
              },
              {
                "id": "1dd2551d-9726-4d8b-84ab-8f16767ddfb3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f33a86dc-403d-4b99-becb-dd65ee59b9f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c32c39d3-18d0-4b41-9c12-d10c1fb1ae47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a434f72d-5766-4f0d-90da-ad09e9d9a514",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "14b355a6-f068-491d-b625-afd488714b52"
                    }
                  }
                ]
              },
              {
                "id": "d3e89f2e-4b76-4dc9-bc97-34d628ee67a6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d152fdfc-bf01-4088-9bb2-90c333e603fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7029dc53-c5bd-4bbb-aad7-d67141c1acd3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28651dc9-9a02-408c-b574-e990cb87fc63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ba1fbb71-752a-4657-b4e5-962ea17751b8"
                    }
                  }
                ]
              },
              {
                "id": "419d4ee5-4328-48bb-96c0-ee5ebee7a180",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35cfd66a-dda6-404c-bd1d-dc28218490db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2060a51-4313-4963-8830-b063944c9bdc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6162849a-e66c-4604-bbe1-aaad93d10c09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5416aaa0-b405-4c22-a71b-9b6e1329307c"
                    }
                  }
                ]
              },
              {
                "id": "18f6b618-9caa-4855-8bdf-89c3d97dcc3b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f3b2b0c-8c43-40fd-ba77-b683085800f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bfad7c7-b432-4817-b54a-f8d099e99ebd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58a85eff-a6d9-4cc5-a8e1-cc03bdb3b389",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "99037897-46d4-49da-8a48-81686bf527e8"
                    }
                  }
                ]
              },
              {
                "id": "6fc17346-d943-4b11-89b8-0d8ffecac4ac",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27174e62-c6c5-4f8d-bd0a-0db91b993c3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1705b0a0-8090-4133-b9cc-2b4a15aa1e3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39b40ae1-d35b-47c0-916e-2c4331e295ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "69779a65-dbe2-4fbe-b75f-c51e3c992891"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7c0bef83-61e6-4188-9396-d70803a4891c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a8f1446-f7d8-4617-9cbd-6c927cc3d324"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8caaa12b-59c0-49db-b876-d0b4f3619531",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40b87371-eba1-4fbc-838a-9fc0a8896cc0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7f8cd22-d309-4147-a6af-e110f1f604fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cd14a1e2-236f-4113-9d2f-68cbb86e99e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac97f510-f344-493c-8191-bb269b2b4c3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87544f88-6742-42b1-abfb-83407735292d"
            }
          }
        ]
      },
      {
        "id": "24ec2796-2987-46c5-b51d-0b64ab5bfe4d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5343317a-c2cf-4ec6-8d9b-872707c89db0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9942e6f-7ee2-404a-a706-2350ddf06682",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "790b2d9a-90dc-47f9-8b9a-d58011506d5e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a3cb56-b2b4-4da9-ae71-93a884d39da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373d8137-0c7a-4770-9100-edabbc1129e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2added3-18c9-469e-8db4-28b4d74c8cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc38d41a-d7d1-41b7-88d5-a74bc7126b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f3704a-ac9b-4e6e-9c63-fd4b182a4b48",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57405fb7-e7af-4a2d-b3d8-497cf6e891ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8d14ba-44fa-43ce-a56b-bd50a89552cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2f0c25-f81f-4ef9-bd31-5e8bf15ec9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6550da28-20fc-44d9-bdd8-aea89c7d0e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d225a9-61f2-487a-94ef-18daf799c5bf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003d0c96-045c-4018-8256-128d22e3cd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7fdef5-7674-4bd2-9790-cba195083854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2764ee-b2e6-417f-a903-2a9374efcdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bad234b8-120a-485e-88be-481a83fa765f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efba48de-8c88-4bb6-ae3a-792a7f7c24ee",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b0e7b3-37ac-47b8-b58c-96ff587be5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a0a53a-788d-452e-b7d9-870cf7a35189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5be097-d408-4b44-92a1-e709867f7d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8682acb-97fd-47ef-8ac1-6f715f3e8f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bec6756-884e-4408-8005-3c74828ba50c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b15290-8f23-473d-9649-ce627a742268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d320858f-bdc9-46b7-ae69-623c81cefdbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484ddb48-3f7f-4c44-9244-125e7b904228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96e550b6-7fa5-40ce-8a73-1b06c0d9cfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea69bcc1-26fd-4648-9935-2b0a2b923380",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71674c91-6a5c-4eed-8d66-3600db0753d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d06878d-e272-4ea7-b632-3d7365a0d56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c1ae94-badc-4522-a273-31730cabbb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e7ba0d-6815-4374-9200-120f08c1fd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dc1cf9-b863-4e00-8dd3-2838a3f1c17d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1794ef-4d8e-445d-a5f6-4013a7837838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4be083-3b43-4e39-bd55-a3684960dacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e902438d-a4a0-4b34-bd98-0f34079b8d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9da30d40-d399-41c4-9040-689f43640845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342a95af-fe93-46e0-8248-2a0eb91b5e82",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c92edc0-0a89-4e76-afe4-9b09021c697d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b12df4-39ca-4081-bd4b-6a681fcba5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c79ca8-328d-405e-8139-9b375f7a1695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d149b502-8929-402d-b9d9-b20f3451a745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a66194-f6cc-4bdd-bfe0-87a55bd8a0bc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6618e19-0198-4b4b-86fd-780a8d9d5411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660079e7-8b87-4010-8448-7aa92b9e21f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c2749a-7d0c-417b-b70c-ab562cf4dacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7aa0c44-17b8-487e-97bc-bf84adbe0b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa31da0-2d0f-4f0a-85e4-c380a3e59421",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194ba076-116f-4bcd-9373-5ae9295dc2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4b9a79-935e-4ae2-a19d-35bbb2c7ebfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed138856-0bf1-44c1-a511-a6aef5766782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb77dc3b-f614-4d97-b281-e37fa6768dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11ca116-2b5b-43c3-9b65-8213d054af1e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7045f0d8-b3f0-4fc3-bef9-200e24b9d3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6561a0fe-d50b-452e-9178-d085947acc15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a6c51a-8e86-43a6-92c1-0c5b5903560a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac026d8-b027-48c3-b7d5-2b434f3eb3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65099cd7-e5a2-4a0c-b7be-fc1d38eddcaa",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aace476b-ae3a-4015-932f-6035d02fb8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1c0be6-5757-4626-8e23-016062845375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3ec27e-7124-4ada-83a8-26a9a8584ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "518c28b7-6ed2-4b12-b591-3f0a704ef6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b165a0-9ec0-4144-92a8-5a1dd375d583",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62021cd4-643f-4350-92e7-cc4af127e9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9018028-817b-4e25-8bf6-39e3d2afe535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e59ca5-236c-45e5-be05-516226798d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd2c1c7-b065-41a1-8dba-3df25ca718e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d06f9b-927d-4342-b5c6-02a541bbe5ea",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8930aae-d53a-4728-aa6f-fe34daa88349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af74f79f-c265-47c2-82a6-2943fbe4fa94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14eb4536-9c46-4f95-87a2-0a78affc7712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "68c1ca7c-89e7-4289-9f9f-eef3ad2e0455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81d7b59-1952-4b50-9c2d-03eb48238acb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd293057-633e-4a65-9e2c-f272b8f91e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40374723-bd72-4d98-a2aa-8632c3005371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c35c013-3ba8-45eb-9997-e74055600728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5355460e-3f52-43e3-a58b-ecf61d99e276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6aeca8-cb3d-484c-ae91-4c4c8e0962ec",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e479c5-fe63-476d-9a7e-448fe9e8a465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319555e7-68fd-4c70-9022-416b39232b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a263ab-a9ad-4eaf-b292-ba3ad13f4971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1fa6b7-1194-4f2b-8c8b-1882a1b4e3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578956a1-b179-479c-8eb8-ccbf60a50242",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8035e41-4aee-4a13-a358-d2fd3b0db6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9215c8-8a43-4e47-95f3-5b9fa310ebf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2dc9641-e491-4b4b-b3f5-59f9b3d8fefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c24ce8b7-6706-40fe-a710-e4953efef247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5640c9e-238e-4618-8c5b-37eb0ebcc137",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e6abde-fcce-402f-aad2-bb2f8d375f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf465b9-8028-4e6a-8915-22317072bb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4441a7-e8dc-4910-b084-e4849ae862fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59d0b957-1bd6-45ca-a959-477f39f81d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ace5772-d167-4232-982f-1325941baedf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5776f36c-aa89-4207-a828-349b71a0ab48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac17fbff-2522-4b13-8f6f-db09b29cc925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca464d9-833c-42ea-9202-5634b4c59ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3b09c3-fdef-4cb3-bd89-205d2955bb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9422098-718b-4440-b0b4-9494ad4dbeaa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd07c30-4757-4fc5-8457-fcc133446a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66ea3eb-105f-4452-944d-dda064d11939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486c8dd1-cd1d-49f1-9ec4-afea8920d73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d36464ed-1130-44e2-81a8-6df8b4fab565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3077e2ff-07ce-4c84-b612-3ac43454afd9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17bde42-b26f-4079-a76c-4d94bc86dcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919dbc5d-ff64-4b22-8620-7c7e86acf265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489864b7-645d-4a2c-9f1a-02f99c9cbaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0475cd7e-1de2-4de2-bde2-d17b66a24095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dfdce9-c3ec-4fdc-a07b-b7ee596c6288",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b362f1-272f-4db7-bc0e-3d52c9e08c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f29f8a-21e7-4fbd-9ae6-5041bb5cbd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0747186-8e26-4bf7-83ac-b42998b5aeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "478a5b56-7226-4d9f-b1c6-9b033c6700a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f9090e-698f-4e55-be99-b2a0b03c5d10",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb53103-32ed-43d3-bd92-f26fd9647653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9cabd5-7aa3-4137-88bc-c06998525300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a53ac65-f0f7-48d6-859b-26d2162e00bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc1bb38-964a-4f1e-b187-7c70b41e642d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf8c4f0-9bf1-48e7-9959-89289710e137",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07d2d98-f95d-4d76-aede-9f32dd7c8b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b3091e-307f-41d4-999b-fff77e896099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bac497-8cb4-4046-a715-d8109fd693e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b60c7e0c-2581-43c8-80c1-77de9201895f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c9329e-879c-4ad9-b238-609b699734e4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0016448b-a7f2-44c2-b8e7-f6bfd1736a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc275057-dc66-4db7-b486-128178e859eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267cad6e-9509-4486-b294-0b664cf2d805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1e1912-3e8f-40e5-98be-843db50ec414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fb4a15-398b-4e6c-9aab-d9c8730187c0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5489bd61-8678-4b34-879d-18676ff1e255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02c27ef-4e7a-466b-8142-4b58709f7db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1473ed-8f17-4115-b0cd-45dc5cb6da5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b152bd4e-fdd8-4552-b999-8d3f5fb3321f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93a7628-854d-4592-b799-a467d9f4cc79",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f73f3b-3961-469f-b3de-b28079ce2179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d79dc22-1e04-4a11-863f-17bfce4284c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0dd68df-2cac-4268-bd2c-8b82e7ade8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b3cbf5-1976-4f25-a7dd-7a711779a1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84e85f2-c6db-4db6-b7b7-bcd223727f8d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9672ea45-94cd-4ce6-95ae-6bc6210dee35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ee1db5-9ce2-4a01-8911-e51c90e9b5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15d863f-4e82-40de-9016-87b78f9b1983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a134464a-6b7f-41ee-809c-dd0ab279bebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55a7b7a-5eaa-499d-9a98-763fd93f6c82",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c5547f-da5d-4d21-ba3a-691fcfe14b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c45719d-f252-4343-af89-346bfdf1a12d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aec6dd1-ce68-475d-aa2f-af59ad697760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55a93cc9-7a11-47c3-9893-ed98d9c6a340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4bc9b9-b14b-45c7-b982-887f3b9defe9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3c7fb7-0c5d-4daa-85a1-73a82eaae6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe33644-7745-40f5-ae8b-ca6284e143c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b350f69-f2c2-41ca-b831-4c2434eddd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6dbe52b-0f1f-400c-92dd-412f168468b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01ce2d9-548e-4fa7-9251-20ca8fb8afe7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf175de-494f-407d-a9d0-f4a107cc85d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1badac1e-be2f-439d-9501-4fef35dc70f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2113aba5-9b34-40fe-a694-8cd02982207d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f453f88-d82a-4570-89f8-b48a891d0e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb38b47a-a790-437d-b1fc-e07353229f5e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1357b0a3-7bea-404d-8d5c-49de126a5739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9fd04d-d17f-426b-97f3-fe31390ae9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b312897-0e34-4deb-a74f-7c187cf4211b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9086921-3b25-47e5-94e7-051f5005517c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "301bea0e-0adc-446f-9a4b-c93f08ed260b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7668eb0e-39b6-4500-bb2a-1ffc4cb70bd4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bda6ef-3320-40b7-9602-2b2c6b99bff7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "04851723-c2db-47cd-ac7f-b40e89f4a24b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a625ef-5250-41f5-8ed5-4a734adfd607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c30c569-ca37-489d-820c-93b4da357ea9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05a6dec7-98d5-4cf2-a997-c398f6893a08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61fbc64a-cd5e-4315-9253-fe10d1719b23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "904250e2-45d7-469e-b9b9-69b3f5d0a67a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7730bf3c-6fd4-4f93-9217-9b989fe655eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b140838c-f45d-4683-b116-7ae06fb78d57",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e642ce8-6fb9-4716-bb05-9281a85af131"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f26bee1-4f22-4d4f-a932-1ba86255728c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80133b27-f3fb-4a7c-b718-66c3082f83ed"
            }
          }
        ]
      },
      {
        "id": "97057c7a-b1ea-4496-adff-889e5e367bfd",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f2a0b737-f90f-4726-b4e7-dd0d3d140956",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a4a43ca-94be-4bcc-8f3e-716abf50175d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ce9d402-e46b-440f-9ce6-bfab8f87ec40",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c621e1-9e16-4b05-b798-97c435b85f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632eb093-82c9-43e2-9454-f0ccc8581c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980caaee-253b-4f61-88d1-e427e41f2b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc69243-9c00-4e86-92e8-9ff72b0cb124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18aef8e-721a-42a3-aad4-113f38903883",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42accf96-eda9-4260-818f-a456bf94f793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d6e6a8-aebb-440c-ada6-35dff068edd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e246e88-0d54-4e97-bf1f-4754b0572dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4e9a9e-022a-4a99-a157-29313c749712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1b632e-e335-468e-aa7a-900a3ba577fc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0bc738-9e2d-4e67-9e11-7bd3eee8ed11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ee2f2b-1a65-49c5-b1b7-6597836c1a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ffb623-49cc-466a-8ce0-24f4ebd35a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ad6114-78fb-41f2-aab2-226e3c93378a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a40eefd-df66-461b-9fd8-cd9d8bdab595",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91e4ecb-2006-4fc4-8af3-84907e6430e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4257d7e4-872a-4a44-a683-3227a11fa1d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc8034c-2b69-4cca-aa1c-1e749be8bb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87f6b44c-c2f7-4b00-ac51-14715c319a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef91bd85-533e-4441-9120-f94e57b90e02",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495ac7cd-b341-486b-815b-5534b151bd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0afc7b6-f3ec-4a56-9705-2e030925554c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49a2a0b-f6a0-4b18-8820-25543f3b732b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1127c796-0b42-44a6-be14-71287b9fb2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96056bf1-514b-498e-bcfb-881a80e8bccc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f179ec1-0b83-4680-acb3-c185e1c61b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd92490-6da9-4939-b808-ccf0dbaf6105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a122807-6c4c-4fde-bfe2-341b21f7d859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9206ea-1c91-4445-b409-f41cfb5fc69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5f90ed-0430-4c7b-8eb2-10033e7ac9e5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c272d7a7-3727-403d-bd31-10ce92ed5161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ad07e2-d75c-4b75-820d-1cd55e08f7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a009b4e2-ced7-4f80-9dd0-86dc0b8f38cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b4026c-9fbb-40a6-96d0-fcb3800bb485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3887df5d-6e0f-4937-9071-07779ef918dc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d25aa4-28bd-4ef2-b0f4-d42b425d65a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a51b78-de17-4787-b6b5-67724d1d2af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aefb6be-c73a-46c8-bbe2-33c4b489ae94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aae05317-25ff-4076-ad75-92adce2cd479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1965d4-a42c-4495-a76d-d7d0d143b5be",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6e84c3-65a5-410e-9769-3c694464869d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "511f5a98-a355-4fde-99c9-68e58f5d1e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab11acb-c54e-4168-8370-86d055355e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14b2af9c-5364-43c7-9594-cf8e2c816d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1431ff3f-e3fc-4ea6-9e25-33b7d388f566",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04320ab2-fb2c-4da7-b57f-3042498d1838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b234e4fa-a5fc-4fb6-97f3-a0b7822f95d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4cf9ae-e811-4221-84ef-33fe6769825a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09d63bc7-9c0f-4d07-bb56-b7ab9576ac53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637b9924-8573-432e-a760-c55fe319d88d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cd6eaa-8e40-4f5b-9f5c-84ea68892e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367cb4ec-cb3c-4bf9-9954-42ef1570d666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c373a4-9ec5-47e8-9433-2c0d86db71dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4cfece-192e-4d3e-9c71-6495fe4c7b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe38fe7-1726-4420-b492-66b585427b57",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6847777-5c73-4930-aec5-2ebb539e879a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d32942-cd56-4c46-86d2-4fb7c485dca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81a8d6f-348b-4893-9b02-a564f6268ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5419c5-50f7-4d32-ac1f-6395cceb75de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76d7900-7f23-4a97-ab36-1e75941dbf52",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63594e1c-6f04-44a9-b57d-b0c8b6485828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a77814-1547-44e1-8c8a-a3ed005400b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcaec738-1f88-48dc-a53a-3917aa7ed566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97007bbb-e883-4325-b495-f76cf83d7161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89048f33-1259-4284-983a-9cb6f6d76887",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86af5db8-f179-4069-b618-a0a6cd26ee47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea67de1-236a-430a-9ea4-932451467690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f710fad-0d46-4134-a835-1af829bf4c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb646bd-f58b-4f3f-af10-c9abfd6f4b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68dcc0e-96c6-4d8b-b85e-49655ad8f8d5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38641fb-3fcc-48c5-a7dc-e9df7d1f994f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c3c7c1-5ef2-41b3-9716-1ab857cc1ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00993a55-5217-48d0-a63c-fbadc0fbab51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2406625e-566c-4e6f-b623-e975a53f15be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045c5c2a-0bc7-4237-a342-aaa5d0c86d24",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9045fd19-3a77-4587-ba83-952c781f3500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c47a9cd-f06e-4cdd-b869-3d907e55957a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b807d950-f458-4ef5-bee3-f451c32edfe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "af668181-78eb-450b-b58a-f961961c966f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b42c7ab-d5c5-4c24-9ac1-9f2949e1199d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c630cc4-1277-4b25-8d34-1048a8dbe404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3a2041-c927-482f-856b-05ca2ae8cf58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110ee756-a776-434b-83ae-b3312fe47cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4d3ee4-6e55-4868-a9c6-a4c64eb2f81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bf3d0a-b10c-4b6c-9afa-b2ab4b0087bd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e91813-cb48-4b7a-8c6f-30764ccefb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d576694-aaae-462c-aa71-2a8e0bb9af41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733d3363-b2a7-4dab-aa78-8121639409c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8bd007d-cd90-401a-a9bb-b54581e08312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ff52ea-0079-4bb3-89d2-5cd6eca5e36d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac915826-11c3-4b2f-990a-9e1c9f19abf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b67fe25-54bc-4aea-ac2a-831cc7589041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2226922-494a-4c38-90d0-62700ebdaff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee10969d-6605-4d4f-ba1d-248ff776f970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb6200d-1ecd-41fe-8f52-733b80fba543",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9beb620-0133-4356-bb12-c7213082e6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad8c619-5206-4a0e-b886-7644c8c6d1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cb8ad9-ecfd-4f49-bffc-4b8640bdd9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2547f186-df41-42d3-b400-878335d01373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a675b9d-3f1f-4ede-90db-e78a73e8d740",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506fde95-42e6-4820-9897-590a17d9952e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09d3317-50d6-4d55-8f45-b2ca1070e6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb88d54-8cd9-45e0-8ba9-265a14bdfd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6189bd33-655c-4419-bfb5-7bb1c60583d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f02b18-d28a-4675-8394-d79bf63b69fa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe18ee63-0d3a-4a7a-831a-e7efb1bfcf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0416cc6-5c34-43f7-a240-601bf0ce2c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92ab691-4d4e-4eb4-933e-31b36e5f4853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d814a2be-59ac-409f-b482-5c4e8ceebd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae67b35-b401-4975-bed2-a76e22f22352",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d97429a-7208-4eda-bba1-4f912541c046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4009f9de-df68-4831-9b34-c87847ec11bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb09509-2514-4d23-a658-2da35946916f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5564ad7f-540e-42f9-a077-141b6bfd75d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb7117a-6ff0-4824-9dec-6cc3edd21542",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff9bb3e-5ba4-4f49-bd6f-fb6398e80e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30253baa-295f-4162-a1cb-bbe358966f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6c57ab-8f50-4bab-8264-4e4eb90da83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "814c2528-8b1f-4e82-a463-f4951a4df0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded1be8c-1338-4d1c-92f5-a2b4be382ad7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39f6505-7f39-4ce4-a168-09b87f4fb7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c404da0-20e2-4f60-a4e8-eb824b370d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6bdc3f0-8eef-4234-84de-1e47875bf14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a089197-04d9-4044-9c9c-2d077cd98a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf434ffe-f27c-484f-b74c-870685ae5be7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba4f829-c02b-4aa3-a154-f09416c7a8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f10ce7-56a6-4bc2-8c88-e56795e6dc58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e174a16-1bf0-410e-af6b-815270959052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "680b166f-4dbc-48d0-b721-c03f08a41b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eed1db3-81e0-4b44-8238-e56f88b60528",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6f24a3-55a1-4e28-a53f-8ae1d16b4c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c94caa-b5b8-45b5-a734-c896f152d3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6af4247-4a42-4e49-8ca9-61690fe16b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9963d7fb-312b-40de-b367-4862d08eb7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a93c795-1d52-4cda-88a0-d44ce8070723",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93abf219-47e1-4a56-9510-848ef8aa3f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfc5661-3296-423a-bd2f-83cc0cf3a8f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dac8a25-29df-4b98-9a80-567ba5a4cbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd4193a-7069-481a-9007-ef858539cc70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabb12de-7b89-451b-824f-1d164067c114",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ba6f4e-a62c-4a05-b53b-c3e473eb77af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95b0d6c-c7e1-4313-8752-5d4267305ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1593b9-3094-49dd-87e7-4e1a8912b22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb386b6d-91ce-4110-9b99-c24f9c7b3572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6954ac3-8858-4753-b2c5-6997e365bc1c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dce21e4-3f87-4e05-95c4-952720f69ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f88f195-8fbb-4b69-ade4-e106a023cab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4efea3-101a-4b2d-a64b-1e09060d73c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1222a28e-4910-44a5-92ca-6e5797fd571a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9c333b-ea69-4763-b123-699c36df2ddc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b8a11e-f947-4eae-818a-e54a5984492c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd74855-057a-4bc9-b2cf-36bb592be849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917ff7ac-00f6-4cd8-98e7-2cd6485100e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70b6a420-9114-4adf-a444-4747389545cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f0f5dc-0f28-4635-bbce-bc3f010300dd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8888f6f5-469e-4806-bc68-08c4108c0b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92613c6-092f-4666-b3b4-d5c82249a8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e491828-0939-4b80-9e50-a1b41fba43a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b3dc52-ae53-4f14-98ed-022859643b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dc03a9-9431-4171-a2ed-e51c01d5588b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba354794-0344-45cc-81f7-4b3edaf7b634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fbb7dc-e79e-4bb7-986a-b03299ba2827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef4454c-74c8-40f8-8279-7d6bceed5bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82cf114d-3c1a-4528-a634-6cb281df5bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8549713-d9a8-4c31-9024-8f37aa7f7713",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400a5c11-ca74-4228-93a6-568ab4a0f903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0ce19f-ffd7-44be-9983-d87a4568b4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540c7920-48a0-4782-bfbe-f43d09575ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "992c1cf9-adb0-4bcc-9fea-814cdd10c838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee911293-aa7c-4881-b5e5-bf5ae0fc5b3c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dad4ce6-9b00-4d4e-b76e-afd2811e02bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f522a2fd-570c-4c81-964b-53a616b701e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e07e67-bb17-47f5-829e-adc3f6650be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6c4e9b-36b2-464f-82ef-91735ddebae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c806a70c-10fa-4330-8218-267a86065ba0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb6bdad-ca85-42b2-8e09-475cf5c8ef1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c06f8c-0f05-4313-acd1-4aa9a0332ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf821c1-cfc0-492c-8066-1f80100dc962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84e979b5-8d5d-4967-b413-8b6e79e76f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a354909-42cb-422b-8b62-b8b595be6335",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99286806-102b-4bcf-975e-f27c2bb2c12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddfb28f1-2aa1-478a-96a5-14087418c87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5ad15c-d5db-447a-a2fc-a3698c8cc82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63275651-595e-494a-af69-d903c7589a78"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7db1819f-3070-4591-bcd7-a257feda9f8f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce0b1b27-b523-4fab-ac66-3d9cda01af19",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2454290c-e35e-4d60-b899-d6e4ce811637",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fae50ba5-e76a-4c31-b13b-7a71f4541061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b857faa-6db2-45b9-9c46-d4f13a412a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51b043e8-4568-4e2e-963a-007dd6fc4c46"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e048294f-abb3-431c-a787-f2976f8a92c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51355098-7b68-44a0-949d-42627aebe923"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25db610c-bc1b-42ee-8e1b-eb7e2cfb5814",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce008f63-e822-4619-8738-72a22c51db31"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa8354b9-9294-4330-8c80-b2a0c00699fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "90b0ec96-a05b-4b0d-a9c7-e237ef683c89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b03ac3da-99c7-4205-a39f-2a2bb12f233d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d64db9b9-27a4-4123-bd63-c16684499294"
            }
          }
        ]
      },
      {
        "id": "636ecef5-5dd8-4af5-9b05-eab733688129",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2538264c-3b57-48ef-8adf-ee61da4a765f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59c24677-035d-4e1d-bc84-2150c69836ea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c091b869-19d7-4feb-9e6b-8b0478e055e1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709feb05-a0b3-401d-8d76-4d896c00fd0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a017b12-abd8-44dd-abd5-b96dd22573ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffb1a05-4714-4b5f-a527-93fcd03476f3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abff5998-2011-466f-b4df-abf5ba606918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2562db2b-f9c6-488a-88da-1da1a6a7c70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afebef0-9711-43a3-8ea1-f32609b546fd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f475b3a7-f6da-4203-927f-2fc66e84c21b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2395e9bc-95de-46cd-9f2b-00bca7905fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce6508a-eca7-4c37-aa75-de839b201a8e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b337b1-9312-4d7c-a58b-5e0576587722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840c59bc-ad7c-449a-a040-c37affee60ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ff12bc-7f92-446b-a672-922be943897e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414ce3b6-fe11-40e9-aee3-772273f7576a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a078a0-eaad-4082-9a45-4869effa8f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefed262-373f-4b7e-8e17-357241436e4a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8aab68-6bd6-4639-b366-369ff904d5a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473b11a2-d3c4-43c8-8838-05fa8db6e828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9932faa8-86b1-4e7e-a4cc-f59357a489a2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc438d1d-8f13-4dc2-a8fd-0b92e5b0e0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe3e069-dcfd-42b7-9f76-8130f0ba76cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd36913a-0310-4c34-9bd9-a664244b8456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8c8250-aa05-448d-aac1-a15a74cd0acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ba72f8-52b0-4215-a507-c7db50cfaf9f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef97e420-6541-4d79-b330-4e4a3ca3c35a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe4277ba-cb5c-4500-b660-b10060d19d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a888c2ca-5958-4325-9b38-08a0a1c7d317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d418a2-2362-4483-b580-e0a7a48e4854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2771ff-294c-4d7c-9e1f-0b66cc6dc30d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2d2dc6-a573-483a-b89e-ccb77f617bba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ac68bcf-b08b-495a-b907-5699cde5a3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378bffeb-0b88-4b98-bb3f-4df295a9be14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9b81c5-e479-41eb-8fb4-bba2e5885efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7041d8-0086-4913-9232-33920600d191",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56175c4f-b49a-4f23-82fa-34a01407340d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6b68af-708f-4de3-8e41-c19db48f1ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb7ebfd-11f8-405a-b6e8-f7e22c70def9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe84684-332f-456c-a0f7-9a85e4426b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d10623f-0411-44a0-aa85-ce8fef9eea73",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049ca8ad-2dda-4cfb-8d9b-832f7fea2c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129ddde9-7015-4c37-bd94-0de3cb9828ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8230162b-7ed7-43fc-9335-c985e86f1159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1249be8a-4153-480d-8d61-e52f9d06b492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8981756d-05f6-4571-a1cb-b1f6b731f69d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a868bd85-2cb5-413c-bf7b-1b4d2978c519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde94cac-56d9-4ee3-a60f-570852f1cd42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4b0be2-cda9-4977-9ea4-91fbafeab2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127c05c9-79ed-46a1-ae0a-d4a8d5929bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea32c46-7f20-4b8a-9242-3e391aa233d6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addde348-8280-4315-9aaa-ee9fa0b9f26d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ee7f688-954f-45fe-906a-9cead9f4d575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6617ac5-1181-4055-928e-6cea92566bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52876deb-f9a9-4ab1-9cd6-7db8c53bf9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bfc723-6a4e-496a-82bf-7b927522dcd1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5880738e-3fea-4612-9b64-85eb18b7cfeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32aa39fc-71b4-4492-a83b-cbf5a34a9145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b217da0-ae4b-4b61-b7bb-da7b5fa274fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af22a95a-3d24-4dc1-b538-d8ba8ee28c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90aa06d5-0805-42a7-b7de-fe61bd084d2a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10857a65-1dd6-4ddd-8e59-00cd28901617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7798a919-57f5-4676-853d-daa06a54da0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4ed3ea-9b66-4ca6-8b42-fd2c813987f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae7c47a-f377-4650-b2ec-9116a16c5764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c647603-1b3f-4e8b-8cc6-e1dd11703604",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2007741-bef3-4c15-bcb0-5b13812aeed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78b09dc9-d0c2-423e-bab4-ad7651960119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f79fd7b-c060-4660-ad5a-28fc85bc5b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2429c41a-51ba-4e4d-b334-85103d63ae6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daad5c78-f12b-4943-800a-ed6798a75e1f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd28ebcc-0e3e-41b5-9f00-7329182f74b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02fe2e66-2a30-4a94-b2b2-577d89ad14d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ede845-7f8b-4554-8412-710d3decf2df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eefb26c-413d-4152-9da3-f75b442afd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb522ef7-25bd-42ae-9cfb-4530c292bd89",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bddf1c-c6c7-4f88-be3e-c88e669650ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90ad891-c32c-4847-b1dd-da381f249aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a95d76-aa46-49fb-af88-eaf3e06df5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302a3c4c-523f-4135-bfd3-8989ffa41fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c413fb4-5247-407f-92c3-233007d7419b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240e0717-b173-468a-88c1-83c8f415f1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c549a8d-d2d0-4c02-937c-a91bb2fbb15d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41f70e7-a6c0-4aaa-93f9-975a407cbb88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a32fe05-8a47-4fe8-8b07-925676423232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c3eca2-4da0-48f5-b9a1-8af891858877",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822282e2-edb3-4b2c-8fa2-86477c2473f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32790f97-59cb-4a4c-a2f2-7f75f1df2247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b6bf55-a25c-411d-8943-4165c2790430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533f1190-6991-449b-821f-6902e2d8f8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26cf7ac-bc70-45e1-8cb4-eb2151dc4ca6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93ed885-68d5-4c11-873c-be68aaf7ef72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c27aa26-b671-4ea9-b5de-bd7f81b0343b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f295a0-89d5-48d5-bea1-d86945418a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6922a8e-e177-4294-a4a7-b63697758f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8819be3-a4e3-415f-9851-ce6cc9e46ba2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b835f8-cd2d-470a-8abe-098112579446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb59a4e-7788-4059-b849-8c3e514b65de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85fdf3b-bab9-4745-8dfa-2daefc27920b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae82c5d-86e1-4aae-a3a7-3214cec818e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c41732-6f6d-4203-98c9-30e0f7c23649",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ec5a7e-a280-4d9a-88d7-dfdde311d3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70de2056-2ba7-462c-b6da-dd796589f8a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1deab1-b149-413c-9bca-5f3713b3399f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a182fa61-0158-4971-bb43-8122b49c4a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce5453b-0bac-4517-b0c6-03c1c434d0eb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1870d8-e96a-47ce-ac5b-d24bf5204d8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ac0e2ca-ed07-4342-8291-22e0ea12d5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62623e22-f99f-4c8b-b67e-b69327090efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fbd9c83-8db4-4b7e-a1e2-303797b41780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c92052-f58f-44f0-8044-fd4ec73bf09c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48399444-e39f-476f-a6a8-8e74f5b153cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "108c73a4-c2eb-4d96-ba52-a501a7583575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e6466e-6d58-4a58-a88f-8607b9832d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787cce82-99b8-470c-b1ee-b186397a2527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcf79c3-bcea-4197-9978-bf377150e1fd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46378978-2dba-49ff-a581-c1f23d5e90ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b8ae0f3-bc7b-423e-ab15-65ab10e92d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c43fc8a-bf0c-48e7-a7fd-ce3f67136d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3af675-b6f7-4e85-8899-cc9c80ef81c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb16391-22d8-4c1e-9701-da5dcb7e0ecb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a73829-9df9-4492-8f8d-af2c438a7d4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd4a5051-7907-4b4a-921e-f336ba37da07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08629cda-7ce6-40bd-bd28-8922b508091a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c68d9faa-73a9-45a5-9958-82255804f971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50009050-8f42-4707-bb32-edb2a8122672",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892ccfed-17c5-48c6-a7ed-d527d7be6ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734e011c-14a0-4558-8b23-a417cf061b8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a684f832-3897-4133-8fb0-91edc09b4d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a725ce8-0d27-4f0b-b427-614257f9f667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ecb2b5-7244-4008-9d06-cc67eeb27b2d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aceeb16-5e66-438c-820e-2737f13207bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c775ca0b-3ad6-4901-b9cf-369b7efdaeff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb1657d-f541-4eb3-a07e-1fd4eb649299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42818c7-d23e-40e6-ab83-b5b239a36ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64301fa-8767-4a0d-8b68-2b24e2de6bbb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252537ea-9d01-4f5b-aae8-ab0023c13e6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5529eb42-1b50-46fb-a1f5-d0a909ef1ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac705dd-c0db-4005-8373-b33ea9002db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ada405a-6e95-4d07-80c8-be020f3a1bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b753f4b-1a92-4938-8ca8-d9d38b9509cf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6145b53-5e4d-471d-8c4f-264e694192b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "301c459a-2899-4a55-9e1a-ab91d68be238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a82c27e-4214-42e6-ba5c-350ad0b5a184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9d7e65-6fab-4209-89e3-b8cfff42b944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61333ee4-9794-43f4-8241-691e2f6b3d72",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6c1685-b31e-4d58-8984-c86c87a67e1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d97e892-66f8-46df-ad8b-e2b1b55d8919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7043dd59-8a8d-4c71-b4be-32d012ed2623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cd1ab0-9b90-4fef-a8c3-51a01fc241fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b755c6-5f84-4123-96df-e031143eff2e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfdf71e-85bf-4169-aee2-0d7d683093ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a6ff0b8-656d-469e-a53c-c5a44e706ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8aa214-37cc-44fb-8705-b5f3cfaf1163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef506e0b-5890-4fec-aa59-ee9cf67fbe72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4702cdb6-c816-4c09-9c51-29ce364f32ee",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d91a1ab-cc14-4d3d-9d0d-3fc216d99352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab0aa609-82da-4852-9814-751d6f2fb177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a378ccd-fc20-42fd-ab86-e805e1bad6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be66eed1-ef2f-410e-bfa5-cea7975e692e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6c1399-8011-40ac-852b-e6cb61bbbb43",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5828d27e-602e-4c7e-a72e-42472b962a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9edf1c7-e5d4-48b7-bb22-1dfeaea04a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b53266a-2b3f-4180-9783-373dd3773d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47121ef6-9f53-42c5-8cbb-bf60e420eae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e35add-1600-44ca-abba-4a6def707653",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4288bd67-d655-4f7e-be95-1b9a3ea533df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119fe612-fa40-4afd-a769-02aec57a9702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1462c297-e96d-47e1-9a0a-79689003d83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7bbd1b-5d8c-4d71-9f09-fc7a2a9d75d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef8bfbc-8d7b-4211-ac2c-ed2e559ba4ab",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c9e6df-417a-47cd-b73f-0b03ac749e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bdf9e4-648a-464a-afc4-6d0ed80cd622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c4a828-94cf-4e10-ab76-c187ddd747a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a700253c-58bd-4879-aa87-0b0ef53a0b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b2dcd8-61be-4d8f-abfd-d8d46624076b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1e8086-0dfd-48da-9f7a-aa2b556925ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07359aac-925c-4d28-99c1-2ac27be39479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208d585f-a15b-40ce-bad4-bc0a66fefe2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d43907-daef-48e9-aa44-45b4a6b27a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c952d49-9fbc-431a-9aa8-bb2ab4a1869d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab12d3c-569e-4be0-b7c3-98158fa0d678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07b9893-e8cb-4701-be45-b68b448cd677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f074bcc-bae0-43d6-91f4-eaf602ccd874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a06dd60-0ba4-467a-a6d1-d0487ce8d96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73b8c99-5bf8-4da0-ba8f-c2e5f5b88bf4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deef40eb-8a65-4d71-a7ea-7f481bc15f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec55ef3-d863-4d9d-bcfa-d5128c66723c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2476e525-77d9-493e-8feb-365bf37e62eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e464e794-0038-4c98-9157-f77e824099c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7b41c9-bb9d-4432-b532-8160751adbc6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59cdf33-3b5e-4be8-8d82-7e624d55ae84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95855d7d-7ef8-4530-b5f9-f3d3c71a258f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b111d8d5-54d2-456a-b525-7117d42fb414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484ff210-f35c-4683-8106-7d2476ba52b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70e52c5-5706-4917-aff7-e725f7098719",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43604b7b-f2b7-42ed-bd4b-ecb5ef618a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51c9cc0-2e1e-429e-a770-fb717e97fb95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6d8de2-eae2-4693-b1f8-ae2c05f84208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f7b7d6-e5aa-409c-8e27-9769ad233b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba044449-984d-4afe-8ada-fa1e106df57a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0780be08-93d6-4826-b8e2-6f1805d1b794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f177cc27-8dfc-4ec2-8ea4-f7f90e10911e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e229d6-8de8-4ec1-8485-3cbaf9b86d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23d8a44-c749-48cb-975f-bf542973f6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586a544a-522b-411b-a410-0ffeafe0e2c0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c72240b-4bce-4489-ac39-e53744142e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040fa1f0-d3de-4272-ab7b-d7686574f704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e3c89a-9d2d-4216-ab14-940c26566b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3193928-3117-4a9b-a78d-e3bd7666d38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2a4c8d-2fda-431c-a211-ee7251c6425b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bba21b8-40d7-4cdd-8fec-9c667b21c436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3589ed-1f2b-4811-a8ed-981440307d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9073305-9fde-4bb3-96f3-c89194a82086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7ac4c3-51fb-44ca-b2e5-ea0805c70fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eaed4e3-c8ba-4c2b-b044-3271dbbb09df",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f188ec8-927a-471b-ace7-46fe68a9221f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a29549f-9e9c-4231-8228-0263fd0eb075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a46928-d379-499c-8b21-b9e44335380b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d345ff05-9451-4164-9b5d-03f37552c4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d2b24d-a395-4177-8f70-9427f29311e2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280d7d19-a7cf-454a-b474-2e2da09c54f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7707c55-4197-4c95-bc74-7d0b304bb2e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa13616-d147-4ddf-8bd2-b17ab72b0f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccfc6c6-cbf7-48e5-8900-dacad250e144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53c00f6-a659-4d19-8869-4eb6c555e93e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f808222-ac5f-45c1-a129-bf9686c37489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ecf2b0-2b98-4446-9308-41f2a4836a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525c4b50-0d8b-4120-b44e-ab7dc8d7a667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1992c6b-9b90-48b8-9855-8a62e4877c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d97701e-8dcb-48e3-a46d-2bd4c2e7179f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3145bd-7378-4459-a106-13f20cc38dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb71b82-8c49-48bf-8206-c690d57f731a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba52564-d461-4da1-a28b-863994f6b6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "450f38eb-4569-453d-a8a0-17257d4078e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73e2ee1-6150-49f0-a92f-20e331f2aec8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af167a8-77b9-4373-874c-facd7da62540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5cd598f-5c0c-4e3d-b791-a8ca1757b331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d37396f-712e-49f2-b397-041661f0adce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c11920-0383-42d3-91fd-8d4d304ce01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174bfc94-4a64-40e8-9765-ad13cd1e4883",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253a50af-1e5f-479a-9fca-0bae6e439ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c1810c-099d-49fb-a823-cf37ef609f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475d6bd0-6de7-4cae-855f-cba9ecf96af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66d7a11-3dff-482e-b3f2-332ca9543400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b79369a-33ec-4c8e-a933-4abb3f3d161c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c52edf2-e8ba-4053-9730-a88cf617a57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aabcf3fc-39f8-448b-ab8f-a13be2852757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d21c27-1b1e-404a-9be6-41c13f7c5e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37f1902-2688-490a-a729-7bf72b6fab32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636de42e-9c52-4d59-b66c-a50956170af3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4043c8ee-867a-4da4-8585-f24e1fa6832d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281987ff-d55d-4d1f-9c98-206841992118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b5e0ff-2506-406d-b094-d0230bfe106f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "917af927-909c-4b15-b3cd-25434a10f8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46964f12-8a56-4739-b4d6-70587f0e7328",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffa9916-9326-4097-a358-9c03e4b0b1a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4019b9-8264-4991-a951-37e3d0c92241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fb70b2-b8f8-43e0-b9ee-d242161d4adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e254a5b-db96-48e9-a38a-0ef48f2013c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc375e76-5b85-4d06-b894-bfaf5e7a4389",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddc31d8-1813-4a48-b8e4-de23b468070c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101fe674-6b8e-46f4-b8a3-5968f51eb751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d207e24-74c9-4b26-be19-1be8b7c29b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463d782b-9a83-48d6-afcc-ed933ee58ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ff4749-b3a2-4ae5-959e-f73dbb4cec48",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f34b0dc-7a8d-444d-8d71-d8b7ecadce18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b3b42c-ffed-4b41-82e0-dc7c270341d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9d1561-dc55-4629-b6a5-4afe33bc7d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72823b0-b023-4ea5-ad27-94036c14ded9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5182bff7-ef83-4889-8c99-f1196ba973af",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b12b12d-8052-492f-a811-d04f045b7eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ceb020-802d-4f2d-ace4-3f76024be9c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc164df-0ae6-4c26-8485-8a76f3376aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6762ac08-34d4-4e5b-8c2c-011c2550a807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcd038a-9bb0-4e7d-9eb1-e69b84d0c623",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c101a775-0a2f-4016-92ab-a74452bc648a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2df353-3ea7-423a-90b8-e4354f186911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af673f91-0745-43bb-b6f0-1a3b2c9683ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83dc8c9f-a5c6-43e9-886e-8df459729cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c0dfe4-f81b-43a9-ac0d-eeb27ea254d9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f17360b-2f8b-416c-9936-a6e2e281bb31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a57a80-3af6-4927-b14e-646a113c5fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403cc471-cb4d-4fa3-a48e-892193e0f0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfa5a13-aba5-40da-a6b0-45397af3b6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b65972-2831-469d-9491-9c82b500683c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ec609a-acf4-4c18-a2fc-0083ff527caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c9a5c5-9452-4c6b-9a30-4aa0ec403a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d76db63-6068-4ebe-9317-a388ed327a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e077902f-da3c-4848-9730-5536f5a79c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e701d9b-7b9f-4dcd-b64b-f173a295cc70",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf92621-e2d2-47a5-9f19-4962b9728b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada57d19-5fbd-487a-a3a5-97ecd7782015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebf1feb-19a2-43fb-add4-8c88880ffa48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b0ab5a-3271-41cd-9176-39eb2216808a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca138c32-f314-49fd-8d71-b28b65d84436",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0747965f-0721-4100-8f10-66f9ed18abcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd708662-47dd-4e01-9b3c-292a9d0923c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ed507f-e035-4646-a132-ba676f0e6e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b37ece-e1fa-493a-86fd-973be8b64e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be018a51-e073-4ab7-afad-7c8464b0e3f5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708249b2-e499-42c1-85a3-e96ccad3771c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8b5fc1-e979-4732-9e7d-45d47f6591ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0023753d-3258-4e3f-aeb6-a0a5941f4d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298e745d-0716-4fd6-bb67-718a7dbd7c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123f17fd-f361-4ac6-9bec-e3c6b4df7c55",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa883905-490b-4698-8a93-e6e694dcdd96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c21a2aa-fae7-4082-add2-3159467de817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdb6339-1b0b-4f20-bbc3-3c3a867dad7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe1ce6a-36b8-4e3b-ab96-e83591d1989b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55685eb-e2ab-44a2-bd72-516b5827d74f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1343d2-3c39-420a-a552-a7a55865abac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f3871e9-9e2c-4cfd-b310-3845c3ca799d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae2dc9a-327c-408b-a3f2-a0b2aad5cd4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34322c80-07f0-41de-a7db-7b399797ca7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a353c9e7-0f17-4de7-88df-1526561afe3d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362ff9a8-0e57-4a33-ae91-7c1fd1b04460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28abec98-58a6-4a12-a3ba-7d7edb504ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587c58d7-6f77-4087-8340-c799d3eec33b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b509801-9872-44dc-b622-10f5eeab286a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118d2d56-b175-4b1a-8d9d-a75f961707d9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00adbba-6f3c-4d04-8082-f1454c21e4eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4f54522-b413-43f5-8345-c30f65fd4bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a60064-7fe5-4e1a-8197-2bd4a5306bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7650f41-2806-4935-89f5-1bb86f32320d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7a2d78-bffe-46ed-837e-4a5e9b8bf8c7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b87bf7-8e44-435b-98af-71e84d6eaa07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "478b280a-a221-4be6-a4e1-e37f0b9d1e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ecfdf4-6930-4384-881d-fee9715c7f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266eea8e-e6be-4f0b-b5a5-440d4ae59ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c6e1b7-cf78-430b-a47b-1110fa5237bb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4039941a-7355-4496-8958-4249de638db8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a02f0d61-80e7-4f19-8dbf-062d293916eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c77f9a3-64ac-461f-9103-77b79a5135e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c80025e-ab30-4807-b6ed-ae87b7c1da49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4a1700-01ae-4ceb-ac1e-1117d11ef09d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5fc804-36ed-488a-9001-aa0824b74772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8b5c4da-66be-4874-9c90-ec29ae4ddf51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cd6fcd-635d-484d-a384-9e516b99798b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf49856-ebec-4073-bb9c-901e6a433912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88362a0e-2186-4483-8834-50dee7559b4f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed41d423-7f55-4157-8c20-50637350b7c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31b73cb0-ed47-423c-8d51-d98706489673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707be904-4b3e-4734-b53f-7b5348b22066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83a6c6c-7f24-4cf8-af9c-ab9032a99b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc9c376-189e-46d8-8bb1-85bc9a2f7a67",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979d7999-c004-46b2-bce9-cf390011f9c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "132a4207-8b24-4d15-9ca3-4a1a33e799ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6feeca8-35d0-4b20-9a31-56fda9273ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50124efe-1f58-4bb4-83bd-7f9203367285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e080ed6-d0b7-40e8-85ab-975998efaa36",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0bd29d-1e7c-4801-ae9c-93101a941a0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e935448e-bc9f-4be9-a8b1-cf37acb4b54d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b449094e-b559-4bca-a970-b10f97aeee87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7002bf-1358-4055-8fb8-1d3d67642ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1512111c-9b24-4005-a2dc-7f84b504ddc9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f740a80-3f0b-4790-8b6f-1da73d1d8e41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6a2fda0-881c-43d2-ae61-03394ffb93be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "691faf11-211d-43d1-a705-ec90f3389841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53474ab-58f1-4867-87dc-705357819c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d65e89-95f1-47ea-b57c-01a529e7a9eb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a549198b-303f-427b-a6e9-f22a9756a757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ad7b9f4-a47f-4426-83d8-06c5822cddf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f36eeb-e9d0-4c81-a67c-a92e770ed64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6242053-0c70-404c-9709-18aff6b73718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ae9b92-85a9-4d14-b21c-b4651902cc8e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e25b2f4-90dc-4753-bfa5-d927a8151e6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dc373a2-b8b7-45f8-ac38-76e657b8ff0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcd78b3-6f80-4662-8b10-ead3c84626c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f054ed-2063-4992-9a12-b956c8ba39da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8c1ac6-fc26-44fc-98d1-27315f27af7b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420817e1-657c-4c48-855a-6cbb6db7b11f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5219e47-a393-4be0-874d-ce79b6069c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23c75d9-2a77-4b2e-a6b6-7ec1c759cd1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ee5dd1-12df-4f19-851c-b1ca3ba2421d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755a0313-efd8-44dc-a8e5-56a92e323ff1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486dc4ad-ed46-4b12-b85e-5368062eda06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f124c2b-fe1b-42b7-abaf-b0b6b732663c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4702bca-b645-4879-b6e4-3f1f524c20be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfadc6dc-6fc3-43ab-a25a-f12e4978c959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d839413-fcef-4dab-8486-a11c6632f723",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6cbdee-0f2b-4ee6-b779-b0ea76041d53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f7003e2-a63c-485f-93c6-ca95f939e24c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad125c18-d868-4041-845d-ceb37e371d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e3da3a-71cb-4164-9937-bed23a369d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1422c2cf-916d-4862-8cfb-5d4560ca472b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa0edd8-08b7-470c-8723-9570c275b3eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "047aff5c-1ac9-41af-a7ae-42d96cbadef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35e2bdd-8f8f-4521-b475-e226988c92fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd449eb-5aa6-4992-aec1-f3cca71cdf7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e5d2be-2394-41b3-8bf1-7e83f5dc7a14",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7e7224-4917-45a6-89c4-455de58fca94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a13520d-17bc-4e17-880a-2c054360355c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54097d7-9a8a-4821-b69a-e9b29950f181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b26715a-9167-4f98-a43b-d0916fa6a202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fb52cf-e89c-40d7-a9ce-d89a763b8543",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebac9624-cede-4325-8270-76cac858a1c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e14ce03-7240-40b8-8134-0c587e30f7fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d91d1a-fd35-41f4-813f-6b341ef2c44a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee06c16-750d-42c7-918b-fac79b559f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e052fef6-1e7b-4dbd-934f-a87cf4d7f948",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4f8c56-4ea3-4401-a4cf-3265a7295379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00b21d73-7688-4000-bc91-f7b8ffbf0dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7795a0be-78c7-4070-91bb-f477224bc4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a571800c-c144-4228-be89-efa327966793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b85cb52-55d2-4d73-b77f-402047ef7405",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391a28a2-2386-468a-b3c1-d6cf5cba100d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "195bcd9c-87b2-447b-b082-9c91becc571b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ad53ce-760e-45e8-80d0-1860afd6b581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7283bc13-0bf7-415a-829d-931f3de522d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d60665-493c-43aa-a3cb-f30f75747db0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbe7c40-322b-4dfc-aae0-0e0e0855f4fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac7f1b2a-48d2-400b-ac79-59d10646f229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847afb5e-dce8-405a-bd7f-a8926bb76ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a032a6-239b-4b9c-a13d-330911016cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134c91f5-af33-4569-892d-f9bd7debdf93",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c74e1c4-f967-432b-8f2a-5a7d5c615e8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b8e33f7-e8f1-4188-ae47-6fbfb6eecd95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c26c0d7-9e19-4eda-8da3-e3b1aac583ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203c5121-130a-4737-be37-737a95cbbc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa6085d-edfc-42fa-a26f-119db5f8ef23",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0fb00e-8a4b-4895-befc-deefa6c4922a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24437217-231c-4fe0-8760-801b65c6322a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7affba0-8d87-4c13-98df-f859bc2f11b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0b801b-14af-4d77-bb45-787764322260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30c4d0d-bb5f-4697-bd93-1bc34714eb82",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70311b09-5c33-43f5-9846-12913296cdf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "002f1995-6f23-4084-828b-e245a5d5b89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4688b44-1768-4343-9cd4-0da8426a0305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f47a97-d5ea-44cb-ac7c-e9c13ecab2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd747843-04aa-4d76-8ff8-a0e24b4e3b10",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa881a9-1fae-47b9-81aa-ded20554a21f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e140d279-c7c5-422e-841e-8b5ae9790812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528ba577-943f-4522-be12-fdc22532f580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9faed1-0aff-4340-9d1e-5e0ad38c5707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6ca4f2-36c8-44fe-b742-4fd3100c5f75",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1135743a-c852-4bbd-a371-1fc01aedd695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad6da5bb-cee6-4019-8d9e-bb6c9fff4ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd18cbe-e088-4b3a-92dc-b2f0a42ed7f8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13b6dd0-e74b-472a-9a28-ca7e8c8f492c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f0fa62-7109-4d31-8c8d-a788805843ea",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9b6200-0601-49df-b501-bfad2e81d1ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85ad2540-a0ac-440c-87ec-e2458d7c5960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24afc60-2acd-4d6b-abce-4ae398363560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6708d7b1-d27a-48b7-9bab-9e8772290cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8001a34-2733-4c30-9ef6-e421f63199ce",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce3b3f7-ae92-4e20-a148-a29eb64a55cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5613d33-4370-41e5-b59d-10951641448e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4131f34e-d0eb-409e-ae24-00202ecab16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ccdc71-a352-4217-b133-acd482daccda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e909b24b-44e5-4422-92b0-f7dd4fb22c1e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96eb6bf3-fa8c-47db-bb53-e1dcc9f6f5db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7602744-4927-46a0-b541-ed336ed6d87b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4f4bce-3a29-464a-adb9-c9096abb1cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f51a42-1b39-4be4-bea2-1636e01bf8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3223dc62-ad35-4c1a-b4a3-ea201ccd98f9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1caf5f-4845-48e3-b2db-e2db7d14ee64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2af37c4b-7616-4b67-b18d-bb5425f4d3f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26138e90-2558-4982-b98d-00c8ad7322f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3ef871-9c7f-418e-8104-3858697fbb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37056e3-acd3-477a-ad6b-f74b74557ea9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8dc28f-125e-4fa6-b8a7-151a0422f0be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55d1ed2e-6753-470c-a881-a60b722be26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9362752e-73b7-43e9-9f5e-d8803e54ea5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69b024f-0755-4076-a600-967440327615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bdf1c8-67aa-4069-9ba1-a599b5442375",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618499a9-37e9-49e2-8344-e64e3891a7fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cfd87e5-a77d-4e2a-8ee5-25304f53138c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bc12b9-cd70-4ff5-93b3-9d2ce8571f9a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0ae0da-f945-4461-b431-661d65e7edef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa0a661-4232-413c-a106-ee86a62d5011",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba99403-1727-4d33-a231-e33cfbcb216b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7372cafe-4de5-4e9d-bb58-a5cb279c3c52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355425a6-deec-4264-9689-e0ceeb7ab16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818a6697-0bab-46da-b809-af2e46cbb645"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd72e5d9-5adb-4aff-b66b-774b5412a18d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6cf8f8c-b75b-4b0c-8979-0f68ef35a24e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07a045c1-ea05-4d13-8ec7-1c9d58310661",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eadcdc95-93b5-481a-9a06-af83bb773fd5"
                    }
                  }
                ]
              },
              {
                "id": "524b286f-2d8c-416c-894f-4cff351e48c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e39e384f-bb15-4d26-9dde-6752f7c1ebca",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55ae187-f8ae-4370-8751-5e819f227f20",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "81b9e53b-57a8-478c-80dd-05b00fa46d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "256ed0cb-d0df-400c-a9d1-eea887441781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e9f48b4-88be-405a-b29c-d7dc32c748b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0c5cf8d-4701-495a-9321-9d4de965c71a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d0a9587-67e2-40ee-a7a1-2505a7bdf5e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3f466d5-43fd-4a3b-a25c-7c596695b0d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd4f1f72-9c4c-4575-8148-0cd415bb44b1"
                    }
                  }
                ]
              },
              {
                "id": "e2c610ee-b72c-4898-9166-8ceedc896046",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f675ffbf-d99d-4014-bd89-381b75b770fa",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9add25-1621-44e3-b893-8979b4ce96ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "06bdb752-e168-479a-a695-574758caa7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee50a32d-2931-4181-9082-9ff9aa11bd05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f33ded-902c-40b3-99dc-db8550937029"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aa543bfc-b955-4036-a2c6-b074c097a927",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a4370dae-314a-4ec7-9fe6-4712ac344f58",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0eaf603c-5789-460e-91f9-5b061c8542e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e3b75b7e-83b0-408c-9f83-22f994ce8a0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b948a6f3-8449-43e0-9c0c-b80b778653a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78c2a332-8380-40e0-b310-0e95b2ca55ab"
                    }
                  }
                ]
              },
              {
                "id": "ea0e4895-fdc8-460c-8774-9cb67cff6d44",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df81df2b-b2b9-4379-a005-9c31ad269836",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fa119272-c575-4ae5-9903-603dd8895241"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef55cb8e-79aa-4e16-a400-434fbdaf48f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e26f9dfa-8449-4417-ad9a-c1f19ef8ef80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67ba3622-4b16-47cd-a05d-52f7617c5f25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "39610d93-04cc-4a1d-988a-9b0af5598066"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ebcdd56-a086-460e-8181-39639548b797",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41b3c9ba-bdb5-4862-a0a0-0c80daeff33d"
            }
          }
        ]
      },
      {
        "id": "db9e3e65-f916-423b-85ad-19259a0c23c0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e0d9cadf-1080-4a7e-b989-300f76700ea1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "288cfb1c-fb58-4922-917b-0d90641cb1e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3551c0a5-d328-4dc0-8a3d-aec1337d7b33",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9dea272-7cff-4460-99b6-5ca53f573dea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "03f58526-dff0-429e-b075-ccee9de060f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ac07e3-78f0-437a-9aeb-94d071ed7fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "626982ce-3400-4427-87ce-1edc73b7a4e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4c7e7ab-1d47-426e-9116-4625938fea7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a1de61a-7b34-45e5-a43e-bcb5e4e6f432"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdde4872-eed4-4c2e-8d1c-2da4e28a8bc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e63072b-b740-4d8b-8fd0-1cb73d8abcd7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "800cd5c0-6625-43bd-8baf-61292a00dbfd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d62f073d-d1e0-4f3a-a4b7-c1c9e3a31761"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8960f0b-c43b-40d4-9e5e-60b00bb2ec39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c14d09f9-75a3-4bd1-8382-321a88f0c5aa"
            }
          }
        ]
      },
      {
        "id": "4a32c259-89a1-41bd-9a2f-ad88ea654da5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ed209da5-76b0-44e0-a51b-b0782b79bf28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4bcd83e-07a4-43d9-a4f7-08f3a5c770c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5be801c9-34ba-4db2-9599-1de8a464441f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98731fa4-1fc3-4598-86e0-edcd326a87ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2db1a8c-3850-4747-99ee-631f4f723f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0996419-09de-4f05-9c5e-0f40a98f4c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2968bbc2-ec2a-43c5-a321-3b1056ae62db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b98729b-db14-4920-8bcd-773163f80c1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32a32796-ab5a-4587-969e-39b09ebed864"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59fcd2b3-026a-415b-8125-fa1476faaf1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "212aa5be-d3c2-4eb5-ab0f-72ab468dcfd6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da134b3e-6982-4faa-9740-8b3ffc9e3038",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "82d98036-7126-45bf-a3e5-a0f19b9fa2db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77014dd6-614e-4034-96d2-458dcc878e5d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e04d1466-6489-4343-86d9-d1aea432b772"
            }
          }
        ]
      },
      {
        "id": "d549f8ca-bfda-41f9-b3e9-52f6b88cff2a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "874feb21-8afb-4788-b2c3-776acc59f5ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49876007-a930-4d36-9549-60444f5f0c73",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50b8ecca-18f7-4780-ac41-7ef8c721d3c7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34f4a48-b729-48c3-84f3-6c0ab8412e1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d515952-57f7-495d-bb66-2ddf12e58774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72b068c-cee3-4619-aba0-1b782d1d81a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "031d8ca0-1e2e-4849-b4a3-be605ed0ec56"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3adfb42-3ca1-4930-8706-8308e792ff27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae52f403-3251-4cf2-969c-9549aa1015a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94d01835-836c-4d3b-900c-a6d435f30e0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5dc82b3-1e2f-43af-8859-3f3c7f30956b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "813e8d3b-f479-4524-8a1a-f38a8f4925b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bfa8348b-75f6-491d-b7ad-8e659ee2cc84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07f2f37a-deff-48c5-a137-5049cb024903",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07c9c414-0cf1-4072-a3ef-ca3b28c46229"
            }
          }
        ]
      },
      {
        "id": "47eeedf8-0c46-4279-af0c-e56099a8e0a9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98d56aeb-1321-4cf4-a13c-000a7785e2f5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce521364-0afe-444b-84d3-c8e716482e95",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "be761875-4722-4334-ab33-95d78b721c8e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4755599b-b4d1-4e7c-b8de-6ad38539f586",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4588d149-5b38-4ebb-96fb-1d2f6644e85a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 141.89824561403498,
      "responseMin": 5,
      "responseMax": 2778,
      "responseSd": 319.91917865941576,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701909344019,
      "completed": 1701909393996
    },
    "executions": [
      {
        "id": "d0ec3a86-92f6-4fb6-83bd-972029e5da0d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b06bdd8c-fa25-4932-b98d-5dabe503df54",
          "httpRequestId": "d184918d-f6f9-420d-b8f2-ff11c8559073"
        },
        "item": {
          "id": "d0ec3a86-92f6-4fb6-83bd-972029e5da0d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1a920dca-e39c-44dd-b716-f4b8eda8793f",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "f77a522d-906b-4d6e-bf07-55e5cfd3d8b0",
        "cursor": {
          "ref": "0dcc2487-0a55-4dc1-a6f8-0679dcf4c48e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f5002b9b-f469-434b-9120-b8ca0e75cacc"
        },
        "item": {
          "id": "f77a522d-906b-4d6e-bf07-55e5cfd3d8b0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e50d307d-7ec8-4495-9bc2-3eeb2c2f6e43",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "43402ac1-c09e-4ef5-9541-b304ec4dbd81",
        "cursor": {
          "ref": "e4c5d23c-bbc6-4836-9c09-fd5ec5d79fc2",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "018d39e3-bed1-448e-b282-846978e71e21"
        },
        "item": {
          "id": "43402ac1-c09e-4ef5-9541-b304ec4dbd81",
          "name": "did_json"
        },
        "response": {
          "id": "7f28a843-1d80-4398-a89f-bcd0559d5ae9",
          "status": "OK",
          "code": 200,
          "responseTime": 607,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c389282b-b89a-4e35-8d28-34e2362dc749",
        "cursor": {
          "ref": "58571043-dfd9-4f53-a964-1ceb1fedaa59",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1b983650-5b5a-49b1-935a-4ef03ed62da4"
        },
        "item": {
          "id": "c389282b-b89a-4e35-8d28-34e2362dc749",
          "name": "did:invalid"
        },
        "response": {
          "id": "b7c298cb-44df-4d25-845f-751bff7d98cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c389282b-b89a-4e35-8d28-34e2362dc749",
        "cursor": {
          "ref": "58571043-dfd9-4f53-a964-1ceb1fedaa59",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1b983650-5b5a-49b1-935a-4ef03ed62da4"
        },
        "item": {
          "id": "c389282b-b89a-4e35-8d28-34e2362dc749",
          "name": "did:invalid"
        },
        "response": {
          "id": "b7c298cb-44df-4d25-845f-751bff7d98cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da2774e-0f3b-4ec4-8511-b9a8982ffea3",
        "cursor": {
          "ref": "0845f5a0-cbc8-44de-bbc1-8b10e3ab89c4",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d1bb3087-caed-4bf4-a0e6-f43d82733b0a"
        },
        "item": {
          "id": "7da2774e-0f3b-4ec4-8511-b9a8982ffea3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9db0bdc0-a73a-42a7-af30-737c43e6cd07",
          "status": "Not Found",
          "code": 404,
          "responseTime": 190,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9539ea9-8ac7-4655-afea-ab6f751d8cb0",
        "cursor": {
          "ref": "54e160d9-1a79-4e8f-b8a5-8c84fdcb5c1b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "75390b38-7bc9-4057-a286-d52cbf5f5133"
        },
        "item": {
          "id": "c9539ea9-8ac7-4655-afea-ab6f751d8cb0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f4d1b09f-ca40-47d8-be0b-0e4f271d0ccd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 83,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10305b85-e2d1-4863-88f4-b566362d7730",
        "cursor": {
          "ref": "4f12ae71-eedf-493c-94fb-18eed29fe9b1",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "62cfd3b6-5760-4c45-95e5-a48b19f32f59"
        },
        "item": {
          "id": "10305b85-e2d1-4863-88f4-b566362d7730",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "77441702-529a-4898-a239-7c48a3eacbb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3921ce4a-7d9a-4563-8df1-ed7815438720",
        "cursor": {
          "ref": "ad60266b-5654-4fa6-a8d4-00e2e9985237",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "baf42910-d7ea-4bae-a346-967317a53947"
        },
        "item": {
          "id": "3921ce4a-7d9a-4563-8df1-ed7815438720",
          "name": "identifiers"
        },
        "response": {
          "id": "0b6a12a8-ab01-46e8-be8c-9fbbff312442",
          "status": "OK",
          "code": 200,
          "responseTime": 330,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8509a298-cca2-4e0b-96a9-d8eeb6b1001d",
        "cursor": {
          "ref": "a611f7db-94cf-4bb6-8a97-da08af683d55",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "75172238-bade-4db2-af18-a76da795880c"
        },
        "item": {
          "id": "8509a298-cca2-4e0b-96a9-d8eeb6b1001d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d719c569-a83e-4835-af0a-d0d6efca1b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1c3801-eb34-455a-b140-91afe19fbb42",
        "cursor": {
          "ref": "f2fa53fb-103b-498d-beb5-4f29fe173a63",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "106d3dbb-a42a-4309-95bf-10a8844f8138"
        },
        "item": {
          "id": "6d1c3801-eb34-455a-b140-91afe19fbb42",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c1a190ca-e869-4fc4-a5f8-074308fc67d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baec17ec-ba11-4917-9bd0-8e1467a539dc",
        "cursor": {
          "ref": "6d1ebd6a-51f6-42cf-b9ed-79009104fb2e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5becd394-1fd3-43f0-bbeb-a0f0db4846fe"
        },
        "item": {
          "id": "baec17ec-ba11-4917-9bd0-8e1467a539dc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f13de0f3-7b27-4de4-be05-34426fb204a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697ecf60-3602-46aa-92dc-e4a905ffae95",
        "cursor": {
          "ref": "ed3a8dea-d25b-439b-8957-86ada5c2a804",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5f24270c-47e9-4281-aab3-3f9c0a7e348f"
        },
        "item": {
          "id": "697ecf60-3602-46aa-92dc-e4a905ffae95",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b9a064c6-fff1-440e-951a-a539fa1eb538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c92b5da-6f49-4266-b3b5-26148d38263a",
        "cursor": {
          "ref": "3a7aec34-3ccd-4899-9cba-13c4cc1fabf5",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "80a1bfa6-bef3-47e2-9411-40d0950a7cda"
        },
        "item": {
          "id": "8c92b5da-6f49-4266-b3b5-26148d38263a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f0cbe77f-0a64-4ff8-8469-bec1fffeb8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74affd8f-8154-41ac-b9d4-8e21938280da",
        "cursor": {
          "ref": "e0769d92-eec1-48c0-adcc-e4bc0bb10585",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e0a88826-b527-4de3-8654-7072f900d7a5"
        },
        "item": {
          "id": "74affd8f-8154-41ac-b9d4-8e21938280da",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fd97dd19-f9f3-4186-bd59-ac9c767d07e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02ba3f6-54fe-4775-95a0-25c8c1d28c73",
        "cursor": {
          "ref": "7d385f5e-1bac-4fb5-8751-5d64c66e9ea4",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "99fc8509-20d4-4b98-8f98-d94ee06f0118"
        },
        "item": {
          "id": "d02ba3f6-54fe-4775-95a0-25c8c1d28c73",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2cc0f660-3702-453e-b65f-afab26ff4273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37a3049-5e7a-4bf7-bdfc-1666fc1c5d39",
        "cursor": {
          "ref": "6194f015-9a8a-48ea-8fe2-05d96b49b353",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e99daf20-71f5-4d7b-98ba-da01028117b7"
        },
        "item": {
          "id": "b37a3049-5e7a-4bf7-bdfc-1666fc1c5d39",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "11ac9d4e-647a-4d41-8923-837ce6ad2ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc498fec-a426-4591-b39b-ae7cd43a3410",
        "cursor": {
          "ref": "048af5a5-9c21-433a-991c-5d90f2817311",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "302b23ea-f86d-4e6d-bc72-a202872b4b69"
        },
        "item": {
          "id": "dc498fec-a426-4591-b39b-ae7cd43a3410",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b77b4977-e234-4a11-a151-9ff987e423c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ffe8e2-9010-48ea-87ac-beae40bc105d",
        "cursor": {
          "ref": "287312f0-f561-4b17-ae4b-01c48eadacf9",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "91753af8-41f4-48f7-907f-67ad07438426"
        },
        "item": {
          "id": "38ffe8e2-9010-48ea-87ac-beae40bc105d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b0ed7a46-c09b-4695-a0bb-54d668e6578c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981c43db-358d-4f6a-bafa-706a06c84c49",
        "cursor": {
          "ref": "04cd3850-81a0-41d4-ab9c-934f2eb1aafc",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fcb11c47-f10c-4376-82e9-86d3ca64ec84"
        },
        "item": {
          "id": "981c43db-358d-4f6a-bafa-706a06c84c49",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "25eaec2f-1948-4fe3-9163-d758f2037db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccae3333-7c48-4b1f-b732-e71236bf0dd6",
        "cursor": {
          "ref": "71ab0c92-6416-44b6-be1a-8caca6c71b11",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ca09f769-bfae-4ab1-be02-6419a403e3a4"
        },
        "item": {
          "id": "ccae3333-7c48-4b1f-b732-e71236bf0dd6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "92a43f94-0af3-477c-8ac4-0857f4878d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2270262-a976-454c-99ab-e18959241b3f",
        "cursor": {
          "ref": "78c6045c-c8bf-4e97-a4a4-d3909f032e1b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e054a13a-46d8-4059-a423-9f77d26d58fa"
        },
        "item": {
          "id": "d2270262-a976-454c-99ab-e18959241b3f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1942f24d-7d34-4100-a835-8e5d3763980e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ad52f1-a6d9-42ad-afe8-b3df586fa535",
        "cursor": {
          "ref": "edc76bb1-5202-42a6-b50c-af361bd7f38c",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "22970975-da12-42d8-a399-d118a1933d16"
        },
        "item": {
          "id": "05ad52f1-a6d9-42ad-afe8-b3df586fa535",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f45046bb-f55e-4541-8e35-b5122c54c694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d12807c-f031-41bd-94fd-aad5153eb9db",
        "cursor": {
          "ref": "84e6812d-987f-41cb-a911-1e5a0a0a8bda",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "42c50684-bb35-405d-8db3-a6a8b13a64d2"
        },
        "item": {
          "id": "5d12807c-f031-41bd-94fd-aad5153eb9db",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a88561b1-6d93-408e-9229-7aa529e13d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9d5994-638d-428b-82c8-90464105f647",
        "cursor": {
          "ref": "783b9042-7f0f-40e3-8b25-9170402b8529",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f97df898-128d-451f-a03e-dc02420c21a1"
        },
        "item": {
          "id": "3c9d5994-638d-428b-82c8-90464105f647",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dd345127-a791-4d30-80ac-2667f1f8b046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b651d2-fd94-4bcd-806b-abacfe6b1a37",
        "cursor": {
          "ref": "240084ff-f241-4cf6-8d30-13b0d52bef34",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "edc9e559-59d1-4ead-a8a5-52828d3123a0"
        },
        "item": {
          "id": "18b651d2-fd94-4bcd-806b-abacfe6b1a37",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b306deb1-7ac0-4cf2-8fb8-a29b04942c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d020e2e6-687e-4aa5-a901-2d8659617fa9",
        "cursor": {
          "ref": "afc5b0f0-e3e8-4624-ab45-1be120335ce1",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "461280cc-8a74-4179-9c73-46cb5149cfc4"
        },
        "item": {
          "id": "d020e2e6-687e-4aa5-a901-2d8659617fa9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b8d94589-472b-4651-9725-5b8f4b38256e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e3449b-b42d-4ef1-82d6-87d3440896e1",
        "cursor": {
          "ref": "d43220df-134b-4d71-831a-b590b53e847f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c2de67c4-f928-42d8-9d10-cd0448de33e0"
        },
        "item": {
          "id": "08e3449b-b42d-4ef1-82d6-87d3440896e1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ab1799a5-d64c-4659-80b5-113dfffd8a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acedcf06-ff2b-4f6f-9fc7-1759a6b815a9",
        "cursor": {
          "ref": "280ba22d-5765-47f1-b6a9-6f0c89e3d95c",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "45c8c546-9756-4bc2-a877-710ad3982432"
        },
        "item": {
          "id": "acedcf06-ff2b-4f6f-9fc7-1759a6b815a9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "96971b15-0267-473d-9e18-8894957b4b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c911024-c581-4424-a30d-bff1daa302d5",
        "cursor": {
          "ref": "e31b13c9-5b77-4b04-bd7d-b03eef31e39b",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "83624647-e4c3-4d3b-848e-51bdaae4a77a"
        },
        "item": {
          "id": "7c911024-c581-4424-a30d-bff1daa302d5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "45060528-c917-48ca-976f-15a3ff24fbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826ffde3-97c8-4a16-84ac-74daa15b00a4",
        "cursor": {
          "ref": "e59c2341-bdc7-452a-86a4-805a08770e3e",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7aa9a253-f582-4a7d-9c93-5ef24dfbf170"
        },
        "item": {
          "id": "826ffde3-97c8-4a16-84ac-74daa15b00a4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "506d3fa6-3a9b-40ff-b205-becb1121d43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfe8b6e-9cbd-4198-9f64-88089860da28",
        "cursor": {
          "ref": "d36f781e-f2d2-4497-bf68-ea8fe456cb71",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2dfc8cef-4a04-4e27-af1b-536e835a51a9"
        },
        "item": {
          "id": "edfe8b6e-9cbd-4198-9f64-88089860da28",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ddf2567d-8f86-4cc0-b9ae-6189caded4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41084480-750c-4932-86a1-61a127f5b116",
        "cursor": {
          "ref": "70a0b23c-9f08-4344-a1df-c89cf59119b2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7978dcc8-335a-427d-babb-392f2f87ea19"
        },
        "item": {
          "id": "41084480-750c-4932-86a1-61a127f5b116",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "48e892ea-d9b8-46e1-83a7-e3004502a7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d60163-7364-4073-905d-663223cc8b35",
        "cursor": {
          "ref": "5f15cda5-a6f6-4ae9-8fc7-d9b56a3ce9be",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d0769137-2506-46be-aebc-65d8252429bc"
        },
        "item": {
          "id": "c5d60163-7364-4073-905d-663223cc8b35",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9e2febe0-e85d-4756-9f06-8b14ddb54c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c64cc5-5cfe-41fa-bca5-11ec6a7b5a3a",
        "cursor": {
          "ref": "44ff00a4-4ba9-4d77-b4db-3fbe8e39c55f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e5a433d5-1c8c-4526-8a56-916f3244f271"
        },
        "item": {
          "id": "a7c64cc5-5cfe-41fa-bca5-11ec6a7b5a3a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cc23c9d1-8788-4590-a7e6-62583188984a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d756bc3-0cf3-4b7a-a1cc-2af3dd145be3",
        "cursor": {
          "ref": "08b00bcd-540a-427a-a13f-48cbba0b141f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b06f729a-b667-4d45-9ced-b2265b0e9103"
        },
        "item": {
          "id": "9d756bc3-0cf3-4b7a-a1cc-2af3dd145be3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d14f2810-4d92-4d04-aa68-3804eb30ee9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53499fb8-04b1-400f-80d3-26bacee3892f",
        "cursor": {
          "ref": "369e8af2-b7a3-4c38-be1b-2ed4fd293c8d",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a7e655f3-bbda-4882-98aa-c0f1add2a401"
        },
        "item": {
          "id": "53499fb8-04b1-400f-80d3-26bacee3892f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "eadbd302-a3d7-4ce2-8cf9-200b9b678ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dd3742-0cdd-475b-a110-2108a5a53a59",
        "cursor": {
          "ref": "32b7f350-6236-4c3b-935e-8a4624119806",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9abfab0e-2d65-4406-b3a1-be9dfc33728b"
        },
        "item": {
          "id": "15dd3742-0cdd-475b-a110-2108a5a53a59",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "03268a08-7b7a-47e3-9b22-5470fd71a26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf6900a-e449-44fe-afa1-572972dbc161",
        "cursor": {
          "ref": "2ff20781-810f-4ae8-b86b-95b03170fe28",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "258630ad-125e-40c9-a97d-745a385b73ba"
        },
        "item": {
          "id": "ecf6900a-e449-44fe-afa1-572972dbc161",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "589231ce-5f5e-44f9-ae32-35ad12373e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9aa3d32-4cfe-459a-96b7-c2e113681c84",
        "cursor": {
          "ref": "699dc0e6-9b37-4b55-a7f9-7f0934409036",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fc35e95f-d57f-4066-b208-0fa392f5886a"
        },
        "item": {
          "id": "f9aa3d32-4cfe-459a-96b7-c2e113681c84",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6ec5b370-e3cf-4394-b871-5bfe2f4d0406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444a11c9-9915-4f73-b5c8-726b2d2bde87",
        "cursor": {
          "ref": "536f2d1a-565a-4478-bca5-d33a9db0514b",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "411a357d-8fa9-4143-a828-96d9fdfeb191"
        },
        "item": {
          "id": "444a11c9-9915-4f73-b5c8-726b2d2bde87",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f0f02c7d-c8ec-491a-9fff-d8d930cd24b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddbb8ac-5a1d-4692-8434-e401fc03e1a7",
        "cursor": {
          "ref": "ff2dd386-be91-4dc4-a1a3-3bef407bf59a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "423b6bd1-1c13-4b34-8023-9f9a8f47e183"
        },
        "item": {
          "id": "4ddbb8ac-5a1d-4692-8434-e401fc03e1a7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "df331889-89bd-4d08-aaf4-acf2de9cf848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370439e4-44cc-4956-9261-60b2b27e33f6",
        "cursor": {
          "ref": "8d495c0e-80a0-43cd-8103-816e0d7e21e0",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ebf527b2-31d8-44f1-aa4e-0e5beed8c2cb"
        },
        "item": {
          "id": "370439e4-44cc-4956-9261-60b2b27e33f6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6b813021-c7c2-44fe-9295-1bde94cb9682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36c1b1b-173c-4379-a647-c718aa9c0082",
        "cursor": {
          "ref": "f5ee378c-f90e-4a92-b8eb-e73f233e918b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "44069dae-db93-4960-b2f9-6e9b180ea63d"
        },
        "item": {
          "id": "a36c1b1b-173c-4379-a647-c718aa9c0082",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f616f437-6459-4f8d-a1ee-024fa3cd3be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89612f9e-f519-453d-858b-a585526142ef",
        "cursor": {
          "ref": "6f5054d4-2380-48b1-9131-0b7881e074cd",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "570e2771-013a-4b9a-92dc-4cf2968474ce"
        },
        "item": {
          "id": "89612f9e-f519-453d-858b-a585526142ef",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b990d675-c76b-468e-a441-ac96b31ce3ad",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 368,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f592c5cb-2b13-4828-9f3f-201d8c2b41f6",
        "cursor": {
          "ref": "67a9d5ca-3538-4f88-8df3-e38231fcc502",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b5785ade-452d-4050-8009-918dd709843f"
        },
        "item": {
          "id": "f592c5cb-2b13-4828-9f3f-201d8c2b41f6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0214cf4d-46f0-4d80-bace-ce91d338ca3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267926ca-a076-4aeb-a06f-b076b225ec58",
        "cursor": {
          "ref": "3491c8fd-25e3-4df9-974b-08e879c93f85",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d6981940-cda9-4b8d-81fd-f2a29a984db5"
        },
        "item": {
          "id": "267926ca-a076-4aeb-a06f-b076b225ec58",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d435eee9-d6e2-41fe-84e5-1397d7c41974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65eb401-c449-489f-bfcf-f2cdf8fbf1c9",
        "cursor": {
          "ref": "b761b060-e96a-483c-87ff-b8043d1c018c",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6f245825-b18a-4047-a3ed-83786689db35"
        },
        "item": {
          "id": "e65eb401-c449-489f-bfcf-f2cdf8fbf1c9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "36fdad54-902a-4a3f-adfe-7c491169dd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3898235-8ab7-4202-a398-dbe5234974d9",
        "cursor": {
          "ref": "16868a8a-3765-452d-a024-efc0fadc6229",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b671d0de-9945-4a83-960e-dd9b39dcf095"
        },
        "item": {
          "id": "d3898235-8ab7-4202-a398-dbe5234974d9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "630a105d-0589-4cef-a0c7-f2dea88da40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d8f72f-b979-44be-9b0c-6548eab652d0",
        "cursor": {
          "ref": "a609a07a-4fe2-4db8-a35a-7d2b91ce074f",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "10d99506-246a-4982-b54f-d1f3171ea7ab"
        },
        "item": {
          "id": "38d8f72f-b979-44be-9b0c-6548eab652d0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0e0898dc-95d4-4f59-a215-eba9f36690d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0fb766-ca55-4bd6-92fa-8197ac58de1c",
        "cursor": {
          "ref": "d279c33e-6ace-40d7-86ad-33ff81390a40",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a02b4d74-e922-4cdf-8656-29c19f726cab"
        },
        "item": {
          "id": "ca0fb766-ca55-4bd6-92fa-8197ac58de1c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c29f8bdb-de2f-4fac-ab05-e98324767aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38740270-57a2-4003-8c1d-1bf0a6f5d510",
        "cursor": {
          "ref": "b289367b-9fa7-4f0a-a064-c576e99f7af7",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "08e41447-0b1f-4367-9545-d9f3aee718e2"
        },
        "item": {
          "id": "38740270-57a2-4003-8c1d-1bf0a6f5d510",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ef75444a-8a93-4a99-8eb2-0c622b6446d4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 359,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db00ad2-68d1-4776-bd98-fe39d1caa4c0",
        "cursor": {
          "ref": "8dd85974-73a1-4abd-8651-da9f32938075",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fd13bbf7-7084-48d9-9c20-513fa2e55ed6"
        },
        "item": {
          "id": "8db00ad2-68d1-4776-bd98-fe39d1caa4c0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "008c02bb-7312-4c2d-ad66-839ae8a52fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b4b08c-c0cc-4d77-8a79-d88636eaccad",
        "cursor": {
          "ref": "74c51255-214b-4b0d-8c27-63d2828e2132",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "26f4fdfa-565a-4fc7-8a01-0a1c57e6def8"
        },
        "item": {
          "id": "c8b4b08c-c0cc-4d77-8a79-d88636eaccad",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d12f8f30-7ffb-4df4-9b3a-8a43f71b8a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba2e6ba-c1a4-4e0e-b98f-8118382000c1",
        "cursor": {
          "ref": "3d9e1282-47be-4d66-9a1a-770283ddcd69",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "35d72fb8-8491-45a9-947a-0de8c0f6f1eb"
        },
        "item": {
          "id": "2ba2e6ba-c1a4-4e0e-b98f-8118382000c1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f2627bc2-25bc-485a-9a52-e26020d6d0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba75e39-1881-4931-82c4-5576d8fc28bd",
        "cursor": {
          "ref": "3be9faef-005c-4961-9614-44350c693118",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6d4ccf25-7dde-4955-9e1a-6d1fc8e102d6"
        },
        "item": {
          "id": "5ba75e39-1881-4931-82c4-5576d8fc28bd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b3b7bb4b-79dd-49a0-b4db-3f205c4462a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58802dbf-72a2-495e-b7c2-fbe814ea12a1",
        "cursor": {
          "ref": "faad8025-a82e-4679-a200-5476caebfc59",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f51e04a1-c38c-4630-bae0-ad58bd1a6a29"
        },
        "item": {
          "id": "58802dbf-72a2-495e-b7c2-fbe814ea12a1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "70ac3123-f02c-429d-a94a-a2d616f4f672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070f1632-dedc-48bf-a11f-3b2711083e97",
        "cursor": {
          "ref": "336179e4-6830-497a-8dbf-0ca963ac29cf",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b93a98ba-e484-4c59-851a-c46297e558b7"
        },
        "item": {
          "id": "070f1632-dedc-48bf-a11f-3b2711083e97",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f638ff09-2a7b-4d1a-b2ef-7bf519765109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c832f508-55f0-48a1-9fe1-f10039f5104f",
        "cursor": {
          "ref": "ad366b39-56aa-48c1-8876-403ac19dfdac",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cf6ac597-1f7c-490e-b833-5622fb0887ee"
        },
        "item": {
          "id": "c832f508-55f0-48a1-9fe1-f10039f5104f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9a27e978-4834-42bb-9a71-c57781a707cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ab8c14-4d1f-400f-9469-8174777ce6da",
        "cursor": {
          "ref": "6cff4b41-99a2-4607-92af-d8eb7ce5ac40",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ce59c76e-ea74-4f1c-af8a-42cf80803cb6"
        },
        "item": {
          "id": "d2ab8c14-4d1f-400f-9469-8174777ce6da",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1536a604-9bd3-4181-bd3b-066809a3b27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e91287-c3a5-43cc-a101-c3bd68355ca6",
        "cursor": {
          "ref": "4b845379-f9ec-451b-9b67-bcc36d8eeb7c",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ba620f78-42c3-4c68-8d27-b586952dc9d5"
        },
        "item": {
          "id": "d2e91287-c3a5-43cc-a101-c3bd68355ca6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "53f1dc41-3531-48c3-a5c7-26e212c650b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a847cc-3491-4617-aace-cb0176157651",
        "cursor": {
          "ref": "0014dbf8-4092-46d2-8a73-dfd809c13514",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c72bf832-6feb-43f4-a5d1-70a21f88ad5d"
        },
        "item": {
          "id": "36a847cc-3491-4617-aace-cb0176157651",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "dde8ae9c-049d-41cb-bdbd-fda7df30ab88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2256c44c-51b5-4068-b175-e8f5704f5591",
        "cursor": {
          "ref": "19bdd229-e9a3-4600-bdbd-76a21dad034c",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b818995e-9a47-450d-ba84-ddf721c805d3"
        },
        "item": {
          "id": "2256c44c-51b5-4068-b175-e8f5704f5591",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3d8bce9a-3698-48bf-a3d9-bd14daece944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99cc0af-637b-447b-a760-a55b0e865875",
        "cursor": {
          "ref": "e0160cb5-2eb0-4705-a196-5c47b71df8fa",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "407d1978-2096-4fde-9076-fe8fcbe46e6f"
        },
        "item": {
          "id": "a99cc0af-637b-447b-a760-a55b0e865875",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "12dcd532-0680-4328-ba83-291b6a46351c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0da79d-5ca5-41ce-878f-b602d9c48826",
        "cursor": {
          "ref": "d766b80c-4d66-4d6a-91ad-20929e80c6b8",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3af2265f-4361-4085-b215-f926306b4b7e"
        },
        "item": {
          "id": "4d0da79d-5ca5-41ce-878f-b602d9c48826",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "40c0a67c-0c47-4d96-ab7e-c36b18412228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a268ff6c-377c-4516-8d19-130ed3bf1f24",
        "cursor": {
          "ref": "d4fd4983-9a1f-42ad-852f-b3476d6d39fe",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1e4964eb-c6a0-48fe-b795-b446656a7541"
        },
        "item": {
          "id": "a268ff6c-377c-4516-8d19-130ed3bf1f24",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "315af9de-9432-4c8f-a524-496ca68e5ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec55f5a-f2f2-4983-8df0-bed024dcf329",
        "cursor": {
          "ref": "4b2bbf80-e56e-4c3f-b2a6-1a064f911792",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "610a3e54-93ae-4d9c-b492-3033f177d44d"
        },
        "item": {
          "id": "2ec55f5a-f2f2-4983-8df0-bed024dcf329",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fdd290ab-6bae-4de1-8a1d-0870211ae64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d36392-c157-475a-bc07-7bc42060e761",
        "cursor": {
          "ref": "9e0e90ed-3a97-4c2c-a582-93c22f1dcc52",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "58b36c8e-b15d-4b75-9380-da3fa9ea24fe"
        },
        "item": {
          "id": "e4d36392-c157-475a-bc07-7bc42060e761",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e1a50192-402f-42ca-8965-f6d7e2f1abab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bed081-dff4-4acb-92c2-46b0fde3d84f",
        "cursor": {
          "ref": "d8ad9742-b527-41dd-a929-453b6cc95808",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "dad0a33a-c59a-42eb-b6e6-557a88b8114a"
        },
        "item": {
          "id": "86bed081-dff4-4acb-92c2-46b0fde3d84f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "daa4c9aa-95f0-4e5e-b353-b7c100d9c81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d96278b-f859-406f-b58f-50a337ee7892",
        "cursor": {
          "ref": "32acd603-194b-4fc7-9642-bdef35fd2dc8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "abd1b6a4-4737-42b4-985d-5fca3c111605"
        },
        "item": {
          "id": "3d96278b-f859-406f-b58f-50a337ee7892",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f9646de5-fbce-4d47-b7e6-bc872d43885a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7c8e6f-a132-4d5e-8848-934f68a9aabd",
        "cursor": {
          "ref": "30472f72-db12-4759-ade0-709b3c243902",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f7a568c5-81b6-4307-8310-be765c81121b"
        },
        "item": {
          "id": "8a7c8e6f-a132-4d5e-8848-934f68a9aabd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6a486e3b-0ca8-4213-9d86-87cf11c5d104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b71a7c-d508-4093-9dd8-935ec03610bc",
        "cursor": {
          "ref": "05be6550-85f9-42f0-a06d-86499aaee1d7",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2f750848-3d4f-4645-84fc-4e252d323ba3"
        },
        "item": {
          "id": "d7b71a7c-d508-4093-9dd8-935ec03610bc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8b2ea216-596d-4461-8f86-f540edc73724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2578de63-fbc0-4cdf-87b3-34e469fb3c18",
        "cursor": {
          "ref": "d2de668f-3b67-4b28-840b-cf35fee8b834",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "86648577-379e-40c4-aec5-573750935d4a"
        },
        "item": {
          "id": "2578de63-fbc0-4cdf-87b3-34e469fb3c18",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3956a8cc-0d98-4b68-b201-ba83255cc4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b06c5f6-d5a3-4e66-8aad-ada279e352d6",
        "cursor": {
          "ref": "88f6ca72-5ee7-44af-ad0f-1984734f63e0",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "52788ddd-40ef-4fec-8a17-b6ed2913808c"
        },
        "item": {
          "id": "8b06c5f6-d5a3-4e66-8aad-ada279e352d6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "401b0074-bd03-40f0-818c-8d7e6bc80de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac8c775-57fa-4a18-b4bd-ee18963e116c",
        "cursor": {
          "ref": "348c478b-e111-4fd7-b4ef-6b1f2d5aaade",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fb7148fb-a6ce-44e2-ae9b-2132d71822ad"
        },
        "item": {
          "id": "aac8c775-57fa-4a18-b4bd-ee18963e116c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2f3e7028-3eea-4721-8585-32e5b885adb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de611245-c2a6-439d-af19-b3ac9555aa96",
        "cursor": {
          "ref": "e15e1298-9695-4a72-bce7-d9ed2dc8ab1f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2ff98354-71e2-4e7b-b45c-48be21407e81"
        },
        "item": {
          "id": "de611245-c2a6-439d-af19-b3ac9555aa96",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6984200c-f64b-4581-8b8e-6c55bb39736b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b70bf74-3877-420c-9f84-50bb5eecc680",
        "cursor": {
          "ref": "e8bf3048-e0ea-4ad0-8542-6fe4ae638de0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "be0f9a96-16f5-4b47-bbb1-4d58dd996f56"
        },
        "item": {
          "id": "8b70bf74-3877-420c-9f84-50bb5eecc680",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "74583ce2-68a5-4bd8-ab05-4a4339b49117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29395bc7-b012-443c-93cf-d7343655ed9d",
        "cursor": {
          "ref": "99eaa5e9-3d06-4e2a-8b71-0de16fc6ae04",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a5c87f2b-002b-4697-859b-3b7f11e96572"
        },
        "item": {
          "id": "29395bc7-b012-443c-93cf-d7343655ed9d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d9c1b96d-ead4-48f1-81f3-9dfc48f3d8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7a76a8-46d6-4cbb-835a-25c78133bb36",
        "cursor": {
          "ref": "a6fc819e-3d40-406c-8efe-9696e9f09793",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9d939cc2-9f0f-442d-9b5d-6b35b6a706a1"
        },
        "item": {
          "id": "9f7a76a8-46d6-4cbb-835a-25c78133bb36",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "399dc706-a4e1-4aa6-9297-ca001bba5117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c264e7a-47ce-4990-86cd-61207c0b2dd7",
        "cursor": {
          "ref": "a86531da-d740-4647-9756-93f2a67cccde",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "01247c63-f1c4-44c1-9b45-4a2390b3b2c5"
        },
        "item": {
          "id": "1c264e7a-47ce-4990-86cd-61207c0b2dd7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6a71595c-8324-4929-9004-b9e9e58f149f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd19e1f-f502-482a-8a46-0359d36dbc7b",
        "cursor": {
          "ref": "2d95c835-7d0c-490c-88c0-39aed67fbf60",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ebbd0cbb-bcf2-4880-8611-704b3042ffcd"
        },
        "item": {
          "id": "9fd19e1f-f502-482a-8a46-0359d36dbc7b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f03cca18-27de-43e5-a231-e46ee94930db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297f74dd-c041-4d6f-a3cf-d4256b040beb",
        "cursor": {
          "ref": "d5dee18d-8d1f-4b6e-971d-ee962ad67d6f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5c2ea5e3-629f-4024-9de1-5ac54945c9c6"
        },
        "item": {
          "id": "297f74dd-c041-4d6f-a3cf-d4256b040beb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a7882b22-8365-446e-96ff-a67cc0538c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35c979d-9c17-4675-8d45-dfb22f818bee",
        "cursor": {
          "ref": "dea370f0-979e-4112-bafe-95c58cb0ed43",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7503f9c3-951f-487e-8577-beb047834d51"
        },
        "item": {
          "id": "b35c979d-9c17-4675-8d45-dfb22f818bee",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4525c716-8943-40ed-abbe-6422419d6f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1499e43d-21e4-4f0c-8364-4b2ef985d9a8",
        "cursor": {
          "ref": "ac0baa24-efb5-47a6-966d-b5abd555ba81",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "339cf304-faac-4a56-a5b3-00625dc62e88"
        },
        "item": {
          "id": "1499e43d-21e4-4f0c-8364-4b2ef985d9a8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "340f00ad-8edd-4668-a13a-cc07b2acf25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8c2533-8c8c-4804-9695-b52db72fc3be",
        "cursor": {
          "ref": "4f5a4943-7038-4b91-bc3c-99367101e15d",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0d0a7307-695e-485f-9641-d2577e7cf7d6"
        },
        "item": {
          "id": "3f8c2533-8c8c-4804-9695-b52db72fc3be",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b2b92ed9-1885-410b-aa45-005bedc48604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59516a8e-e67e-474c-aec6-b2517ac7550c",
        "cursor": {
          "ref": "96883e0d-e550-49ab-a99a-401e70e574c5",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "89587217-33db-4fa6-95d9-dbcf5ea301e8"
        },
        "item": {
          "id": "59516a8e-e67e-474c-aec6-b2517ac7550c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "84b4b37d-25ef-40f4-bed5-cb5479a38649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d37a852-7d30-4eff-a006-e4b19d982bfe",
        "cursor": {
          "ref": "a3419c5b-fb4a-4630-b231-ca207a9f76b1",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ea9a1e78-3604-41e5-a8e2-0692f1e8ab18"
        },
        "item": {
          "id": "9d37a852-7d30-4eff-a006-e4b19d982bfe",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "34a40d56-d77e-452e-954f-5004d0366a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edd29e5-9084-472f-942c-706ca49ad4cb",
        "cursor": {
          "ref": "8df86d9f-339c-4721-ac51-db06d48e9da8",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "431d5757-29f2-4498-a16d-59dd52f5ab9a"
        },
        "item": {
          "id": "6edd29e5-9084-472f-942c-706ca49ad4cb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "dc7cbf00-aca6-4ae7-9365-9dc17af1bd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a104a0-8e52-4d07-8e5c-abaf76651cb7",
        "cursor": {
          "ref": "4dc790ab-9e7d-4cc0-9755-200d4df8726e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "66b25f08-0c44-45bf-992b-a3429df5d6b0"
        },
        "item": {
          "id": "f6a104a0-8e52-4d07-8e5c-abaf76651cb7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ed52570a-048f-4f39-9720-6e50f0f9fe60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406118af-cf66-4183-8803-58e9ba82666a",
        "cursor": {
          "ref": "c6d7d95d-a438-4065-aedc-29093160dd0b",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d53e2a12-2a30-4020-ae89-d731eac8f6de"
        },
        "item": {
          "id": "406118af-cf66-4183-8803-58e9ba82666a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c95ebc4b-b18b-477e-8405-aa8b39740b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cab812-7dba-4883-a525-0fb1dfad6f5d",
        "cursor": {
          "ref": "7ce9f000-49dd-4360-b704-b4ca89936c2d",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6b942315-74a9-4ad7-a814-505753ba3f99"
        },
        "item": {
          "id": "00cab812-7dba-4883-a525-0fb1dfad6f5d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "aefbebb8-d513-44f6-be40-1fb0059f31a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9bc6ef-4cba-4ba2-923d-32273a2a64d5",
        "cursor": {
          "ref": "40da000b-c359-4197-b4cb-c3a59e26deac",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5da1c983-8641-4d0d-b209-2642c6cd0dce"
        },
        "item": {
          "id": "aa9bc6ef-4cba-4ba2-923d-32273a2a64d5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6d737cbe-684b-437d-88bf-1eea77150028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1f7140-e836-4737-b4c1-540f808bc8bb",
        "cursor": {
          "ref": "20a3120b-b8aa-480b-8315-4dcde5465705",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bd5fcad6-ee26-43b8-bdbb-84a918181b5b"
        },
        "item": {
          "id": "8e1f7140-e836-4737-b4c1-540f808bc8bb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "89e5e59e-95df-4166-b9c3-fba6193fae37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa02961-8522-40bf-9cf7-41e394a74907",
        "cursor": {
          "ref": "c793f121-2123-431f-943c-92f0ba3b0d15",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f606b790-d56e-4966-ac92-15bde15f8912"
        },
        "item": {
          "id": "8aa02961-8522-40bf-9cf7-41e394a74907",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f003c5a7-bb41-4d8f-a4bd-4244110b07c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19cc2a2-e0ca-4bdf-bbaf-644f0dc2500b",
        "cursor": {
          "ref": "c0fa5ff5-a1b1-41f8-89f4-f3f824b01a81",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "604b2318-877c-4f19-88c9-5bef9b2e4bdd"
        },
        "item": {
          "id": "b19cc2a2-e0ca-4bdf-bbaf-644f0dc2500b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a1e827b3-77fe-489d-a80e-77d01d7b5575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78032c1-e5f2-43c3-8810-1f709fb4b850",
        "cursor": {
          "ref": "be793fc1-daf8-407f-8edd-85334d1c0732",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7895e232-39ca-4629-8930-b87641345fc4"
        },
        "item": {
          "id": "e78032c1-e5f2-43c3-8810-1f709fb4b850",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c3887e7d-8f72-4682-b124-c250ece3de0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a3b1af-4502-4ffa-be1d-2d3f5e98facc",
        "cursor": {
          "ref": "89a2eae1-28ce-4cd5-85a0-d5b03802d37b",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e5a33c26-7137-4848-8107-7a77daf1d3c9"
        },
        "item": {
          "id": "22a3b1af-4502-4ffa-be1d-2d3f5e98facc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f0dd4c06-4f03-4e8c-9fda-756625b59c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7705b767-bd47-40c4-a1cc-5c1e11d3dab5",
        "cursor": {
          "ref": "7a7b7d3a-b410-4c51-bcee-f9e4c2da544b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5df79e4c-bc57-41b9-aa7e-2ccea392c4d3"
        },
        "item": {
          "id": "7705b767-bd47-40c4-a1cc-5c1e11d3dab5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4f2f32df-f40a-452d-9c7a-c902a59c635c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57ffd62-5544-4147-855c-d78191190806",
        "cursor": {
          "ref": "d1de85b8-597d-41b0-a375-3e6c40aacbbf",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3e420270-e75d-4a3b-ac34-f5d2328c08fd"
        },
        "item": {
          "id": "f57ffd62-5544-4147-855c-d78191190806",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fe938289-a893-4d05-9257-a3372f517e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18184985-cdd3-42a3-ad4f-351809cef5e6",
        "cursor": {
          "ref": "4b6c9f56-5962-423d-9bd8-bc8731199c0a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "43777599-0573-4d03-9ca3-eb7a75daa165"
        },
        "item": {
          "id": "18184985-cdd3-42a3-ad4f-351809cef5e6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "42174d77-577a-4197-8531-9b70dcd8dac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9129ab-b772-4d07-a0b0-6e9bdab0a20a",
        "cursor": {
          "ref": "9cd68006-7bf4-4e58-8734-dbe248f444f8",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4a7dc321-a7e9-4628-a112-663a13395c44"
        },
        "item": {
          "id": "fa9129ab-b772-4d07-a0b0-6e9bdab0a20a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "062f0d26-c23f-4cc6-b000-e7b137514632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c799d7-3eea-4c58-a268-cfbc067174c7",
        "cursor": {
          "ref": "a97531ff-b733-403b-8f27-ccbd405d8a69",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "83a41d1b-7ffe-4416-bf84-13c517b89006"
        },
        "item": {
          "id": "d8c799d7-3eea-4c58-a268-cfbc067174c7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b2292c97-e81a-4714-b4c0-bae9c2c00457",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08748107-c380-4596-aa52-b39f383b3b34",
        "cursor": {
          "ref": "8435fdf1-d8d5-4495-a6c9-13c8e5fc710d",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "839fc5f0-4327-4817-8078-7696d94622bf"
        },
        "item": {
          "id": "08748107-c380-4596-aa52-b39f383b3b34",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "6c010729-5f68-4773-926f-a4693048f954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4d4206ff-21e7-4ac3-9ba4-a5515399428b",
        "cursor": {
          "ref": "185cffb8-f57d-40d6-92a9-d43af949eb8b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8024a187-4d33-4e2f-b86e-0bb22360e0b5"
        },
        "item": {
          "id": "4d4206ff-21e7-4ac3-9ba4-a5515399428b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d8551288-0071-4d36-a968-fb6f60b1067e",
          "status": "Created",
          "code": 201,
          "responseTime": 2778,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd2551d-9726-4d8b-84ab-8f16767ddfb3",
        "cursor": {
          "ref": "f4f7997f-986d-41da-a8a3-49db1440af4c",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3d6eb435-53eb-4f6f-a572-d0c57114f3a3"
        },
        "item": {
          "id": "1dd2551d-9726-4d8b-84ab-8f16767ddfb3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3ea8482e-62b8-4bed-80ce-52195ef65556",
          "status": "Created",
          "code": 201,
          "responseTime": 2552,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e89f2e-4b76-4dc9-bc97-34d628ee67a6",
        "cursor": {
          "ref": "59d5b228-2d28-4a8a-a60b-a1dc59899bed",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "39221e82-ff35-4449-8b92-4fcc885f3ce9"
        },
        "item": {
          "id": "d3e89f2e-4b76-4dc9-bc97-34d628ee67a6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4d5865bc-33bf-4b3c-8f4a-f33a26d111de",
          "status": "Created",
          "code": 201,
          "responseTime": 2336,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "419d4ee5-4328-48bb-96c0-ee5ebee7a180",
        "cursor": {
          "ref": "3a86089f-b312-4710-9caa-d3519a4ecd15",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "aad1ebe5-5127-4890-9484-c50439aa318d"
        },
        "item": {
          "id": "419d4ee5-4328-48bb-96c0-ee5ebee7a180",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d8e9884a-9dc7-401a-9aa3-57d498550197",
          "status": "Created",
          "code": 201,
          "responseTime": 2003,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f6b618-9caa-4855-8bdf-89c3d97dcc3b",
        "cursor": {
          "ref": "991b5a36-34d1-46bc-b74a-9d6c437993ab",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5c7efd9a-cbd2-442a-b787-f9618c53e34a"
        },
        "item": {
          "id": "18f6b618-9caa-4855-8bdf-89c3d97dcc3b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "caa6f365-51ab-4878-b9f4-b57c2ab26c40",
          "status": "Created",
          "code": 201,
          "responseTime": 1999,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc17346-d943-4b11-89b8-0d8ffecac4ac",
        "cursor": {
          "ref": "40c4c105-e67a-4efa-bbe4-ed2605efb9b7",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2e3127d0-18f2-42ac-ab02-891a4cec83ac"
        },
        "item": {
          "id": "6fc17346-d943-4b11-89b8-0d8ffecac4ac",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cb26b6a4-9bca-45ac-9a45-02f81dffbeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "790b2d9a-90dc-47f9-8b9a-d58011506d5e",
        "cursor": {
          "ref": "27daa05b-42e2-43f4-8734-895d7e95692f",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "43a52906-0b54-4e59-981d-ec66363d4f3c"
        },
        "item": {
          "id": "790b2d9a-90dc-47f9-8b9a-d58011506d5e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f7ba8942-45e1-4fc9-9984-6fdb1c99369e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f3704a-ac9b-4e6e-9c63-fd4b182a4b48",
        "cursor": {
          "ref": "2d705bcf-4bad-4f91-9719-b02ce7893ce7",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7c18ed7a-c73f-436b-ae0e-a457dd57be91"
        },
        "item": {
          "id": "96f3704a-ac9b-4e6e-9c63-fd4b182a4b48",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6fe6fe43-dc74-47eb-928d-75e6bc5b8c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d225a9-61f2-487a-94ef-18daf799c5bf",
        "cursor": {
          "ref": "6e2eac90-e5c8-4fce-b2ae-092ea57d9035",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b0c963c0-1780-44cc-a63d-355a52fa6e06"
        },
        "item": {
          "id": "c5d225a9-61f2-487a-94ef-18daf799c5bf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f4bfde67-05e4-4d3d-baca-d699f2487687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efba48de-8c88-4bb6-ae3a-792a7f7c24ee",
        "cursor": {
          "ref": "83ea1120-4399-44dd-b742-b2154ee35889",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "38d23771-3425-45f6-9be8-ff7076371e05"
        },
        "item": {
          "id": "efba48de-8c88-4bb6-ae3a-792a7f7c24ee",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dfb2287d-e512-4151-9bd8-fb64f3bcbc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bec6756-884e-4408-8005-3c74828ba50c",
        "cursor": {
          "ref": "cdb2e86f-4eb5-4bec-9ae6-52ef859fb880",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d194205a-ecd6-48fa-8cc1-2b93b8bc3332"
        },
        "item": {
          "id": "1bec6756-884e-4408-8005-3c74828ba50c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b8258a6b-f259-4825-88d8-475f67e9cafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea69bcc1-26fd-4648-9935-2b0a2b923380",
        "cursor": {
          "ref": "dde28b20-6929-4591-9ba6-90cf960fc6ca",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "317da814-644d-473d-8c8f-0c9a3a5976c2"
        },
        "item": {
          "id": "ea69bcc1-26fd-4648-9935-2b0a2b923380",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f5a6d905-8d01-4535-83b3-db168daacd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dc1cf9-b863-4e00-8dd3-2838a3f1c17d",
        "cursor": {
          "ref": "36cd54e3-f10f-4199-b24e-29e8f9b202e0",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "989c6f90-255a-4c84-a95b-0ad7d56134a8"
        },
        "item": {
          "id": "e2dc1cf9-b863-4e00-8dd3-2838a3f1c17d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "af7da1ff-f743-46d7-b6cd-1a893a4f75b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342a95af-fe93-46e0-8248-2a0eb91b5e82",
        "cursor": {
          "ref": "eac0d9cc-19e5-4059-982e-e67cf9598328",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "073fe829-9bad-44cc-9179-4ac82890d30a"
        },
        "item": {
          "id": "342a95af-fe93-46e0-8248-2a0eb91b5e82",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "840d0968-3a51-4990-86c6-8dd5d6dcd314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a66194-f6cc-4bdd-bfe0-87a55bd8a0bc",
        "cursor": {
          "ref": "1e1a78b9-0098-42c1-bfcc-154e90c728a8",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a73db6c2-1fc6-4469-bbe6-3af86c6787d4"
        },
        "item": {
          "id": "98a66194-f6cc-4bdd-bfe0-87a55bd8a0bc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "458bc488-4a47-42ce-9926-65d3aa65bcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa31da0-2d0f-4f0a-85e4-c380a3e59421",
        "cursor": {
          "ref": "70437278-5b4e-4460-8aeb-5daf5618ef05",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a75f97e1-02ce-4620-b307-4777aa43adec"
        },
        "item": {
          "id": "5aa31da0-2d0f-4f0a-85e4-c380a3e59421",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c58b40c7-a0b9-403c-903a-4fed93636e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11ca116-2b5b-43c3-9b65-8213d054af1e",
        "cursor": {
          "ref": "cb1a4420-de18-4c86-8583-69567d758227",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "643f1c18-28b9-424a-929c-f3bb7966e376"
        },
        "item": {
          "id": "b11ca116-2b5b-43c3-9b65-8213d054af1e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2c27a027-b7b7-4c17-a570-0fafb302b750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65099cd7-e5a2-4a0c-b7be-fc1d38eddcaa",
        "cursor": {
          "ref": "81577cf3-8111-4f01-86b0-6622b442947b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "af716009-6013-4cf4-b926-b477675027be"
        },
        "item": {
          "id": "65099cd7-e5a2-4a0c-b7be-fc1d38eddcaa",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "950718ec-324f-4eb6-ac30-72a67fdaf59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b165a0-9ec0-4144-92a8-5a1dd375d583",
        "cursor": {
          "ref": "f61f9564-8c7c-4e56-8a1b-7b6b137f5dff",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2bca9d4e-01b6-488b-999d-8c4a1118a643"
        },
        "item": {
          "id": "d4b165a0-9ec0-4144-92a8-5a1dd375d583",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "83aee7ca-26ae-44ce-9dca-770c218cad6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d06f9b-927d-4342-b5c6-02a541bbe5ea",
        "cursor": {
          "ref": "fb7c90d3-6954-4e9a-a204-adc87e627a22",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a89ef34d-8051-45de-9fb9-a937c111ca98"
        },
        "item": {
          "id": "20d06f9b-927d-4342-b5c6-02a541bbe5ea",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1c293a55-0f23-4efe-95c0-feede87334c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81d7b59-1952-4b50-9c2d-03eb48238acb",
        "cursor": {
          "ref": "0915a904-8969-45c1-9e73-04918e1a5788",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c1e0889c-a0d3-421d-a9ee-755229257755"
        },
        "item": {
          "id": "a81d7b59-1952-4b50-9c2d-03eb48238acb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "30e6498c-c1c5-41e2-a327-e8261f6650dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6aeca8-cb3d-484c-ae91-4c4c8e0962ec",
        "cursor": {
          "ref": "24795b6d-4456-4c7c-8001-b89a8399ad8a",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1bac548d-b754-4640-a5c5-4141625f0cbe"
        },
        "item": {
          "id": "1e6aeca8-cb3d-484c-ae91-4c4c8e0962ec",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6b28eb71-017f-437c-9345-ec4d68540bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578956a1-b179-479c-8eb8-ccbf60a50242",
        "cursor": {
          "ref": "29fb77a9-97ad-4897-86d2-4cc4a4cae7cf",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e7b57cb1-c70d-45bf-9f55-b70fcd6b7a1e"
        },
        "item": {
          "id": "578956a1-b179-479c-8eb8-ccbf60a50242",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9dcaec16-21be-4179-a84f-53da40354cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5640c9e-238e-4618-8c5b-37eb0ebcc137",
        "cursor": {
          "ref": "24a2bc97-d2dd-4cf1-8803-f3e6e01660a1",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f274a662-bb6e-4fac-8410-f57aac771aee"
        },
        "item": {
          "id": "e5640c9e-238e-4618-8c5b-37eb0ebcc137",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7403d221-20ca-4339-b40d-c6b6de3e5e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ace5772-d167-4232-982f-1325941baedf",
        "cursor": {
          "ref": "e3537313-5e4d-49c9-8640-b862c5880d7b",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "69ba04ed-fb15-42ec-8d68-14f419de6cb1"
        },
        "item": {
          "id": "5ace5772-d167-4232-982f-1325941baedf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "995b19e5-851d-4de5-ac82-3b8024f75867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9422098-718b-4440-b0b4-9494ad4dbeaa",
        "cursor": {
          "ref": "54b2076d-914a-4f3c-863c-c236e522bb9f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "437b2ba8-bce9-4ab2-aac0-1d978a644a9c"
        },
        "item": {
          "id": "e9422098-718b-4440-b0b4-9494ad4dbeaa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "12ccfd6b-a5cb-4c51-8452-099669986a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3077e2ff-07ce-4c84-b612-3ac43454afd9",
        "cursor": {
          "ref": "d98d7650-d55e-4102-bae8-de804c735987",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "983c028b-d61e-46b3-9093-cf17056d41a8"
        },
        "item": {
          "id": "3077e2ff-07ce-4c84-b612-3ac43454afd9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ac1509bf-3419-41fd-9bbc-856f56b0f762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dfdce9-c3ec-4fdc-a07b-b7ee596c6288",
        "cursor": {
          "ref": "eb96e1f5-79bf-47d7-bece-9ec41323bfb5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1cee2769-f47f-4eb7-b35a-6cc91d72356e"
        },
        "item": {
          "id": "99dfdce9-c3ec-4fdc-a07b-b7ee596c6288",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4b7a7124-f1d9-4893-b583-a6061dab5476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f9090e-698f-4e55-be99-b2a0b03c5d10",
        "cursor": {
          "ref": "1cd50486-4be2-480a-85cb-75fa8a90300b",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8f954368-e3aa-48f4-b5ac-94494bf73163"
        },
        "item": {
          "id": "f8f9090e-698f-4e55-be99-b2a0b03c5d10",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "76841ca3-64df-4343-8415-8d7850aaa1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf8c4f0-9bf1-48e7-9959-89289710e137",
        "cursor": {
          "ref": "0bdfd762-ae87-478d-b38c-1e80f5b772ad",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "83b28830-2353-49c8-8f82-9e893b299a7c"
        },
        "item": {
          "id": "5bf8c4f0-9bf1-48e7-9959-89289710e137",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5c26f903-224b-4694-b26e-6b4987a972f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c9329e-879c-4ad9-b238-609b699734e4",
        "cursor": {
          "ref": "7124af88-d5e2-4f0a-b3c2-df36f618c8c3",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1dc85e71-a5d7-4f75-b793-58e1ad82b71c"
        },
        "item": {
          "id": "38c9329e-879c-4ad9-b238-609b699734e4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fe10f462-d46a-4283-b16d-ca8ac3e89a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fb4a15-398b-4e6c-9aab-d9c8730187c0",
        "cursor": {
          "ref": "ee5deb10-f430-4c52-9435-97bc5113cd69",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2d77f5d8-544c-4855-81cd-978492281513"
        },
        "item": {
          "id": "05fb4a15-398b-4e6c-9aab-d9c8730187c0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e3899ea7-ebe2-46ef-aa48-ea841839c640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93a7628-854d-4592-b799-a467d9f4cc79",
        "cursor": {
          "ref": "fcfe5e7b-9526-4b0c-a19a-ab25b0cf8699",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "39371fcb-0a92-4db9-8b14-23313b5d6b63"
        },
        "item": {
          "id": "d93a7628-854d-4592-b799-a467d9f4cc79",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a77d0204-ccbf-44df-919f-a6e50da9dfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84e85f2-c6db-4db6-b7b7-bcd223727f8d",
        "cursor": {
          "ref": "cc8e3e19-e91b-4827-ada1-605ec971a55d",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b9d47c1b-e5f5-4051-ad74-83c1c8077427"
        },
        "item": {
          "id": "c84e85f2-c6db-4db6-b7b7-bcd223727f8d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "06e6e4b7-cdc9-4713-8757-5113502a4185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55a7b7a-5eaa-499d-9a98-763fd93f6c82",
        "cursor": {
          "ref": "a5484573-48fb-42db-bf72-fcfcd5f8994d",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8b2f3d25-df46-4eae-8a86-4976149600b5"
        },
        "item": {
          "id": "c55a7b7a-5eaa-499d-9a98-763fd93f6c82",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "28e6b542-f519-40aa-909c-7dc05615651a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4bc9b9-b14b-45c7-b982-887f3b9defe9",
        "cursor": {
          "ref": "03a3c21f-be35-4a61-9eeb-679377f35954",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c9ff3fec-b8ce-41c0-93a1-cb52bd6b97b7"
        },
        "item": {
          "id": "cd4bc9b9-b14b-45c7-b982-887f3b9defe9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "41e2abae-eb90-4417-94e2-ed2a452ee832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01ce2d9-548e-4fa7-9251-20ca8fb8afe7",
        "cursor": {
          "ref": "1558ecb1-45a6-4cd0-9d35-07608beb415b",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c172493d-5c31-4716-9271-ed3350dbef22"
        },
        "item": {
          "id": "a01ce2d9-548e-4fa7-9251-20ca8fb8afe7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7f01f299-dc52-4516-b1a5-041a2cd80f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb38b47a-a790-437d-b1fc-e07353229f5e",
        "cursor": {
          "ref": "b699c162-5a1a-4eda-8bf1-1c00ccf0cbf9",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "77159609-d6a8-4831-a6fa-b4f26fef8c07"
        },
        "item": {
          "id": "bb38b47a-a790-437d-b1fc-e07353229f5e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9e9cf4fe-edd9-4eaa-80e8-58745e4861b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7668eb0e-39b6-4500-bb2a-1ffc4cb70bd4",
        "cursor": {
          "ref": "4068f7ef-47d3-4d0f-abb3-25957e4993cd",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4da4236b-8594-4777-9de0-f61890fb74e1"
        },
        "item": {
          "id": "7668eb0e-39b6-4500-bb2a-1ffc4cb70bd4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "77578a9a-501d-4c37-abdc-8df29c9872a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce9d402-e46b-440f-9ce6-bfab8f87ec40",
        "cursor": {
          "ref": "6eb91dda-4c81-4105-8b25-b29370b1cc01",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3ea65e8a-6b4f-4ba6-bcca-f7a8424a6b99"
        },
        "item": {
          "id": "1ce9d402-e46b-440f-9ce6-bfab8f87ec40",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2fb9a343-dc21-4a5e-bdbd-515a00747742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18aef8e-721a-42a3-aad4-113f38903883",
        "cursor": {
          "ref": "5c28ecbe-682e-4fa0-87ea-e4555203b98f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d579ef1b-f678-4f41-9be6-c21275985429"
        },
        "item": {
          "id": "f18aef8e-721a-42a3-aad4-113f38903883",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0d914e27-b409-4815-a6ff-1974af37128e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1b632e-e335-468e-aa7a-900a3ba577fc",
        "cursor": {
          "ref": "7af218fe-be3d-461b-8f27-2c814ee96ce5",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c4730daf-0d09-4169-82ae-b2c0bc8a5a0e"
        },
        "item": {
          "id": "fb1b632e-e335-468e-aa7a-900a3ba577fc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a4b94bb7-3465-4e31-a858-249a0500c695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a40eefd-df66-461b-9fd8-cd9d8bdab595",
        "cursor": {
          "ref": "2ffde1c4-c9d5-4054-b0b9-8f19351a71dc",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e3b44630-ff8d-4654-bab5-351a31966a52"
        },
        "item": {
          "id": "3a40eefd-df66-461b-9fd8-cd9d8bdab595",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "da11b53f-060c-484d-9a8e-52ba00387a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef91bd85-533e-4441-9120-f94e57b90e02",
        "cursor": {
          "ref": "e35c2eba-46f5-45ba-9e76-2351999adcea",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "499471fe-f914-4447-b48f-dcb294d50dbc"
        },
        "item": {
          "id": "ef91bd85-533e-4441-9120-f94e57b90e02",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a67a9209-64fc-49a9-bee1-a2f669fb28d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96056bf1-514b-498e-bcfb-881a80e8bccc",
        "cursor": {
          "ref": "cd11b257-1a85-4f9a-b876-0c75640ac371",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6a5cf2be-e425-4de7-aaeb-85745ba52c1e"
        },
        "item": {
          "id": "96056bf1-514b-498e-bcfb-881a80e8bccc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9d8d33f7-5c51-4ec5-92af-0ba154645e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5f90ed-0430-4c7b-8eb2-10033e7ac9e5",
        "cursor": {
          "ref": "1c24a315-d53f-4701-bcd1-63ead833bc54",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "708e22cf-e5cc-4057-8e0b-55798ad1e6c6"
        },
        "item": {
          "id": "fa5f90ed-0430-4c7b-8eb2-10033e7ac9e5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5f2b397f-932b-4138-a0af-d389ef771f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3887df5d-6e0f-4937-9071-07779ef918dc",
        "cursor": {
          "ref": "ae465f21-8a57-4937-98db-0d83fdd66ed4",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0335f8f9-2f39-4f7b-8ad7-8655aa2029a3"
        },
        "item": {
          "id": "3887df5d-6e0f-4937-9071-07779ef918dc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "958c8832-7f5d-4490-9926-6e87f5bfc0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1965d4-a42c-4495-a76d-d7d0d143b5be",
        "cursor": {
          "ref": "0dc0aa8d-4337-4a5f-9c16-54a36e47baec",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ddade11a-221e-42ff-9ecb-60b927fa1fe4"
        },
        "item": {
          "id": "ae1965d4-a42c-4495-a76d-d7d0d143b5be",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "14a29ca7-28d2-4495-9f4e-6139d4237ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1431ff3f-e3fc-4ea6-9e25-33b7d388f566",
        "cursor": {
          "ref": "9baa85b5-a0a0-4a8a-b86f-660e500af47d",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0f54b697-617a-448d-a7da-bd5fa59a3781"
        },
        "item": {
          "id": "1431ff3f-e3fc-4ea6-9e25-33b7d388f566",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "439f16b2-158d-432e-bb80-1a8eff5fa7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637b9924-8573-432e-a760-c55fe319d88d",
        "cursor": {
          "ref": "4e9a9ded-4e9c-4ed5-9bcc-36c229d103f6",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "58f9ee80-2901-4d86-a1a0-d4d53043091d"
        },
        "item": {
          "id": "637b9924-8573-432e-a760-c55fe319d88d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "97954838-cee3-4405-bb45-43f01ae779d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe38fe7-1726-4420-b492-66b585427b57",
        "cursor": {
          "ref": "3f6412b7-1169-4c6f-b6c7-420c7e2d4c91",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3afb3a3a-fb4d-4afe-b67f-8dff87b20971"
        },
        "item": {
          "id": "dfe38fe7-1726-4420-b492-66b585427b57",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "979bc15d-e921-427a-b39a-b34d08a6b896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76d7900-7f23-4a97-ab36-1e75941dbf52",
        "cursor": {
          "ref": "48f972d7-3660-4db1-a3c3-7ef3c65039f5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fe738af3-befb-408a-96b7-a73b9f0ea659"
        },
        "item": {
          "id": "b76d7900-7f23-4a97-ab36-1e75941dbf52",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "81393557-a6e9-4b1e-8f0b-5271a2c64b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89048f33-1259-4284-983a-9cb6f6d76887",
        "cursor": {
          "ref": "7279b64b-d299-4b7f-abc2-4e888c47ea51",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "471d9cfb-fcab-4752-83aa-687780fb088a"
        },
        "item": {
          "id": "89048f33-1259-4284-983a-9cb6f6d76887",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b62a7d6a-1ff1-4cb9-9abd-893f75d08972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68dcc0e-96c6-4d8b-b85e-49655ad8f8d5",
        "cursor": {
          "ref": "ce906aba-4a4e-4d2f-8d63-34abca6ee77e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "78b90b18-92fd-4860-9119-850a8d611cb3"
        },
        "item": {
          "id": "e68dcc0e-96c6-4d8b-b85e-49655ad8f8d5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2c0af6db-b13e-46be-a016-5fd21af82c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045c5c2a-0bc7-4237-a342-aaa5d0c86d24",
        "cursor": {
          "ref": "d24aa709-6753-4894-b377-2e26da032bc3",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "62bc27ca-35a6-4146-81a9-39c314ec29ac"
        },
        "item": {
          "id": "045c5c2a-0bc7-4237-a342-aaa5d0c86d24",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "43825f35-588c-43f8-8d81-dfab470481e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b42c7ab-d5c5-4c24-9ac1-9f2949e1199d",
        "cursor": {
          "ref": "c779b0a2-ddf7-4021-b93e-f98840d22972",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7928bfad-103b-4947-8f72-20486baaeb63"
        },
        "item": {
          "id": "6b42c7ab-d5c5-4c24-9ac1-9f2949e1199d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "53b5ef10-c1b9-4d78-ba65-1a99c8bc2fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bf3d0a-b10c-4b6c-9afa-b2ab4b0087bd",
        "cursor": {
          "ref": "c5723e40-2535-450a-bb81-69161afa62b4",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4e5c8756-962b-428a-958a-ebd6265ce2b8"
        },
        "item": {
          "id": "51bf3d0a-b10c-4b6c-9afa-b2ab4b0087bd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "726222bb-32be-4939-a31f-59246174c977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ff52ea-0079-4bb3-89d2-5cd6eca5e36d",
        "cursor": {
          "ref": "cb435c42-ccae-450c-9959-b1a77a66760d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7faf669e-7feb-48b6-afb2-8b170b13e942"
        },
        "item": {
          "id": "10ff52ea-0079-4bb3-89d2-5cd6eca5e36d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8aa4d2fc-c49c-446d-8ed9-2c7d70ee3c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb6200d-1ecd-41fe-8f52-733b80fba543",
        "cursor": {
          "ref": "14da2da1-91c3-4c6a-85a0-2ccc7a748fcf",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "aa59ca72-ec56-4362-b5f3-3359dae48067"
        },
        "item": {
          "id": "ecb6200d-1ecd-41fe-8f52-733b80fba543",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d1d43336-bf33-4885-81dc-7d1dcf24942a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a675b9d-3f1f-4ede-90db-e78a73e8d740",
        "cursor": {
          "ref": "763b652f-e8b3-494a-ba9b-e56d2ae5e1d8",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "86fd77ea-38b9-4065-9dc4-7f6de3ab92f2"
        },
        "item": {
          "id": "5a675b9d-3f1f-4ede-90db-e78a73e8d740",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "78eb9279-fffb-4a59-a5fe-20e53c269a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f02b18-d28a-4675-8394-d79bf63b69fa",
        "cursor": {
          "ref": "0646798e-2073-4598-bc6e-c544a2bf6db8",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "041eb1f6-8d09-4822-a4e8-bc392b670550"
        },
        "item": {
          "id": "01f02b18-d28a-4675-8394-d79bf63b69fa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "18c87cb5-6da8-4cc1-881f-3870c82f2385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae67b35-b401-4975-bed2-a76e22f22352",
        "cursor": {
          "ref": "41bea52d-196a-4b9b-98db-dd52e5a2c024",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "52ae2826-8947-4fe2-a3bb-4d0addb56877"
        },
        "item": {
          "id": "fae67b35-b401-4975-bed2-a76e22f22352",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8e10c6d9-6edf-437b-b9eb-61a7e326ffba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb7117a-6ff0-4824-9dec-6cc3edd21542",
        "cursor": {
          "ref": "80e4e276-b1ca-4726-bdf4-b6e003b35d18",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "89f0e783-d408-45f3-a926-2f00c68c19c3"
        },
        "item": {
          "id": "1cb7117a-6ff0-4824-9dec-6cc3edd21542",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bba1eaa9-ae46-490a-aaa5-766ec0f78469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded1be8c-1338-4d1c-92f5-a2b4be382ad7",
        "cursor": {
          "ref": "82c4f5f7-0029-4ed3-88a1-2b921ff97fc8",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "68db8542-ae2f-41c9-9e39-71d4494fe42e"
        },
        "item": {
          "id": "ded1be8c-1338-4d1c-92f5-a2b4be382ad7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b21d0f4b-f07b-424b-a713-c5044bb864c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf434ffe-f27c-484f-b74c-870685ae5be7",
        "cursor": {
          "ref": "1e80149b-0832-4422-b79e-6a694e8f05b9",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d4585a33-1655-4d40-ac72-a9ae53c5a4be"
        },
        "item": {
          "id": "cf434ffe-f27c-484f-b74c-870685ae5be7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "aa013075-7f50-45cf-b984-be4af0e5b121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eed1db3-81e0-4b44-8238-e56f88b60528",
        "cursor": {
          "ref": "2b14fc8b-f222-4e0d-af1f-f8bc973e1185",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7cd600f6-dece-444f-8b4f-0dec7f962580"
        },
        "item": {
          "id": "0eed1db3-81e0-4b44-8238-e56f88b60528",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2ec72e14-dca6-44ef-8213-7049fba780a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a93c795-1d52-4cda-88a0-d44ce8070723",
        "cursor": {
          "ref": "12cf3e76-1aca-4488-9e09-87c5e6f0b08b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a3d7edd3-b521-49d3-9591-0b20fc217153"
        },
        "item": {
          "id": "3a93c795-1d52-4cda-88a0-d44ce8070723",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "54ee7128-d285-4438-aa3e-66ddfd42e0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabb12de-7b89-451b-824f-1d164067c114",
        "cursor": {
          "ref": "d54cdb26-5858-468d-b42f-baf980874430",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "65eb5a14-4e89-4df6-9fc7-d117dc645013"
        },
        "item": {
          "id": "aabb12de-7b89-451b-824f-1d164067c114",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3c472839-5185-465b-931f-d5b81507433c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6954ac3-8858-4753-b2c5-6997e365bc1c",
        "cursor": {
          "ref": "975f4ac3-05c6-489c-a981-cf3c44a54bad",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9fd118c5-477d-4105-af17-9e280293f8ac"
        },
        "item": {
          "id": "b6954ac3-8858-4753-b2c5-6997e365bc1c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dfe61b70-67c9-43c4-9ba1-bfe48e58322e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9c333b-ea69-4763-b123-699c36df2ddc",
        "cursor": {
          "ref": "b5fd94dc-2d56-4041-92aa-b358ff0c9812",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3ca8f127-5b99-41f0-9347-ddfc0f4ba8cf"
        },
        "item": {
          "id": "1c9c333b-ea69-4763-b123-699c36df2ddc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e915c0ce-1659-4f7f-9e3e-d57a1726892e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f0f5dc-0f28-4635-bbce-bc3f010300dd",
        "cursor": {
          "ref": "49d27357-14d5-4dbc-b321-80a78e55c89a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "79981234-cedd-4042-8440-6cac54cc1db8"
        },
        "item": {
          "id": "21f0f5dc-0f28-4635-bbce-bc3f010300dd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d2ef1709-2004-4adc-8bac-01418a3527ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dc03a9-9431-4171-a2ed-e51c01d5588b",
        "cursor": {
          "ref": "a3fdafd5-1c8e-4252-ba29-64e1c8331627",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "63ab1116-f30f-452a-b1ec-112b6ed95631"
        },
        "item": {
          "id": "29dc03a9-9431-4171-a2ed-e51c01d5588b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e7ae0d32-9450-4052-bbb4-d845bf1a4818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8549713-d9a8-4c31-9024-8f37aa7f7713",
        "cursor": {
          "ref": "1ee31c73-57f8-4873-b689-e2cda45718de",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "91f3b6f4-e3e5-4e93-9fae-3d11bcc8a79f"
        },
        "item": {
          "id": "e8549713-d9a8-4c31-9024-8f37aa7f7713",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "63455ee5-c877-4ffb-a225-9b5ecc922888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee911293-aa7c-4881-b5e5-bf5ae0fc5b3c",
        "cursor": {
          "ref": "1cc332ed-6820-41dd-a304-d27ad8f8bee4",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "535cb867-5d09-4f0c-aa4c-db8af5acd896"
        },
        "item": {
          "id": "ee911293-aa7c-4881-b5e5-bf5ae0fc5b3c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a3c40686-835d-486e-bef4-afc71675b054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c806a70c-10fa-4330-8218-267a86065ba0",
        "cursor": {
          "ref": "1ed202ee-2077-4ec6-96d8-b279110bef4c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "438d07a7-2f2f-4b79-85dd-7957a6c5c955"
        },
        "item": {
          "id": "c806a70c-10fa-4330-8218-267a86065ba0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cd9f9d9d-61fb-402f-86e5-eaa18bd58d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a354909-42cb-422b-8b62-b8b595be6335",
        "cursor": {
          "ref": "a640d4c8-684f-43b1-b021-350b65227c0c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5d9fc5df-b85d-408e-961b-b29fead779c8"
        },
        "item": {
          "id": "3a354909-42cb-422b-8b62-b8b595be6335",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f71a0cb5-7f1c-4962-89b7-437d99d4b3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0b1b27-b523-4fab-ac66-3d9cda01af19",
        "cursor": {
          "ref": "54e29e23-f625-4503-b897-53613dd5f185",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "39e3b2e9-b07f-4473-8b16-8747c75bbb1c"
        },
        "item": {
          "id": "ce0b1b27-b523-4fab-ac66-3d9cda01af19",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8dae58b9-11ca-4a9e-9fbe-704134ed4d5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c091b869-19d7-4feb-9e6b-8b0478e055e1",
        "cursor": {
          "ref": "b3fd4e3e-bd38-47c6-af9f-54098d5f0df7",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bfb18ea7-516f-44a8-9545-e2ccdeddc521"
        },
        "item": {
          "id": "c091b869-19d7-4feb-9e6b-8b0478e055e1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4782967d-05af-4dec-84de-9f156376b050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffb1a05-4714-4b5f-a527-93fcd03476f3",
        "cursor": {
          "ref": "9c4c7676-0868-4c27-a847-f72c6b108982",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b82aebf2-05d8-4c06-b606-c10eaa2fd206"
        },
        "item": {
          "id": "5ffb1a05-4714-4b5f-a527-93fcd03476f3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "63d78aac-b8cb-46ed-8041-6abffc080391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afebef0-9711-43a3-8ea1-f32609b546fd",
        "cursor": {
          "ref": "b4629d36-7ec1-4b7c-8651-0ae241b4af80",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ef798333-8fa8-4f02-a9f7-fc188f865c96"
        },
        "item": {
          "id": "9afebef0-9711-43a3-8ea1-f32609b546fd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d45dfbd8-825b-4eaf-85a0-14d0408c8a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce6508a-eca7-4c37-aa75-de839b201a8e",
        "cursor": {
          "ref": "c729045e-8305-4836-a60b-2d5847529667",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "84cfd3ff-bd3b-49ee-839a-e765ae279402"
        },
        "item": {
          "id": "7ce6508a-eca7-4c37-aa75-de839b201a8e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "aa5f3617-5e3c-4a1a-9994-224fb69fcd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ff12bc-7f92-446b-a672-922be943897e",
        "cursor": {
          "ref": "034eb3f4-8fb6-4f91-a9d5-df7dc6b5d98f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3f0df92d-e49f-4235-939e-45559cdd7463"
        },
        "item": {
          "id": "01ff12bc-7f92-446b-a672-922be943897e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f3114706-0235-42aa-88d3-8f4b2bbcbb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefed262-373f-4b7e-8e17-357241436e4a",
        "cursor": {
          "ref": "3950847b-d3af-4a89-b2b5-e6753449f822",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0e5365ad-79be-4133-9357-f1a177198d63"
        },
        "item": {
          "id": "cefed262-373f-4b7e-8e17-357241436e4a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ee65ceec-9a25-4947-9fb2-1f8d0bdbe76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9932faa8-86b1-4e7e-a4cc-f59357a489a2",
        "cursor": {
          "ref": "c8383aaf-b549-4f69-a7eb-d899fb9b1fd0",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "974c978e-1e73-422d-9709-20dd5dca69ac"
        },
        "item": {
          "id": "9932faa8-86b1-4e7e-a4cc-f59357a489a2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "65245526-8b58-4941-b66a-e82fb13b10a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ba72f8-52b0-4215-a507-c7db50cfaf9f",
        "cursor": {
          "ref": "fdc153f4-5489-4623-a1fb-76de3eb84957",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8a1bac6c-16dc-47ef-a468-14efe6bd6ff5"
        },
        "item": {
          "id": "65ba72f8-52b0-4215-a507-c7db50cfaf9f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "210cb4ce-3c51-474c-82cd-1b0f36b91127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2771ff-294c-4d7c-9e1f-0b66cc6dc30d",
        "cursor": {
          "ref": "c6a83be1-3439-44f6-a03d-1c67a92afdc7",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2f1bfec4-9b7c-4ab9-b049-8b95ca9c54ee"
        },
        "item": {
          "id": "5c2771ff-294c-4d7c-9e1f-0b66cc6dc30d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "edd1bad3-e9b7-4ffd-abcb-783f8ad46d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7041d8-0086-4913-9232-33920600d191",
        "cursor": {
          "ref": "aee3145b-576b-4f08-8e86-25c52482b02a",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "dc3c3738-a7d0-4cfe-a56c-b45936e3f005"
        },
        "item": {
          "id": "1a7041d8-0086-4913-9232-33920600d191",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1d18c7d3-0229-4b35-9239-c427934305d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d10623f-0411-44a0-aa85-ce8fef9eea73",
        "cursor": {
          "ref": "887e53c8-6ec3-46a2-9769-2997c0f32bb2",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2cf05198-45e7-40a7-b247-4ed4f6bc8c9d"
        },
        "item": {
          "id": "1d10623f-0411-44a0-aa85-ce8fef9eea73",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cc99ac43-bd60-45d7-8aaf-96a9649e29cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8981756d-05f6-4571-a1cb-b1f6b731f69d",
        "cursor": {
          "ref": "4ed8a746-213e-4f90-b083-bbd3c55fbc69",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f53b78b8-6da1-49aa-8fc2-cde656565e6c"
        },
        "item": {
          "id": "8981756d-05f6-4571-a1cb-b1f6b731f69d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "161a997d-c3f7-4463-bd44-d7bceeab9046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea32c46-7f20-4b8a-9242-3e391aa233d6",
        "cursor": {
          "ref": "e43e50e2-9b2d-41d2-ba12-3eeb5be573b1",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "af81d299-0190-47c2-ad5e-c36cc0e06dc3"
        },
        "item": {
          "id": "6ea32c46-7f20-4b8a-9242-3e391aa233d6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2a46f0dd-17b3-4673-b74e-5d848442e04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bfc723-6a4e-496a-82bf-7b927522dcd1",
        "cursor": {
          "ref": "9c420de8-aa91-4da1-bb8b-64bb78197c4e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1f1d66eb-0e4d-44a4-b4cd-a684e11234a7"
        },
        "item": {
          "id": "76bfc723-6a4e-496a-82bf-7b927522dcd1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9be9f318-626c-4d89-a4e9-dc5e730a5bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90aa06d5-0805-42a7-b7de-fe61bd084d2a",
        "cursor": {
          "ref": "85466cea-bc73-4fc7-9f19-951f51446872",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "dd4e2dd3-d422-4835-8a0d-11ce8734531d"
        },
        "item": {
          "id": "90aa06d5-0805-42a7-b7de-fe61bd084d2a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e0367f30-ee4a-4c2f-ab54-8d82e1d5f601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c647603-1b3f-4e8b-8cc6-e1dd11703604",
        "cursor": {
          "ref": "3389a5ed-bf51-4896-9e88-b8ed560a4441",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4d8629ab-4ede-4a6d-b6b1-e293e449313f"
        },
        "item": {
          "id": "5c647603-1b3f-4e8b-8cc6-e1dd11703604",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a736bc5c-243c-4fcb-8267-f27c1f547d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daad5c78-f12b-4943-800a-ed6798a75e1f",
        "cursor": {
          "ref": "2e65b0be-36a4-4166-98f8-b37d8157d4ad",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1aa2e152-0e63-413a-8ff1-956453a69462"
        },
        "item": {
          "id": "daad5c78-f12b-4943-800a-ed6798a75e1f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4846a66b-030c-4bbb-ba45-1fa2e71682e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb522ef7-25bd-42ae-9cfb-4530c292bd89",
        "cursor": {
          "ref": "d0d47101-4840-402f-91d5-70fcb80af823",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5395becc-bfce-4792-9279-aed7aa923076"
        },
        "item": {
          "id": "cb522ef7-25bd-42ae-9cfb-4530c292bd89",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dac0a77f-4ec0-4b26-8844-fb7c668997ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c413fb4-5247-407f-92c3-233007d7419b",
        "cursor": {
          "ref": "d1201653-ac6a-43aa-aed1-59622b00cd44",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "81a96587-1871-4941-b55e-cb43411f49f0"
        },
        "item": {
          "id": "4c413fb4-5247-407f-92c3-233007d7419b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e366856a-df4c-47da-9a0e-2607df3ef3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c3eca2-4da0-48f5-b9a1-8af891858877",
        "cursor": {
          "ref": "762f3c82-de14-4327-a2c2-fc437eaffa5c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c58348b9-6eca-4c23-898e-f279d0f4d835"
        },
        "item": {
          "id": "c7c3eca2-4da0-48f5-b9a1-8af891858877",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cbfbc2de-f47b-4dca-9b8e-6bd740425c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26cf7ac-bc70-45e1-8cb4-eb2151dc4ca6",
        "cursor": {
          "ref": "618f11f9-2cf6-4274-8c08-0295fc7f7fb7",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cf1c8ce0-ae63-4e92-bcca-4c7e484812b3"
        },
        "item": {
          "id": "b26cf7ac-bc70-45e1-8cb4-eb2151dc4ca6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7fa961d9-ec2d-469d-9537-98193e1e443a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8819be3-a4e3-415f-9851-ce6cc9e46ba2",
        "cursor": {
          "ref": "20f83a4b-e10e-481f-a3ce-df0424d6a979",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5327c6c8-f1ce-44bf-b5d2-3513a806371e"
        },
        "item": {
          "id": "d8819be3-a4e3-415f-9851-ce6cc9e46ba2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0eea27a1-0248-4a7f-95f8-8522a512e8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c41732-6f6d-4203-98c9-30e0f7c23649",
        "cursor": {
          "ref": "9216fe3f-2ab7-4eb6-84e6-a19c6cda3c19",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7b9f55e8-70c6-4804-b5ac-b2438093caf6"
        },
        "item": {
          "id": "18c41732-6f6d-4203-98c9-30e0f7c23649",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e8020b92-cc62-4ed5-9766-05bc69d387c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce5453b-0bac-4517-b0c6-03c1c434d0eb",
        "cursor": {
          "ref": "5e0ca79e-0218-4d86-bfdd-5b600bf30845",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "417e1a52-480b-4fce-90fa-33b0d879ef85"
        },
        "item": {
          "id": "6ce5453b-0bac-4517-b0c6-03c1c434d0eb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "209c30c6-a4c8-4bc0-89b1-cb28a89d961b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c92052-f58f-44f0-8044-fd4ec73bf09c",
        "cursor": {
          "ref": "468d96a8-96a3-4951-ad61-69ef04c8344b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d6876d85-6da7-445d-8e93-51f9b592b055"
        },
        "item": {
          "id": "c4c92052-f58f-44f0-8044-fd4ec73bf09c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "59e63ff7-5dd8-46f3-9808-557a5afcf047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcf79c3-bcea-4197-9978-bf377150e1fd",
        "cursor": {
          "ref": "9bf9cbde-1f20-4755-b629-c45827a44e2b",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "131de33b-127d-45c7-b05b-d27b9b4852a4"
        },
        "item": {
          "id": "4dcf79c3-bcea-4197-9978-bf377150e1fd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a1b47308-11ee-4150-a296-c475010f2129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb16391-22d8-4c1e-9701-da5dcb7e0ecb",
        "cursor": {
          "ref": "080be374-52fb-4812-bf3e-c859c4932ee4",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5b1f502f-c9be-4e40-a147-df44a028928d"
        },
        "item": {
          "id": "0fb16391-22d8-4c1e-9701-da5dcb7e0ecb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "39c5bb10-aa30-46d2-9ed4-ace79c247ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50009050-8f42-4707-bb32-edb2a8122672",
        "cursor": {
          "ref": "39bd7001-046d-4a94-b44b-c89c9fcc9a34",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8c65e723-3bb4-4b15-be9b-b1f7d09a3109"
        },
        "item": {
          "id": "50009050-8f42-4707-bb32-edb2a8122672",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e1e312e8-6afa-47d6-ac8d-05e00c550055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ecb2b5-7244-4008-9d06-cc67eeb27b2d",
        "cursor": {
          "ref": "5125eb07-f264-4647-a9e3-9739f8057a90",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c12c2765-a070-4073-9eba-5a880f3c51e0"
        },
        "item": {
          "id": "f4ecb2b5-7244-4008-9d06-cc67eeb27b2d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c003e7d1-8965-4969-971d-0aafbdd7c2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64301fa-8767-4a0d-8b68-2b24e2de6bbb",
        "cursor": {
          "ref": "3c7b4bde-66fe-4e1e-a576-def4dbe5eadc",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a28b5c08-7d8f-439f-a918-8bdacf5fb2f8"
        },
        "item": {
          "id": "b64301fa-8767-4a0d-8b68-2b24e2de6bbb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f5875ebf-f55f-473e-9835-95a0fe4b01b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b753f4b-1a92-4938-8ca8-d9d38b9509cf",
        "cursor": {
          "ref": "d5e99623-7423-4870-8aff-dabfd4aa20c0",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8a5f2223-6612-4ffc-a833-39e98165c844"
        },
        "item": {
          "id": "7b753f4b-1a92-4938-8ca8-d9d38b9509cf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "fba816a5-be5a-4934-8ce9-05a80fce7095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61333ee4-9794-43f4-8241-691e2f6b3d72",
        "cursor": {
          "ref": "6737bdb7-f754-4c81-8b25-5b740048f322",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c933e8f5-14ba-4096-b69b-7f015d73dbbf"
        },
        "item": {
          "id": "61333ee4-9794-43f4-8241-691e2f6b3d72",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "39cc1719-e576-4caa-9d7f-7ffd344fb093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b755c6-5f84-4123-96df-e031143eff2e",
        "cursor": {
          "ref": "52af0c0b-aec4-4c8f-83bb-e1a7f52121bd",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5b278627-6c0d-4f1c-8bbd-95bbc284d547"
        },
        "item": {
          "id": "99b755c6-5f84-4123-96df-e031143eff2e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "916f7c3a-cad9-4905-9698-ba77825777dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4702cdb6-c816-4c09-9c51-29ce364f32ee",
        "cursor": {
          "ref": "8ea3853b-bb4a-4ac9-9005-953a1595df50",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bbf89b01-5364-4760-9f81-07e60b0fc154"
        },
        "item": {
          "id": "4702cdb6-c816-4c09-9c51-29ce364f32ee",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "883bc9f3-d3c9-4633-bb88-6053dd20a902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6c1399-8011-40ac-852b-e6cb61bbbb43",
        "cursor": {
          "ref": "70276e9a-9acb-4c37-8383-794e29ded03a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9d29ebae-7929-49a6-a866-b7b4ebbe034c"
        },
        "item": {
          "id": "1f6c1399-8011-40ac-852b-e6cb61bbbb43",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "923aee09-e080-4d6e-9389-f8cea2089f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e35add-1600-44ca-abba-4a6def707653",
        "cursor": {
          "ref": "d00f32b2-f4dc-4ff7-b721-3cb8f8eff360",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d215c08e-6fdf-4607-b5b4-4d836226acd3"
        },
        "item": {
          "id": "d4e35add-1600-44ca-abba-4a6def707653",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e17a1ed5-1fe7-4efc-8215-403898ee8427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef8bfbc-8d7b-4211-ac2c-ed2e559ba4ab",
        "cursor": {
          "ref": "c71fe2e6-6810-47d5-987f-91d049183d6a",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "02eb46bf-ab32-4c85-87cd-e7b5cd9472c6"
        },
        "item": {
          "id": "cef8bfbc-8d7b-4211-ac2c-ed2e559ba4ab",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7e5b1b60-326c-4643-903f-f1c794cba707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b2dcd8-61be-4d8f-abfd-d8d46624076b",
        "cursor": {
          "ref": "560e114b-e1c5-44b6-aac3-2116b3a1e35e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3bdf77c8-f6c6-47c3-95e9-d2bd7fbb4051"
        },
        "item": {
          "id": "76b2dcd8-61be-4d8f-abfd-d8d46624076b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b344af21-53c0-4b61-ba89-a6d9ee877ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c952d49-9fbc-431a-9aa8-bb2ab4a1869d",
        "cursor": {
          "ref": "593b54c9-302d-40be-8e52-e8d31e2ba337",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3469edf8-9096-430a-acc2-9a16f45cafde"
        },
        "item": {
          "id": "8c952d49-9fbc-431a-9aa8-bb2ab4a1869d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bf703064-4439-4b61-a1b7-cbf6e29d39ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73b8c99-5bf8-4da0-ba8f-c2e5f5b88bf4",
        "cursor": {
          "ref": "1058985d-8e86-4275-b3a5-1937d7a52d11",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "95cd71c7-ce68-4b94-b335-023054758779"
        },
        "item": {
          "id": "c73b8c99-5bf8-4da0-ba8f-c2e5f5b88bf4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "82526afe-df00-4aa8-9ff9-239d64fa5c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7b41c9-bb9d-4432-b532-8160751adbc6",
        "cursor": {
          "ref": "0fbe572e-bfba-4da1-ba9c-b137bc08b327",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "48a5a2d1-c39c-4472-87af-88619d62b143"
        },
        "item": {
          "id": "2b7b41c9-bb9d-4432-b532-8160751adbc6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f343a61f-a40c-47a3-a1a7-4b4ddbade0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70e52c5-5706-4917-aff7-e725f7098719",
        "cursor": {
          "ref": "0effb0da-47d6-4532-a7bc-1ea3fb35b960",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0ffc6c7d-8a83-49f6-adf5-df054dbbc376"
        },
        "item": {
          "id": "b70e52c5-5706-4917-aff7-e725f7098719",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fb381482-00fc-4fc4-ade5-9f83ab1b638d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba044449-984d-4afe-8ada-fa1e106df57a",
        "cursor": {
          "ref": "09c37d89-4284-4051-9ed2-50fed8aa92b2",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "afd37ca2-3757-4afe-ba2e-27e8cc6621bf"
        },
        "item": {
          "id": "ba044449-984d-4afe-8ada-fa1e106df57a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8b0a75df-5612-4e3e-8828-886b3627080c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586a544a-522b-411b-a410-0ffeafe0e2c0",
        "cursor": {
          "ref": "2ac2cdf4-4dda-4026-97cc-4d87086e90f8",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9986ab44-09db-4675-aa94-b99f011e4724"
        },
        "item": {
          "id": "586a544a-522b-411b-a410-0ffeafe0e2c0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ca812449-d789-44c0-8454-e5701bffc704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2a4c8d-2fda-431c-a211-ee7251c6425b",
        "cursor": {
          "ref": "b5c23d7b-98f1-4244-b2c4-c2f8f7127f6c",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "81018d02-1ee5-48be-8d9c-b31272fbba55"
        },
        "item": {
          "id": "9d2a4c8d-2fda-431c-a211-ee7251c6425b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9968cc31-6c17-4326-86d9-d70df55770d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eaed4e3-c8ba-4c2b-b044-3271dbbb09df",
        "cursor": {
          "ref": "d7a068b1-5d07-4bd7-ae43-74ece21a7ce6",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c315d699-d5fc-464b-ba3d-dd18dba82ef0"
        },
        "item": {
          "id": "6eaed4e3-c8ba-4c2b-b044-3271dbbb09df",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cc3ee83c-edf2-43a9-be04-c50066f3780c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d2b24d-a395-4177-8f70-9427f29311e2",
        "cursor": {
          "ref": "ebf51e35-ea4a-434a-84a8-214ce7c35b68",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "01422b09-b33e-454e-8d02-9764cf1af208"
        },
        "item": {
          "id": "50d2b24d-a395-4177-8f70-9427f29311e2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "893a9460-5eaf-422a-b151-49de6bbb1b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53c00f6-a659-4d19-8869-4eb6c555e93e",
        "cursor": {
          "ref": "87121ba2-b974-48ca-b42e-c31759e457a5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "95795b30-2d76-472c-95c7-7bd69920ea9d"
        },
        "item": {
          "id": "e53c00f6-a659-4d19-8869-4eb6c555e93e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "239d3b6c-0326-4b04-ab7e-f0d3dca0c43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d97701e-8dcb-48e3-a46d-2bd4c2e7179f",
        "cursor": {
          "ref": "2cb7cb30-855f-46aa-a335-06f681be4346",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1c255c50-2d8e-40b1-9159-1f7ff6902e45"
        },
        "item": {
          "id": "0d97701e-8dcb-48e3-a46d-2bd4c2e7179f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6ce5203d-1c3d-4adb-9cdc-e01e7ec6dbc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73e2ee1-6150-49f0-a92f-20e331f2aec8",
        "cursor": {
          "ref": "f445715c-2171-41a6-8f70-2d1cb2cd558b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ce4496b9-23b0-4286-a143-fc6e131d078e"
        },
        "item": {
          "id": "c73e2ee1-6150-49f0-a92f-20e331f2aec8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e2c73671-a591-4701-aafc-e52f02f34981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174bfc94-4a64-40e8-9765-ad13cd1e4883",
        "cursor": {
          "ref": "88ad207a-c541-4278-bf7e-13b22e9a4fe1",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c08a1698-5270-4fe1-a696-8c9f7905d142"
        },
        "item": {
          "id": "174bfc94-4a64-40e8-9765-ad13cd1e4883",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c751617d-10af-429f-a1f8-8996131a43e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b79369a-33ec-4c8e-a933-4abb3f3d161c",
        "cursor": {
          "ref": "ace92707-37e1-45e6-8fe5-d7d1e63768a4",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "00e6b4f1-28dd-4371-9a82-e5af95825a49"
        },
        "item": {
          "id": "5b79369a-33ec-4c8e-a933-4abb3f3d161c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a38c1a3c-cd27-4ef5-909c-8b002f263757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636de42e-9c52-4d59-b66c-a50956170af3",
        "cursor": {
          "ref": "d38e1ae6-f760-472b-a72e-ece3e338c758",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a9a61b79-abd1-436e-9604-ee942d2a74e1"
        },
        "item": {
          "id": "636de42e-9c52-4d59-b66c-a50956170af3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b76f1cad-7f06-4d92-87a4-7666660faa6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46964f12-8a56-4739-b4d6-70587f0e7328",
        "cursor": {
          "ref": "62e998a5-7f8b-4c7c-b146-3b1c29b2e744",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4000990f-94f6-4815-b042-89256da02ba8"
        },
        "item": {
          "id": "46964f12-8a56-4739-b4d6-70587f0e7328",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ece72110-0509-43c3-9214-87ccdd991abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc375e76-5b85-4d06-b894-bfaf5e7a4389",
        "cursor": {
          "ref": "3f2fba12-abb7-4aa9-adb0-cc3b62a3de4e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "83f92092-f43a-44fa-b906-d5b945a992cf"
        },
        "item": {
          "id": "dc375e76-5b85-4d06-b894-bfaf5e7a4389",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ac7916b2-171f-43d6-82d5-4ed01ff5d637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ff4749-b3a2-4ae5-959e-f73dbb4cec48",
        "cursor": {
          "ref": "033f22bb-b5b7-4fe3-9001-66c25aa4d953",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1418e752-f245-4b4d-a9f5-975bb7b835e4"
        },
        "item": {
          "id": "c9ff4749-b3a2-4ae5-959e-f73dbb4cec48",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "19002971-0797-49f1-88a9-0856ed60c10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5182bff7-ef83-4889-8c99-f1196ba973af",
        "cursor": {
          "ref": "478dd7ac-9e17-482f-8394-78aa09f2f9e6",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ba3082d2-899a-40f0-b01a-ecfdf0782df1"
        },
        "item": {
          "id": "5182bff7-ef83-4889-8c99-f1196ba973af",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8eca8952-e3b9-4c0c-a80f-94f3b57645d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcd038a-9bb0-4e7d-9eb1-e69b84d0c623",
        "cursor": {
          "ref": "fbd443e1-5f0d-44d2-a668-6396b0ff7313",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f6ea1089-0510-464e-ac2d-3f8887a0e80d"
        },
        "item": {
          "id": "2fcd038a-9bb0-4e7d-9eb1-e69b84d0c623",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1cbd56a6-626d-4d36-96a7-7f8329dc0c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c0dfe4-f81b-43a9-ac0d-eeb27ea254d9",
        "cursor": {
          "ref": "66cf6ea6-7445-4130-9538-e2928c836827",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "07aad105-30a5-49f8-a85d-3923a9233fc6"
        },
        "item": {
          "id": "d1c0dfe4-f81b-43a9-ac0d-eeb27ea254d9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "aa699921-2d8c-44d2-a89c-24c1bfe6c10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b65972-2831-469d-9491-9c82b500683c",
        "cursor": {
          "ref": "2bf5c7c6-a58a-431b-a3f7-936b5bdab6a1",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2978d487-5eac-4c56-ae24-336f0f8c2922"
        },
        "item": {
          "id": "06b65972-2831-469d-9491-9c82b500683c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bffe8e82-5d1d-413a-9cf9-0270d814dac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e701d9b-7b9f-4dcd-b64b-f173a295cc70",
        "cursor": {
          "ref": "4aa63e35-72c8-47ac-a7f7-a76ecb464056",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "978afec2-4a98-4839-ae49-0652704e5622"
        },
        "item": {
          "id": "7e701d9b-7b9f-4dcd-b64b-f173a295cc70",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "de67b795-92a2-4fd0-935e-4ba25d244c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca138c32-f314-49fd-8d71-b28b65d84436",
        "cursor": {
          "ref": "a2d47f67-9f1c-49ed-a7e4-6f4f8792e587",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3c828289-bc0b-4ad2-85c9-3e5bfcbf527e"
        },
        "item": {
          "id": "ca138c32-f314-49fd-8d71-b28b65d84436",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a40b9fb9-6d49-463a-9fb3-5c2fb8a695a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be018a51-e073-4ab7-afad-7c8464b0e3f5",
        "cursor": {
          "ref": "894f7b95-9080-4e74-833c-0d117385f326",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "499c09a0-5423-42bf-8caf-49a226ec66b4"
        },
        "item": {
          "id": "be018a51-e073-4ab7-afad-7c8464b0e3f5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4ae1a816-3245-4b19-9fba-78bc24f38004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123f17fd-f361-4ac6-9bec-e3c6b4df7c55",
        "cursor": {
          "ref": "e012a947-b045-4356-8aaa-000180d84e10",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c6b5e339-baa7-4f57-89c3-7a6eab29bacc"
        },
        "item": {
          "id": "123f17fd-f361-4ac6-9bec-e3c6b4df7c55",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a8f63aa2-5955-459d-8369-5e8321617e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55685eb-e2ab-44a2-bd72-516b5827d74f",
        "cursor": {
          "ref": "f7aa007e-81c0-482a-927e-4efd40aea399",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "59333a97-f13f-484a-9ddc-598403b4f53c"
        },
        "item": {
          "id": "c55685eb-e2ab-44a2-bd72-516b5827d74f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0901dabf-3478-4297-aa4f-3bff4e52e8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a353c9e7-0f17-4de7-88df-1526561afe3d",
        "cursor": {
          "ref": "ee6cdf93-a460-43bc-9222-25ef15bbfb96",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5145942d-41c2-4f82-b695-82219f402196"
        },
        "item": {
          "id": "a353c9e7-0f17-4de7-88df-1526561afe3d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "641cf7b5-6444-4811-b52e-e6024f4956ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118d2d56-b175-4b1a-8d9d-a75f961707d9",
        "cursor": {
          "ref": "09d64bbb-090a-4b1e-ba92-0488fdd7888a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1021e199-80d5-4602-9997-b81ab4b7cc18"
        },
        "item": {
          "id": "118d2d56-b175-4b1a-8d9d-a75f961707d9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "40d0e92d-1217-4924-b833-c73c640202d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7a2d78-bffe-46ed-837e-4a5e9b8bf8c7",
        "cursor": {
          "ref": "3e6df1c8-13c0-46f5-bc77-394035662e91",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c1cbcb07-5d9b-430b-9e83-da5d4165f8c5"
        },
        "item": {
          "id": "9b7a2d78-bffe-46ed-837e-4a5e9b8bf8c7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b9a68290-ac6a-466e-b0cd-00d528541b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c6e1b7-cf78-430b-a47b-1110fa5237bb",
        "cursor": {
          "ref": "6683f0af-b879-43bd-b33d-b41cfd8530ed",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cc123f0a-5d09-41e3-8f87-a98a66ca0627"
        },
        "item": {
          "id": "09c6e1b7-cf78-430b-a47b-1110fa5237bb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3c2932f5-cd6c-4856-abe6-06359cc48f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4a1700-01ae-4ceb-ac1e-1117d11ef09d",
        "cursor": {
          "ref": "7443b1ec-2fa5-45a5-a1e7-5a876e028a2e",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e4ab5f7d-035c-4bcc-97ab-82051cf14b2a"
        },
        "item": {
          "id": "ec4a1700-01ae-4ceb-ac1e-1117d11ef09d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e6810d69-a0ad-4bad-9a51-f2b6eaa09edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88362a0e-2186-4483-8834-50dee7559b4f",
        "cursor": {
          "ref": "1974e4f4-590a-4330-adcd-ded7af6298b5",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ba27faa4-5049-4aee-a897-f261eb242c13"
        },
        "item": {
          "id": "88362a0e-2186-4483-8834-50dee7559b4f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0836b976-526b-4f9b-a031-b19488763dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc9c376-189e-46d8-8bb1-85bc9a2f7a67",
        "cursor": {
          "ref": "23b813ce-c2c9-4507-ab22-381af2f0da25",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "86c69753-6d13-4cf8-a37f-ab95164f3026"
        },
        "item": {
          "id": "cbc9c376-189e-46d8-8bb1-85bc9a2f7a67",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ae3142b4-cd21-4796-a4c3-e1d1959bb997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e080ed6-d0b7-40e8-85ab-975998efaa36",
        "cursor": {
          "ref": "27514769-7363-4f67-b3a3-d79ff78862e5",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "24bf3c29-3f06-4158-80b0-b5b00048ef6b"
        },
        "item": {
          "id": "2e080ed6-d0b7-40e8-85ab-975998efaa36",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ffc9d195-4e1e-4efe-8fea-7fe604b49d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1512111c-9b24-4005-a2dc-7f84b504ddc9",
        "cursor": {
          "ref": "6998f3cb-6c78-42be-9a1a-3bc2b5608b68",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ca605e77-a966-4202-81da-ac2a28774d5b"
        },
        "item": {
          "id": "1512111c-9b24-4005-a2dc-7f84b504ddc9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "599c1149-fac6-4d93-ab14-8433219ba12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d65e89-95f1-47ea-b57c-01a529e7a9eb",
        "cursor": {
          "ref": "77210d2d-1e71-435d-9eea-68d384f50d94",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5fbc4a3c-8f9a-46ee-9deb-827e703a1085"
        },
        "item": {
          "id": "68d65e89-95f1-47ea-b57c-01a529e7a9eb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "93a46ab2-88dd-4f7c-96ac-96b8eb3d2761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ae9b92-85a9-4d14-b21c-b4651902cc8e",
        "cursor": {
          "ref": "fcbccdf5-4486-4c69-91f8-c9446b9f0de9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f17f1750-763e-4fd7-85c1-d425ade58424"
        },
        "item": {
          "id": "96ae9b92-85a9-4d14-b21c-b4651902cc8e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8e1c5573-a73c-46b2-9c3e-55514a83c6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8c1ac6-fc26-44fc-98d1-27315f27af7b",
        "cursor": {
          "ref": "f79a765b-9e1a-43ee-8aef-7db22c0caaee",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "42707db1-953d-4e5e-96bd-1334067b149b"
        },
        "item": {
          "id": "ed8c1ac6-fc26-44fc-98d1-27315f27af7b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f0dde9c8-a022-403d-acc4-663612b01d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755a0313-efd8-44dc-a8e5-56a92e323ff1",
        "cursor": {
          "ref": "b0615956-160a-43fc-816e-9eaff10c4cc0",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4f895a87-d708-4568-9e3d-2e934b08d01b"
        },
        "item": {
          "id": "755a0313-efd8-44dc-a8e5-56a92e323ff1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "206a3323-a40a-4cfd-b7cd-0cb6304bf46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d839413-fcef-4dab-8486-a11c6632f723",
        "cursor": {
          "ref": "be0bcd2f-94c4-45b1-8902-7a18283ee546",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "96a59b41-e912-44f3-82b0-f254fe6678ea"
        },
        "item": {
          "id": "5d839413-fcef-4dab-8486-a11c6632f723",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "27769b52-b261-415f-9591-9c811c4e0dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1422c2cf-916d-4862-8cfb-5d4560ca472b",
        "cursor": {
          "ref": "e04a0fde-e130-44b6-9c8d-0a0abbe98a91",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "65716921-1520-4782-9598-204b236e08ce"
        },
        "item": {
          "id": "1422c2cf-916d-4862-8cfb-5d4560ca472b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8b52ef71-bff9-4b09-9ced-772075534312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e5d2be-2394-41b3-8bf1-7e83f5dc7a14",
        "cursor": {
          "ref": "602bbc47-5df4-4e0d-9be4-66a05508b905",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "32a80f9d-aa6c-4e83-aa2c-f22f12af01eb"
        },
        "item": {
          "id": "85e5d2be-2394-41b3-8bf1-7e83f5dc7a14",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "aba478ee-f1be-415a-8de3-227d2df48677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fb52cf-e89c-40d7-a9ce-d89a763b8543",
        "cursor": {
          "ref": "c2698dec-43ab-408a-a996-ab5b77cda3eb",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "75fd7b8d-99c0-4db0-b4a1-542cfc3b4371"
        },
        "item": {
          "id": "96fb52cf-e89c-40d7-a9ce-d89a763b8543",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a1d8bce1-ba7c-4bc6-9a83-b1ff6602075c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e052fef6-1e7b-4dbd-934f-a87cf4d7f948",
        "cursor": {
          "ref": "7099b0ce-0654-408d-9936-641c15a3fd1e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "434eb419-d665-4f0c-9f67-3e91ab3148f5"
        },
        "item": {
          "id": "e052fef6-1e7b-4dbd-934f-a87cf4d7f948",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "924ad65f-c84d-48df-8d75-dc3d1e3fe452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b85cb52-55d2-4d73-b77f-402047ef7405",
        "cursor": {
          "ref": "aef005a0-b598-4fe9-8bc5-1b590350c85c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0b2a5484-12b9-4d99-a1ea-bea249575e5a"
        },
        "item": {
          "id": "2b85cb52-55d2-4d73-b77f-402047ef7405",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "77b77c94-af6f-49e2-810f-d3e3d1a2a3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d60665-493c-43aa-a3cb-f30f75747db0",
        "cursor": {
          "ref": "652ef8fc-43f3-4d7d-9385-9d63299891a0",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "03467514-50d3-4bcb-b9d2-02a2ad46f633"
        },
        "item": {
          "id": "15d60665-493c-43aa-a3cb-f30f75747db0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "600543ec-c8ce-4054-8f46-37e1c5377e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134c91f5-af33-4569-892d-f9bd7debdf93",
        "cursor": {
          "ref": "84c8d037-aa54-4913-85af-828538e07891",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2742caeb-1dd3-4578-9f91-e0dcb54dc529"
        },
        "item": {
          "id": "134c91f5-af33-4569-892d-f9bd7debdf93",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "69b4d04c-7f16-4b57-8a0b-e02e6320db75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa6085d-edfc-42fa-a26f-119db5f8ef23",
        "cursor": {
          "ref": "559f52ab-6b88-4dc7-9ffa-9894f0314aa1",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a199689b-12fe-4dc7-9ae8-9d70efdf140e"
        },
        "item": {
          "id": "7fa6085d-edfc-42fa-a26f-119db5f8ef23",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "dea0947a-cad2-4042-8843-5d4e4c077b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30c4d0d-bb5f-4697-bd93-1bc34714eb82",
        "cursor": {
          "ref": "53a14ba0-e3e5-47cf-bf56-2309ee63a055",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "dcf9810a-9943-47d1-b050-ab4003e56e43"
        },
        "item": {
          "id": "d30c4d0d-bb5f-4697-bd93-1bc34714eb82",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9af0a0b2-879d-46f9-8741-19f8b0d741ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd747843-04aa-4d76-8ff8-a0e24b4e3b10",
        "cursor": {
          "ref": "fcd26269-ac55-41da-83aa-a628a2472288",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "249f4128-3e88-49ed-93f1-3d1c5b1923ee"
        },
        "item": {
          "id": "fd747843-04aa-4d76-8ff8-a0e24b4e3b10",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c10b4cf6-0c13-44f2-915a-090d12b5985b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6ca4f2-36c8-44fe-b742-4fd3100c5f75",
        "cursor": {
          "ref": "355b2199-a6dd-48fd-a90f-3efaefac8bff",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "6e924c28-5405-422e-8cc5-6dc0ccdddd39"
        },
        "item": {
          "id": "4f6ca4f2-36c8-44fe-b742-4fd3100c5f75",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ec0d5449-5427-4229-b531-c124cf44dbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f0fa62-7109-4d31-8c8d-a788805843ea",
        "cursor": {
          "ref": "b69aae8c-e5f9-4dff-afb0-34ecf35acea8",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e382cf7a-7889-425c-af7a-24cbc49ca326"
        },
        "item": {
          "id": "88f0fa62-7109-4d31-8c8d-a788805843ea",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "92761063-aca1-4d9b-baff-08dd0cf6e386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8001a34-2733-4c30-9ef6-e421f63199ce",
        "cursor": {
          "ref": "fc4bb259-7165-402e-8e52-d03972c3cbf7",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "928f0b82-e1cd-437f-8a73-1d72fac4d12b"
        },
        "item": {
          "id": "a8001a34-2733-4c30-9ef6-e421f63199ce",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "18095cb9-b440-4adf-a0c5-9fe24322238f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e909b24b-44e5-4422-92b0-f7dd4fb22c1e",
        "cursor": {
          "ref": "6a7ab782-3989-4647-a3cd-f874dc536474",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "3fdd8e99-034f-404b-aa6b-50e7dfb7b4ba"
        },
        "item": {
          "id": "e909b24b-44e5-4422-92b0-f7dd4fb22c1e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7e0c9000-4af8-4bec-a193-f039e5b228b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3223dc62-ad35-4c1a-b4a3-ea201ccd98f9",
        "cursor": {
          "ref": "bd0fb0ac-9e64-4cb9-a83c-16a4c64b3e37",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4b1d715d-c1d7-419b-a2df-5b7661fd425b"
        },
        "item": {
          "id": "3223dc62-ad35-4c1a-b4a3-ea201ccd98f9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9a265cb3-f189-4c99-ab9c-636096cf8b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37056e3-acd3-477a-ad6b-f74b74557ea9",
        "cursor": {
          "ref": "f0c9d998-a50e-4ffd-9e6e-3518562b906e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ffa0b515-4cd7-4248-9936-f83185381011"
        },
        "item": {
          "id": "d37056e3-acd3-477a-ad6b-f74b74557ea9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9d614c31-4cda-4367-bccf-5b3d9345a77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bdf1c8-67aa-4069-9ba1-a599b5442375",
        "cursor": {
          "ref": "ec21d20b-b471-4df3-af43-5bf1045ba763",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ebe438de-ea06-4ec3-a7fe-1d254a08bac3"
        },
        "item": {
          "id": "02bdf1c8-67aa-4069-9ba1-a599b5442375",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9da57ca5-e7d0-4659-af71-9b652111c4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa0a661-4232-413c-a106-ee86a62d5011",
        "cursor": {
          "ref": "5946692a-b50c-4ace-a92b-a8280249fa37",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "de8aa979-7000-4ac9-b3fa-dbfe4fa67897"
        },
        "item": {
          "id": "faa0a661-4232-413c-a106-ee86a62d5011",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5deb2a2e-82e6-4a6a-8447-0fb4857983d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39e384f-bb15-4d26-9dde-6752f7c1ebca",
        "cursor": {
          "ref": "7768e5b7-99f3-44de-8fb8-544823519817",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "76d0f43d-66f8-4f76-bf9d-9b01eaa4d234"
        },
        "item": {
          "id": "e39e384f-bb15-4d26-9dde-6752f7c1ebca",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9ee8a48b-431a-41d0-9509-a8ca450994d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f675ffbf-d99d-4014-bd89-381b75b770fa",
        "cursor": {
          "ref": "17fb5998-8d70-40e7-a1bb-c667cc9883ab",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d0750e92-c678-4d7e-a9eb-e98d41b75c38"
        },
        "item": {
          "id": "f675ffbf-d99d-4014-bd89-381b75b770fa",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "29ab6783-98d1-42ff-94a7-c9a45384e400",
          "status": "OK",
          "code": 200,
          "responseTime": 135,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4370dae-314a-4ec7-9fe6-4712ac344f58",
        "cursor": {
          "ref": "9e1a799e-3f4c-4683-b981-a882fc30c50f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4c04c131-3eeb-4068-9db3-9efd5838d8a4"
        },
        "item": {
          "id": "a4370dae-314a-4ec7-9fe6-4712ac344f58",
          "name": "credentials_verify"
        },
        "response": {
          "id": "88ec0569-ea39-4dea-a406-0a72b1bdaa92",
          "status": "OK",
          "code": 200,
          "responseTime": 1519,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0e4895-fdc8-460c-8774-9cb67cff6d44",
        "cursor": {
          "ref": "19aeb4d1-a316-480d-b16f-30b3fbfed089",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c14fbea5-cc0c-4f44-b309-fd9d1a6ae232"
        },
        "item": {
          "id": "ea0e4895-fdc8-460c-8774-9cb67cff6d44",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "416cf34b-ea70-4bce-8c28-c1d6c43f8bd3",
          "status": "OK",
          "code": 200,
          "responseTime": 1311,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3551c0a5-d328-4dc0-8a3d-aec1337d7b33",
        "cursor": {
          "ref": "a0d6457d-5089-408b-a3ab-884ac1223189",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "931ce52c-190a-4837-8fe2-951c3806e0db"
        },
        "item": {
          "id": "3551c0a5-d328-4dc0-8a3d-aec1337d7b33",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "96799821-7c5f-443b-a2e3-b43432dfeafb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 270,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3551c0a5-d328-4dc0-8a3d-aec1337d7b33",
        "cursor": {
          "ref": "a0d6457d-5089-408b-a3ab-884ac1223189",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "931ce52c-190a-4837-8fe2-951c3806e0db"
        },
        "item": {
          "id": "3551c0a5-d328-4dc0-8a3d-aec1337d7b33",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "96799821-7c5f-443b-a2e3-b43432dfeafb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 270,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be801c9-34ba-4db2-9599-1de8a464441f",
        "cursor": {
          "ref": "2f24e7ac-b404-4100-b526-36c5313872b1",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "69887441-0ae1-426e-b266-9f0dbe152e5d"
        },
        "item": {
          "id": "5be801c9-34ba-4db2-9599-1de8a464441f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6f8b4357-93c1-4d74-aeed-ffcb4559cc58",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b8ecca-18f7-4780-ac41-7ef8c721d3c7",
        "cursor": {
          "ref": "d65964c3-ebf4-41cb-a179-d990ac432ff8",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "78584c7c-c98c-4a17-b900-6f9fd2cbc2ba"
        },
        "item": {
          "id": "50b8ecca-18f7-4780-ac41-7ef8c721d3c7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "639d3a16-94dc-4735-9879-2ff9f8ba9b17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}