{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c80b4cbb-cfe5-4ac8-b4b2-0989517aa50e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cbc75d04-3945-4c44-b163-92cab98ee20e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e45c664-2150-4b48-a39d-849037b0121d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "20ad10c0-b122-4d9d-a9d0-0f7f58ea117f"
                }
              }
            ]
          },
          {
            "id": "696962cb-b02f-4213-9f7a-3e8ec8bffc71",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc73b5f6-d253-4b7c-a4c7-a6bc0cd63ed6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "28981fde-8f22-4334-9a5a-780a409e4746"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b746ad37-44e6-4b7a-b84e-9f1cc9988d7c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "77055eb6-82c4-4f0c-8d72-43058162a661",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d7bfe8af-9f82-4a91-b231-4abd2d0edcf0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3db5463b-b2f4-44fd-8d71-c0101859dd68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f05fb194-28dd-4989-b24f-1b01d2f82cfd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e120943-cde0-4b35-b20f-913c3a8bcf22",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ef7ca31-a394-48ce-8b47-983a44a366b3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "92f762ba-ef00-4d32-9db0-1a094fa974d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f600194c-8bbc-4377-98a1-e19e8d2896c0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adeec0c3-52d0-449e-a94f-e4593c6baef5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "13ff19eb-9835-4acf-9e23-ceb6fb295402"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8291ca1-5115-4ce8-9604-97f837d11530",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b5c1b7e-06df-40f8-a47a-9f212fc3cc21"
            }
          }
        ]
      },
      {
        "id": "30ef9b6d-15e6-45b3-b712-c3aded63aa4d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bc32a1ef-7873-4d2c-9b4f-0ec37ddb5a4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00fb7ec9-88c0-44bf-b5c2-091ba8ed5458",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7e172c50-c2fb-428c-93c7-c0e5895dfcb7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aad4797-3b60-42b2-bbf4-4e8bbdcd4a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0578b9bc-9647-4684-bcd5-9dfc15f1068c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281d58ad-7de3-4997-a47c-72d307008b26",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf32ad9a-64ca-4be5-b4bf-4247e3499692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05913bc4-71c8-4dde-9a8a-b9c25333b3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59db82fd-916a-4494-81ac-f0abadde3a0c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79c52ae-2362-4255-b749-205fdfc310b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cecb0f59-bfbf-4603-86ac-6cc5e3f116ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f52a7258-1488-4b55-a0d9-121f43a46184",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3aafbe4-bc6f-4a67-9b2e-1641c53701ee",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d50525-2830-4fba-bfb7-b54797d4a9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0734453-627f-4071-b8ce-04bec5ace57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62edd0d-dc48-4300-afef-309c3499687c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf92e62-8f71-4b67-b5b7-22cae2ced896"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ecbe0df3-ed83-4b00-95b1-2750d1164fdd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6c7e468c-c36a-4f30-9d22-f8e44369c851",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8f6b5d9-b27e-463d-8145-67aeaf97388b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4dbd9040-244b-480e-a04d-e4b65f761039"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95d816a7-2ba8-47d0-8dcf-10ee15db3ab7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ae636c9c-71f0-4b38-a0e6-e5c50ac1085e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e78fc5e-1ddd-4acd-9bee-7995f7ba40ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be775405-e8a0-4637-bbf9-2729890bd63d"
            }
          }
        ]
      },
      {
        "id": "3da60bcd-466c-4557-855c-80352ecda639",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "076b2ca0-aa78-4323-ab60-c21e11672241",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8de93227-6172-4e54-bf35-c93f44fe5372",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b3211e01-a2ab-4307-8511-e2eb5609d1df",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1054983e-04be-4b0b-ad6b-47ffc4ee1b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e153d67-81db-4a96-9095-e1474dc394dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772fd4bc-d133-4e3a-a1b3-2da933f34a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "449c8ee0-3c38-46e5-9c06-542210d9c2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f8a604-80d7-43ce-a56c-e60bba725583",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b6c7e3-7ff4-48ae-ab48-e2232325a440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ff102d-5445-4210-8e6d-9459ef50e14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c0e137-02e9-4ccc-a182-f5956ea2a655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85ff7c4f-bff0-48b7-b498-602653c02bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d411161e-17d8-42e4-9422-68f56cbbdcb4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf21bc73-1412-4ee4-ad89-ab30a5dd06c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81381479-6be6-4aea-b70f-574ddfd1ebf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8b5e56-470a-443c-b1f0-8e3aad512753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "678ec33a-9b48-48b7-949d-bbb37ad372f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9217f2b2-715e-46b2-b9bb-b6732773a155",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a649d6-cd44-45df-aff4-4c3563ad6be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c655cbf-cb70-4a82-a6d8-520b2e996674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c28ac4-82a0-41f6-9a65-202073676888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2effd100-e61f-4aa7-aabd-d801a97d895f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d436eb2-b68a-4624-b430-52781f4f8ffc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc328191-347c-4039-a9f8-77c4a05206ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed78f7fe-a880-4849-970c-249777be06ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115d0adf-dcfb-49bd-9af6-73af99e8d2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1780547d-fcc5-4f06-9b22-1c61728fb867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf76fd0-2529-4d8a-82f5-c7ac33bda3b0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d47bb9-bb16-4c9f-b51d-b6eb502b1d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dfc5b0a-dfba-4c8f-940c-10d4a7e36458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41bc20d-2d17-40c0-9c8e-8c2ccd966f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2433182e-b7b8-4c8d-89c0-5700df55a62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c343e2-68a1-4685-b417-07ee1949f5ba",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40d001b-0aca-4cc9-95e6-3ec427efbaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50fbb7b5-cf95-4b0e-b038-24197036d8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff314876-b7eb-4e50-a2a6-6aa33215e143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c5f3106-20a5-4dc7-9eb7-567be624c5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470de6ca-e4ee-4712-bdca-d31c0b36c648",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006d15ff-ecbc-41e1-8cbf-6837c4640471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17de6c5-f705-4d16-8dc3-c1d5cd82bb1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ace533-0407-4df9-9c7d-0449f8fba470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7541825f-fce3-4827-9339-b4d1528ecd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b767051-2a59-4070-888d-2f9a0a902505",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da590a2a-2488-4a48-b7a1-3b21fc1f5f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c60adf7-5486-4f3a-b9fb-b81cae0c2310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90dd0c31-61f9-4824-a5a0-98624db5186d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "282cc32e-bace-42e2-9924-8d8e0c4212fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36db4790-63d1-434a-ac5f-0d17978f7cfb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79dcb232-9f13-40fd-a0b0-02c059ca32fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6a0a0a-facf-4276-a034-864e59e45b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a124d507-1a90-4dbc-9483-aad2cda743cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "245d41e3-6202-44c1-ba25-c04e3d002deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b79949-051a-4ed0-923c-1d94ae19362c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab4f964-7af2-4ba4-a435-c2e718bb0cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dc9bda-6984-4856-a046-43dae7af2502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31971484-d547-43ba-85e8-680380e49543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50f4a843-1463-4dc3-b7a7-64a9c911fc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8ed59d-4dc1-4e67-9238-c831574c108a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd21b7c8-0f1a-49fc-8caf-3e308fd48b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f05ac9b-47ed-4a65-b558-e0e3234deaaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba64d38b-ebda-4893-af67-f9d04b4a5a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28eb2a79-a55e-4c34-a5d0-2600ebb9a967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62593aad-1c5d-431d-943d-80bf0ac4788d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e80b858-4309-4770-8fce-9e7d996cd089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6f23d5-6bdc-41b0-bc09-fa1910ca11b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5976ee-0c91-42ac-98b6-3228b47dafd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bb2446f-797b-42a8-8317-a44d12d67379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d988998-42ed-49e1-9d13-a2ac9c62cf8d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcd4ec7-8ba7-48d9-8249-8c50fea75763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ade5a34-ea0e-47ba-a9e1-85ec94fe7661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a1e843-0e2e-49c4-9fae-b5b0359f336a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b0eff2f-04ba-4631-9e13-d03dd832b562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de9095a-3ee6-40aa-a350-011e321f49db",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2026b19f-6085-4fdc-b587-e7461717208c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd6368f-57ac-4190-b331-ba2b35d47bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1620451-df19-4c2d-ac4c-ab965efd8285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a75c07d7-60e7-42b3-8ded-ccbf981ea97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae777da-8564-45d1-8004-696968604272",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb93cc8-ff88-4788-bc49-3360fda37ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be30a444-fea4-45a2-85ab-d5ca3a374cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619076a2-c83d-4bbb-9ad4-b4c557f7038d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "046305d5-0c08-4482-ada4-58e152e409af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8007e836-ffd4-46fe-9477-76e59f0e9de0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a800fdcb-7d24-49f4-a6e7-20e3a7e51409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fbe9ac-945f-41f9-b2f7-1e98fb6c9374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b905e5-2423-42c7-80bb-f2cb6894c8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d40bd92-1199-4877-8282-f60f83cab14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315b823f-b3ec-4940-b466-31ae10286030",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d976ee-8c20-42be-a3ba-f5ca7431398f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8e3cb8-92c0-4c66-9fa8-32967ea85616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c1bf29-e544-4ded-b263-a8116ea1bd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2462f899-697f-4b0d-9e67-4bb1ebafb8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502d9624-149c-4487-b642-17b1e440ab9e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd8280b-27a7-4529-969e-25494fcc8e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081897b4-f952-4e8a-98ba-11fd6e7ef8be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd7cc3c-62ad-48d8-a88a-b8cc4c475768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2715ef04-d53c-4500-b032-5f0b7e1203c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c131f963-70c1-4037-a3cc-18e1b946eabc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972175b6-ea68-49a0-8dee-9202f9c4a07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192b1e91-464f-4cc7-9f45-c52ea4052b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6524e568-3589-4974-8a61-603c7f025902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9a02b5-5bec-4b1b-8a21-abf2b1589318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e1e3ff-c676-4a81-8bf2-4465a85ed07c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31a3e75-7e8c-4ef7-86a9-05afdfae4451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17b5d45-89ef-4fe7-af53-d562aecec7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5baf917-cd5f-4eb4-b6f9-e963ccf0d9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ceb84cf-4c37-4a53-bcce-735429cbc7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5d8563-e0e8-4774-a346-80376f1ceb88",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b4daa7-212f-4d4f-ade2-e0f2c67bee10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410e6224-29fa-4b62-8a68-3b0cb10cc919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3764e3-aad3-4f91-a7e9-4bbf43955947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9667a5d4-b41d-4c41-9296-ff0f250d9993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0769b4c-8712-4824-9581-b55595428988",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895dccc0-af3b-4507-8190-d4e664a00b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3250e3-794b-4e86-ac38-e475e0d09606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90bc5e8-08a8-4ca4-a2ea-86eb1688b91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53435e50-161c-461d-92ac-64da439d6d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fd87d0-e186-4e26-8a96-b83155a1e4a2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487e2005-c126-4bcf-8c7a-e01028097ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4f8253-0668-4968-87f8-7fd05d12cd8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1936abfc-d7ec-4517-9a9c-2c9c758f1ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2920a34-9497-4daf-8828-bf7bcfc1d6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb2cac3-cd35-46af-8329-7508c42d71f8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6f216e-1e84-43cd-b8f5-0392bd5a5722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad311458-762e-4f1b-b4b2-5ec5387028e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d76201-bfe1-4111-b23e-ef4bae8587df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92af70d7-bf24-4785-b60e-ea064e06f862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf7c8e2-6f91-476d-ba96-c0539faf3f9c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50eb213-e249-4a37-acec-2c4831ffad37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107d99a4-84ef-487f-b185-d52c17a42fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02865016-d94c-4fb0-9224-4792f06a8425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc96312d-b469-4346-b1a9-cee31b21dc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399a4197-f5b9-4b3b-8544-3f2f5a0431b5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d618f11e-ecd0-48f1-a6fb-3595832fac37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e682ad3-76b4-46aa-8ff3-22e3ef91f770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a390839-ee0e-4cfa-a9d0-bb5878698e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a17b95c1-4ab4-45e0-bbb1-fd0d0a673678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5b1ae7-a313-4cab-a577-c94f5388f706",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dae069-b15a-4ea5-baf2-71739c7381ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149b024c-e0d2-47f7-ad62-71755bdd4f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9408b009-ac90-473e-8067-34e6027f5e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "698fc541-a619-474f-942a-da1b2fb96ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423ee6ad-a40c-4024-a435-5e8103c7b688",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0b372a-ef9a-4fe5-b039-ca25c05518d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15eedfc-5c92-43d1-808c-7075a2cb18f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78dbc74-78a1-4748-91d7-c6490db371e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed62ac2-ded7-4f03-b0f5-544b75568c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317da62d-b8fe-454f-900c-f3a535bc17e0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a9f6d2-6943-4694-b580-5dc2d79d38f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac4ac71-acb9-49b6-80d3-afcd8fb989f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dec9a8-db4d-40ef-a5dd-58a1934b1ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9f2158-9ec4-42bb-bf3b-f6241c55add3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04af87a2-57ee-4e30-9c34-48572856f010",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2b598b-4d0b-4f63-aa92-0ffe5c83a99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70dc0ca8-3b38-4071-85e8-38a4bbb477d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6b261b-1705-42f8-9c21-982548d793fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5edab579-33c7-4ecb-a814-044850f9b516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61fdbe9-3650-479f-8bb1-c1d4ab90147f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8798af0-a133-4f63-87d5-71e0280b1c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a35d38-e900-4c70-b7ca-553d28bc23b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeff6928-a6eb-442e-8ef9-29cbbfd25c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f5d426-a51b-485e-97b1-8ef85ab22b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75568b9b-bcb7-4e08-8be2-cca556724eda",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d3403e-160a-46eb-b5d2-5b47327d8bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bb5336-dc73-4661-9f08-5884468392a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3545c7b0-6e78-4ccf-a690-df3872bb8d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f03dc03a-65a9-4208-8e94-4681b56e8340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de4236f-e331-408d-a648-e00a8630fa6b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a660006-f5bd-4daa-949c-b1bee38a4d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee422422-bfde-4b6f-b107-2492a1ff467d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1331851-b9e7-47c3-b0ad-3a0a716fae47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "764a57f2-78ea-4af7-842f-1a3eb69337e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a883aa-fa88-4fa0-8b3f-ac6ac48c0251",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33a133b-a5fd-450e-9077-5f38a1929c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335f3410-0cfc-4fc3-b1e5-2a03ef07b43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb534dd-7639-4ce4-932c-762b3d2924c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "43408180-cf07-4b0b-bb32-1155c8c56930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba436157-b351-4b6b-a358-5a75d4aa0255",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a95889d-b738-4de6-b7b8-0f7412acddc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46b259ce-8577-4665-9599-b2256e13f9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3026efe-08ce-4ad7-8744-5e499219b5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d01fcb6e-5cde-4df6-8566-4dd082291634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7833fd-0811-45c4-b82f-7882adf2c533",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fde843-6dc6-44b0-97fe-34cf7a21f33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c85056-e972-41b3-be4f-0d589b5483cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9867d4e9-0fde-4e25-bb32-87d20a37ae58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20667852-b536-4b1e-9f1e-43007517c8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec02a645-0509-43b3-9f4f-ff6baa226283",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee56d994-32b1-4ac7-9001-92a6235b154d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8cd8a6-9bc4-406a-aa4f-0af0d9aabed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f7af48-70f9-4b87-b679-6ba8d1bfabe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "887ae81a-7e7b-4b28-b632-125237287411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae94b227-5c27-4c4d-935d-156a50836d30",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca4376b-fe53-4a88-b4f3-e7b668a2cb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7587eb50-cb41-4ca0-a195-5fcba4a46ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5445bd32-3d93-46ed-b205-3733ef22a428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "37f4b9df-f8bc-4630-ad23-c6767f087428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc7f336-ceec-4dd4-bd99-65d140ce72be",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d810c2-48ee-47e0-83c4-63ca0f863ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f855d8e2-62eb-4943-8930-e471a0ed5ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a5f393-1281-44c1-8980-0b46ee5a283d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f666a8c7-c51c-44b6-89df-61ccd4df787a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132d6857-04de-45f8-a5dd-40bd3c95bf75",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4869d1ca-4e13-4374-950d-9b89fa13aada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b227539-8f27-4425-9d01-2206e6f30a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8015a0b-e3d0-4c18-a8be-1113606faab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6721fa-0dae-4663-b984-216f6027f2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b00f84-2bc9-4bfb-a2bc-0ba43884a3e1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bc0c81-3f74-4821-83a2-c6a6b806255e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d971cb-a92a-4cf8-a7d3-da0e7860bfff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb42af2-7ee2-4355-ae79-e102de6bf457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d49509-9c0b-4987-a893-afb4b338d27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e692ac8d-7004-4475-9bda-42d1a26fba9f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66597d1b-7629-4b00-887a-37989da05080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52eb5ddc-ba43-47df-bf80-ba8b73bd466d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2533fc04-f450-40d2-8dfc-5ed328409212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe14db2-d1cc-4428-b6ae-ed373072938b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c378c20-7fa3-4559-9210-abbc7429c6ed",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde71460-c23c-40e3-a958-15d933dfc25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59406c6e-a0e3-4e51-a9a4-ea0c947520ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538b2a53-0e91-446b-a0ae-6a260411a405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "02718f4c-1119-40e1-b5d0-e4460c261954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df943cd-9e07-4a49-b17e-73b36404786a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07bde34-bca4-41fa-afb1-88e3474a7480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8183597-31fb-45a0-8714-cec6a9f1fea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832b666b-76d5-46e9-971d-169ab3165680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "80a87719-8939-4391-9ea5-7234999988d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568a25ae-46eb-472c-9a50-5322213a11e2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabcf911-42e3-489b-8abb-513ac4b4e515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1261d3b5-c775-46a0-9c5a-0486b7920874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8150ad-0b63-4a5e-a329-07d3bf8b3f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6d0df8-7517-4aae-bf3d-cfea69f6840d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d834836-5c05-4370-b55d-ea707c8af1a0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6c122b-c6bb-4eaa-ac6b-07179d42d9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75abf445-6c83-4b46-a14c-38752147c224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dba755-2d27-4415-9b25-fb950952ed98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52a8594e-d738-4a8d-9b66-7c49d394d7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c3124b-ce44-4e22-a4ac-1217def5c97f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46cb267-c849-47c3-8943-d29e555908c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b719cbcd-901b-435b-81d6-f6cc148ade98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d5a87d-39de-43e1-b8bd-134310c1d64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fdec876-9e1a-49b5-a47e-84a7efbbf0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46393418-b4c4-4a11-8a10-5c393c03fd98",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c017ba62-d034-48a8-906d-dee8a0083c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd72801-330a-4a0d-bb28-cdf26e8625f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69aa183e-bf72-454d-86e1-82e689fa42ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "920328b0-12c8-47d0-ae0b-398fb4fb42fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35974005-1e4c-45af-8570-310be046d650",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa19fb68-c260-4729-88a8-885a42d30679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb993d3d-e3d8-47d5-9bad-3da2651ec749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d549e3-0883-4e33-b915-eed2680415ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33a92b78-0602-4894-a3d8-e21bf55b5540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b988b76-8a54-40c2-a660-e640416b00ea",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b880c1-e195-41ab-80c8-7b2f60940094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be087622-8da5-44d7-a184-4a17f71c48f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd26f250-4977-42ae-a28a-cba339410e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b4e504-1bdd-4593-a970-73a02eb8d98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704b5f78-316f-43ba-a5d5-d9409d3081dd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b07dfbf-b439-425c-b295-ad8722700671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e290eade-a7fe-4fb2-94f2-2d4b75ecde1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8aec29c-f97a-4d09-9db0-8b493a27be3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd166503-55fc-48f5-90e6-87740d44debb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b3bb04-265e-4304-a862-2047560b48bb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c3d8ef-3038-480b-9706-81555ec5cb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88b1366-b601-474a-8506-6a4645e8ceb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329a9245-e893-43f1-a646-2d9188962da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab7da0f-3632-44a2-a78c-49b67964021a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746603f9-3410-4c1a-b0c4-4671acbedb3c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726c99e2-5cb7-4b6c-9295-ef7d0a1e3aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e222944-dff7-404c-b7bf-bacaf36986c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0174cb-57c2-43eb-ba2a-0e3bf4228ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d569353-689e-447a-a6d1-2092cc79776d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb71ce1-0f05-4f9f-80cf-296c4c996dc3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db091ae-cc0c-40e9-900d-ba7a6107a96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6ac275-0884-4c6c-92ac-53e0d76e28a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d0ef0d-2f0e-43a5-a18a-e20084e3ad99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa96d782-379d-4d7d-8c22-379c0f96119b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cac8c90-ef02-44d3-95bf-dd255b293d1d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33460bd7-3f96-4f55-bf47-6791886c0a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8a3f70-3076-445b-a429-7c5a66650acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63aee72d-cd78-42ea-8a70-c3f024c8d623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebaafcd-dc36-4d0b-8f19-8d413d1a35ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9cbc37-02bd-415b-9c1d-8904155539f6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64daf70-1da7-4a2d-b20c-54b2e464deb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2b7fe1-0ff5-469b-adda-54a5fbea5556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1635c707-a2eb-4865-acf6-15763c56d807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1722c3-eeea-4c46-9966-5d3ad8c44a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7277c000-999c-4e24-acaf-cba150a2f42a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b148bbb-6376-4141-b19d-e982d643ebd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf301167-df38-4e54-9090-37ee1c54d57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cda5a28-2a45-42c2-8348-4ac77bba2a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8e95e9-7ed5-4d55-986b-a126c12602e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73a1630-5510-4758-90e1-29e604259a7f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181ab07a-f022-42ec-a819-69a535afad4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5b38b8-0ba4-4d86-8f8d-7a3c26f9fbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643deba7-62a8-47f4-a5d1-04d496d6d983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b753a07-61cc-4456-bf2f-af2621cfef4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8a5c3f-82fe-4c04-8b84-02c7189507f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a83b11e-2767-4fd1-a8e3-53dce0c4b91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92bd72da-87fb-476d-b350-795c5200c197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d50454f-3580-4333-acea-fa47c4869548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc26e77-30a3-481f-b86e-d2ac8312e63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879d30bf-704c-4f5e-bd70-4ac8438a2fbe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13748378-13ab-43e2-aec2-f42477a4d756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1010fd-aa2e-4f21-9529-91a1caf92686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57042d0-7e11-44f1-913c-e0f9a2961537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2331ccce-1a24-4253-9dbe-83ae63f23962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08ac524-956e-4994-a93c-88de2dce5c64",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06336db-d54c-43d9-9358-b0c37ad63b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8dfccb-b884-4739-9dfa-5a0bda543794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7470dc-3f2f-48ce-9e59-daed019a22d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a151b69c-b917-41cb-b7eb-d8533fe5e155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6827408-afe8-461f-828f-4c96491b61af",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ca65fb-4cfb-4c0c-84b7-72b3493dde12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b08c322f-8c12-4dfb-88b8-8571edf672fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3792020-b533-402f-84c1-621459855d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c68c28fa-5fd5-42b7-bbf3-48884a572524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fddf66-6754-497e-bc78-863016cb480a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dcc9a2-78b3-43f8-ab91-a6113a7aa379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0a254f-b95b-4641-92e8-6520c5ed1621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1df5bc-52ba-472f-a06a-380460539cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf66dbd-2f49-4f71-8356-b7202e9c0bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9602a6-80d7-44c5-a2bc-90b87a6434bc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9baf4e73-b3f0-4fff-83c5-6dc8ed6a1b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a1b3946-56e4-4d2c-9d96-17342c322b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873ff81b-c6a6-447a-a8f1-bc62b8232084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6550fc7-2ed4-472d-aeb0-213eae55f97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7674330f-f6db-4e86-ac3e-0df77aedadb5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772d2c9b-7882-4ded-9125-d8af31b4387e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bda5610-5bd9-4620-b3ea-4082ae350435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be07e50-3628-4899-957f-a7f9e36c18f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57960493-d720-427c-81c2-d96b63888338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c2ee18-ca69-450e-805a-1cb0609a9c8b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afae386d-9653-46ab-a24b-7c8f02243eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5b46dc-a53d-4447-9db6-effb2103238b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edc1cc8-b8a1-44a9-8905-8aad97140cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "561fa90d-61c3-4db6-aeab-8415202b0be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81e4ba5-b014-4557-9a24-d49d3e60c789",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc07c86-9f80-4e54-8caf-e10712fdc880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179b1ba7-729f-4dff-834b-21305d558ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503978b2-6708-4f6f-833f-59d12603e4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7234f7b-427a-410f-bcb0-292f08cd7bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0793092-85fc-444d-8cdc-d92f7a91efa7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ed3fb8-317c-4817-a5a3-401223aaf1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73376043-4235-47d5-9d64-c5aaa984edfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839c3b38-4ce6-4a3c-837a-d673447c8f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7a23aa-23d4-44cc-aea8-c9204e5d7754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4ce875-26eb-4e1c-b2ae-fe7edb48aa77",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcb2570-8f19-4f2d-ba7f-541d5f626817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bd3b5b-38aa-4717-8191-fdee4d7492c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204df870-b295-480a-abed-3ca2bb927ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91f74f20-2e7c-478b-a1c3-97af715120dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67313866-5d26-46bf-804a-053b972b678d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87363f0b-94d1-47ba-8fd4-558a3a609838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "820be384-103d-404e-8fe0-2d925efef5d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8b488e-5a4a-4173-b79c-388d88387cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74695d0a-d5a2-4805-929d-a5a280e4b7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2615d23-1284-47f0-b13b-9e95b9538e9c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72aee582-d9c7-4a57-b91b-edaaed0478d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05f2c27-4bf6-4189-80e1-50863069754e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be26410-1fd5-420c-b08f-d1583f2ac4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e67539c9-d59b-4061-ae75-c8644be31130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab7f715-b2f2-4913-9367-e35fd1c8a155",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5bf10e-fb43-4321-8d96-d1b84927e886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c30adb9-dd5d-4e47-ab4b-ad23df26d27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d348f039-defd-4dcb-ab4d-5ce8ef913ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e01ae61-f477-4a4b-ae8b-260778a1d5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fb0fda-e763-4fff-93e2-9bfeecd59bda",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d42a50-e440-43af-8e3f-098cf54a4d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ef6338-2bf3-4138-ba34-512f80e59149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211afebd-3543-49a3-a5e7-89304ab58a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2554f8bc-098f-4fe7-ab2b-30c2c4e06b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8af6259-68ba-49cb-886e-b71131463e70",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfba30c-c364-40a0-83f8-22a939bcadef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e6ace8-949e-4c91-b2db-18ea045439d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a42bef-9292-45e6-9ca8-9d29863c6a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97b94b25-4298-4f9e-a547-8baeeeb92636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f293e2-46f1-408d-80cf-6d15cd250030",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cca0203-9a31-41ad-b760-a6402ed6141f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f698fc51-1f2b-4330-93f2-ee56736a9632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4bdaf1-35d9-4a16-b1a3-3e4ca8048e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b84aa883-43fc-4237-966b-dd199f20ec63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a76007d-0174-4d83-8184-188810e0c4c8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fb4f87-25ae-4f8e-bb5e-ee3d6fba8e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7080824-7fc1-49ae-b1ef-6bd81c0df4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f7c599-d6f7-43bd-ac29-089c69635724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43542a1a-f37b-4fa6-bd04-36c00062c73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43e625c-46cd-4d40-b89d-19cb382718fc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a5b967-332b-4f30-8d4a-73ebf96a7723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eee0458-3a5f-46fa-997d-a1c840fa2607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c0ac54-6612-4eb4-b731-e05085633351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9268cb1-c18b-4a0a-83d6-2523e5de7a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84a96c0-b38a-4f1b-bc74-db7611b478a4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abef687b-72e5-4b77-98b7-d140aa86ccd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c714fb16-16d7-4b5f-b067-15f19e982ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69aa9d1b-be01-4f5b-9384-bdd521ac9469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e29212a9-8327-4c0c-87d0-c6e71d7eeb55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e777b1-5f90-4cc6-beee-5ed5cc5edf78",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87c5eed-28da-440a-9f02-075c707340e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7578d178-d34c-4fdd-a600-fcb67e7675fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8989aa9f-0fa3-40cd-b3a1-fc32d1928aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4cb0240-2763-4675-9430-43e765c0315f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535bf65d-616d-4ccb-a34b-4674318b5b06",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306c8437-2351-42b8-9bc4-1f9d6ddc2aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7dd2f5-9a11-4a0c-85ee-aef68ae48e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3628ff-5d19-49ec-993a-25b13aab0e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "34569e49-89df-4c43-8d9d-b86689aa50cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d0e6ce-b578-447d-83a9-78f126db29eb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e32d1f0-fba6-4225-a514-7f8ff3b998ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6176ca5-8ec4-4933-8696-c0cc4826e8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39351b62-2794-4e72-a752-ca91e3219a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00475723-5285-4ea8-aa80-a4f5f90f440f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd9a4fd-ad0c-438c-9301-71f327663c5b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c665f641-c690-416d-876e-2564794f132b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804e152f-ec98-4121-8420-d64c94770a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a13269-27af-4265-9763-a21ca76c7a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a20f1e7e-02f0-4ec9-8d66-a83e195210e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f316c506-b79d-48de-8845-d56d113b2902",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adddf4b9-156c-4c05-9a83-51aeb67bac25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f38aa5c-503b-4a36-952b-d04529084921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18efb33-5648-4989-8f14-1ecde864e8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae25290d-6c50-43ba-af0e-596ebf563142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c59788-905c-4392-afa4-68246d509d13",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2c4d03-4b4a-4aaa-81cd-0a852b52b3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6d57c5-0629-4f32-bbda-7a657c15598a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22232a9a-4b04-4e66-9ef8-2f2097c6debd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "909aca92-c1fd-4643-a10f-f47c6a891f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ed06ac-37a1-4c67-91a0-3a0da539271c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a51f59-6d73-40ff-9126-6af377c3df10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470222a4-0c69-42d7-bdf7-6b5439f4138e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7f2c1d-ad0a-46f9-8ea2-7fc3c69f3790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84e968ba-ecbb-4322-8522-63aa5d53c09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b704a91-5106-4577-9615-54ae0c8c377c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a562fb3-421d-47fa-9261-8f4796ba7b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75981a9f-1da1-4d68-a044-f43b19f99aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecd4bba-7c93-459d-96f4-838aee1aa340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "877757a1-5f4b-45fe-8696-0bfb2e2d44d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd5597d-eabe-443b-b4bf-80fc0246c7ee",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123cd276-6597-45de-8ad1-7fcbdf150212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24355694-e5df-4cab-ae09-909fc73bb498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83583456-984e-4cfa-88d5-acc677ced052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e46c041e-34c6-41ea-9253-fd44c4afac46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4c25f8-5333-436c-8487-392a0f8acc32",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffb7591-5775-4902-914b-d591b7cf4f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c274ab98-a101-41bb-9c3e-227a09d84873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6768c270-5db0-442c-8881-61e9e716a9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f89a2749-9114-432f-b4d4-4c5ab92f92ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca655816-8973-43e3-b813-1641f52f4df0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21552761-c634-4d15-a372-4443242033e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5a71ca-8704-4efa-a8ab-32e400d32a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfc2d30-7d1e-44f4-a763-c9003c5a1a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9804ef8c-5303-462c-8c64-4cc97f7cfdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbd23fd-76e2-44b2-92e7-9aa097e710c0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8e4f61-1f32-41b8-8c61-f430bb7b0c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55dd77a-bbe7-43e4-b669-12f4c8f6525c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469aaaa0-f5a8-4260-92c5-44a6c54fb96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "50f8f577-d7ce-4c83-9957-7134474bd336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b7f4b1-3dc7-418f-89a1-107faca64f23",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9b0ff9-b936-438b-b5c0-07fc248c7e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e1d6e6f3-d148-44eb-85f3-c67d43e5984a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0382d76-47a8-46be-b74a-8f9ff5bf4fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b93a1b64-432d-4da0-86f9-099b58f04788"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b935f909-abc4-4f21-9c76-9628461bb741",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0afa7640-45ee-4a5b-b1b1-d8fc00cd3b9d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f5015e-564b-4bbe-8a66-1f0916e0b098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdb4e26a-e1e4-4e82-98e3-4a21b50dd21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e665db1-c92d-4063-8107-1985025ba760",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d0ff344-4e9a-4245-9616-099eac50dd19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05b8dffd-2406-4ff9-9152-935c7c5cb3ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57c6a3ed-5f9a-440a-ae55-e9de27c1db23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c78becf-00db-4469-9f13-7c4812577898",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53acc2b7-d1a5-4a12-8dd7-79154d8a4d47"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3502a94f-7e11-4af3-a851-637a1d069ed1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e833e4a2-d94e-43d7-b0c8-7a95eebbbdf3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "36b710d7-4880-4aec-9c19-9c757231e9cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c241debe-b9ae-48f5-8ada-837acdfa0449"
                }
              }
            ]
          },
          {
            "id": "be7ae2aa-a6b7-4462-a2b5-56eaeadeb3b4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2a77f955-506a-48c5-8143-e303ee51ebb8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8f42b3e-1960-4ca4-9700-109050547b8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7246b93a-f415-40b0-bc6e-e7a29a105147"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b08d0739-8d04-4f16-838f-02621fb8dac8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab152d78-ef74-424d-b049-afe73062da0d"
                    }
                  }
                ]
              },
              {
                "id": "b5905e05-b721-40b3-a6ba-7d02ab6d8db1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cde72561-ceef-42bd-800f-32b365c5bb61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d236ee1-e3f4-46ae-9d78-bdeedee0a6d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "735d07c7-52e2-4160-b20c-f5b34f928a8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6b5d8564-163b-4089-8083-5723434534e3"
                    }
                  }
                ]
              },
              {
                "id": "e6703b49-f8e1-469b-ac40-d95435c4aedd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bc737e3-9aa6-4bd7-b21b-7fe24054468d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "20f13546-63b3-4b20-b36f-28ffe86842cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8fb28c7-9f8a-4043-8bd3-d5b47fb72500",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e0718ad6-a846-43be-8e21-3d4c69031c9d"
                    }
                  }
                ]
              },
              {
                "id": "ee5b3fef-cf33-4884-a417-f79fb3346fa5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c75d1e2-5d69-49b6-8686-87ee8d7c951b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c45d787e-403a-45b6-99fa-a19aa87065d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32f6a744-f231-474a-855f-375b7ba3fc2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a152f4a3-6d02-47a6-a24e-585636df8391"
                    }
                  }
                ]
              },
              {
                "id": "f8407739-a678-4075-8103-95732be62639",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7691339-79fb-4202-aa80-0b5d12c9e4b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "796eb5ef-0dcb-49dc-82d5-2bd417e347d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6c914d5-12a1-40e1-b128-3b740a93fb01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4b11da5d-ecf7-433d-9f9a-489d7951d8be"
                    }
                  }
                ]
              },
              {
                "id": "a9651fe6-a3e2-42b8-ab24-bc5f5f4bf0e4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a964ebf2-c281-4b73-bcbb-2a968e5ac71b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d50d77c0-38d0-4485-9622-d9ef853f544e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0fd14ac-7cd2-4cd8-ac4b-0eae3a1135f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6d3ac7e0-ee0a-4056-98b2-858102a4e3fd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8baf2655-a872-47da-acc6-3cb9e52b6a02",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3b448a13-79a8-4d58-8ee9-1d8e2ae92b33"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "64f65f60-ded3-4c6e-8371-50a89992f509",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c5b8cb6-da13-402d-8897-de33c07c3a8b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "987abeb0-7ddd-44e1-ba12-efa0187e75f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "34694d64-1e9d-4f02-ba01-0e698f386417"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fc69b68-c0ae-499f-8307-749f13890836",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "470f5a26-9969-4466-986c-2d9a71be4478"
            }
          }
        ]
      },
      {
        "id": "f7c7f5d9-ba13-458c-8e8b-d20a9b6f46cd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c7558249-f64b-453b-899e-e7078cd6dd58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "190491f1-07b6-41b6-ae35-25af6d8d6bd4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f4ccf999-dc83-4e8e-8a8a-0db4f4fd78c5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c86eb72-77c1-4259-b99f-3b175f2f32a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0b4c98-9314-4acb-a005-19c92e241142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb8ab95-2003-4456-b35b-c9a0ace9c9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "14b66076-4dab-4d54-8618-5be00c42573d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2847331-56ff-447c-aafa-176dc164d687",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6414cb-0429-4cfd-b740-16eda62bf541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306598a2-fbce-4f09-aea2-11288caf3a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e49461-38f7-4736-b1c8-daaeb4c07a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1affa020-a5a6-4f88-b5c6-d12ea3e906e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd76edb-773b-44df-8d49-a48b395965a2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001685b6-4f53-4ba3-8d47-a41a9d3c632a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96af5ffd-4375-4b10-80da-cf553f0e5921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4ac5a0-100f-433a-95fe-639baf3cc672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34b6933d-b253-4303-ab5a-63d996ee8cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9494396-a10e-4203-a59b-7436012e442d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d5ed49-b1a1-479b-b9fc-86f15630c729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3189a34-0475-4fa0-bef8-bcf6ded8f515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c93bfd-9aad-4f28-857b-5139169d3e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5dfd65-8275-43b8-bba7-50f880b32c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16de10fe-dbf4-47c9-8b48-e3a7d66eb220",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947eb649-9228-4176-af9a-c37eb6cc8571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5803621a-988e-466d-8264-da2414555d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1418d907-8955-4a03-91a2-fdddc2c7ff2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7565c8ec-5fbc-42f9-b4d0-a29b967daaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b3f4e9-9bbe-4fad-aae0-1dfc4b09c35c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd99711-c4d5-46bb-ace1-2f9cfbaa0601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b1e305-d306-4c8e-b636-fa71b2242deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aca5f45-67d0-458e-a828-271b38b1eeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc960e90-a525-4c2a-8710-cbbb75d5541c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3088db13-8b01-4a39-a808-3f9db17c86bd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c86252-0fe5-418d-8cdc-f3593f45b28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b54cff3-91a9-47d3-8742-a6ab0fd885f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f74da5d-c7a3-41bd-b7f5-c06fbfe04658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d38a56a-3cfb-46cf-8f9c-5d49d5bba94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b105aa-2bff-44b0-909f-dc308e498358",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baad7b1a-afd1-437e-99e4-fccc3e96d2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df390fc-13e5-4752-857f-cdb9fec9da4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e55d97-55d0-41ef-9aca-7ffb118ba2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "477d287d-3bcc-4ff5-8cda-e0a5f5d17ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2447f61-c40c-4884-809b-d04041ceef07",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d7323b-f066-416c-a308-b580bcfe2c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c66a3f-7072-4adf-b4fc-d02390b79975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5616a3ac-e4ff-4b5c-8242-89271746cfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90a9577d-7b6e-4d23-9ab7-7db59d403bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7095e79-b16f-4b32-a547-fe2d9ed23a4f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "effd420a-3e04-4513-b767-a20b9f49dc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17281d8f-4ccd-4720-a64e-171f9b46af44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeea43af-ea56-4ae9-9fa2-fa03b883bc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "717d92dc-5740-4647-8c31-55a9b210a0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec9cf57-dfa0-4ca5-867e-6d489c8e9eef",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281449f1-1dc5-47bd-8540-b5d9b10676c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26263b3-1e46-48aa-8ef9-6fac8eef62cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb3f7ad-29d4-444c-a733-b31e4734dad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0901cb9f-6c57-408e-a920-445960455dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2572a0ab-7d29-4797-9ecc-a3257ea92b24",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9cfc33-0ebf-4381-83d3-ef31a060dad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0eccfd-1274-4dfa-8fe9-363d1cd3e302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e115dfac-b148-4a58-9b53-2580a49d0cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00f92480-5a55-43e2-9ac9-dfaf188feb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0251fcf-3ab8-4d28-9d8a-ea545d34bcf6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b50ef6-4509-4861-a4a9-284a60c76ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece98e43-9cb9-433c-b24f-f631870b9d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa396a8f-775f-4674-9e17-71f87dd55f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6fbc89f-1c76-43c2-b5b1-17d86a545e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796aa165-5c13-444a-adc5-815268d85809",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b695e404-2c4d-4999-8212-da14ee967369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0038a6-65cc-4ce1-ab07-bbbafbae0208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831b93e0-2b88-4b7f-9fcb-359a8ac8d67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6163e4a8-4e6e-4110-bc93-840fd85d0734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c4421b-3f66-4d4a-a70b-19fd5634954e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93721ebc-52fe-44b9-86dd-f0a43e3e3e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8617e981-63d7-4fa1-8ef7-15ee170e80e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d626c8-7528-4608-a442-cdaffc9ad9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6f318d-c7d1-4a3d-8a09-4195681a52a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45a3df9-ca70-466b-b4bc-326614849d1d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa8e12f-2970-473f-9803-5d942c8830d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6df001-eb94-4641-8fce-f7903a75a351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e321a11-c871-4009-b66e-57d39d38888d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "749ce821-dfa1-479f-a7c3-2e2c792441f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d97635f-5a5b-4ecc-928e-7b14a2384386",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db97994-a0e3-40cc-abc0-4089de8c61fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135dffc9-1bb5-4c71-94ab-e1c9d19285ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c149bc-de85-41c2-820e-ee53dceb5b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e2bb2c-ecda-48da-8175-2b2a53675871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429a03b9-88c3-4c01-bb5e-45e9fd60370d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf346ff6-185a-4b5e-a85f-47dcf19b5b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab9386e-4dce-43ce-8024-0be094051c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8a3217-a7b9-4b92-b05a-2de2c1085018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "78e3a256-c720-4a56-80d9-7ca89a4360b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4440ccae-4968-427a-9faa-03bc98d37883",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f0a3de-061d-4780-b4d1-e54641ef060a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf8193c-1753-4793-bd19-42dd134c4df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1088b2f0-1f9a-438d-9f43-23eca9185007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b670cd-861f-42c1-9fc0-5366603861c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682a73be-1b25-41a6-bb7b-e3e99fdf5846",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41b9a41-8e64-47f9-8c63-895e5f7d944e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9d6c28-8c28-4864-91b7-7e8904252a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7a6e2a-1cf5-4e45-aacf-242f851111e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "554f01cf-f513-4f9f-8f9b-366d46476f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8ef92c-2b15-4299-aa20-bb98549e7b29",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0bf491-3f1f-4400-86bc-958aa0a5e345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454b3f7f-34d1-4d15-9023-b57a56f39b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d7b27b-4cc6-4da2-83f4-bebb11c03378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3e62cc-d7ef-4f3d-8292-3adb0578bb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d9e196-807c-47ee-a756-4de5b5ffcc05",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32bc2bc-b813-48da-a6ef-fce1981cf9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6760444f-bdc0-44b3-8e9c-7e2ef5b48f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2b5d85-f763-41f0-84d2-61a0fb151a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67b4ef6d-8132-4298-a157-ae700bd0d25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d38b92a-1b80-42b9-a26a-0291cd2bd320",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1453b3d7-5f5d-4bcc-a2c3-f9b57249e8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492ba010-0d2a-4f44-a9c6-210ee72fbb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6a4b9f-28e6-4748-8c3c-f266c8a26958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43be9b53-bc77-477b-8ce9-adbea07fda7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0feb54-e282-4c8c-9669-ff62e15ee9dc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcb8e2d-a156-46ba-94c9-37dfc92db779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7f0b8a-b483-4d02-b3de-3d0d245b5ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149fd5ff-7cb3-41e4-a0c7-3d116fe301fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0101344c-ff0b-4c56-957b-58ef4b66ccb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710a6604-c926-4ab6-8681-a89356b50c85",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add8f254-2bf4-4674-9ee3-3848305fe96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77088692-b01f-4c03-b107-2027de500f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8c1447-dac4-440a-a1ff-74ed0ca5229d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "107ea2a2-e1da-421b-9ccb-7c9c471f2b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96062374-c924-44f0-b13c-0880fd34475b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40f26be-4026-423c-9402-cbae6513f7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f35513d-130e-49e0-80f7-49cfe975b889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e416f42-aaae-4bd4-8100-f9f414485466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af21ec52-0a11-4b2c-9585-936117382c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3918e99d-0b70-4bc5-8f5d-0afb11af9f80",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2203bc0-699e-4f89-867a-2500ea22d9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dad2057-0036-45dd-9e41-fd552b11c614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773e1301-c1f4-4215-8ef1-e6ca30e946a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e241fcd6-508a-4198-b50e-a1b221e9926a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e96b1a-7caf-4ae2-8edd-84f987595f23",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dda57d8-d5cf-4261-96d0-57bf3c3a7608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edaa10ee-36e5-42d2-86b6-e65f6802aa1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6c536d-f243-4d64-b902-d4d4c79cb7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2caddad-ff62-46c3-9ce6-41b0b3040aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbb895f-9aa3-4a0e-a7f2-6e628c155843",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d28293-f807-4da1-b052-ca27dc56f119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cab0839-62ae-43a3-8926-7d384be31a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2089c4-7b90-49c9-9c0c-0dac42c4bbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5527463f-225b-4294-ac38-3b1e5504b6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18eac72f-210b-4e64-b0d5-09d624c89cd5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1e5373-6443-490d-bf59-46e24a102bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6fb00a-4247-4bfc-90aa-d6b3d7fd0f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07608f5c-7738-406a-a2da-e59d450088f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "590188aa-0323-4e7f-8f2b-a332758c07a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be86b144-44df-4bdf-86ce-9c6460d3182c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc964b7-e623-411b-9e75-8d7876859338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589d6c43-880c-4af6-ba0f-c0629fc1fb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19100fd3-f7f9-4607-996f-92719ae16cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ecf65d-5b61-4b65-9f41-087b381fdbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341cacae-7f2a-445e-8579-44d819143a08",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d6f3f4-74c5-40ae-807d-0d761d512fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fda7bc-92e7-4465-ab5a-748b3920c9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc074e5-6628-4907-920f-c5822839a45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b311bf61-efad-4bb2-98df-fa3be1a79d18"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7b5f18a2-9d41-4478-b55a-95703ca531af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a15f38e-866a-4f53-8cb1-0b2d6d325407",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecfb282-10c0-4cea-a647-2702f35ba052",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d499cf68-fe8f-4abb-b5d4-80f4f5f29f17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06d8387-985e-464d-aad3-5569aedad0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de211e4a-66bd-4d95-8711-25145ee23df7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fae2fdfe-4094-4f0f-be58-35dff310fa8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9de5e6dd-9c11-4c3a-b341-d90fda0316e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c71ea44e-c5f1-4b17-a772-c21eeb8f012a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b694396-5616-4550-8e99-59caa6278682"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e33af09-b32d-43d7-bc41-b65d77de6a90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ddcd07db-8c9f-4bf5-872d-6f597e50c9de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "442e7e3d-7c90-4abc-a0b6-27b2113dc86d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bebac78e-563f-4a07-8fd0-c0aa64ca5e9d"
            }
          }
        ]
      },
      {
        "id": "3d870092-1bd9-4c89-9854-03d09d4aa23b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "0182162f-c8e1-4027-8087-88e00fc80923",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8db8d5ca-ffad-4aff-a89b-59e964a3bbb1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8dad0a08-e77b-44a0-8480-b250041a93c4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f111d3-5b07-4245-b10b-e1ae241b3bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813e28eb-ee96-4192-8e99-f86b2234e562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c119ff8-91cd-43fb-a25c-32e40b46bc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e441d41-297c-4dad-9ab5-d24de3ace153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdb6b06-120d-4d8e-80cd-eccdedd6a9fc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642536ec-6a05-4720-8e7d-022006b1ed16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d96d6a-4d66-497c-91c0-f12e499333cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6aa74b8-1a7f-476c-82ab-adaed7ecdc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8b3111-ab5c-420e-a451-6bf589286343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e485b95-fb3f-42f5-9793-281f2d3c8ff3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f192e7a-891f-49ee-aaf4-42dc288815ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d938fe-ef70-4235-8730-5f65edbd886e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b4a1b8-ca4e-4faa-8651-a558b7647ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb20b188-cfda-4f21-99cc-af67f28763a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02346065-62ac-4aa5-8c4e-df11b1fb12e6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96857ff9-b1d6-4884-bcb8-a17bbf627162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58bfabc7-52b4-4092-94ac-383d7f03a2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968693f6-31c4-4cbb-9668-25492cb2a542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7166ff4c-0417-4541-b39e-b7ba9e450a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a990bf8-87f7-4d4a-b46a-0dadfb68fe16",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad20c679-b722-464d-b761-e856580ec6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b302785f-318a-4c01-aebf-f85b74af35fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899cdb3d-ac93-4f9f-9e5a-bbfbad789f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6649cf-02e5-494a-b017-8beb330fc736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac9566c-52d2-4ea2-bf75-ae3c72438bb2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baecac60-59cc-4005-9c9b-646722779097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00eec3e-da19-4be8-a2b6-8e41925c63b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6315a57e-2c6c-408f-a9c5-c58032144106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "830a04e4-d7cd-487d-bb5c-b468de50cd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9fd74e-a75f-46f4-9199-8b6d6d277066",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdac90f8-67fa-4b61-8cf8-b85c5645f5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430694fd-57db-4e83-b04b-a3aeede24d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1369cd39-616e-450d-9960-2a800f7c2d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ba15c7-d134-4ebd-b08a-c8507c17d22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a031252-0c3f-430c-90b2-76d3025c136f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69463d89-6357-4e59-8ac0-efeec4c6608f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b6e641-797e-4e7b-b714-e1f4ca0242a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70866417-55eb-408f-857b-b177b58390d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e6a171-9d3d-4fd6-9a44-da978cdf3eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cc3bb5-247d-4a35-ba97-7823e8328e77",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c8faf4-fa2f-4d0f-be98-8a804b03973a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d506092-490c-4296-8d0b-2985ecd28942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e660b3c-16b0-48c5-b767-00d62b869599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbc0177-81e5-4780-88b4-6eba77aab97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd5e83b-9a14-4be5-821c-eef40afbaf1a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc96e205-602e-4ed7-9bd5-7fffbaf7471e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65207bf-dba1-4206-ac0a-d7baf811567b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae7214d-e699-41e2-9936-7b0a8d0813ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5616a67-8d8e-490e-ac77-c2b6c90492ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e45f75-5e3d-4b58-9524-1d1b448fbb65",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d7c8bb-1b88-4ee5-9e92-3cbbcf70ff79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e80fdcc9-6f5e-4078-bff4-35f8a0833faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cff92d1-5aa6-4bb3-a26c-9c15cf7adf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c68054a2-aebd-4b32-a108-dfb2932c9472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20583c80-d240-47b7-8e6d-99f4d1a1150f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc231fcd-f5e5-416e-8be8-e814267c6e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c68999-9897-4c85-9e53-63db74f35a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6d0c54-7ac8-4d4a-8015-528313081089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81229662-6cea-4833-8f52-b11036f3cf63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6eeb754-10e0-4a06-8de3-134ff90586b9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f907343e-f528-45af-b65a-857863716fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c8df41-fadc-4b78-985f-d60ce7b1e757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f2433b-76ff-4af5-9b55-b40ea7e25ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0216473-a5c6-4314-a073-f9461a122273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fefca48-3096-497e-86e7-8fbfda6266ab",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9097748-2a75-41db-808d-347c0f997464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb3022b-0769-43b4-8bda-dc9acee55528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13429489-27ba-461e-813b-ad2a200acb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b13deb34-19da-4177-81cb-17df1f0005e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb0808e-6858-4522-a1af-51764d08b2e1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0ada37-92e4-4fe1-8687-9fcf53ae3321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7354e784-a526-49a3-b467-c106ceca7c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af603d06-23d3-4f3e-ade4-076f3e01f241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "64b03c5a-4a25-47cc-9135-88e023a8222b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdf65e1-f1d3-49ca-861c-71d9ef807065",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb758f6-046e-4e6a-a255-4100ff512467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5534f5d2-0846-4021-a01d-57e1c658010e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f343dca-4248-4180-9560-73fb01207cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "06f042f2-e25e-40d0-bddb-52fa0dfa5168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb3b7c6-87a4-47ea-925a-bbde15e18330",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2983b64f-71f9-4dae-8188-f3708d864d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb77ddd3-4a0d-44da-93aa-d7426b4b6920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b854cf66-ef56-4a24-8104-4dbf3955eca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd49f8b-c9f1-4ccc-bab7-36f966644128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a52699-4b6e-4e28-b279-d9728f78d6f4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810f449e-1c9d-4c13-8e11-bde97232562b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e698fa4-271b-4aba-8ce5-4e2dff415b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37b070d-c73a-4730-9833-0bb08c0cc99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b3e9d5-d739-49a3-bf47-8060b85db741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf0b9ed-b014-4bc3-9737-a9ee5c58b780",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168c66d1-7673-4c2c-b51a-c6c693bae7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c785ae6-d2f5-4101-8305-5431a85e1b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34919b17-675a-4243-9c62-40532e2c1ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84aac85d-1772-4fad-b24c-e2ca4c7bbb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac537c1-d656-4f47-9d67-58e24c535be5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866b3883-82e8-410a-bca3-57ebca83216f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d85828-2a89-4235-9312-ac24533dcf0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8905013b-6213-4804-9472-1456190e4da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de81145f-d6e8-4ec1-8dc5-e87ecfa83d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb213d5-f785-4371-a02e-d0a0c0507444",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3ace3c-c323-477e-9db9-62413fd1319c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491729f5-13ac-42bc-a9e2-62c03d8fbb77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6dfa257-c822-4076-9424-5ac4879af17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4214c2-69d4-49df-b3f8-b0643ce7a079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fc355b-4035-4e8e-a2d1-506eb8e81adb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a773a6d2-ead3-4bfc-bd2c-8b8e0d480e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7192f463-b05c-45bb-a509-8641d26042ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f6841e-67fe-4ccf-be73-48e6338390fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "048c8282-248e-4c4d-a9df-8ba93ff3b093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7263159-0389-4f70-820d-dc374ace30db",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c519b17d-7300-42a4-a861-b9eeb089b9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5211e765-1cf8-4254-8125-9d1f4020c7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d713ece-382c-4103-9933-4d2de73ef2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c376a852-4f2d-490a-8349-8440589cb092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8a352d-5b42-45b8-8f70-359b3ae59dea",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1552dd78-adfa-4367-aa06-fecbd36cd019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee6fe57-085b-4b87-a934-f3e1a34dc39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86187f2b-493c-4f21-a794-e04212d4db66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ddf6b81-ff9a-4cc3-b14e-36b3ed0b9b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c511672a-de54-442f-b558-56d18e929630",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a89421f-8336-418a-b68f-73cdfd967d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e24cb5-751e-4038-82e4-92e53ff28209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0117ed4b-77e5-4bbb-b673-3a29d59cfed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25ccc06b-5cf8-429d-ae1c-4cc5085a55ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e81385-82f6-4394-af0c-063a8c614de1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f95fc2-f949-4518-a3f8-5e64614fe6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6cfd8d-85e5-4043-ac4a-0d69db8a2ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8ab33e-f1b9-4a4f-a900-e953e1bca876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9145a006-0c75-41b0-a791-ebcc8ce88cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0336b429-be0d-4967-80b8-671e9c00d3ca",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2324aa60-6702-4192-a0ad-9b145a67af33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858d3223-54da-4904-912e-6c581acb6f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30c0709-34a6-4d26-9c55-ba1c0ca0f44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc0e24d-bf3a-4a33-84f7-ddca3ed2172b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf9c421-3bad-436a-bdb6-876e6aa1cae3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66823c00-356c-49a2-96af-c7faca1578c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8269f584-8715-47fc-893c-dbc3b850e3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152a17f0-a095-415a-8c19-6ddc85ad5284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e15f9e51-a3df-49a8-b073-17f552f446a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc4b64a-2c51-416e-92dd-c799d14e7804",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1158fc6-456a-4cdd-803e-803675f92468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fc7c7a-a12d-4664-9b9a-f6e4c80d2273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa04d03-3f05-4626-95ca-f41be9b620cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59b2dd03-d415-47ee-9c4b-aea6a390f66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86a74c2-e0fd-43ea-a9d2-b983389e360a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1298f053-707f-4c4e-95f9-7b54425c825a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4ef7f6-a051-460d-9fba-457aaf8beb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050768b1-7622-4209-a3da-bf828c438691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d345cd4b-b1d4-44a1-81d4-ca5ad19d7d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a70980-30e1-4314-ae3f-62d286649a72",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f8d9fd-da8e-4393-853e-d000399a3887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02a7e24-cb1c-45e6-8a8e-5130e0f6d159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8663c1c7-9c06-447e-aa46-be3286eac0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a53ef5a-de53-43c0-8b62-6d65723f023d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14eb608f-f92b-4446-a65c-36d697baf650",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54916142-c5ea-41d8-9c00-0ebd7c24993f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ee8733-cdb6-478a-9e57-e3cf69e96512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ca86e0-e6b9-4f03-9169-6a126c5757e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fcb2457-36ae-4753-ab4f-32aa3a9fafd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6357182e-a780-4be9-b7f4-1054fc6dd35d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cb1150-3cfb-4bab-b06d-13153c0c0818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38eba59f-ec5b-44f0-8679-9aee801afe09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1364dd-8621-4cbc-bf13-ac6cb904ab04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bace9a3-9d3f-48a0-a3c9-612add0ffb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5693102-751d-4274-b381-b191ca43b169",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9712e8c-c898-47c6-bf62-255f47e1a4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d2ef72-aef4-45d4-a305-7f19a36336df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe2ee56-f29f-4563-b012-465a493350a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ead7c8d-bb17-40cf-954f-19321442ab41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f80fd32-73a9-4d43-ad3d-eb5e3e43bd8f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08c3f40-14eb-4ae4-88c6-bdc045f25c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b260b79-b734-472e-be97-2df096a36ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0705d4ae-a9fc-4a05-9a54-0b16f2e98eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea0235f-91e9-4722-a0b2-4e4e45df8be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9808e13c-b98a-483a-9f19-a1bdd6e3f0a1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cc2c17-9423-4059-8de4-8b714deafbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1095e0bf-f066-4c78-b42e-8aa29ea2f90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92942520-c5d9-40fe-99a3-56a8d8e92ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87cb9c67-c14b-42d2-ad4c-fd22cbea2350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126c3a6d-d045-4041-81c4-fd7fc64f999d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e420a4f0-fc3b-406c-9790-36c50605509b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65f1bdf-49b4-45a5-99dd-87f07e1973a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4276a89f-a78f-4908-acb7-a7d9df566415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74797a07-d447-46f7-b5b6-e3fd74c8283a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13c8bcc9-d280-4298-9b06-ddeab23887dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0a2f320-df5b-4449-b8d0-e959abca58a4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be3d523-a31c-405c-a344-0e8fa4523847",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6fb442e6-f159-4d70-82ef-4e5991aaa6fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8428b7-071d-4321-b0f0-f7df9303e562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8801e3d7-e0b1-4df4-b49f-0a9282c964d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6e352c8-6218-4af4-919a-f1d0c12b02df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "215ae600-20f1-4124-bd24-8ab6ed4047c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a51e9ca-e7fc-4f8e-9e67-b3ca3a179d6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24eb439c-b937-4473-b1de-a5d61fe1b979"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dcbdad0f-df34-476d-aebe-5567e6121456",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fbbb0eb3-23cf-4c18-ab45-0e0f34ee662f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93f9b6b5-fb26-4d77-8f02-acccf25cb3d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c061bd9-eba8-46bc-99d4-354af8dc32a2"
            }
          }
        ]
      },
      {
        "id": "22debca7-9fb0-45d7-9561-b392de2461b4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "266dbb55-16cf-4cb8-a22c-b9e5260ce1f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8fa0fb87-fff7-4e35-a170-039c313860d7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bd98e640-16b0-479b-85da-5632c75aaaff",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3283faec-51ff-4e5d-aba8-0328771b9dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab0ba99-1cfc-433e-975b-f0145c8daee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b075a02e-94a7-474a-b079-7b52af7266e6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9a4203-eefd-4b39-b624-e7919f76719e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3796a819-0fea-4d11-86e6-2e32abe35a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564c0558-abc1-4148-bb98-1de43fb6531a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f99297-47a0-430d-8720-5ed7667bba73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98555000-d08b-4925-97a7-18d1b5f5d72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7b4720-b468-4ccd-b3c8-ebc6c2a36bb8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa40fc0a-d2d4-4737-8a4e-3d793d1d904a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70f595e-4f07-446d-829e-057fd55d2828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828a5f0d-652e-4515-89cd-fa847bc5d71b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fb2fb1-7cf1-4144-91be-34daaf535ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b46c5c2-b508-4e75-8bca-de9187caf684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e566e744-636d-450b-8f8f-146dc658244c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e469ded0-fd03-461f-8c2c-9947707548d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746db5e4-82fc-41a5-881d-c6560b9797fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f13dc7a-76f1-47d0-8f3b-59824d2f4709",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1409e21c-4b05-4656-a32e-b38f51ab8928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb38abe7-add8-4bb7-a58f-752f4a951ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e358016b-2249-4ad1-b92c-4b72588591d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa5165b-7608-4017-92ab-d840ba1dd49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c34fe1-5101-4531-8f8c-98f91a99176b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f1cf13-8dbe-4350-9b78-3df9a7cbe094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9fe4c2a-e1c6-477e-97d0-aa8f28c70902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806f7142-9df7-4506-b60f-1c6cab62793e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdfbfd6f-7171-477a-ad7f-199a7444b83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84de0288-57cb-47bd-a800-0fa902e4cfe7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15080f88-965d-4fbf-b970-f2bf5eb5cd79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8169251-2167-444d-b991-8bf8c2b096f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092082d2-0984-442c-bc70-4a4242fdaeee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcdbbc82-d8cd-4265-9e31-01fb0c080d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1857cd35-44a2-4965-8e7a-60125cc582d9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a18e52-a9a0-469d-8276-05ea4983a552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7983b573-13ac-4822-bc9c-395b04e7e36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c3c5f9-b7d7-469b-ae6d-a3a900b285a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d3e2a1-3c6c-45e7-9d53-8b941f308578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32aea96-9332-4557-96a4-b0870e5e64d6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f223f5b0-b43e-4e75-836e-516247436008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a2cbca-c39a-4e6e-b41b-5c7132b4c308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b1d9d1-552a-4eb9-ac42-3c9f290dc570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22532556-2697-4a54-bea7-bfc907c7e68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615834e4-2704-494c-ab90-6156d93908e0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9119ae53-1a4c-4bd5-b4cf-71d0b02d5284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75d611e-3fd4-4203-b904-be02963ce62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08017250-24da-4cac-972f-25f6e395361d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c907c9-3539-462c-b5d9-2b3501db68f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1c5627-0dea-4dac-ad89-56cea6ad72c4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fd69d8-48d1-47fa-a5ae-84cd4d95a618",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c70c48d4-9e46-48c1-b84c-c020e344bf62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "700aa706-e610-4d5f-b2c2-be84d129c6ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1078616e-6f7e-420d-b633-03f7a4bdac78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69794ff5-04eb-485d-8a80-5620de5ad151",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f514456-ffcb-4201-960c-7e0159cca6e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "481e6de0-92dd-46e4-86cc-15dc8b5f1e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccce713f-4b09-4da8-bd0c-7632087f129c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c87b6d-3ca8-48fa-b6a4-378eec37ab8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3fc3ef-7829-4217-b579-d2c7399915f3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b69294e-d247-42c6-8c8d-1dd1ad72ec23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75ef049a-287b-46ef-b79d-f0e15aa41f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3abc47-9c0e-4f1a-8c09-00af0bae555f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6572ff94-7c0c-40c4-8275-0046276674cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acad495-b68c-460f-9a81-f9ac8dd2b493",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3ebb74-4acc-48db-82eb-242fef267b16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86d02a48-0da0-4b97-9d31-76d9f8642299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e63222b-b561-450a-b36c-996065fca14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c21eb61-adbc-4174-b0ec-f154e6bb63a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f8283e-8a23-44bd-a812-3025c50d6b0e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5860c42-02e6-4b2d-a424-fef676b01500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083733c2-4079-4d2e-98a7-7196bba0abcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db52d4e3-2770-4aac-ab0e-9ac9f66af5e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e98d047-05f7-4f9c-aaf2-f5173d2cf329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567e0344-f9de-4f5b-a268-33ef09974fb9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f53d165-09d9-4786-a636-a10d090910a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ee4956-2c6a-40e0-9649-17ec53cacd43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9edfa0b-79ae-4cae-a21f-f137035a58ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b5b5de-88d8-4917-b1cd-b57cbe929107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b411847b-a01f-4e43-9ecb-cdddeb657649",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4020cf0-93c3-4050-b696-780fce8636f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8ed73a-6981-4785-92d0-90842f183792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15c80d1-0dd9-4353-9d4e-1b3cc5a483e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af86db5-aa88-4ba6-b5f8-155b25dc9538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db287431-6882-4951-b304-2cd67907c56e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e448ed-d141-4030-870b-cfb0069b64e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d57f7d95-2330-4544-9531-6dcf8ae342b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df2526c-6c16-43e0-b1e6-381f53d57632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ae7520-7be1-4dfe-8948-e99a00c5894f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3556ced-bea5-46e3-a4d9-d613baecf050",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eae9734-310b-4d9a-8928-1127e1912676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a908d7b-20b9-44ca-a271-3d1a8a98d321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8b2b98-0122-465a-bb35-8f7377679ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8f4965-2798-46a5-a06c-0ec9d81d3b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d0a253-98a9-42c1-9537-a59df66e07a3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50176645-c804-46d6-a265-2f60b66a05a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffbab96-12df-417c-9c34-1ed55ddf0649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c03690-f805-44cb-a8c7-057b0a80de19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2f400e-bdf5-4a5d-9b69-7f7e010b1735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f758b4-7e39-4a62-8ab5-e97bf181d643",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd5b762-6196-49b6-b586-0c7ba4cd8fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80af6a92-b494-4935-a1c3-59f548c4c091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eee1a7f-5248-4a7b-ad9e-63d7604d767e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c2735a-c543-4e66-99dd-78158af1835a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638bcab7-17c8-400a-a29f-4a689ac099ce",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58161a0-d986-4871-b4e0-6b70b3448f4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6ae57ff-89bf-4af4-beb3-523dd1ee0a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7cea24-0873-42d7-99da-b67657326442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf08dca-5faa-4294-8a1e-653cc7c7042c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2011da79-c4ba-4681-871c-a73aeba88fd8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2037a569-6780-4fe2-b139-126143aca5bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d7cca96-15b3-4ac0-8fa2-e72865962f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428278f6-fc09-453f-9f4f-bd4a943b6914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17afd5c8-b457-46fb-ae18-a10926077053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6743ce7-8a2e-4a84-83a2-106bd563bf71",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7d639b-1436-4ecd-80d1-f52526afa3c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f08928f7-7e3e-4bc5-ac2e-be401bf7542d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900a7701-ecd9-4794-8979-aff27cf5ff5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bb79dd-6164-4384-b813-d328d6136168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e256da8-3819-4895-8b99-71e9f4b1fb57",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fea0fb-fc7a-4f83-a640-c71205ae4127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c14e290-acfe-4e16-b199-a2da52eac264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4660dcea-172a-4ed0-b189-f6936d770708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1496c36f-35b7-4dba-9fb2-90b7422d1389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fc0a0f-bd6f-448c-84dd-c00fe7df109b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274b93b0-b899-4adb-9403-66d226ec2982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902e316e-364e-4085-ba3e-bf1ad369583a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e33702-83f6-45a4-92d7-724f1214beab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3cf6f3-d238-4c18-97ba-311282ee7980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ae90c6-d989-4484-8aa7-b46ee42195bd",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adafe61-02d9-4570-8748-fcb63ae03e63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b602835-e32f-40c9-945b-561bb64caeec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63644fc4-309d-468e-83ac-48e8d8f39f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ee636d-783b-4bda-bfd9-e493acdeacb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b46adb-c5c4-41e2-84ce-d94ecdc62c03",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3762f605-27d2-4068-aae8-0693417cf081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c25fa4bd-97d5-4ea1-8089-afb4574a8efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51eef8ce-14af-43dc-a5ef-fbc1ee75d18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654e7f63-dfdf-4876-902f-53d20045610b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80132a85-5a95-467b-8b5f-a2f0c00a1734",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a458ba50-ad5f-4368-9784-ef33b09234af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18604f03-b18e-461b-94b0-ecce62a3eb15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8904dc-7d88-41cb-ac9d-b319d947946f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b44b1c0-0ae8-4d54-9a80-c4ad494ac442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ea46a2-5231-4123-96ed-1cd185f8f309",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b60f1a9-e825-492d-9c62-0a87622fdec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b54ed2ec-6ac2-4c94-9cc0-00e3d6b2f1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8b731d-7a07-4433-a8ae-ab1be33f4512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61806e9-19f2-4416-b5fe-8c49cdb3ba69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad19aac9-730d-4bdc-a47a-0da3cae4157f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75c18ff-c60f-4ff3-b6be-a31a2dad37f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dfc6652-60e4-49c7-b8ba-ef10f9aad23b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a630a004-ee51-4ec9-b05e-c5887c38e18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c935e88e-3a77-490d-a645-154bbd300702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e216a6-41f5-44ca-a7fe-1c5142a72f77",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb1a3ef-61f7-4fae-bfe4-a525af4edd3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53830afc-38ba-4f43-a134-5084501cf259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f3f448-a361-49c8-a99c-6edcf91eb6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03957479-0b9f-4516-a600-e80deee3bd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe5235d-85e2-43b8-8205-4f15455db78a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b22c2f-b4c3-4e23-9911-caa6958b8995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89078950-9982-4fdc-938e-0e319eb21890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f73b5b-516d-4c50-b45e-c3dd6af9b2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9560a92-d130-4962-9495-93ee7293e019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373350f7-db32-41f6-aba9-3007c48d0314",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b6bd17-0624-4a9e-b952-0bad2ff1839c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0cd6382-7db2-4621-884f-bc6d0989d2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d504ba-228e-4922-8830-fd107cb2684a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3d5809-9fe1-4b66-99a9-98d6585ecf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09f9598-df55-48e7-9d91-7d84a58044aa",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c604cf0b-8ed5-47e9-9253-e3333c5b4e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b013f1-bab3-4933-8ce9-a7e3ed00f080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3431343c-4c00-4412-9c01-06e43e0a9c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04327eb6-951e-462f-974b-8d7c3780da23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b12446-b7a4-451c-a5b9-83237a82bd7f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47570f2a-08a0-4ac1-9796-8e0160e9aca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1299df6a-26e7-40c2-9ca9-884805428e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13f26a8-60be-4ae9-b213-694467a67f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c787c7b0-1634-49f8-9c7a-1e421e1214e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f9a671-d368-4909-85a1-a663ec91dc59",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249e50ca-8759-4785-8687-dad59b013209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2182a3b-9d51-4a4e-930a-e6a04d365034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf656ddd-dcb0-4b74-89d0-9343a2cffc92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209d5955-0c08-4b44-8bb3-bae0edd36a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef38c910-2a99-4f69-9916-dad720b59c80",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903e0046-5d6c-43ef-a929-c2878b7e5e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e70f32d-77af-4151-ae67-7edb508873bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d87975f-cd04-41e0-9252-6fd55f224082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c99dbbd-8664-43a4-bd1b-a69938e81f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d384831-725d-49d8-8b89-5573c9f27102",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7320e60-d710-4ef1-9f95-d10b71d1adfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ceffe7-4511-4d13-a33c-eccebb0b848d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c29fc4f-7f6d-4f81-8845-89d902e0b429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0133a7fa-9162-4d64-b697-05d0e87ec3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b71c13-19af-4a28-aef9-dfb317539d82",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041c54c0-31ec-4b01-b0ea-a01fdd7ef745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4f78e8-ed31-4d0b-921a-c5fb2309cd85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a79f7b0-e5ff-4d5e-9e57-79a7fee0a189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5bbeaa-1860-4a9c-b456-0383a6be1411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17d683a-6b59-4891-8768-c581cafe3a51",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4305ede3-2aa4-4b2c-b7dd-1217ef375292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8269f1fa-4ccc-4a68-9f18-23e02b0f6057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6536fb2c-f952-436d-afb0-a1aea2bf3390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce14453-0cec-4e71-ba50-c017508b878e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791e250a-33ac-49ed-bee3-9a15dc2d7723",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66c2af8-49c5-482f-b852-5660e173f662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6d1e07-fc3c-43cf-b031-ffd326ecf1f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8318872-aff6-48fe-90a6-31b9518aaf02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bac75a-93a1-4260-a0a3-bbf31c5508c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842d7315-54aa-4245-8b91-f0f5ac12be54",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a62444-130d-4414-86b0-adf85e04ce5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f0cc38-968f-4ef5-8e72-1d09c5ffa425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6ca0ca-7f84-40d3-88cb-6147d0e11b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06633b30-eab1-491d-801b-9306b933bce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf135de3-7866-4fd0-8414-d342705a0192",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05ab4bc-2b4e-4385-885c-363da3a5e4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220c0e4b-2ce2-4dc9-89b0-badb9d05c1b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43677e36-a26c-4c11-8a25-3a260d3dcf5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ee625d-dfc6-4a22-9b8d-e055a77dba94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49556c35-140b-4350-b2a4-e2e8d7463493",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d9bd64-39d3-4000-9f0e-c3c627d1347a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48339d72-9bdb-4e4e-826f-6e3d59968cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afadc19b-6801-4908-863b-3bec6fe56468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf53df8-95f7-4b50-bacb-1c908e0b091c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dfbf64-a4cf-4f48-b6a8-2e59f3cc1de5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81009fcb-a5e0-4998-b137-a2d1fd716db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9269d727-2a55-41ad-bb57-7b902eaec7e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae953dd6-3a9b-4dd8-a935-7d5d524ce1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e800bd6-d7fc-4411-ab00-d10f480902d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58517990-8c10-41f5-9124-1142ade88781",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccdfded-d851-4bfd-9d8f-ccadcb057423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b256e757-b154-4e31-a0b7-bcb21b8ae8b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fb68ed-3a2a-4b53-905a-05a328fc6fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c1e266-c644-4b0d-ab2a-a42e21a6044f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13b0d37-4cd1-415f-869a-d66867ef2f05",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7483b93-a5e1-480f-8d33-77be08a66b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24a8c81-1b79-4ee2-8767-8da5edbae8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c74e6aa-fd5b-4bd5-878a-f85367677119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e60d580-73d9-40dc-864f-27e1df19b78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f52646f-711f-414d-b57c-6374b612fce6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd3b300-649d-4c86-8342-5f19758a8a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9fb4a9-a597-4942-96b3-c5cdfdcbe61e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80043f21-e646-4181-b407-3db7be000a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab8f0da-8061-47b7-9dc2-d471af7ef44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07d82a5-e30a-4b37-bc22-9ea8d86d0542",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5983dc3-70f8-4a0b-a07d-3d85eb4f20c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a0f6b6-78fa-45c9-b513-6c1805a77daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f57cb8f-5584-4adf-8513-e024bb655a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b883f839-f74d-45a5-8323-93b3626092bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d19f50-d75a-4269-90b3-f5631600c7b5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a13d566-88e7-4754-ac6a-a2072102caa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac71ce55-d5ce-4d19-9c8b-c10ce7f7cae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f95dc5-c68d-411e-bc3e-b3d41b547937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c0acba-4138-42af-a9ed-7abbd284a14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31075df9-f67b-4403-8a5c-8ad20596877d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8140b252-b607-4aab-966b-02932df4fc91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a45e88f-1098-4199-a303-e469e52b5494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7017235-b17d-4072-94d9-ccf6310596ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635311ce-3332-43a5-b47e-708bf04a205f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32d18bd-45bf-4ef3-8a5f-7a234ebbdc55",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739a2728-a21d-4fab-819b-9aac1ae636cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62877eb-41a9-490d-901e-1ad32ba267bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654fca93-64b3-47b3-b999-693339379515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d172cc5e-e826-4ed5-9083-afa408acbf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e03faab-3e3d-46f5-961d-e1d663ce17f1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936bb584-d8a4-4a84-b7a3-3d7e7db3787e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b163ad53-25bd-4c91-b20e-9f2d3fa419b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e35c04c-25a6-43ea-8852-ad60300246d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77fd7717-311f-44a0-8003-e0c74f21fa0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4d0857-0ae0-41fa-b54f-11a1f22e638d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56604515-7b7c-4c62-9619-8e379b38bbd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f863604-6985-4cad-9a4e-9f60d65b5e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a63c5b-393f-4afe-807a-c856abc78344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf6f11a-f61e-4d37-86ee-d76e6b20711c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c15a8d-f4e8-43bf-a561-49091a83b32e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321ccd36-5c43-4b9e-bec1-f7fa04ca8b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5322c3-0788-4e10-80a1-5a089989b8cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f213ea10-f3d3-4a42-b1f0-a726f19c6f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2870d6b-8f37-46c2-814d-f206eca47e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c26545-48b7-4148-a470-2d4f25b1c64f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8dbca4e-31bd-4e41-bba8-affcee8d31c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09dd9b57-190a-455e-92e3-534f65a99ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9741635-7dc6-420e-a6e8-31dea5cb7dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c628a0-c574-4607-889b-4209f0ae1846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44820e62-8488-4480-8bec-d156946620e7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2013d5-47be-45fa-9ed8-be7a65bc3923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece26a72-4bb8-4773-8d6b-af083794aac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7102123-627b-4ba5-bb81-202d47dcbca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec575a40-9674-4534-8d33-675be77b8dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8750d47-2d2e-47fd-96da-158494b55fb1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c706d872-78a7-4651-9d2f-11e6e8bc1fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0182a30b-f5a1-4f3a-954e-0d5f7282b5e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a364ae8-8263-4e51-b3bb-25ceba8b5ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110c1d7b-4c81-4646-9ca4-67e9acb5171b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f3a17b-039a-48e3-ba50-461e0a5ef4ca",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a3c6f0-0ae4-46ee-899f-23dce79f136c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f8748d-5b6b-40e7-81a6-1b143b89edfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47de33b1-74e5-478b-9f36-fcbb62eb7ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd38879e-3737-4617-a63c-2d76ac0fb829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872a1c56-2e53-4666-b42e-9ffd061033c3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15e3846-3259-4ffd-bd79-e74d22ddfdf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7bf017b-98b2-4ed6-b9db-8450d79a5893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e88023d-27e0-4507-98fb-1e8623510099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a34da1d-f67d-4041-b7d8-cad556e3f7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f82ed3-7e8a-4fe8-be52-0f1078f59c0a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a965b39-3297-4308-adff-7a666cf9750a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e3d90c0-7275-4dc6-8e4c-816eda0ee1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf5dc84-eec3-40a5-825a-df0c08d79295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950ab984-df3b-4ad0-ba57-c307a054e18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfc6b69-ce41-465b-b52a-ec2adb5717b4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa38157-49ac-4b56-bd00-89eeff37ce00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4c3e29a-b79a-4a91-aef3-2672885833f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ff9ae6-604a-4b10-8d0b-ffbe485f03f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813a0f23-c233-47e1-9892-f122f9136c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e499848-d6ee-492e-ae94-069063879608",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b1bb27-b195-4594-bc67-db24a387a1c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2fb156d-f179-4e18-a578-57a9964a0285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6add0e10-a4a4-4cb9-aa56-45216de728ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412c1b81-c264-4587-90a6-c6b394ee0a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8239f91-2052-435a-8bf3-865e7eacd665",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3970629-8825-412b-9c1e-c6a38466f8f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e35078e5-ebf1-45c2-b625-1d36e7a9ea95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da417ce-20f7-434d-831d-b63f28d8d497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db04f753-a63c-4987-9870-c56fb82cafb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8c034e-ccfd-4bf2-aa4a-23b72dae4998",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76df18a-ce9d-417d-bfe8-8e32864ce13c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76a7865a-c58c-4237-92c4-07006133d18a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7768594f-1dfb-4373-90ed-d79f43cc8566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe60455-85ce-4230-938d-8dbe93859a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff93727-331d-4f5a-a4b1-0876347ba44e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7713ff81-50a1-49ba-a120-f5bfefe39534",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "091c3e11-1d3d-43fa-893a-b2603190ec41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "117f4922-5d94-490c-92a9-a076abc72821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccde70a3-fe37-4a2e-8090-4474c3da03f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f631daed-2bae-4bf7-8e41-91282c2823ca",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5d0781-90c3-41f0-a4ff-05a2b442a7c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a777b50-ba65-40a2-9325-c7f55f2ef183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e222e8c6-4ec9-4c34-aa50-87a0a7931f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b537bcd-a10e-49d0-9240-4bf6e1fda65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c645a9d7-fa45-41a4-8737-47e7fdfccaa6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d77ff30-bbeb-4e1d-9d2d-974dda86d522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b90792c-3613-4031-98ec-4569ba8c4eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d472b59-608d-4459-95cc-d9c79f3ae913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f383a26d-3f01-45fe-b2bc-96816a595717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5563875-3c81-4a29-bdb7-34fee901e6c7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36355192-b3d1-44d0-8500-77d6e6146013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bfefa26-57a9-43f6-b06d-9dc1c9c1e957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d5634f-7a13-43fa-970a-33feae567805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab30d725-f4b6-4f3f-8e4f-af91535bdaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a87685-456c-42ca-bd39-ded0041c879b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3697eb1-b5b4-4945-91ba-346d729cafc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "478785c6-25b9-46db-94bd-c282911fc77c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e785fb93-78e3-43e9-8a7a-f884722c00ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab65d76-ed2f-4f20-8639-d48969441b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8942385e-d544-4fd6-99c4-40801447db00",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b3b564-1eec-4e93-878a-60d75fbbe568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e35dd321-a84f-465d-932b-f0c652e81d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82766c7c-afae-4b3b-9e5a-92e1336b09cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9a8c4e-3f1c-4d3f-8725-16bd13f2905c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031713f0-ef8e-4760-84e2-70a2776ef5f5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988c6515-7424-4bd3-9946-59b2d25afa58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c318d0b8-36ce-4866-9ff4-9017c372c51f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dae74c-2c34-48d3-ac5f-879e70406cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45bf1b4-dfa6-4f54-af7d-3d9ac36e3a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b75965e-0172-4094-9790-e4e3201184fc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395f5dcc-593a-46bd-b00a-77a8202a83e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8eb79db-f7a3-46e9-ae63-c5ead2e60fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11852774-ac40-4fc8-991a-40b88bc0e458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e49fac4-6e82-4ed3-a71c-15f990c68617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64d8e8e-a803-49d5-8125-84450213cba1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9456aa6-bee2-4b61-8ced-787dd5e90202",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e656d957-e8e2-42fe-bf6c-33269a8b7daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8be4e38-0053-4f48-b31d-f9a5af47c6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c3d1ce-cd3f-4346-b254-adb99ccfe200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f378123b-ade0-43b7-b467-2aa643ba3d72",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027df55b-cf82-4776-9428-906048196114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95e0b1ee-558d-4b39-8eeb-97eddae36760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a75da6-80f3-4402-a26a-74a10d04b25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1edc7ff1-9e19-4825-b6bf-9cc5c9448069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3ec964-1e3b-417d-9e36-36de9b51dc79",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e73dab3-637b-49e5-b512-638235f8d325",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e149613-711f-4264-b629-a51630465da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3758374a-17e2-483b-9273-ccc6bed2ae17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94f695b-6c2c-44b4-aefe-7bce9a9cd572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027d21e4-d915-4682-8059-e540e7be4516",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d887661-2a48-4e91-8f81-ce9a1a4c1c61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3d1f09e-17b7-4f13-ba41-daf279c37aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28681e68-d6bc-401c-abe0-9fc304b6226d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70a90ae-9fd4-4c5c-ab93-0e5e77b1f0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0804e8-a717-4757-b707-d626af385481",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3808b2-7954-420f-93cd-83bd856cd11c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c62d5553-08ea-44e7-8ff3-91c8cbe72511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1324f7d3-47d8-46cb-a1b8-443acbd30a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83f8708-f323-49f6-a77c-a8bc8d15b3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9159b86d-6ee1-46cf-99c0-16e4f3581953",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e8fdb3-d10e-4e10-8435-ea0b9ec2c50b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "531f7887-e3ec-473f-b6bf-5e119acc0fee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "837e8af0-1731-4969-95c1-75a956dc17a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9644a3-dacc-454f-822e-bf3e426fc568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c885a19-3e05-4a66-bde9-d979e2e43e3a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1defc96c-8e62-45a3-83d4-e90f45b83212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e60d18d1-7424-4ea2-ad7c-d9501a0bebac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae2d4f7-dba3-4edb-b261-80d5c5debe37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7f4a2d-5625-4189-bef4-899ee04bde91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab72567e-dff0-485d-bf96-59e85325f334",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5649e3-6ff9-45de-b664-907cc25cd6c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d08ae50-972b-4f9c-9f30-6d8b09a0c7f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98a015d-a636-4286-b0b8-cb75f12d52cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9757be1-6cec-42b9-b0c4-26be0f49454f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9394b585-0a4f-4252-a29f-91b35a08d125",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc28338-2490-4a41-9815-2e194a886d45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d0ff766-db61-4c58-b2bf-39d7bac49f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d48b53c-7185-4960-b500-f42906bf64b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dfbb383-d54d-4646-9a04-549735ee4c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c3b1b8-c088-4827-bf9f-a6aa77ca3af5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2eceeb-8101-4760-9a5b-80badf663f4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ca5a624-6552-4ae9-b751-e68fe9dfb529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd890cf-d562-4fb3-ac49-a6da23893e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbc2a12-aa8a-4ef1-96da-fe72afc562e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb5f3a0-75c0-418a-a6a4-96fb90710533",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d53ede7-baf9-4afe-9abf-99c171ceef0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f40c7a72-d2a1-4dc6-95c4-b9ad84299dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09d1fab-2664-441d-b80a-85d21d7cb16c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5184fb75-cfd2-40a4-893c-26adc94b8cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84300aa1-2cbb-4463-8a2d-0780bdb9a535",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4fd275-798c-47aa-80a5-af2616e56553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f8b6354-0c29-4967-8d79-29228ac1d236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d525758f-e845-4494-b6e6-960e38984145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baea9db5-f779-4308-a954-d417ed2f9ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7b05e5-844e-4fd3-be85-f19770329da1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9238f397-92e4-4f72-b38a-cb2948cc0ee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a598435-d5dc-48f7-bc8a-58f552b62e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807e2459-775e-47de-aea8-ef846aaf708a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7c47f7-cd21-4a31-affa-14d1af5d9b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37217cc-2953-40d3-a7c3-8817a039aaf2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff96fa8-7a2d-47c3-94c9-f3ad848e8d6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b58a5ef7-2098-4b75-8515-27ac4e768f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "023f7bf4-18f1-4dc6-ad31-2cc2fa1dd171",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e6d738-9ec3-43b0-b580-b44ad1454d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2145ad66-b7e6-48a3-9d3f-64f13e502535",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88725362-283d-44c2-a9f7-28c96e2fc040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a621a41-e1b3-4e55-b918-607a6f37c74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c002e2-30e6-4cc9-97e2-a07c058879d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fad8339-7944-401f-9734-d4dbd3452250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec09995c-e7e5-49a3-96c3-e3f11ac95191",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a4dc49-fdff-4f0c-a445-c17d91b2431a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed0c4ac9-77cf-4812-adbf-18dde6796d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e8d4f2-cd8c-48ed-9969-c663fb46f3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23068c58-e7c2-4498-b124-a181674da4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2718c71-dce7-4379-afb4-706968ddfdfb",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9a2aa6-1065-4396-a97a-2f60eb87b8a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "556c24f6-5841-4732-bdbb-b77ef0430d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2888af-981c-4531-91ca-bcfc91f93034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36faba1f-b175-4e8b-9bc1-2c404ec7f6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2008c2d3-33a9-47f9-9afa-bcf9d5f8990f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d6b4c9-ff3e-4229-815e-1cc62507020c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c10dcf2-571f-4b5a-a938-7668ec43a81f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd78169-aa6d-456e-aa00-8e6bfb9d4282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d236fe01-5cac-47da-a063-7434ccc9a70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170b56ab-f5c0-4fbe-9b86-da0ec2ac1a8c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9958f278-a76c-4912-921e-5a078180f1eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2fcccd1-f24d-4ca1-8d77-742d5687e37d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08054dd9-c96f-431f-8584-4b134d51ff05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be64fc86-f0bd-4391-960a-e6e859094480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe91a39-b838-417d-9b4b-9d95176bc2dd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c90a09b-241a-478f-a836-708a0530d97f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f13f0f66-db9c-4a3d-b9c6-5aabdd928532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f913a52-49d7-448d-8775-d44981f3981e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54208c77-d01b-4e41-b267-27abb16166c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603a0240-f5bf-40b4-8b93-34a3dc1823fa",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7f90db-f798-451e-a835-ab695c9350dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff1962fc-ab46-45c3-b6f7-88997ff58fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f1db8a-e321-44f7-9b96-cf5a94968863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fbbc6a-3852-4dd3-b2d5-c195ad4738e0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78927bf2-4cac-4bb9-b86e-0e9643386a59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76e4b52e-5fbf-4a90-b61a-a5bb33916806"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff939b6c-ab29-4eda-b031-22004912b6bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5e537f2-41b8-4b1d-9eb3-74040e84d648"
                    }
                  }
                ]
              },
              {
                "id": "d1a2cba7-a653-4dd4-b1e0-bccd330ab9a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8f393acd-2416-4062-b0ff-fbe1c1399aed",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054d7c62-8c86-4c49-a170-dcd24c519aca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d8366f35-9405-4fe1-9c14-b5d26e4c4c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc33e9a-1f9d-4e3f-94e7-2714bacabe06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13559d34-4bb9-491d-bdae-f3da3eed77d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb8bc5a5-22d7-4621-af00-3a66f78de742",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93f75b8b-9bca-4be2-b1dd-fca47e331e8e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39e7e30f-8a92-473e-be1e-251958198069",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf1184a7-1b98-4e6a-928a-530f734dab98"
                    }
                  }
                ]
              },
              {
                "id": "b96abf69-7bd8-4889-ad14-ee581b13d645",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b6917560-08f8-45de-a9ae-5dfe2a96c2d7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1e4787-4c09-41ba-9c6f-c6dcd1898fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bc2a0158-6bef-4e8b-868f-bfbeadd9cb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16054036-4dbc-4763-9248-b854855ef8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a88f26-004e-4d71-a1fa-7b09b5e97378"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5a9f8b4d-0b09-43a2-916f-c7966e88bc92",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ddd59518-51e3-4a9a-85c0-234b0afefcbc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9bafc44-73ac-4f44-afc9-229de5507cd9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "449ef0be-5c67-4201-9332-89691980546f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9be9286f-5f42-47b8-86c2-b2fa17c8912a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da3154b1-6587-4a25-9d49-4703172cce9a"
                    }
                  }
                ]
              },
              {
                "id": "4c9aeb41-0972-404a-8e27-d3b3d468f809",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "704b05ac-818a-4458-81d0-1c54c33b9e57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7248e850-fde8-42ed-9bc7-26b6f28aff53"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca1de243-d066-4b9d-a3d7-3363245da1b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74fc86a0-d379-477e-bf80-b5e0274e9db5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5d0ded0-c989-4434-8164-60cc5abbb428",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ed089316-2d7b-4531-ba2e-9f95e0a3e34c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87b08f45-7052-48c5-a631-d55777a2d789",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c3de135-fa07-4bfe-b24e-9cd39e6c79ad"
            }
          }
        ]
      },
      {
        "id": "b8be7113-8938-4ee3-9ab2-492d8a3b51a5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b1ffdf54-35b2-4121-8b12-a17b4fe2cb03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e00d945-6614-4578-95eb-7cac1b9e63a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15f1077d-b016-410b-92b5-3e92ed3f003e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04566bf-cc08-4102-8cc0-24556e850f56",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "815a56b9-6fbd-4b24-bbdf-2fb0e359627c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "859e2577-c008-4c20-8f38-c83ef5fa8652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30eb89f2-b261-4b2d-99b8-e1ac1d69fa64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "effe8959-57fc-458d-b4fb-bba1bc43294f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1658cd5a-ad34-40c0-a4cf-f852330c96d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "054b2d41-4c9b-4fc5-a8b9-f00b2f1a2a04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "352ac8ea-8628-4625-a7ad-efb03f62e556"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "109db5ca-5716-4ce7-a63e-8121b79ae467",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fcdf8ea6-b71b-4aee-8ee6-631811a247ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fba521df-f734-4da9-8872-a7ef2b18e87b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a87a269d-0a55-4461-a852-2608699cf603"
            }
          }
        ]
      },
      {
        "id": "37ae1295-0822-4d0a-b6ae-25ac1ad24a73",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "17546915-c058-42f5-9bb3-f298c9306bfb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc65552a-454e-4795-bdaf-0e288749d017",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33a6c32c-f6a0-4a21-a7b6-045aed081faf",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03a80ca-d3c3-4e80-b7ad-a3a690c3600d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab679fcb-5b01-418d-8475-8b09e392fffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3e937b-6e4c-40d5-bf39-d012d4112239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2669ebed-c655-4ffc-9118-3527941e78e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4a4006e-b4de-4845-bd34-0c4787401bfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8aa4e3b-de13-41fb-b521-01a7e8157d80"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bdc7097-dc35-490e-969e-1923568d989a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6004a71-0755-43bf-b0d9-44e85e69117f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59c0f90a-a601-4b3c-9c7c-c97e0451f70e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "30dcf1d8-d95f-4b2c-83f2-b22767c55e56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2efa8e7-e01e-45d0-8ac8-2f5438ae8523",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b99a3507-7953-477f-8472-10b19a35bfb7"
            }
          }
        ]
      },
      {
        "id": "7898a468-b0c1-4b03-9151-65a9b97c7b40",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8b15b010-0aeb-4710-8bb9-856cc64c19b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58d6f6e5-3330-47ee-bc3c-25ae2633b716",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c67ecc05-23fd-43bd-beea-7fb9588f6d9e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e70ce3d-0e16-461d-b434-54d3770a3e02",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58638530-3387-4afc-a6ed-fc09979124b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345c148c-04bc-47e5-8048-c7d2c88f05b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18a1505d-1ed3-4834-a01d-c71f5b8803ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3f200ee-b58b-4e78-934c-751b0940fbb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f930678-404c-45e0-a5f0-d728ce507270"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64e2a93d-9625-4731-9b16-4d50c89ffa49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d330c7c-5e37-43ce-bb7b-4640d48c9c3e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbbf3155-5f93-4e47-a57a-8de5e9d098ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "35a227af-99b8-481c-b499-f84edadc9b6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ddc832a-d024-4815-94b0-fb3ee3b270a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8e4cdeb-2ba8-43df-95b6-0b756b9c1dc6"
            }
          }
        ]
      },
      {
        "id": "789a3075-37fa-40dc-833d-e4efe4189614",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1225dbe4-05c9-412d-bfac-8c918e778d5c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c82b59b-aa86-4495-acc0-b81aca48b549",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4c1e39b7-6fcd-43d6-a67b-bbc3a945ceec",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32b376b9-e625-4fb4-837f-31de42997223",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "403bfc4a-57cd-4d7d-9684-166b48e20bd6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.257042253521131,
      "responseMin": 3,
      "responseMax": 233,
      "responseSd": 21.629420163375826,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689295683129,
      "completed": 1689295698792
    },
    "executions": [
      {
        "id": "cbc75d04-3945-4c44-b163-92cab98ee20e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3c82ae97-da04-42f3-944b-f0f3c4a1a7ee",
          "httpRequestId": "91b9fb20-6976-4179-b8ee-3f7cabf88791"
        },
        "item": {
          "id": "cbc75d04-3945-4c44-b163-92cab98ee20e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7ad2ede5-158b-4552-98c3-7fe08b33f155",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "696962cb-b02f-4213-9f7a-3e8ec8bffc71",
        "cursor": {
          "ref": "f58d5879-f59b-4dc9-a74c-d9368303454a",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c410e5d9-a300-4271-93c7-8ef038a5bde9"
        },
        "item": {
          "id": "696962cb-b02f-4213-9f7a-3e8ec8bffc71",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6ecb17af-a376-41d6-9da6-46e17889ea58",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "d7bfe8af-9f82-4a91-b231-4abd2d0edcf0",
        "cursor": {
          "ref": "79fea795-b9ba-4fe4-8be1-0ddc172652a4",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ddda4319-8a53-4dd1-90e5-48d4c490d71c"
        },
        "item": {
          "id": "d7bfe8af-9f82-4a91-b231-4abd2d0edcf0",
          "name": "did_json"
        },
        "response": {
          "id": "bd0cd737-d0fd-455a-b70b-d6463e09f779",
          "status": "OK",
          "code": 200,
          "responseTime": 150,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e172c50-c2fb-428c-93c7-c0e5895dfcb7",
        "cursor": {
          "ref": "3dffc146-0b01-4a13-9fb2-a53bfa53aa90",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3d8cccf1-9334-4b22-9a42-902359cfa266"
        },
        "item": {
          "id": "7e172c50-c2fb-428c-93c7-c0e5895dfcb7",
          "name": "did:invalid"
        },
        "response": {
          "id": "194062a6-7848-4179-a07c-27bd270129b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e172c50-c2fb-428c-93c7-c0e5895dfcb7",
        "cursor": {
          "ref": "3dffc146-0b01-4a13-9fb2-a53bfa53aa90",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3d8cccf1-9334-4b22-9a42-902359cfa266"
        },
        "item": {
          "id": "7e172c50-c2fb-428c-93c7-c0e5895dfcb7",
          "name": "did:invalid"
        },
        "response": {
          "id": "194062a6-7848-4179-a07c-27bd270129b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281d58ad-7de3-4997-a47c-72d307008b26",
        "cursor": {
          "ref": "cb80805a-40b5-4e2c-ab65-976d53bf7c25",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fd21cc65-74b0-44dc-bddc-db4d74a726e7"
        },
        "item": {
          "id": "281d58ad-7de3-4997-a47c-72d307008b26",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4022fa28-79fa-4e80-b041-6ac2a64f2081",
          "status": "Not Found",
          "code": 404,
          "responseTime": 46,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59db82fd-916a-4494-81ac-f0abadde3a0c",
        "cursor": {
          "ref": "9f8f2952-3fb4-4d50-99ab-420866911b1e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9bd3b6e1-54f8-49c3-8d85-e6d1aa08df33"
        },
        "item": {
          "id": "59db82fd-916a-4494-81ac-f0abadde3a0c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1ea8440a-aeb3-43e5-a07c-5a22f4f8e976",
          "status": "Not Found",
          "code": 404,
          "responseTime": 6,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3aafbe4-bc6f-4a67-9b2e-1641c53701ee",
        "cursor": {
          "ref": "06806b77-f6c0-48d3-9e3a-d909f3881040",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2963f925-390e-48a7-9054-6707ae28559c"
        },
        "item": {
          "id": "c3aafbe4-bc6f-4a67-9b2e-1641c53701ee",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3458a63e-5fec-45b1-b313-856eb4c5cf2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7e468c-c36a-4f30-9d22-f8e44369c851",
        "cursor": {
          "ref": "ccccd573-2227-4621-a2e9-4997da5b55ee",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "185c124f-4a6c-4274-9675-a0852b7fa7cf"
        },
        "item": {
          "id": "6c7e468c-c36a-4f30-9d22-f8e44369c851",
          "name": "identifiers"
        },
        "response": {
          "id": "04eb2ce9-bf9e-4b20-ac65-cd313475ae64",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3211e01-a2ab-4307-8511-e2eb5609d1df",
        "cursor": {
          "ref": "920dc42b-7e1c-411a-8d6b-d92d01c1978d",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "04032735-6306-422d-bdc3-e73addddebcc"
        },
        "item": {
          "id": "b3211e01-a2ab-4307-8511-e2eb5609d1df",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "67985fbb-04f6-41eb-8913-f3ad83bfb2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f8a604-80d7-43ce-a56c-e60bba725583",
        "cursor": {
          "ref": "8d3221cb-9d3f-46a2-a2e8-d47be0cd2a92",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9399719e-6cbd-461c-b3f8-f233aeb7e889"
        },
        "item": {
          "id": "52f8a604-80d7-43ce-a56c-e60bba725583",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e40e9328-fb48-4155-a466-bc5f9ffbd8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d411161e-17d8-42e4-9422-68f56cbbdcb4",
        "cursor": {
          "ref": "b517ff16-9a60-4d94-893e-d31cabe77880",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "31c02206-f3ac-41cb-88f9-1846737dab01"
        },
        "item": {
          "id": "d411161e-17d8-42e4-9422-68f56cbbdcb4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e6dcf9bc-50e6-46e2-aa95-f3ab897e7809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9217f2b2-715e-46b2-b9bb-b6732773a155",
        "cursor": {
          "ref": "572b7fcd-a6c5-4bd6-996b-19f9f096122c",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a23d11cc-360c-4e01-b41c-5d5d33d64ecc"
        },
        "item": {
          "id": "9217f2b2-715e-46b2-b9bb-b6732773a155",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9fdbae93-746c-478a-b419-3b3fad67a798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d436eb2-b68a-4624-b430-52781f4f8ffc",
        "cursor": {
          "ref": "1cedd9c2-c21a-4e8d-98e5-51ae3788b280",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "771655b2-d6ee-438e-b22c-13230a904704"
        },
        "item": {
          "id": "6d436eb2-b68a-4624-b430-52781f4f8ffc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "179ef5c0-1afd-4fb4-ba05-c56c83753c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf76fd0-2529-4d8a-82f5-c7ac33bda3b0",
        "cursor": {
          "ref": "67bd6eb3-c323-40a8-b8c6-7ad210ebbf99",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0025f3fc-a396-420a-bb26-8a7981a53177"
        },
        "item": {
          "id": "4cf76fd0-2529-4d8a-82f5-c7ac33bda3b0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4626ce0c-7963-468d-a0d1-ca71ffef9aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c343e2-68a1-4685-b417-07ee1949f5ba",
        "cursor": {
          "ref": "87e301f5-03fa-4d20-a96c-6553140a91df",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "205ca935-731f-45d1-ad74-f6f6e11296d9"
        },
        "item": {
          "id": "e3c343e2-68a1-4685-b417-07ee1949f5ba",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6196df46-82f7-48b5-9ad7-a6caee733ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470de6ca-e4ee-4712-bdca-d31c0b36c648",
        "cursor": {
          "ref": "dffe792d-6e9d-4044-a8b9-70ba92b72da6",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "97488d0c-eeed-4e23-9ae1-a06c46b14749"
        },
        "item": {
          "id": "470de6ca-e4ee-4712-bdca-d31c0b36c648",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f94cdc5a-6367-452b-a450-6ec0abe1be57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b767051-2a59-4070-888d-2f9a0a902505",
        "cursor": {
          "ref": "e0009c13-9b8b-4f9d-a575-2195c03078a1",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "985789bb-c3d6-4ebd-be20-395188601347"
        },
        "item": {
          "id": "3b767051-2a59-4070-888d-2f9a0a902505",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "eb0401ab-671f-4ab7-bdee-7cc26ef380ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36db4790-63d1-434a-ac5f-0d17978f7cfb",
        "cursor": {
          "ref": "220e60d1-38ed-4a48-99d7-e6407a875d7a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "989cd1a2-a485-4c70-bec2-b07317aa1d3a"
        },
        "item": {
          "id": "36db4790-63d1-434a-ac5f-0d17978f7cfb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "df02b61a-6619-43cc-95e6-cb56f23236fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b79949-051a-4ed0-923c-1d94ae19362c",
        "cursor": {
          "ref": "238a6d29-3b9d-4f7d-97d1-482db22ef5fb",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e404929c-014e-477d-8ea6-742f3695e92a"
        },
        "item": {
          "id": "72b79949-051a-4ed0-923c-1d94ae19362c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "74474c9a-f06e-4302-abe2-f519a36e3a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8ed59d-4dc1-4e67-9238-c831574c108a",
        "cursor": {
          "ref": "d1d1b305-6ae8-4f40-a903-151b578a9c5d",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "18420333-ad16-4b71-b8e2-e35518cd87b7"
        },
        "item": {
          "id": "4a8ed59d-4dc1-4e67-9238-c831574c108a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "564858c1-74b8-4da0-9444-3f357fe22b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62593aad-1c5d-431d-943d-80bf0ac4788d",
        "cursor": {
          "ref": "a3a61183-a32d-4d08-84a2-731c9e70f88b",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d70c71c1-5472-4fca-88c5-534478af890d"
        },
        "item": {
          "id": "62593aad-1c5d-431d-943d-80bf0ac4788d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d7659350-a1e3-4f4f-958e-51364f0a88dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d988998-42ed-49e1-9d13-a2ac9c62cf8d",
        "cursor": {
          "ref": "cac50e3d-e143-4c31-96c5-b5d59763df9f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0925386c-7244-4c6a-8fce-8f6b7e8d0733"
        },
        "item": {
          "id": "2d988998-42ed-49e1-9d13-a2ac9c62cf8d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a47c4044-422d-4b31-b477-b349df93d548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de9095a-3ee6-40aa-a350-011e321f49db",
        "cursor": {
          "ref": "2b513821-5706-458c-947b-e9025e38333f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "669b1fc5-ba2f-4bc2-b4c5-fd6190848356"
        },
        "item": {
          "id": "2de9095a-3ee6-40aa-a350-011e321f49db",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "93bd6e59-965b-464e-9449-eef10047ad42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae777da-8564-45d1-8004-696968604272",
        "cursor": {
          "ref": "a7043aa2-dcb3-4bba-b8e0-df3dd09f2a2e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "63999893-aea7-4185-ba39-78d2017939d4"
        },
        "item": {
          "id": "6ae777da-8564-45d1-8004-696968604272",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "eb20b7e8-41b6-440d-bc8a-918e5d83c330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8007e836-ffd4-46fe-9477-76e59f0e9de0",
        "cursor": {
          "ref": "c949a799-1e52-43a4-b71d-aa59f94c01ef",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "db32ff75-d47f-4b98-aec0-c87167d796da"
        },
        "item": {
          "id": "8007e836-ffd4-46fe-9477-76e59f0e9de0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8b68ac83-d6ed-42aa-b29d-c161ee15e150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315b823f-b3ec-4940-b466-31ae10286030",
        "cursor": {
          "ref": "02a3564e-25bc-4b36-8eeb-627969b73fe6",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "86ea2b2f-0a7b-4933-8456-693710f67eef"
        },
        "item": {
          "id": "315b823f-b3ec-4940-b466-31ae10286030",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "818a9048-9153-4e68-8561-86e59fb3b816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502d9624-149c-4487-b642-17b1e440ab9e",
        "cursor": {
          "ref": "900faaad-66ed-405d-aae5-310a67681ce1",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8309157e-8281-4b13-8d0e-bc84607ea867"
        },
        "item": {
          "id": "502d9624-149c-4487-b642-17b1e440ab9e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6ac0deca-fe0f-45b8-98a0-fb5b65be0d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c131f963-70c1-4037-a3cc-18e1b946eabc",
        "cursor": {
          "ref": "15c8fc7c-a08e-458a-9abc-ed28f4cf585c",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e1ef90cd-9c8f-4eb6-8814-5b621deeee2b"
        },
        "item": {
          "id": "c131f963-70c1-4037-a3cc-18e1b946eabc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ba54ec14-4fcd-42d4-8229-237af5e810b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e1e3ff-c676-4a81-8bf2-4465a85ed07c",
        "cursor": {
          "ref": "22d975e7-e31b-4632-9b00-655db2eda2d6",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f45e0db7-38f8-4618-9ea6-7b319999a364"
        },
        "item": {
          "id": "76e1e3ff-c676-4a81-8bf2-4465a85ed07c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "51503c5f-f57c-4b90-8f80-45e95e6afb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5d8563-e0e8-4774-a346-80376f1ceb88",
        "cursor": {
          "ref": "c13b7dd7-e1ce-4864-9ee2-fb01584b0b08",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d2833b7f-9292-4d3c-9cd9-a211807ef487"
        },
        "item": {
          "id": "1b5d8563-e0e8-4774-a346-80376f1ceb88",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1c0514cb-4f41-4bb8-b10e-037365c846c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0769b4c-8712-4824-9581-b55595428988",
        "cursor": {
          "ref": "037bdf62-329e-4d4e-a275-12bf56abf547",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b4d5ea4b-8ee7-42ec-9dbe-30468a088c11"
        },
        "item": {
          "id": "b0769b4c-8712-4824-9581-b55595428988",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "956e4867-c064-4407-a48c-64663870a8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fd87d0-e186-4e26-8a96-b83155a1e4a2",
        "cursor": {
          "ref": "dcf1e184-7454-4dd9-9dd6-988aef36c50c",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "026292f7-718b-48da-b893-819869b684c3"
        },
        "item": {
          "id": "b5fd87d0-e186-4e26-8a96-b83155a1e4a2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9c4e04d4-9c22-4e01-9b98-996d7475ef19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb2cac3-cd35-46af-8329-7508c42d71f8",
        "cursor": {
          "ref": "e7f03cb3-6dc5-4641-b8ee-4b8a57bd0754",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ba6422ea-18eb-43db-8820-52e675a200dc"
        },
        "item": {
          "id": "bfb2cac3-cd35-46af-8329-7508c42d71f8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6074c86d-741e-4776-b7e8-995f1f4e1a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf7c8e2-6f91-476d-ba96-c0539faf3f9c",
        "cursor": {
          "ref": "8ba2bb56-1f0a-4217-9339-26b86a780591",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "38ff817b-d025-4b3a-a83c-99d421790dff"
        },
        "item": {
          "id": "6bf7c8e2-6f91-476d-ba96-c0539faf3f9c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8ba44bc5-7fbd-4d75-b50b-7d8c99423f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399a4197-f5b9-4b3b-8544-3f2f5a0431b5",
        "cursor": {
          "ref": "a5d25e49-3b29-42e1-bb2c-59afa2715fb5",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4e1d8c1f-46e3-40df-b1ad-4e9defb021e4"
        },
        "item": {
          "id": "399a4197-f5b9-4b3b-8544-3f2f5a0431b5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5f9dead3-a1f1-4682-b886-e9a1efe93b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5b1ae7-a313-4cab-a577-c94f5388f706",
        "cursor": {
          "ref": "2405c3ef-7cdc-43b2-ad02-ead7bea1632b",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2edb4cb9-6e9e-42a7-9c6e-3fc653cf943d"
        },
        "item": {
          "id": "be5b1ae7-a313-4cab-a577-c94f5388f706",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1f37fd92-e55b-4f78-bb2e-926ad21191a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423ee6ad-a40c-4024-a435-5e8103c7b688",
        "cursor": {
          "ref": "4c9ea1e3-63d7-4308-a9d1-617662a3c83e",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1d319a4a-bfab-4b3f-8269-e0daf108b64b"
        },
        "item": {
          "id": "423ee6ad-a40c-4024-a435-5e8103c7b688",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "210cbb3e-6f76-4871-9221-b48adf003395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317da62d-b8fe-454f-900c-f3a535bc17e0",
        "cursor": {
          "ref": "2c201f3f-8e17-450d-b534-e5ed32f7d271",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8ef52f1f-466f-42bc-b252-35677e11c5fa"
        },
        "item": {
          "id": "317da62d-b8fe-454f-900c-f3a535bc17e0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b0098b39-5a67-4c0f-a7bd-91bcca9aed1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04af87a2-57ee-4e30-9c34-48572856f010",
        "cursor": {
          "ref": "bb22fb8a-d23e-4aa4-9ed3-51f70fee1ec0",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "047ea125-5637-4606-bd11-7baa376a8e31"
        },
        "item": {
          "id": "04af87a2-57ee-4e30-9c34-48572856f010",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6597d6a7-4251-4ce6-abe1-26e5086672df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61fdbe9-3650-479f-8bb1-c1d4ab90147f",
        "cursor": {
          "ref": "3a7e9a5d-488d-40d6-8753-158adf5ede21",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3a956570-371c-4180-9de5-be2146c8bc9c"
        },
        "item": {
          "id": "e61fdbe9-3650-479f-8bb1-c1d4ab90147f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f7613a78-daae-4c4c-8ee8-fdf12521c38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75568b9b-bcb7-4e08-8be2-cca556724eda",
        "cursor": {
          "ref": "19616e74-2977-4079-ba1a-54827e80db8b",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6f69cdc8-1c90-47ae-856d-9e2f65a85dff"
        },
        "item": {
          "id": "75568b9b-bcb7-4e08-8be2-cca556724eda",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7e7d8584-18f9-4ff1-a6df-1f99aa2e0551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de4236f-e331-408d-a648-e00a8630fa6b",
        "cursor": {
          "ref": "8847174a-6b47-4e11-b899-9e6445e0dde4",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9a69ccbd-c924-4f31-aa9b-452b69f5e119"
        },
        "item": {
          "id": "2de4236f-e331-408d-a648-e00a8630fa6b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "077cea88-2bb6-4d81-81ed-683323486655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a883aa-fa88-4fa0-8b3f-ac6ac48c0251",
        "cursor": {
          "ref": "0d6338ca-dc09-4c38-9bc9-4a5778c25246",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b00ce54d-6a45-48d3-a4d1-eeedafb47d4d"
        },
        "item": {
          "id": "41a883aa-fa88-4fa0-8b3f-ac6ac48c0251",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0567a5b8-ffe4-456a-9ed9-ae083a0deaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba436157-b351-4b6b-a358-5a75d4aa0255",
        "cursor": {
          "ref": "07fc5752-7791-42f7-a2ba-075b35ed7cbd",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "087ff4e6-2023-4d41-8420-075604d610a8"
        },
        "item": {
          "id": "ba436157-b351-4b6b-a358-5a75d4aa0255",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "eaa444c0-0e13-4b50-8b87-c460ec425d18",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7833fd-0811-45c4-b82f-7882adf2c533",
        "cursor": {
          "ref": "05caa9be-5eaf-4244-99c2-0dfee5b0fa80",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5d2a36ab-28c0-4d9c-8872-9c42611c030b"
        },
        "item": {
          "id": "2d7833fd-0811-45c4-b82f-7882adf2c533",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d348b29a-8b29-4625-8649-1380541c53ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec02a645-0509-43b3-9f4f-ff6baa226283",
        "cursor": {
          "ref": "9c36779f-5dd3-439d-a8b1-b2dff13dfb0e",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f510db75-6546-4fce-8521-3b735bd6692b"
        },
        "item": {
          "id": "ec02a645-0509-43b3-9f4f-ff6baa226283",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fbf8c052-5c14-468f-86d9-c668124bf001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae94b227-5c27-4c4d-935d-156a50836d30",
        "cursor": {
          "ref": "a44df332-9ca7-44c6-84b5-eceae2fc13ae",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "df0cb1a2-a57c-4e1a-99f9-e06f8901acbe"
        },
        "item": {
          "id": "ae94b227-5c27-4c4d-935d-156a50836d30",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d1ce4226-ca04-4aa0-8599-06e1ed8a9d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc7f336-ceec-4dd4-bd99-65d140ce72be",
        "cursor": {
          "ref": "65fb372d-b343-43e6-8b68-efa3d308fe0f",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e68e8294-b6d1-4e8a-8a83-dacb924a487d"
        },
        "item": {
          "id": "acc7f336-ceec-4dd4-bd99-65d140ce72be",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d0240d47-9b4e-42b9-8269-9a9c23a83d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132d6857-04de-45f8-a5dd-40bd3c95bf75",
        "cursor": {
          "ref": "0490604d-67b0-45a1-913d-3e293bf28ad1",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3366cfae-1f34-4bb4-afb4-05a209ac7688"
        },
        "item": {
          "id": "132d6857-04de-45f8-a5dd-40bd3c95bf75",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "24d6c241-951d-4655-9a80-fb151d8e5b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b00f84-2bc9-4bfb-a2bc-0ba43884a3e1",
        "cursor": {
          "ref": "d0a8e70d-cf81-4e33-aee0-affabbf1e5be",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8dc93c79-8d05-435e-924e-28772bdb594d"
        },
        "item": {
          "id": "41b00f84-2bc9-4bfb-a2bc-0ba43884a3e1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "73eeaa0a-fca2-4ec8-a100-36edde712820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e692ac8d-7004-4475-9bda-42d1a26fba9f",
        "cursor": {
          "ref": "0f2f0fe8-6478-40cb-83ee-72b45b82da63",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0da33089-7a43-4cde-897b-c9882b97cbf5"
        },
        "item": {
          "id": "e692ac8d-7004-4475-9bda-42d1a26fba9f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b52ee85f-9819-430f-a508-c06c398a6009",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 15,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c378c20-7fa3-4559-9210-abbc7429c6ed",
        "cursor": {
          "ref": "f538a5a6-fbc1-42a3-ae94-6e5cd9f38282",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8e3e967d-c637-448c-96e8-d89a5eb4ba5d"
        },
        "item": {
          "id": "1c378c20-7fa3-4559-9210-abbc7429c6ed",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f43ddd7f-b2b0-429f-b15d-9ead73480ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df943cd-9e07-4a49-b17e-73b36404786a",
        "cursor": {
          "ref": "24fb5af9-fa23-4e77-8dcc-d827927b6def",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "753efa0b-c7bd-4f50-9477-31a74f0a26d0"
        },
        "item": {
          "id": "8df943cd-9e07-4a49-b17e-73b36404786a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6eda5e11-e0a5-4bb5-bac3-31652208f8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568a25ae-46eb-472c-9a50-5322213a11e2",
        "cursor": {
          "ref": "89a4d949-daa6-4116-b6e4-4040441d922e",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2c12bf80-cb4c-482c-aefc-d2e998128de2"
        },
        "item": {
          "id": "568a25ae-46eb-472c-9a50-5322213a11e2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "346a3449-edfb-4c91-9355-8761a78a1705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d834836-5c05-4370-b55d-ea707c8af1a0",
        "cursor": {
          "ref": "520ea7f8-d2bf-489a-b9f9-0a7eca1992f9",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b81ed2a3-2c06-411c-8af4-ced9129c8846"
        },
        "item": {
          "id": "7d834836-5c05-4370-b55d-ea707c8af1a0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cc50558a-b5ff-4213-ad4b-92d065dfbf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c3124b-ce44-4e22-a4ac-1217def5c97f",
        "cursor": {
          "ref": "64d15384-9ff9-4a95-8288-158f065c077e",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "645c5942-68f6-49f0-865a-fda0ef101737"
        },
        "item": {
          "id": "b1c3124b-ce44-4e22-a4ac-1217def5c97f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f2d1de98-70ac-417f-bb71-a46d32ab0c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46393418-b4c4-4a11-8a10-5c393c03fd98",
        "cursor": {
          "ref": "129e450e-3969-4358-aa97-ebcc17157678",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "01e59583-93ea-4f75-80e1-2d997201b8fe"
        },
        "item": {
          "id": "46393418-b4c4-4a11-8a10-5c393c03fd98",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6c2951a7-9e81-45b3-8713-0f29acd31694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35974005-1e4c-45af-8570-310be046d650",
        "cursor": {
          "ref": "3f95ec27-05c8-47fa-9165-857ffdb05735",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e1121612-71a3-494b-8680-0dd5ccb0645e"
        },
        "item": {
          "id": "35974005-1e4c-45af-8570-310be046d650",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "30ce6d44-8623-43b2-83a9-a048ec5e726d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b988b76-8a54-40c2-a660-e640416b00ea",
        "cursor": {
          "ref": "056c26ec-8865-44c8-b82a-d789f9a9cf84",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b305c6c6-48b7-4444-a75b-2d972e093d0b"
        },
        "item": {
          "id": "8b988b76-8a54-40c2-a660-e640416b00ea",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "48805fd2-7a92-464d-8b1b-7c6fdb985265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704b5f78-316f-43ba-a5d5-d9409d3081dd",
        "cursor": {
          "ref": "c951a824-7821-48af-ba2e-525b26a0c301",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "76635ab2-7775-4fa8-b3ee-31963ea52aa4"
        },
        "item": {
          "id": "704b5f78-316f-43ba-a5d5-d9409d3081dd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "114bc5bc-d33b-4841-80ad-448b2be88ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b3bb04-265e-4304-a862-2047560b48bb",
        "cursor": {
          "ref": "e08133e5-b5c2-4e9f-9acd-e148179f2a26",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9b0c34d3-2e6e-44ea-bcbd-e519cd0cf527"
        },
        "item": {
          "id": "01b3bb04-265e-4304-a862-2047560b48bb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d99f43f9-917f-48b1-9778-7c2e9daec085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746603f9-3410-4c1a-b0c4-4671acbedb3c",
        "cursor": {
          "ref": "79b779c0-66ce-4e1f-91ec-0f6596e31775",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "511236a2-f840-4231-ab94-bef785f3a071"
        },
        "item": {
          "id": "746603f9-3410-4c1a-b0c4-4671acbedb3c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "92f596d7-21a1-44cd-be61-02a3ef9a22a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb71ce1-0f05-4f9f-80cf-296c4c996dc3",
        "cursor": {
          "ref": "dc44d63b-23d8-4e24-a3da-823ad1569956",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e948b1bb-8679-4cae-8ee8-5e47a550dd8f"
        },
        "item": {
          "id": "9bb71ce1-0f05-4f9f-80cf-296c4c996dc3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e1d278bc-0824-4eff-bccd-201affd24d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cac8c90-ef02-44d3-95bf-dd255b293d1d",
        "cursor": {
          "ref": "27b084b5-db10-4e36-9daf-4c2f01e22874",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "142d37ec-1ca3-4888-a370-c7f80adfb934"
        },
        "item": {
          "id": "3cac8c90-ef02-44d3-95bf-dd255b293d1d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ea4eaa6e-b542-4665-8b50-b006cef7059c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9cbc37-02bd-415b-9c1d-8904155539f6",
        "cursor": {
          "ref": "74765a58-7db0-4814-8df4-3c143dde8bf5",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cf1464c2-d6ec-4bdb-9f41-8952080ea293"
        },
        "item": {
          "id": "5a9cbc37-02bd-415b-9c1d-8904155539f6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "73ad6962-e7dd-4c0f-a6c4-1c8aa7b73b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7277c000-999c-4e24-acaf-cba150a2f42a",
        "cursor": {
          "ref": "00759e0c-8011-47e7-a6e7-6d180ed251f3",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8c45e4b6-7bd6-4937-98d6-0657e773913e"
        },
        "item": {
          "id": "7277c000-999c-4e24-acaf-cba150a2f42a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "061f702b-7821-4af5-b147-96db14976d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73a1630-5510-4758-90e1-29e604259a7f",
        "cursor": {
          "ref": "31d1d0d8-47db-4825-a9c3-487974bae6c0",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "37747d4b-2089-41a6-a771-a4bf99c7463b"
        },
        "item": {
          "id": "b73a1630-5510-4758-90e1-29e604259a7f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f5d5a28b-4114-4590-b78b-b9cd854ed194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8a5c3f-82fe-4c04-8b84-02c7189507f3",
        "cursor": {
          "ref": "423aaaa4-ad5e-4f92-bfc0-91e07e260810",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bf355719-5eda-4baa-90bd-e7c3ac1d7a90"
        },
        "item": {
          "id": "9c8a5c3f-82fe-4c04-8b84-02c7189507f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d0432758-bd4a-439c-badb-7f3e37207f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879d30bf-704c-4f5e-bd70-4ac8438a2fbe",
        "cursor": {
          "ref": "760b8fa4-f29f-429e-9e46-75d24f36f21e",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "57ec4811-90d8-4a10-8c33-ee92c6f35b0b"
        },
        "item": {
          "id": "879d30bf-704c-4f5e-bd70-4ac8438a2fbe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3827f2ec-13c2-49d3-bcc6-a1f8bf702d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08ac524-956e-4994-a93c-88de2dce5c64",
        "cursor": {
          "ref": "4bfabc31-f4d5-4c28-8838-6f14df9f78e2",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0b197fba-3e3a-4d19-ad69-1a5225c499ad"
        },
        "item": {
          "id": "b08ac524-956e-4994-a93c-88de2dce5c64",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e16504f4-ffe1-442b-ae24-c4f28b034e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6827408-afe8-461f-828f-4c96491b61af",
        "cursor": {
          "ref": "5f2bb891-0e8a-4c97-af82-f6fd7021a1a3",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "27758324-25af-46d1-b331-58c890e2aa5f"
        },
        "item": {
          "id": "d6827408-afe8-461f-828f-4c96491b61af",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2b7f4c47-d993-438e-afe5-0d48d3d7f567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fddf66-6754-497e-bc78-863016cb480a",
        "cursor": {
          "ref": "a2f3a614-0124-4438-8ebf-fa4bb2b3fe35",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dbb1a5c8-91bb-46ad-9042-c48b48f29818"
        },
        "item": {
          "id": "02fddf66-6754-497e-bc78-863016cb480a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e0e98804-dae8-478e-9d95-586f91b5dbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9602a6-80d7-44c5-a2bc-90b87a6434bc",
        "cursor": {
          "ref": "2a2635ae-21e4-4f5a-a828-7e486f6a5e33",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "19c1a4a0-8298-4e8e-9e46-e7363994cb7b"
        },
        "item": {
          "id": "7d9602a6-80d7-44c5-a2bc-90b87a6434bc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "391ae3e1-a024-42ea-87fa-550935023df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7674330f-f6db-4e86-ac3e-0df77aedadb5",
        "cursor": {
          "ref": "1b627216-5494-43fd-8baf-69a4c82588d0",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cb0621d4-38c5-4bba-940a-dc3560cdecc7"
        },
        "item": {
          "id": "7674330f-f6db-4e86-ac3e-0df77aedadb5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fb39dda4-add4-4132-a2ba-31a38066aa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c2ee18-ca69-450e-805a-1cb0609a9c8b",
        "cursor": {
          "ref": "3ec0debd-b814-4cf1-ac61-731d08a2486a",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "836a8e65-a278-4faa-aa65-4a86ac1488ea"
        },
        "item": {
          "id": "f5c2ee18-ca69-450e-805a-1cb0609a9c8b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fdb84f85-2506-4305-9790-c0369042dc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81e4ba5-b014-4557-9a24-d49d3e60c789",
        "cursor": {
          "ref": "01a77b52-6484-49fd-a48a-9d56d8f49b87",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "dec8ec3f-3c5f-4b0d-a961-35d90cd1a844"
        },
        "item": {
          "id": "e81e4ba5-b014-4557-9a24-d49d3e60c789",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "043d07ae-fa1f-4728-a7da-14aeac5f1e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0793092-85fc-444d-8cdc-d92f7a91efa7",
        "cursor": {
          "ref": "3cdc0ead-90cf-4a0b-b380-b230ef2206c3",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "083b4022-a5a3-4cf9-80c9-fc8cbc2daa22"
        },
        "item": {
          "id": "c0793092-85fc-444d-8cdc-d92f7a91efa7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c80bf80e-5440-46d3-b651-784239c9c887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4ce875-26eb-4e1c-b2ae-fe7edb48aa77",
        "cursor": {
          "ref": "8a1dbb18-6d3a-4f53-b70b-a82b52b316a8",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fd78e05c-9acb-4d03-af57-7dc30d40d0d1"
        },
        "item": {
          "id": "1d4ce875-26eb-4e1c-b2ae-fe7edb48aa77",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "79a269be-3ab2-45dc-a840-0faea4496190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67313866-5d26-46bf-804a-053b972b678d",
        "cursor": {
          "ref": "7a680a63-094a-4fdc-b948-d3c11fed4340",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e8e8f81c-c52a-4335-aa1b-d187f32d0618"
        },
        "item": {
          "id": "67313866-5d26-46bf-804a-053b972b678d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ea866624-2c62-4cd7-80c3-3f414c84265f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2615d23-1284-47f0-b13b-9e95b9538e9c",
        "cursor": {
          "ref": "d2cf46f7-74a6-4df4-9cf3-7764ea62bdb0",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "adc8ff9d-0edb-4552-95c0-1872e6453391"
        },
        "item": {
          "id": "d2615d23-1284-47f0-b13b-9e95b9538e9c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "162f5751-8788-4652-be50-35faad4b5010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab7f715-b2f2-4913-9367-e35fd1c8a155",
        "cursor": {
          "ref": "74156106-a517-4f89-8873-c05e4a3b69b7",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "39553241-2cf2-4a96-8378-66a7ef5e86ca"
        },
        "item": {
          "id": "bab7f715-b2f2-4913-9367-e35fd1c8a155",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c6bed797-3b4c-4e16-b447-18c31e1de719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fb0fda-e763-4fff-93e2-9bfeecd59bda",
        "cursor": {
          "ref": "d47fbb30-b1fa-4d35-b1a5-02c4111e6acc",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "64dce1a4-98fe-4f7f-b2e1-34033600f1dc"
        },
        "item": {
          "id": "10fb0fda-e763-4fff-93e2-9bfeecd59bda",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "51c44170-d8a0-42ce-a5e2-32c3bc1dd54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8af6259-68ba-49cb-886e-b71131463e70",
        "cursor": {
          "ref": "e5f12e25-c9f0-4b99-9d2f-4a3589826a76",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6465e133-f198-4983-91df-93028e91dbfc"
        },
        "item": {
          "id": "c8af6259-68ba-49cb-886e-b71131463e70",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "37db0233-9ebb-4c3a-990b-a30a62cff596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f293e2-46f1-408d-80cf-6d15cd250030",
        "cursor": {
          "ref": "3d96679a-aecb-4f4f-ac74-dea4c51bb1ea",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "62b38cd9-c93d-4286-a0f5-5b5ba4a25b1b"
        },
        "item": {
          "id": "71f293e2-46f1-408d-80cf-6d15cd250030",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ce0356ed-e9af-4fcd-b82a-75f3bfb4531c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a76007d-0174-4d83-8184-188810e0c4c8",
        "cursor": {
          "ref": "98ad3569-7f53-4c49-8efd-72e810069e6a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "77c75d84-7749-4885-9c65-23ea01b59036"
        },
        "item": {
          "id": "2a76007d-0174-4d83-8184-188810e0c4c8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7efdca97-47cc-4201-a4db-d5cae8fed199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43e625c-46cd-4d40-b89d-19cb382718fc",
        "cursor": {
          "ref": "7c9160e2-fe5b-498a-97bf-5f55639f6d0c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dfe27cfe-ea15-4ce4-a020-e129da2123bf"
        },
        "item": {
          "id": "b43e625c-46cd-4d40-b89d-19cb382718fc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3787dd9a-53e1-4ebb-9cd3-d3cbd84223e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84a96c0-b38a-4f1b-bc74-db7611b478a4",
        "cursor": {
          "ref": "2c688b2a-2c63-435e-aee9-df7e929dc50b",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "05038686-d61f-4ee7-90df-58b5f5f35a2d"
        },
        "item": {
          "id": "c84a96c0-b38a-4f1b-bc74-db7611b478a4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b3ca2ec2-a3a0-4fbb-8a5b-a2aaedcc8d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e777b1-5f90-4cc6-beee-5ed5cc5edf78",
        "cursor": {
          "ref": "03977e9b-ee30-42de-a0b8-cbcd920b6679",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "181234c0-bb2b-4b84-a7e2-331238c7e9cc"
        },
        "item": {
          "id": "87e777b1-5f90-4cc6-beee-5ed5cc5edf78",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3a03e66a-784b-4faa-ac3c-1cf426ec9729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535bf65d-616d-4ccb-a34b-4674318b5b06",
        "cursor": {
          "ref": "dc4d8c77-6c2f-445b-8482-aef47f37a0a7",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f9b37461-6089-49bd-b647-a1e660275990"
        },
        "item": {
          "id": "535bf65d-616d-4ccb-a34b-4674318b5b06",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "856df13a-e47e-436d-b068-f056201debd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d0e6ce-b578-447d-83a9-78f126db29eb",
        "cursor": {
          "ref": "116233ea-9f15-49a1-ad67-f039169014b5",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "743de99d-4389-4f9b-a616-6698c99d6170"
        },
        "item": {
          "id": "09d0e6ce-b578-447d-83a9-78f126db29eb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8eb159a0-4cf2-49d1-a7e6-bd8c7d748eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd9a4fd-ad0c-438c-9301-71f327663c5b",
        "cursor": {
          "ref": "59940517-37ee-4c67-a531-bb031c44a372",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dac7b0b4-d978-4080-8d3c-5226ea522729"
        },
        "item": {
          "id": "1bd9a4fd-ad0c-438c-9301-71f327663c5b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "41337571-54da-42bb-a3af-ac437b9c5eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f316c506-b79d-48de-8845-d56d113b2902",
        "cursor": {
          "ref": "3716cbff-595b-45bf-9e0c-4bfd994d2231",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "257a6288-ee47-4b16-b7e1-245ebbd1d18d"
        },
        "item": {
          "id": "f316c506-b79d-48de-8845-d56d113b2902",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "771594ef-9e33-4b5a-a1f0-34ffe840703f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c59788-905c-4392-afa4-68246d509d13",
        "cursor": {
          "ref": "1db55507-d9c7-46ff-bdc5-b971be106bfb",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dc056394-4832-40b6-b7a5-d627ba6a9572"
        },
        "item": {
          "id": "12c59788-905c-4392-afa4-68246d509d13",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8f179f34-ef0e-40d8-945c-67fb41b1de62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ed06ac-37a1-4c67-91a0-3a0da539271c",
        "cursor": {
          "ref": "7f349560-d62e-497a-a56e-f7c1bbe12e45",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a0c8577e-49f0-4c2d-b001-46951794ae10"
        },
        "item": {
          "id": "01ed06ac-37a1-4c67-91a0-3a0da539271c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d8da9851-0219-4ab2-afce-e131c42ba1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b704a91-5106-4577-9615-54ae0c8c377c",
        "cursor": {
          "ref": "aef7d520-05c4-4a8a-9456-331c6457c998",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e9e3589b-2d15-4a3b-9c95-9c8def0a953c"
        },
        "item": {
          "id": "1b704a91-5106-4577-9615-54ae0c8c377c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f72d5105-e015-444f-aa85-813b0b18086f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd5597d-eabe-443b-b4bf-80fc0246c7ee",
        "cursor": {
          "ref": "afa11e50-3e06-462e-a7c6-5f360bf8c238",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "344fae13-f50f-4d27-84ab-fbb8ac26bd2b"
        },
        "item": {
          "id": "0fd5597d-eabe-443b-b4bf-80fc0246c7ee",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "67490a63-7748-4476-8b62-eeab37e23fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4c25f8-5333-436c-8487-392a0f8acc32",
        "cursor": {
          "ref": "fa768977-0130-4d13-9d18-1d46d3d594c9",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "612b7802-a7d1-4542-94cc-83313296e5bb"
        },
        "item": {
          "id": "5c4c25f8-5333-436c-8487-392a0f8acc32",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ea90b7f2-416a-447a-9eb1-9207a04445bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca655816-8973-43e3-b813-1641f52f4df0",
        "cursor": {
          "ref": "8c733120-3ec2-47f6-bc41-0a6323a485fb",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "873c5d5c-311b-4bcf-8a09-703d43eecc87"
        },
        "item": {
          "id": "ca655816-8973-43e3-b813-1641f52f4df0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a3329705-5c78-491a-9073-3b4e2beb123b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbd23fd-76e2-44b2-92e7-9aa097e710c0",
        "cursor": {
          "ref": "0b3336c2-c313-4c01-85f4-c55547ecd0a0",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e9f7bf94-dbcc-4a7f-8699-60912c5924d9"
        },
        "item": {
          "id": "4fbd23fd-76e2-44b2-92e7-9aa097e710c0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "46adafd6-b2a3-43c8-a8a7-3fc5b0f060ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b7f4b1-3dc7-418f-89a1-107faca64f23",
        "cursor": {
          "ref": "3b8d1626-3a3e-423c-b653-000a258cbb34",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8c74deb3-5aa7-47a1-9724-8183dc45426a"
        },
        "item": {
          "id": "74b7f4b1-3dc7-418f-89a1-107faca64f23",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "57260785-936f-484b-b208-3ce4356f2a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afa7640-45ee-4a5b-b1b1-d8fc00cd3b9d",
        "cursor": {
          "ref": "294e178b-d086-4d13-afea-e7362888fbf1",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7d9e2539-6722-44ab-9f7a-ed53eced82c9"
        },
        "item": {
          "id": "0afa7640-45ee-4a5b-b1b1-d8fc00cd3b9d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "58b6dac4-6660-46d8-9146-5b57f2c95742",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a77f955-506a-48c5-8143-e303ee51ebb8",
        "cursor": {
          "ref": "4b2cab2b-a883-488a-9971-6fefcb7e1b0f",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "312ba450-6baa-4643-905c-f321ca1c4124"
        },
        "item": {
          "id": "2a77f955-506a-48c5-8143-e303ee51ebb8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a6872c01-23f3-4278-bf57-381dc71ed81f",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5905e05-b721-40b3-a6ba-7d02ab6d8db1",
        "cursor": {
          "ref": "e212a256-577a-460d-a1b6-a3ffdb445f23",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "72ee9752-5e4e-42b0-a6ca-42d72d75d7e1"
        },
        "item": {
          "id": "b5905e05-b721-40b3-a6ba-7d02ab6d8db1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4d90e666-59ba-44d1-99b1-b0a63b8b87b7",
          "status": "Created",
          "code": 201,
          "responseTime": 233,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6703b49-f8e1-469b-ac40-d95435c4aedd",
        "cursor": {
          "ref": "9de288b4-c9f0-4365-937d-b8f5dce4e7bb",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "69b6427f-bb34-4bae-a51f-57a0f2c14c47"
        },
        "item": {
          "id": "e6703b49-f8e1-469b-ac40-d95435c4aedd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8471387b-57bb-456c-999f-c8fa3007d7e2",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5b3fef-cf33-4884-a417-f79fb3346fa5",
        "cursor": {
          "ref": "f7432654-4f70-4500-9ba7-7369e7d4376c",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9264d981-b6f7-409b-ae7c-b611e04e04e3"
        },
        "item": {
          "id": "ee5b3fef-cf33-4884-a417-f79fb3346fa5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0f5881bd-5c23-47aa-8ef3-94d612e9c3db",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8407739-a678-4075-8103-95732be62639",
        "cursor": {
          "ref": "0e7ae714-00be-4c84-82da-02d3359efd58",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1cdcf704-bbe7-4b4d-9890-1181243dceec"
        },
        "item": {
          "id": "f8407739-a678-4075-8103-95732be62639",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "58746fe7-cffa-44ec-a23e-96ab945ad6d9",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9651fe6-a3e2-42b8-ab24-bc5f5f4bf0e4",
        "cursor": {
          "ref": "c6f1afba-34b2-4bcc-baeb-8bc913e1b8d5",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "efa82ce2-b532-45ee-909f-823decaa91d2"
        },
        "item": {
          "id": "a9651fe6-a3e2-42b8-ab24-bc5f5f4bf0e4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fbbae754-2c27-40e4-8ab3-d546d94742a5",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ccf999-dc83-4e8e-8a8a-0db4f4fd78c5",
        "cursor": {
          "ref": "7c3ffa78-dd0c-4d1c-83e9-b053049924a7",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f116b0a1-d14f-4c5d-98fa-f39de7b666f1"
        },
        "item": {
          "id": "f4ccf999-dc83-4e8e-8a8a-0db4f4fd78c5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "58ac4f10-edf1-48e5-ba43-8697dda8298a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2847331-56ff-447c-aafa-176dc164d687",
        "cursor": {
          "ref": "4844c19d-0a61-44db-bc03-589217a4f120",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2846dd65-1f65-435e-84eb-e33a8a7cab89"
        },
        "item": {
          "id": "e2847331-56ff-447c-aafa-176dc164d687",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0367b6a3-8ffe-4c9d-bfc7-87038a3b3744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd76edb-773b-44df-8d49-a48b395965a2",
        "cursor": {
          "ref": "0846baf3-1a17-41b0-a999-55c25dc126b9",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b4af44e4-6372-47c3-b3b1-2a0ce3bda8d7"
        },
        "item": {
          "id": "bfd76edb-773b-44df-8d49-a48b395965a2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "726263ee-6986-40cc-9974-289f400ac3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9494396-a10e-4203-a59b-7436012e442d",
        "cursor": {
          "ref": "342c2467-d00d-43bf-bf7c-a85388c7dbc5",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a4752767-a762-4858-996b-48d0e0d37402"
        },
        "item": {
          "id": "f9494396-a10e-4203-a59b-7436012e442d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7c2dfa51-d746-4f9c-92fa-cbf5ce2aa56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16de10fe-dbf4-47c9-8b48-e3a7d66eb220",
        "cursor": {
          "ref": "197c4272-d23c-458c-9f3e-bf29306e5ae2",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "62405530-a161-4baa-9b42-7211fa8101e5"
        },
        "item": {
          "id": "16de10fe-dbf4-47c9-8b48-e3a7d66eb220",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2dd447e2-d0b6-45e5-9064-0e556a1548e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b3f4e9-9bbe-4fad-aae0-1dfc4b09c35c",
        "cursor": {
          "ref": "788a1f07-617b-479d-b7a8-83fe8c685fda",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "eaa67f12-4e15-497d-a589-0a65e24dea94"
        },
        "item": {
          "id": "77b3f4e9-9bbe-4fad-aae0-1dfc4b09c35c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8ccaf1e6-e9bb-4014-99bd-d941f77f417a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3088db13-8b01-4a39-a808-3f9db17c86bd",
        "cursor": {
          "ref": "51640203-6c8a-4cb4-805e-fa98536256b8",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "21bc213c-01e4-45ff-a82a-b63881bba406"
        },
        "item": {
          "id": "3088db13-8b01-4a39-a808-3f9db17c86bd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eed63753-a4be-4586-9b3d-dc3c096babbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b105aa-2bff-44b0-909f-dc308e498358",
        "cursor": {
          "ref": "fa3416a9-2971-47f1-8195-5f2edb0aaab1",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7fb54cf0-7903-40aa-bdf9-5fead584a62b"
        },
        "item": {
          "id": "21b105aa-2bff-44b0-909f-dc308e498358",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f749cffd-92f2-4111-a6c4-60da2a66b42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2447f61-c40c-4884-809b-d04041ceef07",
        "cursor": {
          "ref": "1a8404fb-8463-4d6a-bddd-1af59fa4c340",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fb97f859-4bf7-4c4a-8a69-95c3f234681a"
        },
        "item": {
          "id": "b2447f61-c40c-4884-809b-d04041ceef07",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "be59948b-5adf-4a4d-ab2b-820987c964b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7095e79-b16f-4b32-a547-fe2d9ed23a4f",
        "cursor": {
          "ref": "6a5e8b30-bc62-444d-a207-8b06dbc7390d",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ab543f4e-3078-467a-99bd-693190e25e74"
        },
        "item": {
          "id": "b7095e79-b16f-4b32-a547-fe2d9ed23a4f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "563a6261-70d3-4f73-b406-0a80e466b08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec9cf57-dfa0-4ca5-867e-6d489c8e9eef",
        "cursor": {
          "ref": "9a2f1710-42eb-45e7-ba3b-22043b79879c",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f812dfaf-77be-45ba-8ec8-eea51900b641"
        },
        "item": {
          "id": "eec9cf57-dfa0-4ca5-867e-6d489c8e9eef",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "af9a1ea8-eb69-41e2-becf-25b8e94eca81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2572a0ab-7d29-4797-9ecc-a3257ea92b24",
        "cursor": {
          "ref": "1626424a-6d5d-4f9a-b231-7e9386b8c145",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a11afcd7-a9dd-4a6b-80ad-f40d7102117b"
        },
        "item": {
          "id": "2572a0ab-7d29-4797-9ecc-a3257ea92b24",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "41ec2928-dad6-423c-9f01-b0699671930c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0251fcf-3ab8-4d28-9d8a-ea545d34bcf6",
        "cursor": {
          "ref": "47c4c227-d396-4569-8d99-84611bd4f0f7",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "917901a7-0d6b-4cb7-9eaa-fee0e6085f83"
        },
        "item": {
          "id": "f0251fcf-3ab8-4d28-9d8a-ea545d34bcf6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c7fdda1f-d372-4f82-a7bb-e5cf81843958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796aa165-5c13-444a-adc5-815268d85809",
        "cursor": {
          "ref": "b4b7f52d-7367-4126-a975-450c7225258c",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3e79e86a-f0f0-49ab-a26f-7925cb563b77"
        },
        "item": {
          "id": "796aa165-5c13-444a-adc5-815268d85809",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cc3c3954-b95b-4473-944c-b29def55e2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c4421b-3f66-4d4a-a70b-19fd5634954e",
        "cursor": {
          "ref": "cb4fa2da-2a0d-4293-80b5-cb738d9e385e",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "49dd98d4-f5c9-4506-bbed-dc2a3ea713c5"
        },
        "item": {
          "id": "a7c4421b-3f66-4d4a-a70b-19fd5634954e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "68a674f3-7dcb-443a-beb4-9f97a73dc103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45a3df9-ca70-466b-b4bc-326614849d1d",
        "cursor": {
          "ref": "d70c53ef-0bfb-4016-b6ab-9e54a07bf30a",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8bf115a6-9cbd-4b7d-a8c2-2cde4af61b22"
        },
        "item": {
          "id": "a45a3df9-ca70-466b-b4bc-326614849d1d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "51408a88-80bb-4f3a-9e3e-a7756923ebe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d97635f-5a5b-4ecc-928e-7b14a2384386",
        "cursor": {
          "ref": "d21cd4d1-6437-46d3-8cff-8372aec6e545",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "27b4f09a-cb15-4541-848d-9353c7efe574"
        },
        "item": {
          "id": "1d97635f-5a5b-4ecc-928e-7b14a2384386",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7716e6c5-0bbd-4f48-a23c-afae950ad417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429a03b9-88c3-4c01-bb5e-45e9fd60370d",
        "cursor": {
          "ref": "3d74d190-2721-431c-899c-ad66b0e70efc",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "add97e21-350c-49d7-9e18-2db246cf8580"
        },
        "item": {
          "id": "429a03b9-88c3-4c01-bb5e-45e9fd60370d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "54396e62-5e5c-4321-992e-ecfac36e4e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4440ccae-4968-427a-9faa-03bc98d37883",
        "cursor": {
          "ref": "7793c0df-fc01-4914-af37-37b22033cf2a",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fbea9ceb-2d80-4936-86a8-c2951ab702c3"
        },
        "item": {
          "id": "4440ccae-4968-427a-9faa-03bc98d37883",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a10f0489-01d1-4277-9829-79905148f8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682a73be-1b25-41a6-bb7b-e3e99fdf5846",
        "cursor": {
          "ref": "ad9d4e89-5315-41b4-9240-d745ec920d99",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "de2041a6-2a64-42e8-9c5d-42cc7fd4fc62"
        },
        "item": {
          "id": "682a73be-1b25-41a6-bb7b-e3e99fdf5846",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "09dee45a-32b8-43db-b77c-2256a48f34b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8ef92c-2b15-4299-aa20-bb98549e7b29",
        "cursor": {
          "ref": "6e1657a6-c61c-4702-ad55-dbade019ca98",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cbc05f2d-d183-48f5-9dc4-b4f46d8ff33f"
        },
        "item": {
          "id": "ae8ef92c-2b15-4299-aa20-bb98549e7b29",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "923fbd08-84b1-452d-ba75-d6b6edba0556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d9e196-807c-47ee-a756-4de5b5ffcc05",
        "cursor": {
          "ref": "f84bc093-dfb8-45c4-ad60-10dbf95acac1",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c5c804b2-741e-425b-88b6-5e334827f096"
        },
        "item": {
          "id": "60d9e196-807c-47ee-a756-4de5b5ffcc05",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "264a61e1-8177-43ef-8393-0951b85d9ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d38b92a-1b80-42b9-a26a-0291cd2bd320",
        "cursor": {
          "ref": "8b941a2a-37b5-4c1b-9dfe-be9056e9741b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "37aa6a41-8a43-4160-9b2b-26fabf5e398e"
        },
        "item": {
          "id": "6d38b92a-1b80-42b9-a26a-0291cd2bd320",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b014aafa-2c03-4623-b8e7-8d010f3cd3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0feb54-e282-4c8c-9669-ff62e15ee9dc",
        "cursor": {
          "ref": "24e05929-a5f4-4076-befc-cccdcbdca308",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cbf653a1-842b-43d8-8274-efe96d71b7eb"
        },
        "item": {
          "id": "2b0feb54-e282-4c8c-9669-ff62e15ee9dc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9577ba56-66cb-4c01-9852-ba555bb0d2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710a6604-c926-4ab6-8681-a89356b50c85",
        "cursor": {
          "ref": "c3c7e80f-272c-4dde-8d3d-5c6459f70770",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b28e2382-1bb6-4660-8a45-a77bb65a301a"
        },
        "item": {
          "id": "710a6604-c926-4ab6-8681-a89356b50c85",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ee87a509-64a3-4999-a321-032945305203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96062374-c924-44f0-b13c-0880fd34475b",
        "cursor": {
          "ref": "8e0f5d10-1415-492e-b231-ce2ec9364695",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8d5df6ae-b7f6-42ed-a85a-5cccf61b80a9"
        },
        "item": {
          "id": "96062374-c924-44f0-b13c-0880fd34475b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5ade38a6-a612-4e6f-a116-fff2034ae850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3918e99d-0b70-4bc5-8f5d-0afb11af9f80",
        "cursor": {
          "ref": "07468f27-da5d-4bcb-95d1-a114b9f145c7",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7346d24b-6aea-4b25-94ca-a574414821c4"
        },
        "item": {
          "id": "3918e99d-0b70-4bc5-8f5d-0afb11af9f80",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8228b9b2-33d1-4707-affc-c1249fec7f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e96b1a-7caf-4ae2-8edd-84f987595f23",
        "cursor": {
          "ref": "b9f6fa9d-f3b7-41e4-8588-91e8fcb40e68",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bfc1ff7c-4a06-4de7-a1db-854894b1641b"
        },
        "item": {
          "id": "78e96b1a-7caf-4ae2-8edd-84f987595f23",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "216f4deb-21b2-4699-9c9c-91f510333215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbb895f-9aa3-4a0e-a7f2-6e628c155843",
        "cursor": {
          "ref": "b240d320-086b-4a0b-ac27-0e7a27832fe4",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2aaa99da-1d36-44a6-b696-887fb618e6da"
        },
        "item": {
          "id": "6cbb895f-9aa3-4a0e-a7f2-6e628c155843",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dfbe6d08-cdb9-4daa-bef1-e34c98b247b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18eac72f-210b-4e64-b0d5-09d624c89cd5",
        "cursor": {
          "ref": "e345b963-5115-4025-a11c-e76fb11a6a04",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "39df75cc-08c9-421a-bc58-0d25e1245a16"
        },
        "item": {
          "id": "18eac72f-210b-4e64-b0d5-09d624c89cd5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b56eeb53-e9dc-4ee8-832b-e2ad314c98e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be86b144-44df-4bdf-86ce-9c6460d3182c",
        "cursor": {
          "ref": "3aa1fddd-1769-428f-8821-921a2b112e49",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "07445832-eef5-446d-bbbb-8fd0b9b8a4e5"
        },
        "item": {
          "id": "be86b144-44df-4bdf-86ce-9c6460d3182c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "73b48e45-b0e7-4794-8e74-33a89a2b59f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341cacae-7f2a-445e-8579-44d819143a08",
        "cursor": {
          "ref": "8892bfca-82de-4e69-b299-3a1e645eb6b2",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7a4080d3-921f-4b40-a60b-1ea947507d40"
        },
        "item": {
          "id": "341cacae-7f2a-445e-8579-44d819143a08",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fb13b3ac-1be2-4a97-bcaa-24d1ba9b8415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a15f38e-866a-4f53-8cb1-0b2d6d325407",
        "cursor": {
          "ref": "314f1de3-7eb8-4900-904a-dd8d7692339a",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3ec3bdd7-0a0b-4cfe-b950-627c82ac6c84"
        },
        "item": {
          "id": "8a15f38e-866a-4f53-8cb1-0b2d6d325407",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fa54f7aa-2fa9-4986-8def-d3a031e09ac0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dad0a08-e77b-44a0-8480-b250041a93c4",
        "cursor": {
          "ref": "7144ec81-ba1e-425e-af0c-c20354ce1bdb",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d9351cc7-c666-429e-a626-a4545c240781"
        },
        "item": {
          "id": "8dad0a08-e77b-44a0-8480-b250041a93c4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a882bda4-1cc6-44b5-80e9-5975aff4a024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdb6b06-120d-4d8e-80cd-eccdedd6a9fc",
        "cursor": {
          "ref": "30ae2668-f5b8-4796-a04d-a073c417ad43",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2caa11c0-e51e-424a-9ba7-e0516f76d410"
        },
        "item": {
          "id": "dfdb6b06-120d-4d8e-80cd-eccdedd6a9fc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "27c7aae3-2002-4670-813a-8b529b4fa3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e485b95-fb3f-42f5-9793-281f2d3c8ff3",
        "cursor": {
          "ref": "df408d8c-e409-4c5d-9e10-7a53b654b0f6",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0953b2ca-0a2b-447a-97b7-6841e726138b"
        },
        "item": {
          "id": "3e485b95-fb3f-42f5-9793-281f2d3c8ff3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e958df76-ea47-43e8-b993-41fc379c417c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02346065-62ac-4aa5-8c4e-df11b1fb12e6",
        "cursor": {
          "ref": "a6d77886-6331-4560-97ae-f2be6242b514",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5444abb1-63a0-478f-bb10-91712f6ff802"
        },
        "item": {
          "id": "02346065-62ac-4aa5-8c4e-df11b1fb12e6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d9a5f627-00b6-4dde-a733-2fe115bb2bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a990bf8-87f7-4d4a-b46a-0dadfb68fe16",
        "cursor": {
          "ref": "3de201bd-1220-4931-af04-d949a3cd1ea4",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7fa3aa03-25e9-4d44-9dea-ffd1c5d8c452"
        },
        "item": {
          "id": "0a990bf8-87f7-4d4a-b46a-0dadfb68fe16",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "83f4a4d2-9829-4176-b9e3-c605db2d0834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac9566c-52d2-4ea2-bf75-ae3c72438bb2",
        "cursor": {
          "ref": "cb99b185-728c-4258-87e9-1f9a5c104c97",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d5524dc8-b39d-48df-ae6c-66c6cd000ec7"
        },
        "item": {
          "id": "5ac9566c-52d2-4ea2-bf75-ae3c72438bb2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3e9df98a-9834-4b16-af49-0cb10848c9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9fd74e-a75f-46f4-9199-8b6d6d277066",
        "cursor": {
          "ref": "0bfa6e86-7f57-4e51-b0b4-c7ead4ef25d6",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "732310e1-90c7-4e76-93eb-d525ea952b97"
        },
        "item": {
          "id": "0c9fd74e-a75f-46f4-9199-8b6d6d277066",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "aa15c022-1e5f-4458-9c0a-a12cd76d80e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a031252-0c3f-430c-90b2-76d3025c136f",
        "cursor": {
          "ref": "1b783f9f-a8a4-45ca-9eb1-726fb4d2e12b",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ba44ed71-eed3-45c0-aabe-5025bebe0634"
        },
        "item": {
          "id": "6a031252-0c3f-430c-90b2-76d3025c136f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e9be862d-cdae-49c1-bfad-d27517c5ed92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cc3bb5-247d-4a35-ba97-7823e8328e77",
        "cursor": {
          "ref": "c614b3f7-4767-4d30-96b8-82dea71f61c0",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3a9c8ee8-64a4-45fd-ba34-6eee044b5a17"
        },
        "item": {
          "id": "f5cc3bb5-247d-4a35-ba97-7823e8328e77",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f38b81b5-84fb-40a8-be55-ff6ce97b0915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd5e83b-9a14-4be5-821c-eef40afbaf1a",
        "cursor": {
          "ref": "235ae83c-f59f-458a-b632-bdbbdfb2fd0f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7c8752ee-096a-4a63-bd8e-b786e9bb3089"
        },
        "item": {
          "id": "4dd5e83b-9a14-4be5-821c-eef40afbaf1a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "db5a6bd8-96b2-47a7-b8b0-57538bdcd947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e45f75-5e3d-4b58-9524-1d1b448fbb65",
        "cursor": {
          "ref": "0bb5303e-b552-4a92-9263-f494a3fc4090",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2bed0b17-b123-4c93-9626-4aca0342bdec"
        },
        "item": {
          "id": "96e45f75-5e3d-4b58-9524-1d1b448fbb65",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "db1eef5c-cda7-4bcb-bec8-8152e9a0a1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20583c80-d240-47b7-8e6d-99f4d1a1150f",
        "cursor": {
          "ref": "5b63d80e-81fb-439a-98b9-bac1b82d7f66",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "45061933-e60d-4b78-860c-5d741ce67e48"
        },
        "item": {
          "id": "20583c80-d240-47b7-8e6d-99f4d1a1150f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "49888795-d14b-470c-848f-f5048fe5a465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6eeb754-10e0-4a06-8de3-134ff90586b9",
        "cursor": {
          "ref": "12ca2eea-b499-422c-806d-e53cadb78dff",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "dcbc00d7-ed0a-4ea0-8924-964c9229ec14"
        },
        "item": {
          "id": "c6eeb754-10e0-4a06-8de3-134ff90586b9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7f2edf76-1e55-42c8-a5af-4c5774cb33a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fefca48-3096-497e-86e7-8fbfda6266ab",
        "cursor": {
          "ref": "32fdee7d-6b76-4087-badb-3a84487fd181",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "43ea5709-6e8b-4b4d-a252-1356d69327fe"
        },
        "item": {
          "id": "3fefca48-3096-497e-86e7-8fbfda6266ab",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e49e635f-20b5-4079-a150-d54074ca0948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb0808e-6858-4522-a1af-51764d08b2e1",
        "cursor": {
          "ref": "184c8ca7-429e-4ec7-be8f-1de551b4f8d9",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f13695b6-fb77-46ac-ba57-415d63f47210"
        },
        "item": {
          "id": "deb0808e-6858-4522-a1af-51764d08b2e1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cfa1f4d0-ea52-46de-aab8-7758995c6cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdf65e1-f1d3-49ca-861c-71d9ef807065",
        "cursor": {
          "ref": "ab7e20a9-e899-4ee2-8e6f-154a85733398",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e4b7b9ff-d2cb-4671-acca-642ce86831e2"
        },
        "item": {
          "id": "4fdf65e1-f1d3-49ca-861c-71d9ef807065",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f9613476-945f-4b3b-992a-e23125bc8eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb3b7c6-87a4-47ea-925a-bbde15e18330",
        "cursor": {
          "ref": "d47fab13-595f-4280-9ab2-5c17ce1fedf3",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bd581555-1093-464a-adf5-4df3f762b27b"
        },
        "item": {
          "id": "9bb3b7c6-87a4-47ea-925a-bbde15e18330",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ac0003c5-6600-4365-895d-8e5de64ab288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a52699-4b6e-4e28-b279-d9728f78d6f4",
        "cursor": {
          "ref": "ed4dcb2f-a6c7-47d0-8cea-734779ad5af8",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a0cde73e-6406-44aa-8921-7189984e6967"
        },
        "item": {
          "id": "26a52699-4b6e-4e28-b279-d9728f78d6f4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e5d29214-4a75-48ac-a731-0eb70f46ed85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf0b9ed-b014-4bc3-9737-a9ee5c58b780",
        "cursor": {
          "ref": "e93d7d75-c6bb-4182-963d-e6d9f540235a",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5b307f08-7ecf-474d-a4a3-d4872e8e0757"
        },
        "item": {
          "id": "9cf0b9ed-b014-4bc3-9737-a9ee5c58b780",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ffbd8e3d-f938-4fb6-907c-fa572a073f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac537c1-d656-4f47-9d67-58e24c535be5",
        "cursor": {
          "ref": "76732d49-c30b-476b-a9bf-3a2f45cf798b",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fc3cda42-cb42-4fe5-be19-ccca6bd9b535"
        },
        "item": {
          "id": "4ac537c1-d656-4f47-9d67-58e24c535be5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c3119e0d-8845-4b85-9b4b-f02a9184cb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb213d5-f785-4371-a02e-d0a0c0507444",
        "cursor": {
          "ref": "e45c5cd7-7638-414d-b314-acedbf57595b",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4346734d-19cd-43f2-af8e-60fa09eb6ac8"
        },
        "item": {
          "id": "7eb213d5-f785-4371-a02e-d0a0c0507444",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b89cad92-dbfa-4a87-a07c-18211d1cd097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fc355b-4035-4e8e-a2d1-506eb8e81adb",
        "cursor": {
          "ref": "631cc74e-1015-46e0-a46f-dd76d6a626af",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "efdd46b3-08a7-48a9-976d-9d16454e3e10"
        },
        "item": {
          "id": "61fc355b-4035-4e8e-a2d1-506eb8e81adb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d8247126-23d5-49ef-aab1-520ae05a0e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7263159-0389-4f70-820d-dc374ace30db",
        "cursor": {
          "ref": "979964c1-78f0-4c5b-a864-819484743656",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1fa6eb4e-1c9c-4489-a509-281b28a6b999"
        },
        "item": {
          "id": "f7263159-0389-4f70-820d-dc374ace30db",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0b9535ef-0f10-43fc-b845-3255d0ab96a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8a352d-5b42-45b8-8f70-359b3ae59dea",
        "cursor": {
          "ref": "2d913ef5-d49c-4a17-91f5-65d8331aecd6",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "55d5c57a-91ac-4ce3-866e-d9dc1d3d042d"
        },
        "item": {
          "id": "ed8a352d-5b42-45b8-8f70-359b3ae59dea",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "09dded40-c194-4b12-82b5-0968bdf3b093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c511672a-de54-442f-b558-56d18e929630",
        "cursor": {
          "ref": "e4736a45-98a2-4b5e-8864-785281e54f09",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d2603bb7-abf4-47b1-95d4-e1683b8c3f1c"
        },
        "item": {
          "id": "c511672a-de54-442f-b558-56d18e929630",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a0c08972-42d9-4444-8061-8188067c9806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e81385-82f6-4394-af0c-063a8c614de1",
        "cursor": {
          "ref": "4169b369-cefa-445f-bdb0-6fdf178f7371",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e775e8df-5531-4008-b966-ad8e4b504646"
        },
        "item": {
          "id": "73e81385-82f6-4394-af0c-063a8c614de1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4de2ed03-bc71-4c29-9add-505e164390d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0336b429-be0d-4967-80b8-671e9c00d3ca",
        "cursor": {
          "ref": "e72124cb-dcca-4ad9-9545-1a0ecc8a4441",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f51d1984-caa4-411b-ad8a-bb664a22e290"
        },
        "item": {
          "id": "0336b429-be0d-4967-80b8-671e9c00d3ca",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "288f67db-e623-4f4f-9f66-dccf3a646f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf9c421-3bad-436a-bdb6-876e6aa1cae3",
        "cursor": {
          "ref": "a1bb7492-7900-448e-b5a8-a5c6efe8019f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a2259e7f-5b87-4702-a787-ea928a23d45a"
        },
        "item": {
          "id": "adf9c421-3bad-436a-bdb6-876e6aa1cae3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bfe0dbae-412d-4af8-9f88-160d024e6166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc4b64a-2c51-416e-92dd-c799d14e7804",
        "cursor": {
          "ref": "3486aa6e-6bda-4042-8e1f-17f781dffb62",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1a73819c-1154-43cf-ae99-ee1d0c5398e3"
        },
        "item": {
          "id": "1fc4b64a-2c51-416e-92dd-c799d14e7804",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "959d3bcd-9e88-431c-a0c8-a0d30ebab7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86a74c2-e0fd-43ea-a9d2-b983389e360a",
        "cursor": {
          "ref": "7f0c293b-1b3b-4b69-9427-24494f1c5bbf",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "22ec0096-6a63-41cd-93a5-7450efde19e3"
        },
        "item": {
          "id": "f86a74c2-e0fd-43ea-a9d2-b983389e360a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bb18c5fc-a449-46de-b31c-51993a35f5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a70980-30e1-4314-ae3f-62d286649a72",
        "cursor": {
          "ref": "908f5453-a65a-42ab-8c9e-f94869c7495b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b57aa5af-61b6-4934-a18a-d986d41e066c"
        },
        "item": {
          "id": "e2a70980-30e1-4314-ae3f-62d286649a72",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d0219d4e-691f-4f15-9705-eebfff4a517c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14eb608f-f92b-4446-a65c-36d697baf650",
        "cursor": {
          "ref": "0dd5ba49-e85a-464d-a577-cd1a60e5ade5",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b3a196a4-5a26-4016-a474-a742a23c3165"
        },
        "item": {
          "id": "14eb608f-f92b-4446-a65c-36d697baf650",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c7fbc1ca-5224-488a-90e1-b9ff33500282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6357182e-a780-4be9-b7f4-1054fc6dd35d",
        "cursor": {
          "ref": "eb6b1ee0-678a-4f0d-b96b-f27fb64e1cc8",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a74a12e6-2b9b-440d-a997-5f6e2189a14a"
        },
        "item": {
          "id": "6357182e-a780-4be9-b7f4-1054fc6dd35d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a872743c-b170-4e0a-aaa7-d93ce04f002b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5693102-751d-4274-b381-b191ca43b169",
        "cursor": {
          "ref": "a992fb8f-0f91-4cbe-9cf1-f06f0a7a02e1",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7243dd82-c94c-4ebf-a802-cca4c9c2de02"
        },
        "item": {
          "id": "f5693102-751d-4274-b381-b191ca43b169",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "de2345e9-8787-44d8-9acd-178027821df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f80fd32-73a9-4d43-ad3d-eb5e3e43bd8f",
        "cursor": {
          "ref": "27557b56-405b-4475-9d5c-eaec322021ba",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "582cd2af-5d4e-4083-8043-2fa63c43be7f"
        },
        "item": {
          "id": "9f80fd32-73a9-4d43-ad3d-eb5e3e43bd8f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "eb6cf1eb-7449-4c55-b429-eccb99eae54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9808e13c-b98a-483a-9f19-a1bdd6e3f0a1",
        "cursor": {
          "ref": "cdf00826-4b94-4ef3-9490-5482109555f7",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "55ca95e2-ad63-4af8-8fc3-562f8208cf85"
        },
        "item": {
          "id": "9808e13c-b98a-483a-9f19-a1bdd6e3f0a1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f229c875-e8b1-4d1d-9710-5a66f634b4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126c3a6d-d045-4041-81c4-fd7fc64f999d",
        "cursor": {
          "ref": "808bcd26-9eb0-40d7-81a7-7b9ebb2eb4a8",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8d840403-9891-49f0-98c5-c24d951da3be"
        },
        "item": {
          "id": "126c3a6d-d045-4041-81c4-fd7fc64f999d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "34b293ca-dcc3-48e5-905b-418cff6e60f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a2f320-df5b-4449-b8d0-e959abca58a4",
        "cursor": {
          "ref": "a96ac040-b1b7-4d1e-a22a-5ffb60cfce33",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bf1ec2ce-4e4a-4d68-9407-362f5d5bdcd6"
        },
        "item": {
          "id": "e0a2f320-df5b-4449-b8d0-e959abca58a4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d281c305-d788-42cb-a700-f0d0c5b6a552",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd98e640-16b0-479b-85da-5632c75aaaff",
        "cursor": {
          "ref": "2bed8d4d-3ef8-4062-9534-54d1e200304a",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "52d06c2c-e11c-4e92-912d-0ae7e1e00457"
        },
        "item": {
          "id": "bd98e640-16b0-479b-85da-5632c75aaaff",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7957e368-174d-47c8-b523-b770b24d4c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b075a02e-94a7-474a-b079-7b52af7266e6",
        "cursor": {
          "ref": "bec9a936-709f-4323-a343-e720b58d1c5d",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4d72cb65-dd8b-4eea-b529-fdfb84794413"
        },
        "item": {
          "id": "b075a02e-94a7-474a-b079-7b52af7266e6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5d72238a-106e-4e59-847d-037d1804ea82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564c0558-abc1-4148-bb98-1de43fb6531a",
        "cursor": {
          "ref": "0ee26769-2844-4754-a1f9-e158a7d72321",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f6b9cc0f-b952-4f9b-83a3-ab6ae5615fe2"
        },
        "item": {
          "id": "564c0558-abc1-4148-bb98-1de43fb6531a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9242aadb-2511-4973-af2d-3a77992869f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7b4720-b468-4ccd-b3c8-ebc6c2a36bb8",
        "cursor": {
          "ref": "5a18bda2-95e9-445e-80e5-5943cc2d1683",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e4de818f-7ec1-4a36-bcd0-8a999a4d100f"
        },
        "item": {
          "id": "4c7b4720-b468-4ccd-b3c8-ebc6c2a36bb8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "263bd511-2cbd-490a-a0d1-78d62674c0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828a5f0d-652e-4515-89cd-fa847bc5d71b",
        "cursor": {
          "ref": "55e3a9b3-d4b7-4fdf-ae6c-200305ce84f5",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "32bbcdbe-815c-4592-ab4d-632ce6878106"
        },
        "item": {
          "id": "828a5f0d-652e-4515-89cd-fa847bc5d71b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5145bea3-8d7b-45f3-8148-b8ec6bcfd9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e566e744-636d-450b-8f8f-146dc658244c",
        "cursor": {
          "ref": "581fd7de-950f-41a4-bcca-37e17ec24d0f",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "830cecf6-9612-403c-ab92-62710cf077ad"
        },
        "item": {
          "id": "e566e744-636d-450b-8f8f-146dc658244c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "dc0e6f4f-d24e-4557-a87a-06e35b3d01d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f13dc7a-76f1-47d0-8f3b-59824d2f4709",
        "cursor": {
          "ref": "f370f0c4-ada8-40fb-a962-1a9206b2c110",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ea818c90-51ea-482f-9c7e-6260c50e4338"
        },
        "item": {
          "id": "5f13dc7a-76f1-47d0-8f3b-59824d2f4709",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ee4a6adc-9045-4243-a510-9feeb20f42e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c34fe1-5101-4531-8f8c-98f91a99176b",
        "cursor": {
          "ref": "d14c98aa-c3b4-4a87-86d7-05fc5c3ff03f",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b28a9f35-0f6f-4668-930d-25c9d0b1a339"
        },
        "item": {
          "id": "e8c34fe1-5101-4531-8f8c-98f91a99176b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "79e44bf6-c5ad-40d7-bbd2-5a5e03527964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84de0288-57cb-47bd-a800-0fa902e4cfe7",
        "cursor": {
          "ref": "26849736-3e4d-42b2-b42e-4ba0ca4b9b8b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2826b7ff-65f3-449d-9264-4f0684f34019"
        },
        "item": {
          "id": "84de0288-57cb-47bd-a800-0fa902e4cfe7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c6ef7684-31f6-4364-ada4-bf7d4ebd3922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1857cd35-44a2-4965-8e7a-60125cc582d9",
        "cursor": {
          "ref": "a02a2c1d-19bf-41ea-ae8a-795549b9b610",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "abcdd32c-b89e-4f2e-87ea-a89b1b6d505c"
        },
        "item": {
          "id": "1857cd35-44a2-4965-8e7a-60125cc582d9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b2357ff7-491a-4b79-b913-c7ee43385bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32aea96-9332-4557-96a4-b0870e5e64d6",
        "cursor": {
          "ref": "f1208651-4afe-49b5-b45d-7bbc8dabae98",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "85aded68-4123-4312-aa52-442b5e78996f"
        },
        "item": {
          "id": "b32aea96-9332-4557-96a4-b0870e5e64d6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "36dd0764-13b2-48ea-a2e7-43df508b2187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615834e4-2704-494c-ab90-6156d93908e0",
        "cursor": {
          "ref": "56982236-be80-4b92-a1ee-24c7bc66d607",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9fe1f98b-29c2-42a5-ab9c-8e38c485d4f3"
        },
        "item": {
          "id": "615834e4-2704-494c-ab90-6156d93908e0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ed93b948-9758-471b-a8a8-68d9b6a3ba6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1c5627-0dea-4dac-ad89-56cea6ad72c4",
        "cursor": {
          "ref": "5940b05b-c85e-45f0-9992-9d4c0be0ebc5",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "df8d50ea-c973-4b08-9bc7-72ef8024f72c"
        },
        "item": {
          "id": "2a1c5627-0dea-4dac-ad89-56cea6ad72c4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6aa2be7e-5ba2-4136-b0a8-344b4abe618b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69794ff5-04eb-485d-8a80-5620de5ad151",
        "cursor": {
          "ref": "b677abba-9710-4d43-bf1f-b2948373f78c",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6f8e145d-95a0-4264-b075-6b174a72ea04"
        },
        "item": {
          "id": "69794ff5-04eb-485d-8a80-5620de5ad151",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cab870ea-2cc8-440a-bddb-3dd49a6be725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3fc3ef-7829-4217-b579-d2c7399915f3",
        "cursor": {
          "ref": "cef31c89-da32-4841-a88e-923420b5af03",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "810a907b-09f5-4334-9d19-3a9e738a86e2"
        },
        "item": {
          "id": "1a3fc3ef-7829-4217-b579-d2c7399915f3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4e835e2d-e460-48be-9344-2e552ade826e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acad495-b68c-460f-9a81-f9ac8dd2b493",
        "cursor": {
          "ref": "7d39875e-0840-4dc4-9166-a59b197128e7",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "347ecbf4-e1a2-47cd-b080-9fe9ec907785"
        },
        "item": {
          "id": "0acad495-b68c-460f-9a81-f9ac8dd2b493",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a33294a6-7869-4b2e-b208-093ed80dce88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f8283e-8a23-44bd-a812-3025c50d6b0e",
        "cursor": {
          "ref": "10b97ebe-21b9-40b0-ab4f-1bcfe6bcd2b7",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "be35e049-8eeb-40a1-bd43-8072f9712f50"
        },
        "item": {
          "id": "a4f8283e-8a23-44bd-a812-3025c50d6b0e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3c41d871-d6c6-4e9c-abab-98303f2d7524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567e0344-f9de-4f5b-a268-33ef09974fb9",
        "cursor": {
          "ref": "55e13e62-1fff-4184-9cfc-aae93d8ef6e6",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8790e179-c09e-4fc4-a842-e64e46ed9a3e"
        },
        "item": {
          "id": "567e0344-f9de-4f5b-a268-33ef09974fb9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "573fc909-2185-4760-b4b5-9f60f0129161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b411847b-a01f-4e43-9ecb-cdddeb657649",
        "cursor": {
          "ref": "7b76eb8d-5b41-4efa-98f8-17af9991ff35",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7b3ba68d-00b6-4054-b19f-27cca6969a99"
        },
        "item": {
          "id": "b411847b-a01f-4e43-9ecb-cdddeb657649",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5512ade5-8e80-4465-bf1e-420f84dca4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db287431-6882-4951-b304-2cd67907c56e",
        "cursor": {
          "ref": "1f3ce7e6-d342-4e01-a04a-602b63c6058c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b28b0d1a-a02d-4faa-ad57-90c243aba2fa"
        },
        "item": {
          "id": "db287431-6882-4951-b304-2cd67907c56e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "aba34475-e9ef-4c8d-b2c9-fc0a90281acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3556ced-bea5-46e3-a4d9-d613baecf050",
        "cursor": {
          "ref": "d3753f98-bc24-40b2-b521-3ed98a340553",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3e013ec1-2600-4bbe-85c2-edabc67285d5"
        },
        "item": {
          "id": "f3556ced-bea5-46e3-a4d9-d613baecf050",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b763021b-6100-4c33-9b49-d7bad9569af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d0a253-98a9-42c1-9537-a59df66e07a3",
        "cursor": {
          "ref": "a7505cdd-ead9-4a1e-a45d-d00c5a357de5",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "80a446b7-80ed-45c5-a02e-dee950410084"
        },
        "item": {
          "id": "30d0a253-98a9-42c1-9537-a59df66e07a3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "daec54ef-7a3d-47f2-81ba-a4238d27b4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f758b4-7e39-4a62-8ab5-e97bf181d643",
        "cursor": {
          "ref": "c2bcffa9-6be4-4e7d-bd13-d8da9dfc20a6",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "11f922f5-6f5c-4541-b19c-0c53d4858785"
        },
        "item": {
          "id": "c5f758b4-7e39-4a62-8ab5-e97bf181d643",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d65caaf2-9cc2-40c5-9676-47e1e6e711bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638bcab7-17c8-400a-a29f-4a689ac099ce",
        "cursor": {
          "ref": "bb046435-c2d6-460f-a721-c7e6a311a732",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8d39fa59-375d-4c03-abe4-f18bf5b3295e"
        },
        "item": {
          "id": "638bcab7-17c8-400a-a29f-4a689ac099ce",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "659d67b5-4255-440a-b6e5-4751edb5ac63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2011da79-c4ba-4681-871c-a73aeba88fd8",
        "cursor": {
          "ref": "8ae13bf9-bf6d-40d8-8fa0-61b6c69df251",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2b51b05b-dc0e-4ab6-9a83-7277f1c41610"
        },
        "item": {
          "id": "2011da79-c4ba-4681-871c-a73aeba88fd8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "efa9a592-fd37-4303-905d-8e36d8122549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6743ce7-8a2e-4a84-83a2-106bd563bf71",
        "cursor": {
          "ref": "0f17fbf6-279f-4cce-bb7d-b6e2b40f0bd7",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5bc06c02-f8d6-4b93-a9cf-52ef10ba2d27"
        },
        "item": {
          "id": "f6743ce7-8a2e-4a84-83a2-106bd563bf71",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "92a7bb65-6d44-4b17-983c-cfede9e312dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e256da8-3819-4895-8b99-71e9f4b1fb57",
        "cursor": {
          "ref": "d2cee305-27de-4177-a9dd-ceb61119c030",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "08a0c654-b541-4a0f-9662-2ee50fc59624"
        },
        "item": {
          "id": "8e256da8-3819-4895-8b99-71e9f4b1fb57",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d326b37a-2976-427f-8445-69de10702c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fc0a0f-bd6f-448c-84dd-c00fe7df109b",
        "cursor": {
          "ref": "651caa61-598f-4165-84eb-e38a7589b17e",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7b439e6b-0e9b-40c3-adfd-6b04bb89896f"
        },
        "item": {
          "id": "38fc0a0f-bd6f-448c-84dd-c00fe7df109b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9dbaa3e9-bf75-468f-95e1-4631b02cc501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ae90c6-d989-4484-8aa7-b46ee42195bd",
        "cursor": {
          "ref": "fe11be76-38ce-4ed9-87ab-d0c73cfbd6fc",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e3c3c95d-d8a2-4a75-8890-4af9b999164c"
        },
        "item": {
          "id": "88ae90c6-d989-4484-8aa7-b46ee42195bd",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c5ea6b5f-46c7-4bce-acc9-f44935e6c6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b46adb-c5c4-41e2-84ce-d94ecdc62c03",
        "cursor": {
          "ref": "8165f752-e787-4b72-941f-3c40e5a4f0d7",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5144309d-478c-4d8c-953b-590012660e4d"
        },
        "item": {
          "id": "f7b46adb-c5c4-41e2-84ce-d94ecdc62c03",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "752ce212-487c-4aba-bddd-011d90752262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80132a85-5a95-467b-8b5f-a2f0c00a1734",
        "cursor": {
          "ref": "4a1ba29c-a46a-4454-9226-6c3396a0ed99",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "72a2f97a-853b-4c29-a32b-702a5941b33c"
        },
        "item": {
          "id": "80132a85-5a95-467b-8b5f-a2f0c00a1734",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "48825786-2824-45bb-947a-63e16a2efb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ea46a2-5231-4123-96ed-1cd185f8f309",
        "cursor": {
          "ref": "27c7b7c6-0bdd-4a94-91ba-89d1878b6f61",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cd114ab2-6f1c-424f-995e-4f25d71dc78e"
        },
        "item": {
          "id": "e1ea46a2-5231-4123-96ed-1cd185f8f309",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a267872b-6d2e-4924-b6b7-6705406b8e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad19aac9-730d-4bdc-a47a-0da3cae4157f",
        "cursor": {
          "ref": "699f0741-86f4-48ca-8b25-0c29d82dc746",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7a3e029e-fbe0-4b3a-84e4-ab79cda8cabe"
        },
        "item": {
          "id": "ad19aac9-730d-4bdc-a47a-0da3cae4157f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "27292b69-159c-419f-914d-a804e22ddade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e216a6-41f5-44ca-a7fe-1c5142a72f77",
        "cursor": {
          "ref": "71998e14-f0e1-4375-a4bf-da0088d8c77a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "320ba1d7-926c-4a4c-b113-b7e51c2f46f3"
        },
        "item": {
          "id": "14e216a6-41f5-44ca-a7fe-1c5142a72f77",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "68b2993e-28b3-4cda-9347-00a66d626cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe5235d-85e2-43b8-8205-4f15455db78a",
        "cursor": {
          "ref": "af35463e-fa65-4a50-9229-c0f3d489e07f",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "74d32cd4-dfcd-4793-88ea-991bf7d7e834"
        },
        "item": {
          "id": "2fe5235d-85e2-43b8-8205-4f15455db78a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3e046505-c5a8-400d-b5b1-9da4f7b69100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373350f7-db32-41f6-aba9-3007c48d0314",
        "cursor": {
          "ref": "ae137d0f-df0f-4f1b-bf2e-0b04f2c42797",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "268f17d4-165b-48c7-bd08-d86608af39ff"
        },
        "item": {
          "id": "373350f7-db32-41f6-aba9-3007c48d0314",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "56e7da38-7b5f-4874-8b75-2cabff06de99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09f9598-df55-48e7-9d91-7d84a58044aa",
        "cursor": {
          "ref": "fe6b3862-bbdf-47f8-b606-a5cbe22dc9c7",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "18b5134d-e2ae-436c-bed6-518ddb1075c9"
        },
        "item": {
          "id": "d09f9598-df55-48e7-9d91-7d84a58044aa",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b969c6d0-1615-45b3-b372-48d0da49cb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b12446-b7a4-451c-a5b9-83237a82bd7f",
        "cursor": {
          "ref": "93802a12-245c-4e50-b0a7-1e0a01214b5f",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1c91ccb2-2a9a-4e03-882f-5c777e200f38"
        },
        "item": {
          "id": "f8b12446-b7a4-451c-a5b9-83237a82bd7f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ec24f909-4080-4b22-8d8b-22bea6259ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f9a671-d368-4909-85a1-a663ec91dc59",
        "cursor": {
          "ref": "120f4783-6ff0-41bc-b9ff-6ff010439b99",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d56cf45a-4d4d-484d-8ddd-bec926c5803c"
        },
        "item": {
          "id": "a6f9a671-d368-4909-85a1-a663ec91dc59",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "068ba6ea-42c4-4be2-819a-ac3a77ddbb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef38c910-2a99-4f69-9916-dad720b59c80",
        "cursor": {
          "ref": "37efe795-0155-4ff6-bec5-3b1db53a1e68",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7add8555-ab56-4c03-8cbf-9de385ee4d20"
        },
        "item": {
          "id": "ef38c910-2a99-4f69-9916-dad720b59c80",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b473287c-2f57-489f-9d6f-e5248e0370d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d384831-725d-49d8-8b89-5573c9f27102",
        "cursor": {
          "ref": "68ec009c-540f-4ef3-a4e3-e53ac57b7689",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e93664ce-103d-4a06-b6aa-d2eb70488967"
        },
        "item": {
          "id": "0d384831-725d-49d8-8b89-5573c9f27102",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7096de11-6484-4232-b818-6bf062f85ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b71c13-19af-4a28-aef9-dfb317539d82",
        "cursor": {
          "ref": "d5cfcb2b-f47f-4678-9afd-a61902efbb86",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e76e785b-5ed7-40c9-9ede-833aa51002ba"
        },
        "item": {
          "id": "25b71c13-19af-4a28-aef9-dfb317539d82",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bf9f1995-0ad4-4cfd-bd56-d1423b034a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17d683a-6b59-4891-8768-c581cafe3a51",
        "cursor": {
          "ref": "7c9ccefd-84eb-4e5c-a1b0-ea8cfacef442",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0e07f0c4-627d-4b46-ab12-f24fbe5c0210"
        },
        "item": {
          "id": "a17d683a-6b59-4891-8768-c581cafe3a51",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "92e85d38-2ee6-4ad7-a049-46938fc729f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791e250a-33ac-49ed-bee3-9a15dc2d7723",
        "cursor": {
          "ref": "61b00091-e5a5-4fce-bcea-2bf2be2fd2b5",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f7443472-f957-4cf8-8dc2-e7d746d6dcb9"
        },
        "item": {
          "id": "791e250a-33ac-49ed-bee3-9a15dc2d7723",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0e6ecdde-d930-4f48-a59e-db59cfbd0df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842d7315-54aa-4245-8b91-f0f5ac12be54",
        "cursor": {
          "ref": "8db5c346-9c6d-4ff7-ba6b-112f07465d5f",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ab596658-7558-4615-93db-93b25caa1006"
        },
        "item": {
          "id": "842d7315-54aa-4245-8b91-f0f5ac12be54",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2e84fca3-4ae7-43ef-89cc-d0f675c81c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf135de3-7866-4fd0-8414-d342705a0192",
        "cursor": {
          "ref": "3827a30c-910c-43c8-a51c-d7384b0fe373",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1cf76b85-9268-4567-84e3-ec861d2b37de"
        },
        "item": {
          "id": "bf135de3-7866-4fd0-8414-d342705a0192",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fa293a45-cfac-43a8-8a6c-da2e3778ef1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49556c35-140b-4350-b2a4-e2e8d7463493",
        "cursor": {
          "ref": "07dbad3a-e893-4dec-838a-fc7c4920f5f7",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b1f6d986-ffba-474a-b1c7-e5cf5fa12608"
        },
        "item": {
          "id": "49556c35-140b-4350-b2a4-e2e8d7463493",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cba5f24c-b2a3-4755-943b-73803fd85b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dfbf64-a4cf-4f48-b6a8-2e59f3cc1de5",
        "cursor": {
          "ref": "6bfa6ed2-d5b1-464e-a4a8-a3bec313653c",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6862d4df-fe4b-4c74-a240-f738d2d5a641"
        },
        "item": {
          "id": "32dfbf64-a4cf-4f48-b6a8-2e59f3cc1de5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "26341dd7-4e14-4cb7-8d67-4b68a044f22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58517990-8c10-41f5-9124-1142ade88781",
        "cursor": {
          "ref": "bdbe7682-ff97-43ec-852e-ecea1e733ac7",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dbc85d7b-7bd5-42d3-bc23-f55eb328f23f"
        },
        "item": {
          "id": "58517990-8c10-41f5-9124-1142ade88781",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "38be229e-657a-4d25-a466-e42bd6e7b019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13b0d37-4cd1-415f-869a-d66867ef2f05",
        "cursor": {
          "ref": "d43021ae-fb5e-4436-a185-b265e9d9832f",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "60ea21d9-c755-40b1-9c9e-0d4ef4710e4e"
        },
        "item": {
          "id": "d13b0d37-4cd1-415f-869a-d66867ef2f05",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0e1b0b16-0de6-4659-bd5f-f045177d69d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f52646f-711f-414d-b57c-6374b612fce6",
        "cursor": {
          "ref": "ec95d781-77f7-4802-9937-3e653a902c67",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6663c631-b849-47fb-9e85-87ad058b05a7"
        },
        "item": {
          "id": "5f52646f-711f-414d-b57c-6374b612fce6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e51ea7f5-60e0-445a-9b21-cebc3bafec7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07d82a5-e30a-4b37-bc22-9ea8d86d0542",
        "cursor": {
          "ref": "ac4d9f87-337d-4229-8085-7f2af57a9bad",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ef541ae0-4e11-4067-ad5a-e32aa0e0615e"
        },
        "item": {
          "id": "d07d82a5-e30a-4b37-bc22-9ea8d86d0542",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "972b436d-d8d0-4ac1-8c0b-3f9b6e718ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d19f50-d75a-4269-90b3-f5631600c7b5",
        "cursor": {
          "ref": "7efef581-8658-4573-ad7f-0c113603c2c0",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "96c3c7a3-6ca3-419d-85e0-964453a8b029"
        },
        "item": {
          "id": "71d19f50-d75a-4269-90b3-f5631600c7b5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "66e3e166-8622-452d-a973-5aeb711e4f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31075df9-f67b-4403-8a5c-8ad20596877d",
        "cursor": {
          "ref": "4a73e283-4f47-450b-83f7-8261aa410f6c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7215cdd4-a6b3-43b9-9ee8-91f49d73ed2a"
        },
        "item": {
          "id": "31075df9-f67b-4403-8a5c-8ad20596877d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "946fa453-a94e-48d9-88a3-8b3e6f43416a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32d18bd-45bf-4ef3-8a5f-7a234ebbdc55",
        "cursor": {
          "ref": "86cb87c8-6d65-4247-aa4a-bf5abefd4fc2",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "383b3b7d-2179-483f-869d-95315cbe35d0"
        },
        "item": {
          "id": "b32d18bd-45bf-4ef3-8a5f-7a234ebbdc55",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "adbbbab2-2503-401b-ae9c-65600871a95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e03faab-3e3d-46f5-961d-e1d663ce17f1",
        "cursor": {
          "ref": "13bc4dce-ca7c-4e52-92d9-778a415097df",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "146641f8-95ad-469b-8042-51146063d221"
        },
        "item": {
          "id": "2e03faab-3e3d-46f5-961d-e1d663ce17f1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b6dc51b6-090f-4b4f-9c10-8dce74cb1397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4d0857-0ae0-41fa-b54f-11a1f22e638d",
        "cursor": {
          "ref": "0c9b79b0-c981-4d53-afca-39801d6c4b6e",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7eca9c50-db5e-4c59-9127-56317c661d7e"
        },
        "item": {
          "id": "3c4d0857-0ae0-41fa-b54f-11a1f22e638d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6c9a17b7-757d-4da5-b6ee-e6693e869ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c15a8d-f4e8-43bf-a561-49091a83b32e",
        "cursor": {
          "ref": "a081c0b7-8bcc-4d83-84ea-3459e5790834",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4097186e-4845-4d28-b3b3-9c9aa4b4c9dc"
        },
        "item": {
          "id": "40c15a8d-f4e8-43bf-a561-49091a83b32e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "33c0593b-c9e8-47bd-abef-ab1a115f2178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c26545-48b7-4148-a470-2d4f25b1c64f",
        "cursor": {
          "ref": "6a6a6836-e3d3-488b-b1aa-3df721ea5192",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "193aa825-6741-41a4-baa4-e1ef1acbe3cc"
        },
        "item": {
          "id": "97c26545-48b7-4148-a470-2d4f25b1c64f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "301af2d9-eef8-43c1-8124-cc2f3246bccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44820e62-8488-4480-8bec-d156946620e7",
        "cursor": {
          "ref": "346d6675-b500-4b05-ad56-265caeddbe3a",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "67e003b0-1cb0-42e8-b604-502b4e1d0f35"
        },
        "item": {
          "id": "44820e62-8488-4480-8bec-d156946620e7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7fae17c8-adba-4e9a-910b-ba0da27aa230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8750d47-2d2e-47fd-96da-158494b55fb1",
        "cursor": {
          "ref": "954a46db-632c-49ef-b16d-99a6fa911497",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1991005e-a111-4b09-9f79-a3efda646c9c"
        },
        "item": {
          "id": "c8750d47-2d2e-47fd-96da-158494b55fb1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4fbb9153-4577-42fc-ad8b-8ce1b3baf55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f3a17b-039a-48e3-ba50-461e0a5ef4ca",
        "cursor": {
          "ref": "bf3631df-b7d6-4f00-a27e-ece610977fdd",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fba6b4d7-8fcd-4cd0-886b-d279e34d8b96"
        },
        "item": {
          "id": "26f3a17b-039a-48e3-ba50-461e0a5ef4ca",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f06c07bb-1a8e-4a15-9a6f-1ef909cba72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872a1c56-2e53-4666-b42e-9ffd061033c3",
        "cursor": {
          "ref": "f4f7c71f-a0af-4f5f-b68f-3664b788ec65",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d8a5508c-10a1-4da6-96c6-e625c576e3a6"
        },
        "item": {
          "id": "872a1c56-2e53-4666-b42e-9ffd061033c3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6a15442d-0d7e-41eb-9591-a8bbd7d3a9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f82ed3-7e8a-4fe8-be52-0f1078f59c0a",
        "cursor": {
          "ref": "df71a4bc-893b-4b2b-9cc4-5693380a2f53",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d905b4fe-84b3-463f-84da-d20900a310b2"
        },
        "item": {
          "id": "07f82ed3-7e8a-4fe8-be52-0f1078f59c0a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "28309cc0-8fd4-4f72-91a2-581b7e35bed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfc6b69-ce41-465b-b52a-ec2adb5717b4",
        "cursor": {
          "ref": "3e7b2382-e478-4436-bad3-d528320855ca",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e6e583a5-a10a-4396-9152-81bef73d19d5"
        },
        "item": {
          "id": "1dfc6b69-ce41-465b-b52a-ec2adb5717b4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4e6107e4-ad20-4086-924f-5fb21e5c1753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e499848-d6ee-492e-ae94-069063879608",
        "cursor": {
          "ref": "90e27619-a369-4086-b9ba-12dc7ca53d59",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2d96d47c-cf10-40a6-849a-26dbc38ce470"
        },
        "item": {
          "id": "4e499848-d6ee-492e-ae94-069063879608",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ebe7e8c8-cd46-4edc-8801-900d4b733a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8239f91-2052-435a-8bf3-865e7eacd665",
        "cursor": {
          "ref": "1445911e-3baf-4835-bf20-9fe4167bd364",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "33800b30-8291-4d64-b427-c02d7ed4d671"
        },
        "item": {
          "id": "f8239f91-2052-435a-8bf3-865e7eacd665",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "782f8975-f470-49b4-a2ce-662a91b6a75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8c034e-ccfd-4bf2-aa4a-23b72dae4998",
        "cursor": {
          "ref": "b47a131e-91ea-476d-bc18-b09c6b2784f9",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "81478ba1-bfd2-47f4-ba74-8beab9945618"
        },
        "item": {
          "id": "2b8c034e-ccfd-4bf2-aa4a-23b72dae4998",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0469b842-53e7-491b-9972-9c25cc963911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff93727-331d-4f5a-a4b1-0876347ba44e",
        "cursor": {
          "ref": "4d4ff7fc-8b0c-411f-a1e1-c2b4b17c3471",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "77a2d663-1b14-4184-9d68-09cd3d729727"
        },
        "item": {
          "id": "aff93727-331d-4f5a-a4b1-0876347ba44e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "98a5ec87-96ae-4859-8f99-849d30a53034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f631daed-2bae-4bf7-8e41-91282c2823ca",
        "cursor": {
          "ref": "b415d9d1-ec1b-4781-9a4e-a64573b8b902",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ff8bc822-4e3a-46d8-ab8f-a68f052a2fbb"
        },
        "item": {
          "id": "f631daed-2bae-4bf7-8e41-91282c2823ca",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "79d0ee7d-e7cc-4064-9d9c-de8745e170a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c645a9d7-fa45-41a4-8737-47e7fdfccaa6",
        "cursor": {
          "ref": "12b3df82-9851-4ae6-b811-c258e9650f37",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "72399f6d-773d-4398-85cd-971221b6b3e6"
        },
        "item": {
          "id": "c645a9d7-fa45-41a4-8737-47e7fdfccaa6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cdf98bf7-7aab-4223-9812-135896eb544e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5563875-3c81-4a29-bdb7-34fee901e6c7",
        "cursor": {
          "ref": "6dd0b619-64b1-4f0c-bf07-7dd03f2d2e9a",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5c38506c-3ddc-4ffa-b441-d84f81174ea5"
        },
        "item": {
          "id": "a5563875-3c81-4a29-bdb7-34fee901e6c7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1c2ced00-3322-4f57-9631-4388a0180b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a87685-456c-42ca-bd39-ded0041c879b",
        "cursor": {
          "ref": "009c3a05-33f7-4d68-8203-ca25a3a735ef",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "366fc94f-8422-4f01-8b97-57fb0ff724f1"
        },
        "item": {
          "id": "f4a87685-456c-42ca-bd39-ded0041c879b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "48df02aa-1fc1-4273-8971-cdaea8b5edfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8942385e-d544-4fd6-99c4-40801447db00",
        "cursor": {
          "ref": "dca465a0-6398-497d-8642-9ebcdcae9186",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a4cb72be-7562-42dd-b7f6-6e03d83c1858"
        },
        "item": {
          "id": "8942385e-d544-4fd6-99c4-40801447db00",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6760be5e-ee2c-48fa-a08e-b206a1ef833a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031713f0-ef8e-4760-84e2-70a2776ef5f5",
        "cursor": {
          "ref": "a00a8cf3-b178-41e5-a9e1-0f7399e164a7",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "29033738-d4ff-4494-b615-dd1107bc0cf5"
        },
        "item": {
          "id": "031713f0-ef8e-4760-84e2-70a2776ef5f5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f5de2fe0-6c82-4b27-a753-cec6320d68b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b75965e-0172-4094-9790-e4e3201184fc",
        "cursor": {
          "ref": "52f7ea33-d289-4003-adf3-bb9b3d94a6ef",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "218da55a-921d-4e20-81cf-36b22abb805d"
        },
        "item": {
          "id": "4b75965e-0172-4094-9790-e4e3201184fc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f378e331-7b2a-466c-bf52-26053fa16bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64d8e8e-a803-49d5-8125-84450213cba1",
        "cursor": {
          "ref": "b365eff6-c7e8-48eb-9f55-4b66d5226e15",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "64e3dfb6-cdbe-46d7-9441-0993104c7236"
        },
        "item": {
          "id": "d64d8e8e-a803-49d5-8125-84450213cba1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e460d65c-4224-428a-b410-41eb27c62546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f378123b-ade0-43b7-b467-2aa643ba3d72",
        "cursor": {
          "ref": "774cc49b-2b1c-46e5-8e17-0984ae39a25e",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ad39ad01-69ce-47bb-baf2-8d3a5f38fdfe"
        },
        "item": {
          "id": "f378123b-ade0-43b7-b467-2aa643ba3d72",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9fb48c0b-41b9-44d1-a5ce-2b13c3fc8106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3ec964-1e3b-417d-9e36-36de9b51dc79",
        "cursor": {
          "ref": "cda94e99-f4c2-403b-a69a-e64715eccd41",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "30a63fa4-c6e2-4267-a861-8939a6bd3598"
        },
        "item": {
          "id": "0f3ec964-1e3b-417d-9e36-36de9b51dc79",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "95419291-af0b-443d-b3e1-415394bc47a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027d21e4-d915-4682-8059-e540e7be4516",
        "cursor": {
          "ref": "ce7b7d4a-303e-4a06-8c6d-64747bbadf1b",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "067adeb5-1a5a-459d-863c-12e4eedcd39b"
        },
        "item": {
          "id": "027d21e4-d915-4682-8059-e540e7be4516",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "859438c3-53e5-4123-b459-a74c7acf78fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0804e8-a717-4757-b707-d626af385481",
        "cursor": {
          "ref": "784cbfc0-bfce-4190-a68d-2c3b9c26a695",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3592d5b2-6a26-41f6-9363-5d2c13849c88"
        },
        "item": {
          "id": "aa0804e8-a717-4757-b707-d626af385481",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f3b1735b-63e8-4fab-ae3e-478ce8bab704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9159b86d-6ee1-46cf-99c0-16e4f3581953",
        "cursor": {
          "ref": "0eecd703-b9d9-486f-b8ff-fb4f76fcc34b",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c6f59c5e-c61b-4ef5-b0d2-6384770797b4"
        },
        "item": {
          "id": "9159b86d-6ee1-46cf-99c0-16e4f3581953",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3db51ea5-a56a-46e1-857e-7b3db24485f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c885a19-3e05-4a66-bde9-d979e2e43e3a",
        "cursor": {
          "ref": "3b3e6d43-cc1d-4085-a0fe-bb35f83ff248",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0ed8795f-065e-4e82-a296-3c9bedc9ab0e"
        },
        "item": {
          "id": "3c885a19-3e05-4a66-bde9-d979e2e43e3a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cb0fcdab-ba9f-48ce-a3e3-d14cfbc481e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab72567e-dff0-485d-bf96-59e85325f334",
        "cursor": {
          "ref": "c1d4d918-df33-4d1a-a73a-8532003c219b",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3eeecb50-7132-490a-a76f-ab8d80c58cb6"
        },
        "item": {
          "id": "ab72567e-dff0-485d-bf96-59e85325f334",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0071aedf-2d4e-43b7-bdbd-1f45ca2beaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9394b585-0a4f-4252-a29f-91b35a08d125",
        "cursor": {
          "ref": "9dc79457-a276-4909-97a2-e125b5f5b5e1",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b429d8a3-bb90-423f-ad9c-361bf9ee3450"
        },
        "item": {
          "id": "9394b585-0a4f-4252-a29f-91b35a08d125",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ede86668-68fc-431f-994f-ca81c011f789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c3b1b8-c088-4827-bf9f-a6aa77ca3af5",
        "cursor": {
          "ref": "594793cf-fc3d-47fd-852b-b61012575ef8",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b773e2bc-48ce-4b05-9d23-f43fec0c8746"
        },
        "item": {
          "id": "07c3b1b8-c088-4827-bf9f-a6aa77ca3af5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c1aed37f-23d3-4da7-af74-9aea50a9854a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb5f3a0-75c0-418a-a6a4-96fb90710533",
        "cursor": {
          "ref": "60ed7a53-56b8-471e-a4a8-55806bde0844",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3a2d93c8-19cb-4916-87f5-4023fe203cb5"
        },
        "item": {
          "id": "beb5f3a0-75c0-418a-a6a4-96fb90710533",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "84260a83-d50f-4f8b-95cb-c4d0299c5474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84300aa1-2cbb-4463-8a2d-0780bdb9a535",
        "cursor": {
          "ref": "788dfb09-dcc6-428d-8e73-2833f2a3cf47",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "34341cc4-4b40-4a9a-9de4-36a27f7661ae"
        },
        "item": {
          "id": "84300aa1-2cbb-4463-8a2d-0780bdb9a535",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9cbe7367-bb1a-4ea0-a515-f29bd65fadf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7b05e5-844e-4fd3-be85-f19770329da1",
        "cursor": {
          "ref": "c0926334-ad3e-4a11-a666-85ec1b8adf6a",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7c452d76-0a8b-447d-9a2f-de2238fc0837"
        },
        "item": {
          "id": "ba7b05e5-844e-4fd3-be85-f19770329da1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e03da0e1-b7a7-484f-ab3b-29e374b50e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37217cc-2953-40d3-a7c3-8817a039aaf2",
        "cursor": {
          "ref": "035fc5fe-7dd3-4e72-866f-4fa2a965bd53",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1feb3c8d-26b1-47e1-bbbd-fac27bdb5997"
        },
        "item": {
          "id": "a37217cc-2953-40d3-a7c3-8817a039aaf2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6012c0dc-781a-479e-81a3-16b4fc46c51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2145ad66-b7e6-48a3-9d3f-64f13e502535",
        "cursor": {
          "ref": "0d0b2e57-2226-46a5-b77b-a83e2797d218",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "fcb202f1-e0bd-4265-92c1-2d4d3afecd04"
        },
        "item": {
          "id": "2145ad66-b7e6-48a3-9d3f-64f13e502535",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c968759f-3354-41d1-9c27-fa7cdb7a6ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec09995c-e7e5-49a3-96c3-e3f11ac95191",
        "cursor": {
          "ref": "266db382-5388-4821-a13e-af4af2bd9455",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b88f7582-f89b-4c26-a451-0d3ca472e05f"
        },
        "item": {
          "id": "ec09995c-e7e5-49a3-96c3-e3f11ac95191",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5ffc3307-6b69-4e52-b648-22d31b248922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2718c71-dce7-4379-afb4-706968ddfdfb",
        "cursor": {
          "ref": "9e097654-7da0-4771-a27b-1fdb0983204b",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a3c5a414-b46f-40f1-8476-aca869018b01"
        },
        "item": {
          "id": "b2718c71-dce7-4379-afb4-706968ddfdfb",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4e0ad8fe-1da9-4958-971c-b3566bc3df27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2008c2d3-33a9-47f9-9afa-bcf9d5f8990f",
        "cursor": {
          "ref": "1b564eb9-07a4-436c-b74d-6a46a430ee3b",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8b39b66f-1995-4c9f-83c3-424836223823"
        },
        "item": {
          "id": "2008c2d3-33a9-47f9-9afa-bcf9d5f8990f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c25f647a-b4b6-44bb-8a57-5ee06726c326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170b56ab-f5c0-4fbe-9b86-da0ec2ac1a8c",
        "cursor": {
          "ref": "73c566e3-2b96-4166-b88a-ff61b0cca7db",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "974d0c43-d1c8-4ec4-8f37-ffd343a69351"
        },
        "item": {
          "id": "170b56ab-f5c0-4fbe-9b86-da0ec2ac1a8c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d7e8b83c-5a1c-4c9f-8c11-346fc3a94faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe91a39-b838-417d-9b4b-9d95176bc2dd",
        "cursor": {
          "ref": "58b71b21-2f38-4f77-a604-0b17f1a3a23b",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "41634e52-4de4-4c32-975e-1bf1be4b38ba"
        },
        "item": {
          "id": "7fe91a39-b838-417d-9b4b-9d95176bc2dd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ae72b1b1-a3ac-49b4-bd20-579b8837a9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603a0240-f5bf-40b4-8b93-34a3dc1823fa",
        "cursor": {
          "ref": "d8a9140a-6077-4d08-ad32-8010c086cd0b",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b4400c20-ab94-4204-aafb-13fdf45ce645"
        },
        "item": {
          "id": "603a0240-f5bf-40b4-8b93-34a3dc1823fa",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a4be7c1c-392e-46dc-a034-08498c565248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f393acd-2416-4062-b0ff-fbe1c1399aed",
        "cursor": {
          "ref": "df8d449c-4428-408f-8803-bb4e365fd5fd",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ed648a11-be14-4105-b7eb-c87fe536b7e2"
        },
        "item": {
          "id": "8f393acd-2416-4062-b0ff-fbe1c1399aed",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7999447c-b760-418f-bd5b-9a596f0da343",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6917560-08f8-45de-a9ae-5dfe2a96c2d7",
        "cursor": {
          "ref": "69e2876a-9adc-4298-a5cf-d10d56a6b172",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "40e136bf-f72d-4b6c-b1ef-24239ea93893"
        },
        "item": {
          "id": "b6917560-08f8-45de-a9ae-5dfe2a96c2d7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fafb81a8-18a5-4951-bb63-6b63153a4b0d",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd59518-51e3-4a9a-85c0-234b0afefcbc",
        "cursor": {
          "ref": "b788b7d3-c482-43a7-a6fa-ec05bc4e1eae",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "197f643f-589b-4266-979e-c5765e9ae8aa"
        },
        "item": {
          "id": "ddd59518-51e3-4a9a-85c0-234b0afefcbc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1b0cd632-b127-4e75-9e5c-1b55e4e86331",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9aeb41-0972-404a-8e27-d3b3d468f809",
        "cursor": {
          "ref": "26f4cc7c-2b3e-49cf-8500-cafe18e8a19e",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "14ec81df-ae4c-47a4-b028-8a43ed605efa"
        },
        "item": {
          "id": "4c9aeb41-0972-404a-8e27-d3b3d468f809",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2ce531a2-3717-4be5-bd72-e0f60f6ecc57",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f1077d-b016-410b-92b5-3e92ed3f003e",
        "cursor": {
          "ref": "6a2236f5-0e2b-464b-bb35-75ce21704d19",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "48464991-489d-4958-a0b7-75c0b4d2390e"
        },
        "item": {
          "id": "15f1077d-b016-410b-92b5-3e92ed3f003e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1e0ba6a3-8f01-4715-935a-b027ac122497",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f1077d-b016-410b-92b5-3e92ed3f003e",
        "cursor": {
          "ref": "6a2236f5-0e2b-464b-bb35-75ce21704d19",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "48464991-489d-4958-a0b7-75c0b4d2390e"
        },
        "item": {
          "id": "15f1077d-b016-410b-92b5-3e92ed3f003e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1e0ba6a3-8f01-4715-935a-b027ac122497",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a6c32c-f6a0-4a21-a7b6-045aed081faf",
        "cursor": {
          "ref": "4a6121e2-c952-4f2d-b643-70d8ef1c0f5d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "12d9e38a-d2ef-4656-b097-2408ef0f4680"
        },
        "item": {
          "id": "33a6c32c-f6a0-4a21-a7b6-045aed081faf",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "499e218e-7cd9-4def-83f2-f68d8e5436e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67ecc05-23fd-43bd-beea-7fb9588f6d9e",
        "cursor": {
          "ref": "63111887-5daa-4d25-b4f3-08dc79dad511",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "55b7b4d8-ae7a-42b0-b318-38306d73a9e2"
        },
        "item": {
          "id": "c67ecc05-23fd-43bd-beea-7fb9588f6d9e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ae746f92-03b6-492d-95c4-07d181829a2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}