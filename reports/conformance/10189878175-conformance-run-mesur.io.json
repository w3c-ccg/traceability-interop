{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "965d0544-a23e-4766-9096-838ff82c83e6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7784642d-82a7-4dae-b86c-b64474db3293",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "be317135-dd86-4f9a-ba97-45d431a3f6fa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7cc21a0f-ac79-43cf-a1cc-00d96c782ce2"
                }
              }
            ]
          },
          {
            "id": "661de18b-e3f7-4168-8e5f-03e84ef9b755",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef9d0109-0cbf-4208-9663-8f1af8972a64",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2dc237af-a087-44df-9f0e-ceff15994b85"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "63e91ec3-780e-4da8-ad18-60b14f828388",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "04572427-3065-443f-b4e6-32339ecebdaa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7388efcc-01e0-4332-a0af-57502d0e81f9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "766615f8-189b-4b82-ad24-d758fdaf54a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "611f5758-e86e-4ebf-86b2-32ecd69d10fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e8ea2b2-eb0f-414b-aafb-02e3003a8e88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e200a47-4276-4be1-b2c2-19ac20747f3f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e08181a8-7dc4-4acf-b089-76c1e28e21a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "008562c0-9d45-4731-b515-cb6288db24fd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9e836e2-400a-4f34-b4da-2d44a5e678d8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "37a302d4-f58c-44fb-b1af-5d2d9cf54a89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38c45371-0a09-4837-b9c0-9fb5302552d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da6e5f82-5570-4117-b523-610ad6ddfbb1"
            }
          }
        ]
      },
      {
        "id": "3387d6e3-6923-4841-98ab-7a98a9ddf81b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d343a90b-44c1-4089-a8ee-c0ccbdc92517",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef69b7af-8b84-4f6e-9e2d-7884cbbbf91d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1d67a85d-b420-49bc-bd8d-3eec1e52d480",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4833a4-b3d3-43e5-9ab4-1f3f329ee171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "556c0707-5658-4f5c-9090-c002783b4b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea3438d-78ca-425d-b08c-2828f5eef7be",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fae8b54-e6b8-43c7-a5c1-49b504cf2b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a9304e4-1a17-4b18-8ee6-81d7a932bc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb7b5e8-c9b2-4c84-bf15-d72cf1d2c2e0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b510ca7d-5b61-42a1-8ea5-93ec8bae7d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c756d9ed-7b62-4a0c-81b9-5c39f735f684"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "269679b0-c152-465f-aded-35e011d7b100",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63f70661-0bdb-4003-8a77-38a2686dbf56",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81c26d9-fae9-4fa9-8502-415541c917b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a032408f-7c19-44d4-90d4-b3cf7b650fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34855607-7df2-44d2-bf72-c7bc0f366555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1927bac3-e478-490d-8f3c-e1797ea12593"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8025fd49-0290-4f45-93be-d9b350cf489c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b5a9abfa-f338-421a-a1e3-e0d7c9e961b6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cd1d7a0-d670-4965-801b-063230e577d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bec60f0e-24d5-4cc4-a4b6-137650ab1a83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f860368-a0b2-437d-86ee-f0cde6776e37",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "09177c14-0523-4ac5-90b8-59b6359b3d80"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7dafeeeb-59df-445d-91cd-2c5985fdbd95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "027bbf44-a5a7-4d82-b182-84d5f9998ab4"
            }
          }
        ]
      },
      {
        "id": "8bbf9bb2-b9e4-44bc-9047-bc98a787de2f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1a0386a5-eaab-4353-ad46-9d820d97e2a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7827b7e-13db-48d8-8c2a-05456cdd2d41",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "25361974-4b95-4223-81f5-90739177b87d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3939158-03ae-4fbf-9551-8a697d6389e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42581eb-88b4-4628-a9a7-9d6a8c974c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217e14da-70c2-4d66-8d9a-c62e9ec9dd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8249190-7d27-4bd0-853e-e20ff09fe124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b209bf88-2772-4749-a031-c6549ed99002",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e79afd0-6850-4465-84d9-abf68b86c0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5168b74f-ba1f-4cc2-96d7-fbbb9def951e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d35880-2763-477a-b293-8c2efdf0e1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f76d28db-565f-4074-a10a-f58bd0508d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d413fb08-c70f-468b-bd75-ce0346988aec",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aed25eb-0831-4556-8346-718195b018aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b72e4d-24e0-4823-b26c-07ebe553c073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b4f714-d477-4c54-9b6c-84cb84e83b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e225047-3929-47a4-b696-9dddb393b23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ca35ce-75ba-4a75-b453-7dc21c96fc51",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853c809d-fdf4-4488-9dc4-16552d37492f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39bd0346-7c7f-4b7e-a9b7-8adddb7283b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2759bcf-2072-413c-8499-15aa2dfd958f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2af589af-e469-49cd-85ff-c2c2eada51be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a923c2-6c91-4d73-9c0d-b6d4201a9125",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a4df43-0ef6-48a0-b270-8bb177070235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376aa3e2-b71f-451f-998c-7ff5f14dd3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c67cc6-20af-4281-8b7f-f62405066e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6f9b098-2123-4ca2-8214-b819018e59e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfca348-72bb-47cc-8cce-6416c2566a3f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdedbd1-0f6b-4dab-ae21-5376130dcad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273d0700-0c13-4e46-9f98-53841558ac0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70696c2a-2eef-4457-9bca-a33102b90c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68730bdb-a6fe-4d2a-b754-dca935489572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532e1820-7b45-41e0-b092-6771bbb2ae3e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadc20b4-6db5-481c-a57f-6688f448450a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2bc4b0c-1006-4865-bf3e-da0fab2aab1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef26d0d7-700e-494d-b846-0b9cb830e5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dd06f06-b9ec-4f33-bffe-3809fb9e96d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c150972-8c2a-4459-9b33-1cb7cc93c16a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d761de-6bc1-401b-90e0-2eb823fd41af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f019b1d-dbc7-40a8-859f-c085bd8ac711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723e2964-a5ed-4cfa-8fe0-0de9d2ff78dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6801cce-a5c2-4fc5-b673-f9461d2b1807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7181db62-89d1-4b50-82c4-88517ec3fc17",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadcaef3-c455-4ddb-99bb-6c485bc30af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22d729b-2f24-416b-a5d5-97365dc4c055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5c28db-7f3c-4a8f-8a15-ab075021b96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f91c87db-4eab-48b6-bec7-8a6405d49557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add1a14b-dd7a-447c-97e9-ebf4ffa3a187",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8991c0-0ca0-46a8-a895-3132473c96fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9718a398-699a-405e-ac2e-c945239e3e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e762da2-3fbe-4d23-834b-1da60607133a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f729697-f144-485f-a12c-3867835e569d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a674f52e-13e9-4d43-8e2b-460444a66f95",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cbd4e5-becc-48ac-8c60-a7fd2f7fa524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b64d9e7-3c8a-4f53-b962-ba05ad8a15ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d18da4-1c04-42f9-83c9-7598ba711b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d68379f1-74a9-4e65-95e1-7eaa76465d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e53e20-4660-4487-8d59-ea8e177a1b6c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cd5cb0-1b3b-4680-b56d-3fdb9bc1f202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1634a54e-bb9d-4769-9c9d-f9165a8d5485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a067e75-8385-409f-8cdc-e08fae0f9a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b6e8a6e-30b8-48e1-9fef-190ed5c5b472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8aef26a-3082-4939-908b-366a29e3a62c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860cb02d-884e-45fb-a604-2f853c07d475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7dbce7-0d2b-4efb-ab68-d9943e59d7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20c0bc1-2ad9-4980-8b2c-2339eea22907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16b607e9-5d6a-40b1-8458-b5d6dce2b1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c753136a-ad06-4ffb-974a-b46637dfd8bc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7c1a5f-be5c-4894-95d4-d80c2b037d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eed096c-4340-41e0-b1c4-1160dc0fbd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d1d7b9-e5c1-44e2-aaea-fbb0886fce40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d9511dd-cae6-4f14-9ef0-f082129ee4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ab9b0f-35b8-4e22-a963-86bf6a08b591",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9f0e57-c602-403d-a52f-cda0e6cfa787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15f4141-e0f6-4b62-9e09-97685e946796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35190eaa-4a61-4abc-a412-70656c327b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "210690d8-561a-446a-9025-18e44b0ef88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95eb4cf4-6e3f-48da-836f-3a1d6ffe9c28",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7409c97-a46d-430c-8e28-5db6e1a3bcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b52099-b67a-41f4-a4b4-05beacb0c9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f52ea6-25b4-4b46-9139-cdfdc430a9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bf79011-a608-450b-932e-130acbd1ce89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac56b8be-7a0e-4303-a413-274fa4516843",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2462b5-b135-4298-a806-c7da02e4f828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2732594d-2d51-4a3b-985b-1fce3a489b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72b8364-6d4d-4a1f-bcc4-8ec9e0ed2c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92e10eb1-09bb-431b-b8f4-ce8c265becf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d0cd70-749b-4e63-8bf0-7517aad825fe",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279a5923-77f5-4059-a694-cea95fd28c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5606d7de-296b-4c99-9ed4-65bd48c4da9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534ed1ad-b3f5-47db-a9a2-16837dd355ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e82e1189-f095-4a1d-aad2-1fdb642e8957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1417ae-ccae-4d6d-99de-8ffd86db2226",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe4afd2-fb81-4551-8a79-52c3f67f9db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3eca8e8-9d3c-4cf2-bf38-0079797a200c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9ad435-6fac-4248-8e11-270eac8ca9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "795c6a63-0b30-4fb5-878c-fba9f12a79e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436e4a7f-4470-4129-85ce-aacce75de49b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fe4c74-2af4-4f7d-880b-37bb6f05dd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9027b72-faef-41d5-b89b-aea5dd959041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3868fc44-5b13-4905-ba26-9978952508fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "354ed1c2-261f-4e30-95df-3c641cc80e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3912bb-1fe0-4c9e-afae-fed446c384d1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a019a794-e37e-4830-a520-6153f57a637c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72220b34-d42e-46a0-bd88-fbace18eb060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ca5634-3b01-4046-a813-6d42c8fba761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86cf1234-ec84-4453-8e57-b5e9b4d2f29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb3b3a5-d2aa-439a-8aae-6e5d1a1c6923",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9246f99-edca-4a0a-afd5-1338172a38bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b48265b-c181-4c5f-aeb9-3f65d6397285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b0341f-31ef-46a5-ba75-206370992427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a17f92e-1177-4438-acd3-7fa94e4ea5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db3e7f3-749f-46e6-bb74-9f82ac7439e9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f70cb22-bd61-40b7-acc3-a512ef685748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4ea2e8-5ba5-46e6-a6ee-0077276f14c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8eec777-e0fb-49b2-b426-03bf582a10b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e3b026e-6410-48b6-9415-03cab9d7dedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bc436d-4b00-4c44-a0eb-22a837e1978d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e6c730-83e9-4928-b06e-53a51005f36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9b8883-1436-4569-9cbf-1f45e26860b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caaf36aa-223f-4a25-aaa2-c4662ed3b04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6e6913-fac5-4e16-bfab-0e7b3a87f60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4ba9f5-e471-4cb1-af11-4840e4db6e63",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a6c0a6-6b5c-438f-afd7-b3d00ec4d6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330df95e-a7d6-45b4-9118-cef153a21762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35236f0-5f02-43ed-911f-043edbed67bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08034213-8410-4467-a8be-a32f0ca0ec74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef06d88-3aae-4b5d-a25c-e857dccc4de8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639c8bec-70ec-4ea1-a3a5-77f1089e9b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a0439c-1667-4ccf-8027-d461036e497c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cac8ec6-94fc-440d-a5d4-017d1e42b03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b650e363-d350-4c64-968d-4383d9f9b55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ec6e98-358d-49ba-9f96-b33f26fc4a5e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25772a30-f5c8-4e4c-887d-43ad0c7f5ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db58e91a-2f01-441d-bbd9-de0caebdc238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a68e74-d318-4efa-9513-ab7ed295a2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "218aa18d-fe5d-4a00-bec4-2e6d37a0ca45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5e5a54-c3e3-40fe-ab07-c336a5562959",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5275db-b649-40a3-86fb-326a841ea9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538de512-ba54-450e-9dce-16fb84cca548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78117b9-a813-46a7-98d7-69e46fb8affd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0877473-e72b-4f1a-9a33-c3fee8fdf698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2d53d2-6061-4567-999e-a9b58986c314",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0d6ed7-e5b8-4e7b-a82e-c34daa4ddb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058aebcc-396a-4dea-8f74-d3715af5c28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583b8c88-32d2-4604-a6fc-4384dcd63d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04b0a4f9-a3af-4e6f-98de-2b6cc07c5759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be835ec0-ea9b-494e-b63c-8b9da296d2dd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70df0b0a-b696-4e6a-8c5b-fa5dea501a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9628c0d9-3a7f-45ac-858a-4f701e4c768b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fe3903-ac71-4f96-885b-380cd4b7f834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "383c4025-2f04-498a-a76e-bd1ea534e4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97db53da-3b01-48d0-87a1-fdbe92debef2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d49f6a-1f9c-4ab3-b94f-0d8609d455b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1724c383-adfd-48f3-b574-7b8b7714d068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea80519-a9de-4e52-865d-c1b13b94d7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db0207b4-dc69-4ead-9585-64a79badab2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464f2296-ce04-4210-9d91-338cac7cf87e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e32739-fe94-49b1-ada3-53e3f4faa5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6d49a8-b63b-4e37-aebf-bf3b37ab42b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9acd63-1b87-4739-82f4-39a6b2552c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "741de094-d7d0-4a39-a89f-3c98401af0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875a28c5-5d65-439f-ab5a-027408aedb87",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9c7f88-df0b-46c8-94e0-9adc4a2565ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cef4bb1-d98a-446c-bba4-8fce2ca4228e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90304a6f-9aa9-4247-8659-d669edc1a509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08a8b470-607d-4de5-8786-89ea385fa2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad6fe0f-f337-4fdf-8e40-6842381b6e4a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ec5479-3729-4a95-8b4f-de5c472130e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e0d6bd-aee4-4616-9cca-a873f0a1bc9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856bc2ac-9a16-462a-b9dd-e11775e8328d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77c7b28b-dcbb-4c4d-b4f9-0efc763ecc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759a177f-50c1-43e8-8675-81fb197d6621",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feb1406-3f03-4abb-9be9-9a52b48861f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b660fcc2-f6f9-43d9-b371-d1606476ca77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd605a83-c4a5-4424-832b-273d004ef1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d108014b-2e32-4ae9-a3d9-64bcd1153a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c679e6-b0d4-4fff-b78e-5ecee7497d47",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba70d6de-779e-4358-b90f-295d07733d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0fdc2a2-befe-41f5-940b-a4b28a3b3a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a868f977-3bf2-4c9b-b710-05964af8bb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7602e07d-ae6f-45f8-a762-ec3821344fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f9293f-ef23-4241-9a54-3205b81d5a33",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c497bcd5-5ff4-4dbe-b3fa-1235fa7d1265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e887d69d-16db-4fd7-b8da-57ed260baa13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c42ac28-09fd-4b06-b7ba-fab4dd174ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15ceb1e2-2f5f-438f-b08a-8897a00da00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8fe882-302d-4628-8e54-eb30f3d41b1a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9585d5cd-ba14-4bc7-9218-a14227963b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0ca7ed-b5f6-4b75-98b2-034826421634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb0d736-75bd-459c-86bb-375977c2365e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a472dd60-89c5-4882-9a32-11921be7bc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c7868e-a6d0-44f2-863a-a7426666cf61",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f085a5ee-2c4a-4733-bd63-e21bbcfdb47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188fb80c-4470-4293-b548-7828472da894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdf1163-5526-4533-a617-53d5ee1f80c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ce373d-ba23-42d6-863d-9b467dee836d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e53729-f6d1-4cda-8382-41d8911fb628",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f787036b-cd95-4d32-97d1-7d223c023684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2696e5-fcc6-4c07-a9e7-f9eaac25f43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e0743f-3833-480a-b114-159ae6f379fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a131ede6-89c2-494d-9b00-292aa88095d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1d4d59-b824-4c0e-a1dd-95d7bee79949",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb98c91-6188-4cb6-90dd-353a365aa171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1dd482-91c6-4b59-bc9e-9898d449a6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b817c171-7731-47de-828b-5b895632c260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c0321f-6b93-4cda-8b10-a4ea0334e2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8712a298-d58e-46ed-b5c6-13d527cb3df8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ece64d-d0a9-44fa-8cbb-303685b3b579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0f25d2-96e5-46b6-9ea2-f8a8aa2a7aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d21b990-fe77-4f78-8f7a-d5e4b38e0a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6b196b-ac91-4216-b986-01e45d26ed94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45293c09-e7f9-49c8-a08d-b06a2ed028a9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87c8994-84cc-458c-beaf-1288389bdf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11211f09-9dd8-4b33-9619-62d5155c88a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eec4356-32b1-45ac-b3c9-9a34b737ab57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "56232317-1fdb-4f0f-a564-127ea61aa2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a40bb37-c8cb-4ec6-afad-27e8bf42dfd6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f20e19-48ee-4dfe-b415-a3de320a91a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27cef52-1527-4fda-bdaf-b5e645fe74ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9071ffd8-eb23-42ca-b765-a4d2f23a14a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6964f279-4876-4936-9f2d-a4b116b41a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ca8750-aba6-4224-80c6-39daf7993513",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9ba482-eb65-4863-a691-097af05031fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1880e577-7b82-4dbd-a143-9bf5dff79324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2deca836-f4cd-4f5a-b4d5-8600399d7f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bab0cb71-c592-4b74-8958-c7ccd96fc707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8507de7-79a6-480c-8496-ff895792e976",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9aaa79-1574-45ef-93cd-9204f4b851c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963a4b87-d153-448e-bc52-f6262cf8ac3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5550e5ba-a26b-4a42-bd6f-875a3322c03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "079d040b-a432-4f01-bd6b-4372724be007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a38c95-186c-4918-8960-094b74f82ae9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f4053f-167f-4cc6-b46f-adefebd6a8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d312bd8-bfd7-4923-9a8a-a8af0e733484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1385f2a0-f637-4f2c-b991-b86105c55dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd374b9-5b8c-4141-972e-e7d14297d4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bf75bd-ef83-4e94-b5a6-53968f26a59d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f218a16-ac7c-4f94-aefb-1c790a110271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cadbff35-73bb-4a05-86d9-5e18929133fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614ec790-7424-4063-8bc9-86627ec0980d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d58177c-ea8f-46db-9c69-74fdd2b8f18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4197fc95-bbe2-4951-af18-4837dd4eab7a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7000d12f-122b-43b4-8eb0-a17cbfe66d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb969460-0b0c-4ea5-988a-707da295eaef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94309dc-325e-4592-a680-0f7c175f4384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1816d66-e7f2-45c8-82e3-9c3582561b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6323cba7-45f5-4214-8621-e4532080b00d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea80f1c-70d2-4617-a141-95adc2c0e819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e26d5a-36b8-4b8f-ad9f-b2a15e9c6a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65b7463-8c89-44c9-9c2d-4b20652e23a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a70ed4-a0ca-4732-88d4-2d15a0f1621d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a77b793-aa38-46c9-ba17-1958057ecbb2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6698fe2f-cd50-4d75-b0a5-f99eb77610fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e532e1d6-c8d7-4a27-af5e-d68b6bcf6126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2057d935-b391-423e-a706-afcf03cffe77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3054f8a9-fb73-4709-987c-db8ee70d9a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f259103-dee0-406c-a22d-5e48c66b57c2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e06e4ba-872b-49f7-a100-07dc063d8197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388e6746-37cc-4471-9f18-55fcec565787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49722d0-0570-4aba-870e-0ed11f431aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a46ca44-d1dc-4d1a-bdb2-cca08a9e3a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf489a34-7a74-4455-becb-a0654c853890",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db28b2d9-4d94-479c-8559-aeeee86007e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc7b7c6-5569-4926-a820-515096c84787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c86de6d-daf8-41f1-a1cf-0291a7072d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11500c19-ea2a-4a63-827b-7bb37a9519c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1caa800-0b07-419e-8e02-0a9e90213569",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f777112b-4440-4b87-baaf-903efc9eb71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d6e38b-8788-4b28-b278-1b650e23ade4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91486c9-7fdb-498a-948d-ec2974a250c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14c8c04c-4eeb-403b-b0c6-2f8940af4090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51a49c1-f985-4c68-817f-c10795440691",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9454be-c8d4-4276-9ac8-450d51ae10ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb22359e-1e0a-423b-bfa6-3afe7674d25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ec058c-dff7-40b9-b538-c0d208965e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed712369-6b8c-4fa4-b7e0-07781e19812c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a99fb0-b871-472c-b7f8-5b3c2208d584",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b0fa14-c96a-4306-8a16-aed4a24d51c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570c8142-6266-4dc7-ad83-d94a8b86efde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502ecaa2-baff-48d8-aa2c-16554738b994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1bc968-954f-48bb-b39c-3aca5480cccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf51d8f-fc02-4009-8437-b1f2bf57f630",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a009fa5-ab33-4d19-9697-39f93387023a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b03911-00d8-43cd-a7ee-2db7f4a96e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e2882f-17f4-4dbd-89a8-1e6120ec0a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "249d87c3-3bfc-41ba-bfaf-e745fc760127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14b972e-fda7-4443-ab42-626c03933627",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5057568-083d-4e70-98ce-6e2ab79a1a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e7b394-962c-4ad4-96d5-e14ad97e8e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31b32a3-04f0-4c99-bc29-e40d9a3ddd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e14c4956-f9c2-4d1e-9c21-35307125abcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584d44b8-ec57-412b-87ac-565523965cb7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ab7dd2-9ea7-4876-8ed5-730a3dc8af1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6fc6bc-0f10-4dac-8dab-9bcccda7c838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081fe180-2eaf-4bd4-b105-42289692f8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7885c663-6210-451a-9d06-dd3a746c4481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94686512-b232-4a4f-9da8-74c788c9ed65",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60aefcea-6e57-407b-a9a9-db6b7247324c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302f6d5c-05b1-4fdc-97ca-0042e5624d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd48deb-f611-45b9-8bb0-5b9961a9226a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "01ed0a2f-c9a9-4b0a-aabc-96d00023c7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2af7832-904c-46fb-8135-3cc308f06101",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557162b6-949a-421e-a547-aff38daeb82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd3c641-8fec-48bd-bc31-ef682567c37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5315c749-826e-4d7b-a037-c3583fae7b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d52929e9-9a04-49af-a2df-5a832578fcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3256d0d-8735-4c6a-b543-1f6bb59bebaf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7373920e-83fa-4c8b-a1ec-bf272b8cc861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b3428e-4e9a-4db6-8e8c-8d0429e84a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebd5170-231c-44b5-ab8c-2553f7817ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "12294e47-315e-4dad-a08c-1c74a9488ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603552c3-b13c-41b5-9cc6-0798c30826e1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf6def0-b33d-4a7e-9b4f-9e78c2581321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17707f41-520f-425e-91ea-8658625ee78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5935f066-ca09-440a-a936-0ce6f7045146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0b6580-1578-4df3-ba0c-ea9ca0cf10f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a40903-7425-4c75-ac96-3deb498e9517",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d2cbd5-dfc2-4388-89d0-f6acc1be460a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c87cfc-e3e8-4244-a086-3b58b37809b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6881926-7c65-41f2-8c84-cff7416a687d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a1e3dd5-d56e-471f-84c1-776080a8cc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455f0653-5e98-49f0-baba-ccf6440fbe8b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab778f83-55c3-4bfc-a0c0-864179b7964d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132a582d-7cbb-4cf4-bd45-9a9ce8b0554a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e24865-06a1-46f2-8793-0c0026a7db98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8bd11a-235c-49b0-8eab-c10eef61357c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46de298d-d59d-4f8d-b36f-29b91e2220a9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520bd61f-9fc0-4642-9f42-465546c448cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a92978-1f7c-4c19-af7f-7e718cccfb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e977f8-8265-490a-afd1-94703f29ef9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88c1065d-e7d6-443a-8a20-f8d64cb1e31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8002dce5-33ab-4878-b372-71f6669f400c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bf9819-96ff-4210-b7a3-520b64e2c059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f02e7b-b3a3-4310-9395-1cadd93cd853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b08a4c-27ba-4c25-8092-ab2c51705f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa85740-73ef-406d-b481-ff3fda5294fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc88571-6f58-44aa-88a4-f0308ff15a44",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd1e17b-084c-4e26-88a7-68f3ac0549db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa5c920-42a8-4d82-b171-520573286485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cc9a2f-5888-412c-9c95-12a5b21c5aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5114ad-adfe-4095-bc77-2bc57112f021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cfde90-5ef2-4270-a392-98214334bb9c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cb628a-15aa-45f1-96e5-62f60d417bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8052aa7-cb5a-4ce2-86e8-306ed6656f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ca6460-1c80-446e-98cd-f2fbbc742380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c46a74b6-fc72-4150-bb7c-2c8e674d994f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627ba55e-2ab1-4ecd-94eb-3c4a32a84a82",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167040b3-8914-4d8c-a204-aba9d5695c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea8d442-9a10-4ad8-b989-2ce4072e6f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d213a53d-9a50-45bf-8ea5-5a89bee6f554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0852af78-067d-495b-b690-161a067bc34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b20ff59-6452-4b42-9224-c872cbfe6c84",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4751ddec-2380-4942-b12f-4f8d16125f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c69334-7909-415d-a0fa-43092c4e5976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ef4f05-4dfe-4eb8-bb8c-be31b307b20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb59d57-91a6-4029-914d-36d81f522d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c762ec-d7c2-49a6-9096-da577dc7f30b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a5afa4-8082-4386-a602-4b7a53890a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e51468e-fed1-4742-a210-2967661e3777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fbe96f-a6b7-4ed7-8c48-6f739089b124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f25839d8-a6c2-4ac9-87e3-5e59f4d2cc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d978a4-f44d-4adc-bd99-605b98c6ad8e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514ac15e-ee12-4715-81b4-041c5ba535ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54720bcd-2123-4d58-a9ea-2e6613058e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3920b9c9-aa32-4799-b1ac-3366b718601e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c916a2c6-023f-4498-8690-94154d6526b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a029484b-4992-4410-afef-d50a798e97db",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be60500-2161-45ba-9380-84f8ada5309e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d67cc5c-2fab-4cc3-9290-fd6aedc5e93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e189daf-2dba-42c6-853c-3c6376d42be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1aeba098-35bc-493b-8dd6-58e3b9a6b0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80c752b-c29d-479e-88f6-69009f3a17fb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9119c376-c61a-43bd-a5cc-2edeb6acc159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e097d4-6817-4d5c-b96d-1d9c19cba540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76161470-61b8-4a0e-9749-4cdbd039ed32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6d27dd-325a-48fd-a44f-72269d877734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e848cf5-f434-46dc-a2cf-be6addac92ba",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a99365-2230-400f-9e2c-f87091ca5799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47f1a1e-c34b-417c-aac1-652911cf28be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44d6fe1-5013-4011-b1b9-bde5dc9a8a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b0a222-65e0-4e0d-909c-86b4915bfcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc4c5fa-3ae3-4a5c-b01a-b2f5856514ec",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b5beba-3f47-4a0e-b7cf-88712f705a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018852f4-fd3a-4da6-bc5d-406c0cf6025c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c2dda6-9924-4f36-8c1a-61beb41986b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "074521af-2faa-44de-be76-4a9a2d102e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6e1efe-8e12-40c1-b60f-8a93692f7d4d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56da599f-7d3c-42f5-a2c4-f20747511d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3b4a6f-9c1c-44db-9c05-84994a9b3db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cca98b-2601-45a1-9674-f97a7bde794e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f66c01d-0cb9-4b5d-a46b-a20c033c5606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c497db33-0a60-475b-9a56-c81730a46071",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d295ac57-195d-427b-ae59-ea358f0053d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca80a94c-ba49-40a2-91a0-dd4abf90fb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b8635f-8376-45b4-bdc6-829dfb224829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d29945-3bc9-4a10-9533-60642cf7c5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d581672-db05-4ded-96cf-6a40693c1a2f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a190d8-ac61-4f29-bca8-fc83332db920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e483f048-acba-4ba5-b571-07edc05b0774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db191095-2856-48c7-acd7-cee14836a108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83d4418a-5bc4-4092-b0d0-b2fc07d73cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c26bc8-4bec-4396-af14-9ae39aa711a8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9626582b-e6df-4915-a61f-827c9505319a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a877797-4241-4738-bd96-a06a21408d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02458dc3-597c-410a-b65a-6058c249512d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ca1bc5-2b8a-4072-a8a4-705432759c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b53f841-b071-4141-801d-92ea1978e504",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d9b09a-48da-4f00-b29e-a16fccb2ba60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416418b9-bd7f-4c98-81e6-4e3f98b222c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73917c3-0b98-4c64-afce-96dda4fbf0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66a9d1c7-94c3-4b6c-8fdb-d67f9d122801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4666d8d1-5c60-4775-8217-161b3ac644ef",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21406e18-add3-4eb2-a33b-6f27e039c678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114c6bdb-670d-4580-9e68-8bb8f0b249ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c3877f-55f4-469e-b945-832f42ad765c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8721df-0e2d-4011-8a58-4baefdd3ea09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d1d8bd-26f6-48e2-a133-95ac18fb3a49",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f292f71-c8f7-4565-bfad-a355318751ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4031dc51-2941-4454-8f2e-bbff0146c753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956d38d9-8179-4ec9-aa6d-0b0bd7f2f588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b20a1c30-f641-419b-9b88-29670fd8a89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d10c98-7953-47a1-a779-2bb54ed6d782",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcef8a80-b2fa-4d96-a186-9ebac1c05619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2977c873-f3d0-4f2c-a6d2-9e6a34f0bbac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f284869-7925-4da9-a112-4103438b0022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f942e53-1879-4269-ba91-8bafefe05a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d7bb2d-628d-475a-b25e-cc136b5243a3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4905ea6-a25a-4c1b-80f5-8e23cc8f461d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c77aaa-6a9c-4205-ab6a-ad37bc003ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767ef77d-b61f-4056-9988-76fefdebc37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1355509f-ba63-4495-84a2-832ab1b33e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3917b62a-c6b6-4229-91e8-7c67c95c6818",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d36798-d5a6-45f5-a409-61467d113051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2b9339-7762-4c21-b7ca-0b1d8fb8b36c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e400ce4b-56b9-4e62-911b-0d10f0cf76c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "05b77d48-ce25-4ff7-b8b4-f9d2f5b1683d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda35cdd-6a3e-426c-9415-954ff9fee50b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fef3a07-88a6-4207-8eb7-4286bcd76490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b657cd-981a-4c17-bba8-3f3097a4ec67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298e1ee9-0bd9-47b3-ae05-58bd5142b00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d4822ed-f610-46a5-9058-5d54e5b51689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a374a11-bfd0-408f-aa62-da1644767937",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063d3482-b72b-4c5e-90e0-97e45f19c274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1f3b31-ff1e-4c0b-bac0-46d47402d768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a599f2-352a-453e-815f-e6be7d8da2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "772b753d-0316-4f5b-ad5b-bdba091cfc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d34280-7d69-4ea8-8e52-e7c78c20bf3f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3fad80-6be3-4915-a577-0a7db78bf150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3937deaf-5a93-4bc5-bc41-30fa447becd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b19bf9a-6a5d-4349-b6fa-2ecaf920fdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd20795-b690-4384-b13c-e1193244f1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ab3090-ff94-4d37-b8b7-545982ebe81a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152ac89c-72f4-4c22-aff8-9e4609aa742d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9c725d-1f30-4719-b454-4722600969b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bf08cc-5378-4298-b4df-7841bc06c187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "93a40eba-3fc7-4b17-af7b-abf70322e11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a810f9b-a58a-480c-a606-4a621a3f3f94",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bc06cd-f5bb-4e83-aef1-e8ecfd0177b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d07ee1a0-7f04-4ec7-a850-f83a89f6d8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1764692-e942-4b8d-a77f-f8d59934caa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b58352d-9982-4e24-a163-35908f001d02"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e5622072-89e6-4115-9a7a-b4cc1f2975a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52992c40-ef60-4847-9dc4-60ac42e0907c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdc198e-f87f-494e-93bd-bf44740f2136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aca83e3f-ae1b-4edb-b721-429bfa41c28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598c7772-1a9f-47d1-9d0d-8f27fd67e443",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ed04dee-9121-4f61-9e34-3537f064df64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7036b77-5588-43ff-8527-60c53b59e695",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b56dde1-ad55-4e46-aa3c-ddc704e23d31"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88e6758c-cd6c-49ad-9663-28fb484510a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03261422-a922-4037-b0a4-1bd0e8bb1ba7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4675f33-8bdb-4f01-814c-6646319651b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a3ddfb9-0ba6-4755-8d73-447ee1f68f2e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "01d5a08e-d33f-4664-a549-0406cdff2a4a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e9eaa79-8283-4d6a-b097-2cedb7986c74"
                }
              }
            ]
          },
          {
            "id": "9e81e6fd-ae60-44d2-b3d7-81093fa8830c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8753371f-4173-4caf-93c4-ec98198c7c50",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "21631359-922c-416d-8ebf-aa148112c992",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8113c033-3d74-477e-9989-b8cb8124dd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5cb1029c-3d6b-4761-9bab-fdc49b101555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adec526-6077-42cf-b7e7-b3f7c3d9eacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d5a5f5-bb26-41e6-a661-f840521f2b86"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b94ab82b-ce7c-4867-a3f8-5293560d6d51",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff28e5d3-3f97-4069-8584-e3e3546a6b44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4968be3-35cc-41f7-add3-68044acf77af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1811472-8250-4fc4-9273-6d216113dc5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c7bff400-c606-4d28-9ad9-de5ea6df1c1d"
                    }
                  }
                ]
              },
              {
                "id": "08ae8345-55fc-4ceb-b31f-b5c18adf9cf5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "347b45c6-f7eb-4e94-9533-0d0323b51d22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d2c7cd0-78f6-42f7-af70-cf1425153d4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acde7a7e-6c6b-4a6f-b24c-96c74c5c8a5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3565f8d7-ea07-45be-859e-ea81c5da2aed"
                    }
                  }
                ]
              },
              {
                "id": "ec64df2c-f7d2-4356-9c4c-12d710c4b3ba",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95ee022c-bcc6-4c1d-afa6-878f7a16f9ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62baee1c-60ba-424b-833c-e80f04cc661f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24e5675d-c588-4e69-bc65-dd43f80a4ae8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "19fcec56-fe37-467b-b6e4-6eb75939e009"
                    }
                  }
                ]
              },
              {
                "id": "9c3d4e75-c382-461a-b4e2-8d9874ea8d6c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "284b6b73-1a73-40ab-a5c1-1be464545644",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "131cf30f-fefb-4950-8896-5f3b26ff54f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "330bff82-efa1-48f8-a5ef-7d6e4132fa18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "33fdcdc4-e70a-43cd-95ae-e0eb166b458f"
                    }
                  }
                ]
              },
              {
                "id": "b3411e25-16d9-4c67-a649-1097a30a214e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "854693f7-066d-4f6a-8c74-d769b95372e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b30b6f2-e1f4-4b63-a784-c19e79291bd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3035f723-9e64-4023-b6b5-37b1f3bd9875",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "054a09a2-a880-46a0-8164-57de65207635"
                    }
                  }
                ]
              },
              {
                "id": "ef9b0e4b-5322-47ce-8ded-90ef7f631c9f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a04f2dec-0d58-48ca-aae3-18b5ae56f409",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "020e3ac5-375a-46ae-b41f-30f112d2e892"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6828dc21-737e-4c23-a1fa-5330307cb284",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "500f6fc9-d0c3-4c30-9fdf-15e59b9e64df"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "32362f5f-d604-4899-9fbf-d310eb1ca37e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f838301-9507-465e-af7b-5a9790412110"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bde03d1f-b618-4e5c-937a-0742cd64d81c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71deeed8-ed09-4a76-8385-9c6f45071164"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a70cffc-4bdf-424c-aad8-669ab5cb13c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "23de34d3-7dff-489b-9819-be7cf8703a18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ab55e79-0e03-4b72-9ff9-64b22aa98bfe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bed25e8-4fd2-4b00-80cb-c43c852c01e9"
            }
          }
        ]
      },
      {
        "id": "9ee8f096-a109-44f3-bc52-2a988ec8ccf6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3eb888e1-5697-4c4b-94ab-78f265eb1072",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a09f731-6bed-454c-9360-219ebf29f5d5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8f37658a-fc4a-45fd-b65c-7297abd13508",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00b98f4-8f39-43b6-a9fa-9cbaab381401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712c1df6-d733-4153-87fa-3ee1b52b7afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e14597-71f7-43ed-92d9-e2b14dbd86f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb9f77e-a791-434f-b6b4-afe45eb8f7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61b3e96-7863-42ad-a089-703323b2e26f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c5009c-5b14-4549-adad-65e5dffb7e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3b523a-fed4-43e6-93e3-745699f9f9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4b60d7-6fda-4c0c-a735-c72d37ab8a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4c0523-9644-49de-9e99-9578e40e527b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0eab4da-8f3e-4c0a-810f-fa9bff68f5bb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf4e622-4513-4e63-9728-5185f624c518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3326be6-fa75-4d73-89e4-9dbbdcb7da71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7b7106-80b7-456d-95fe-6413e49139e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb694bcb-ff66-4a18-b054-ee8c393f38f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71d3368-35cf-4434-9d1a-4e5c5ac376aa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c35005-b4ae-4941-aecd-f42681f74fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3077afa4-89a0-47b7-9fe6-0ccb5f2ba2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562b4e95-19e6-414b-8254-9ad23f1018a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c04d89c-6509-4e69-8116-101fa21ef66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6c4117-b369-4abd-8f11-f94eda750b42",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce2654b-2f21-43fe-b1dc-cb157374d071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a0caec-8234-423c-8f6c-aaac3caf4d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02730755-7262-4e18-ba8c-9f0b72d118a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2bf8f7-4fe4-4add-9ca8-860e156d4e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0336c274-05fd-48a6-969b-c6ca31b05734",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f3b735-2397-4467-a388-c8182c2eb0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce902a5-cec3-48f5-81c5-0c5cf97c3513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab8333f-7690-4407-80b9-a237a7ce805d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aeefbf2a-33fa-4787-97d0-4b3480f1e436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19afa996-c452-4f5b-b510-d7f9e92af588",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34742bc-66f6-4999-aa78-97011f1f6d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758e43d2-dd60-4f1e-8be1-a291fe4017cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9e0055-40eb-4aea-8a89-b1953572db80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "025e9bc4-b16f-4e7c-b1ad-10e2770fc1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c238231-92d3-4b94-866c-ed2343393b2c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0e3ba5-e149-4b00-9a34-5d9162adf2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea6bc14-3ecb-4326-bac1-95268ee5321a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d1f6c4-0e9d-4da0-a2e8-bf0ad2207282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cab298cc-5e90-4301-a5b7-6af5de7658b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492c4f83-5f67-4744-a289-d3ea2d58ca52",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfade978-4dc4-462a-8fa8-2eb75d0433dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020599fb-6f82-4ec7-bc4f-62f7aead4b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec08772-4df8-484a-87d6-c0e9b5083747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af72c551-fff5-4b84-888a-662238325d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a194e9-97c2-4a37-a29d-9d13264921d7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a613a5-8f5e-4dc7-a134-becd14aa29dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22b5b5a-69f6-4dee-abac-4085a09807d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d319e1e2-6966-4ebe-b71c-f6623195f750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35184312-e42e-4f92-92c7-502aae552850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592933a0-0922-412f-bae4-e92974ac2d99",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5d931c-f4ab-4c43-bef3-9afaa2ccda53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3c619a-88ea-4776-8a1a-9fb91907bdf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c5faf8-75c8-4e7f-931d-410666373f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8160a1-e4aa-46b8-a495-84615a330b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95397611-3eeb-4dc2-b5ca-1090b6cd36a4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0118887-f704-4418-8f07-b50ce08fee4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594e35b2-7ec0-4fb4-b34c-f3ac38512677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762810d5-d816-448e-89aa-273925504339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b63b0be1-3c71-4691-8a83-946f364f9e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1b6f59-1123-4bdd-ae8c-46e1d630bb21",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02d9775-e3b0-43f3-8f9d-7b459f56a028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48344fb7-b752-4bec-b1e3-699f8acef121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f06375a-25ef-465b-a007-ee100529fa38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68229888-4618-4e07-8a6f-aa1f2ef5ee5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d5777d-bb0d-49f7-a5ca-791fb5f931ce",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b80c7b5-2fea-458e-98dd-065d86d7abc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc7f426-80d8-4e27-aded-5be3116ca15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472ff73a-c484-46b7-8e0a-de69daa5b1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "05ceef96-695d-496d-b2ba-6e38bfd20933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30a0784-6690-4b18-936a-976589a70784",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b38a8b-816b-4e3c-a00e-27cc6bf011f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a19be4-83cb-4ced-be26-908e8658310b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84449298-34f3-48f0-a683-fc3af6932346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c50ce089-e048-4938-92c1-26d892703b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0444d6-ad27-4bf1-9364-80fcc853ef44",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f06e573-c1fc-44a4-b0a9-0eef55341993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8328bc2-cd25-4fee-a2c6-168c01df9dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e28beaa-f09c-41f5-afb4-0e1bcaf14726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7ff2cc-2b03-488b-9450-57851dd24b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b26e02-244d-4fe2-b1c9-0deef6c23b64",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d95cc0-2f01-4e47-9444-7ccfbad67389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122fd1d0-7e59-42b1-bf7a-993cb02a562b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f53d38-1d20-44f2-8a5f-4cd8c1f1b3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6710f478-0f35-4f2c-9542-9f933c895765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c582c7-7397-47c2-bc92-91ab52844df5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb384d2c-d4a0-4363-998b-f82aa7524c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb650573-a0f0-442f-929b-c19381f9ab03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289403b4-6a34-43e5-bc7e-44087f5328a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0acd84f8-51ac-499f-b787-f8c5777251f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ca601c-83ed-482e-a192-e607e19ddde5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0b40e0-e86f-4dfd-bc98-18394595452c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484a2a7a-71cb-47f0-aa5c-bb1e90ba6fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f08564a-e4a5-410a-828e-af2f78db9733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83f10648-2172-4ceb-b41a-3d70e8a7a2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f8ba88-5f68-4ba4-b487-7a85e37019f0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ee776b-c1fa-4b27-bf4d-19ea042d6f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9126203-8f8d-4dbc-9b03-419f5f3b986d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6888aeb-498d-429e-bb3c-8ba753ffe842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55814f04-d9e2-40f8-8772-d20aa3c5cbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb71695-04d0-4efc-80bf-a223f75a2f21",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e759bed0-a496-4ab1-bed0-af0b40d537c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb7ddc2-1cdc-4ff2-8016-72773cb713fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bcd06e-2b77-4997-9dec-56156849cfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e47da1ca-defe-424b-a791-7e0655922826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57265b2-53ba-4f89-9cd8-88169b366a64",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6498901e-6189-4a55-a16f-cdba7fa477e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d990bebc-21dd-4cc4-aa6f-c3e0974e2795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51081180-4ff8-447d-b7d8-61e5826e8c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47d5755a-a2a1-41c8-90e0-aaae198dc114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c980306-54b4-444a-9f14-8d1bf0fa8778",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87eaa727-ea79-44f1-8006-83bb1d9c3a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d0f863-adf1-45b1-9121-5cfd6548a7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff68655-329a-49d9-b7ee-9fb50f05cf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5da99ca-36d4-4385-9769-b3e416d23943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a850e6-5947-4245-a05b-073ec35e28ca",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188b6fa9-701f-426b-a8ac-90d709bf5cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c395a52-2f08-46aa-8751-64ec620b2154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4ae253-0baa-42bd-abd4-f1467d3380ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c70b2fd6-4ac5-495c-a569-6bb758499b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c5641c-751b-4108-9141-33731b377cbb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029e80ac-3076-4df0-a072-737f9deb68ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cfa8bc6-5d72-4506-bb5a-23a94240475e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08304f84-5bc7-49cf-8341-6cc710c750ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbbd078c-bbc9-4662-a692-a17abeb2ec72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2295dcd2-e964-4e51-9caf-eababeb4189b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e910a36-6aac-4e52-aece-744c81df5711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca3bd5b-40fe-471f-a2fe-9432e440885e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a274f3a4-f1a0-4e68-a2e1-a588a8feadb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d41a4da6-4fbb-4494-86a6-1f79a0620e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024580d4-09d4-42ae-9944-0075ab936662",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade89724-2687-406a-a037-00901551f055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60faa0e3-3046-4cf8-b32b-c475fba84be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc76c05-00ca-48f4-a054-d81b7f02970c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3a7314-ea60-47b7-84c7-777db6115219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d28f37-6b67-4f93-89b1-f5f4700df7c2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9813db0-4605-44d7-bc13-bf6f83552cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ee5c1e-c1b8-43f7-8be0-e2c14c611f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41009a4a-f99e-4aad-b723-b99fb813b9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5178275a-e7e1-4ed4-bfd6-c1e7e31f8800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fe3586-4aec-40d8-8c38-78e49ba3e077",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0482377f-b0ec-41d2-b5f5-9d3450f0e05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d034cb-be64-4639-afb4-76fadc68dc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229478d5-153c-489a-aad4-f8bced286a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60180269-0d58-4ecc-88ba-c361654b06e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a2d561-085b-4987-8bf5-dfda94b67024",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c86da7f-2b98-4d6f-b7f0-09f1f4199727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a957a46-52de-40dd-b69d-15e1dee771a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e35e1d-a3fa-4faf-a064-c825a08a2dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe80c45-c1f7-4585-a5c6-48b794f48af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47eddb5-7845-4966-912b-e32eba72c7c1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daede794-3611-442c-9efb-070bc62addf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dfa34e3-ef50-4924-8bf7-54da8055fbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9fe4e7-e813-4f11-86e0-267ddbdeb2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d37e77fc-8274-48f8-89bc-9783d0780437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f411d0b-7cea-462f-a935-eda7507f6a01",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324a73d0-87f5-41a7-8ec0-caefefff5f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30fca04-79ef-423c-917e-0587399f63da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc638000-8f20-4b71-a8c7-3e3aa140e136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8115ec29-8992-49ad-be46-81a074f58fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aba3bfc-4bbe-4f12-90dd-319e6b8891d8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d771f7-d0bc-4d1c-9370-4d5c2a678dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5d2220-9c8d-40a5-aa33-87202280cfd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cb1ed5-511b-4adb-913e-c2cf2631d90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22b7f271-b400-4552-861e-c92235a26086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b384589-6e38-4e43-a99b-7f17265681f6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7fc02b-d5b8-45a3-a33a-e069db54bcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad81f42-79dd-465e-b316-2c2d5582302e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40231014-dc7e-4f6a-a121-cac7e3b6da6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d919b1f6-6a33-41be-a53d-f33c888cca4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b188b30d-8e88-4d91-8766-bd6dadb2be9c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153a67f9-e8ce-4172-ad85-805febfbadde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ed3e0b-6c0c-47c6-ba79-b088bac441cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f261c4-a08a-483b-8cfe-5e2bb578a42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc9c83f-db9f-48d1-957c-4cc714f5095a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476a32ee-3841-4bb0-b23e-f009b81f7aa2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4422af32-88f0-4905-bc5b-e92a39d1ddd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3bea26-6706-4376-b2b3-4a238cb637fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c466113-1119-4e95-8801-0e5636b4654e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f54596-742f-42b5-aede-d468cb63f9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5024e381-ba0c-46db-9daf-707c5ff0aa87",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8bc011-a227-456f-8177-97f2fa17ea23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67db53fc-a57e-4faf-8251-e36b872aa093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d81971-ac0d-415b-9a63-873917a980f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f57d2ea-f959-4d8d-9e4f-e1af5d8dba57"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5cbab5c6-8c12-4aa9-a5ed-9709b2fba7a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d46c3c2e-10c2-4770-9539-b5ec2036352a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d240c70a-0c31-4cbe-a939-8a6471dffc57",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2abf24-e606-4b58-8b81-336e81e1b322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07afe9b5-2ca5-47c8-a45e-8045c9afc882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6800509b-81e7-4368-b720-f737cbcae75a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acdb96c9-6b70-4a3f-82ff-e45bdbb08556",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ba187e0-d65d-4cf0-ab6b-a15830c9b51a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f808aea-ca3b-4c30-9f36-cc76dbfb78ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3f175c3-9a83-49bf-9893-b0da9a69de6a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15f36cca-d705-4d4c-9229-79a0732b40c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f7a7436f-8167-4d97-88b0-6b283913f0ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bed456d3-ab19-4115-b296-fbab97f0b879",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e866711-3963-4d7e-867c-7953c9a8ee3b"
            }
          }
        ]
      },
      {
        "id": "4dea704b-8499-4cb0-ab23-19f152ce2dfe",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "246b53a6-587a-46c6-afe3-f2060f92fe4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c001871f-b317-4849-9b5e-e13e56c76042",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "49879078-12bb-4877-96e6-0fa911c84de5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62420205-5472-4857-9fa4-85733b464c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5731073f-d14f-4b51-932b-3446fad10479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd501699-bb11-4799-a913-3b27b87c2232",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32445d8-beee-420d-8b93-8cb633814319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fadcd9ff-0361-4dd4-beb9-e697d47612b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da6526a-555b-43d9-9d7e-111a6f4dffb9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad82c39-a5f4-4a03-9f89-c01be0c8416c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2297e90b-bf1a-441f-8131-3f18f08a58a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b460c0-dba2-4257-a39f-3afcb3435bfa",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f72f63-ec18-42d8-ab25-744a1ad3f5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f73f4c-6488-476b-b0ec-124c4d93d486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b354610-73ea-43ce-9725-36fb3c3623d3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f944a5c2-93be-43aa-90c4-8ef3f5ca0227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e59ae3-5417-4ad2-a65b-164608e4e74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696d608b-b5ad-473a-acea-9e90dc6653fb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1f65af-4a6b-4713-bffa-9a8c61c44cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02bfb56-8235-42f4-97cd-85c1cff98b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267fef61-4813-4e74-a4c4-78c8e855975d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9e6b0d-b6e6-45eb-9c03-c2ce00410171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f879ae6c-5269-4edb-b4a4-66ca70cdc7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "321068ab-64ea-4861-bedf-01a75f6fa046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b6e116-76a3-45c7-96ee-cc3e8bd87866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637b225c-c7dc-4435-be8e-d1316b83bdf6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58d3ecc-a214-4083-9f2e-6791684dbb7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4003d4d5-86ab-4b8b-937f-2e0432e473ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5795ed0e-0129-45b4-ac98-34d6e0c9f392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0436b1fe-4392-40a3-861d-e5966424cbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e9869e-2bd3-43ad-85d3-a49a2edaaea0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b70e3de-192f-4c31-9ba0-5dc4f2e3a8f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b05edde-278d-45b8-8f06-37210bef0f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "098d2f94-de01-4251-a19e-e4dcbe1e8113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4bde88b-ab47-4253-a5af-24e1416c996b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1b77c6-8f91-4cbf-93de-bdacfce11362",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d535e5d-1248-47f6-8c52-c0d59d9cd0f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ab4e1e-a6fe-4e52-9485-e1653f5339d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb193d92-1ad1-4064-b924-751bd9389a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387de305-7202-4ce9-a848-0325a7ce9a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f2f838-f157-46b2-a69c-5fc19298d26c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f09be2-2219-4100-90dc-3e24d8e85ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353800ee-8290-41ce-8d59-29d0ed43f8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4119abd-9c31-43b1-9d5c-417a9261cf1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c85e95-611e-46d2-a308-fdcd445351c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5581e464-caf5-4f7f-95a8-ecf1ac2814a2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022ca691-1163-405f-83a1-4430d4a2e36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5647f9b6-1f4d-42ee-b23f-ae77e41cb501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81ae6cb-95f7-4859-8d3f-af44b11e07e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98251afd-ae59-4ad4-ae8f-5d81968db268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a2f3b9-d97e-4d5b-b3a0-fc45e075c0ad",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20515e2f-f2e3-4835-a362-f06cf3671b1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b91b341e-e3a5-4c4b-9c15-be72be8b52c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21c01ac-ff97-4598-b446-6c592496aa05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d90d15-14f5-41da-b960-60d71bb32d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fd8b35-a0c9-44ae-abe5-74b272426bf4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebf546e-be10-4d16-897a-547e80d1c50a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31b0e268-8433-48a5-ba3f-3b6c53383314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68f4ef3-5513-49bc-9f4d-d002463ccb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d65683-f607-410f-9090-5a2d7bc1401d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8eab18-f5a4-46f4-8155-41b7f03cb008",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e07ec0-f7bd-45b3-9682-302d8d085fb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7a0b564-e042-45a4-9f40-debb3e4b4e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8946b35-62b0-45de-89df-4515f2b8c6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6ee696-b252-4953-bb94-036c750d4d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452785d6-938d-4612-a9e6-635d3e2a81c0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80825541-4f30-4503-9a4c-00f872dc09d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fd792ef-baef-40b9-8c68-3c31e0f64fa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7170da8b-726d-48fd-a2f3-aa0b12ca94f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e423b1-c551-4465-b95e-fe53a7d3ae53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5754bd0-8a44-4933-ace4-37ed24ec9f0f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72b7af8-1fac-4eb9-9895-595b949b68a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a7feff-c856-4dfc-8c7c-7cd223bbb182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7e3047-12b3-4934-937a-3c2d642db12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00714f45-bdc7-437c-a27c-afd928f5777a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bce5549-c31b-464f-a6c9-0b499bab5a38",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aab0ab4-5d0c-4326-92bd-d1f13b172826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08dcdd66-7fff-44ba-9f00-206a81506448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c5ba5a-ca4e-4390-9b5f-d28ef6119dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21de2cab-3619-4552-83c3-9ea2e9fa2bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0825b0-c300-4f41-a848-8d3f89c182b3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c6516e-e51f-4c17-a9d3-f21aed681c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f1b30f-c813-4bcc-a0f4-fbeb17e738fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65852e9-2e15-4701-8c19-ac6066646939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a38a1fd-1181-4fc7-a98d-a6da7865b0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725e7c4c-d488-4294-99c0-6bab910201a3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c85522-c5c5-4b61-8c18-a4e185b4d027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6fa1392-84e3-448e-ae50-1234e996f2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "723c643a-3987-4cc6-8525-f7e3c5e4a2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63809127-3237-4950-a4ea-ba0141db26c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff29363a-08df-4a78-b637-e8bee7e6ffc9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92091578-05d2-4693-9172-93ea7b09ef1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0eac292-5b5b-4883-8c7a-66510d26fa57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654a5294-cfbc-45fc-a5e5-0ea995232a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab09f67-6b06-43fd-842d-e51aedac2796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1e9cae-dba8-4a58-b58d-7445a518ed55",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c93dacd-7ed1-47a6-9939-c6cadf308c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a3d139-3315-4a08-9949-7a666c74f288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202249c5-d983-4f8a-b1b6-8008e11d1477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad19e47d-615e-4b69-8c60-041782d5e091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270669cc-b1ea-4ed3-b40b-583d4dcff7f6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4879d734-46b0-4b03-961a-02488faaa79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691fa46c-b3b3-4f19-9244-518bbdf77e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7742898-bb55-48fe-9bca-8226a4e92f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62fd5922-e362-48ca-b145-63f63c16c3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e4ca8a-cdf6-4077-9fbb-d341ca714c57",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75cf6dce-4990-4eba-960a-fd79082fc1e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58e9c5a8-5300-4a1b-88fd-f4e513b8820a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e14e4c9-84e5-459a-b0a3-f4d5b03ce4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f298c6f-74f1-4caa-a732-77e0eca6a832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee35ef38-9d2e-4e92-bf1a-24fa89a9de0e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea6fc83-f709-4fad-9652-7235c8bb1c00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0eeedf6-8528-4652-a7c4-99d705dfd258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14057836-e806-4f12-b22a-175c54d49257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58f18e9-4149-4ef1-a832-635773314b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0796744f-e6d9-4fac-a213-ac8c7388678c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c180b35a-197b-451f-800e-19cadecfe629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43d15c17-6f3e-4db8-ae9e-2f180f9bfa0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b895e2-7fe1-4147-a726-3e351d4a2fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a44f46-a5cb-4779-bac2-acbfd72bbd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10280943-1137-462d-bf1a-e017216aad09",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4002b9c5-342b-4691-916a-ccdd0cbecd8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b7f6abd-1e3d-45ce-9c13-5ded5e6a03cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4755694e-13f2-4335-bd31-b2f29a2acafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d249a218-ac25-4f5f-b968-23fc962e820d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dced4014-730d-46e1-bc66-c662d3cd556a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d8ad59-fb1e-4277-b586-1b308bbf976e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f031321b-64cb-4823-a2d2-d2d6c6a414ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "640142d5-403e-462d-a0d7-d8fa99d4a60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc90e7a-3c6f-4818-b420-9bf619e9c02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02087f8e-3d2a-4858-8e25-3303ed555456",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dded511-6a25-4153-aebf-d42c30703b3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d141b91-709f-4481-b259-9010b12f581f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01ecf32-225e-4c0a-9b93-13bcb8997aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8946b3f8-00c1-4a91-b270-ccbabff2fea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93a1643-e492-4b43-84f0-a75559f45038",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0542daba-fc4e-48b7-8e9d-7fe4164d0bd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c52b3f9f-394e-4469-b97b-cf3d6ffa9308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcef94f-e604-4941-8642-9b0759cd3d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522dc160-a89b-4dc6-a0a0-ad3c72524cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf9dd37-3949-4b79-9f38-801b3f47520b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b723840-73be-4a7f-8206-69afff4d4075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7699afb1-a3d6-4183-b2e0-8135a1d81195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bb7aeb-1fd9-4e42-88f2-997728f61eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4529ea82-c50d-47d2-a41c-111a4ec73ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6906d015-081c-4984-932c-0e08f5433e3c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f464f43-7ed9-4366-9bc4-d8c0a7e4a569",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54350818-9a49-47aa-b392-dcb105979c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02251ee5-61dd-4a03-8152-4d5335cd8fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d30523-5c2a-4d9c-bb2d-12bc09e0b8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0c8a58-115b-4f20-a549-facc30e80a1c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2eae67-d7b8-4466-bd6f-1fe14ef3daff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3b77a89-15d0-4f59-8da9-c6fcca63afc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa32c31-d709-471e-8b33-585392496e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb4488d-5da6-479d-a4bd-aedfa9b05467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2f43f1-d0f2-443b-ad09-a38d831ee68f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc35621-ee5d-4133-803e-319394b3456e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10932cd1-2ecb-44b9-a5b8-5f6c58ecd380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffceac8b-2f05-4765-a4b6-f98526f8bed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9b337a-33e3-4935-9684-4871bf2fa5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418c87b0-17b5-4f70-9910-9e154b4be9a2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf0d000-ae07-4168-a078-ba07c29bf9f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb9bd1e-1c7b-4273-aa41-f99701405254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "918630c7-7e3b-4c26-b2eb-c17d9197be82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65067e3-bee0-4c34-8047-67349b4c6f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcd9fa0-2cd3-4f53-bc93-13486017be76",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a60433d-4083-4949-af5b-37b504081134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbe53aa-7054-4edb-8fa3-2a75309a38a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b8b586-ec86-4f51-8300-97897dbc35fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc28044-1aa7-4ab2-b06c-41c204424a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb9c087-fc0d-4e53-bf4c-50e7ef7e56ea",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50dc91ee-94de-4c40-ae40-97d15d91d266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39504b9-c902-4e67-b87c-5e3e04eb102f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98771ca4-f373-43ab-b113-f85f85f0fb8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5529c2c1-1285-4f97-85a0-67784028ebda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e285ea0d-a503-4d3b-bca2-3a08469692d2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c161a32-57ab-42ce-a212-0b12a46fb00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8bdef0-6f49-485d-a9e4-1a2abed9a874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf69f8f-1eda-4437-8bc3-a096c9b98f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10b2c15-7f49-45be-9049-f93437dc921c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d2e5e6-2677-4bee-b2df-a71f247dfd03",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cbd3ae-39ed-4d56-85db-6f67aacc7606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28bdecc-0834-4560-8a5e-d8309a83fd85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4d625f-3512-45ed-93d4-a3224efb13bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b4b25b-50b3-40ec-a86a-0a307e61e1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9423c1-b5c2-42fc-b6d7-f165ae189c01",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aafffa3-f612-4bb5-8cfc-363ef2db5add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a631b4-0486-4f13-9afc-8112011be90f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc74eaa-4d7e-4ea0-86d8-e7683e5cfe3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209b6e30-eae5-42f3-ac68-213b951e2d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df0eaa3-e53b-4ead-80f5-6e8055769fb7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a61491-01a9-451d-8a14-55d44d2516c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8716eb58-f01f-4b59-a12f-98b55480bc4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6510b3c-2d6f-49a4-bbb4-7c38265e69ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ced311d-d354-49a3-8939-787a779fd0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51754ed9-2c79-4a62-916d-a1c27ca4b4a6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01ab49a-ee34-4352-826e-d0374a6aa606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262441c7-4b9b-493f-b939-961a6a9aa3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498179ff-ca7c-4325-8b4c-a7321f07ad74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4c5a52-12f9-4a91-b103-a34e1e7e8746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518fb45c-c92c-4583-9049-f178aafe8934",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d15273-d9c0-442d-be0f-3b089b8a82b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f7a0bc-968e-42be-a72b-f3177068c589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf47a790-00e1-41c4-9c43-25148acaefcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8db3a3-34d0-43b7-81ad-75d546e8a9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad111c1-fbf9-4b7b-9589-b80cabf17f7e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c44667-00df-4556-8e4c-b8b9b7fc97a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f81f0c5-22af-4a58-bca6-83d3ded66293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4c917b-77c8-40d0-b086-ef9c969c68fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6ebbad-7361-40d3-9ab1-06950b5a20c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5a7da5-6ecf-428d-8660-9723993686ff",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025f519a-ce68-4158-88da-84b6cc1acedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1f3235-f8cd-4c50-a084-2c6b430e211d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f84cec-2f2e-4e84-8071-4b326a85e688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e093addf-47e3-46b1-a44f-3a0f17b56fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd5b3b6-e472-46cf-a136-2ed8d9b0192e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5a475b-6f9e-4d82-b8ea-7cce91727af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44aa4493-4f26-40fe-8524-b14f407f1fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe62168-5bba-46fa-b22f-c9871aee0dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8c5367-61fb-4c2b-962b-baac5ad08a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5936db8b-d45e-4afe-88ef-a4c55f981785",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7702d4-2cdb-4b63-8ab3-da1698b84194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1821d6c-7db5-4d13-9af2-dc7c34e3c283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f823f54-3459-43d8-b612-150c65cb7434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141dfc70-3da2-486f-98ed-3fd28dec3071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943da35c-fa23-4ef5-b085-2c32f777a443",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4492352a-b257-4d1d-a568-71e4087c7d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d02167-d3d6-4c86-987c-30191b44c914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6db7fa-4525-460f-b368-fd08485000d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079aca9b-a434-4c1c-b7bd-efef8869de82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ea5a6b-945c-472b-8790-1cba4bfbdb32",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4506d99e-1202-43e4-8455-56337f41b782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd88d02-d8f3-431a-9634-484fc469b61e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7199a8f3-8238-4050-b6e0-468cf02bf638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0b298f-2839-49ab-b463-e3167f95ac2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4765fe3-19bd-4878-91e5-b31bb055f0f5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235474f9-533b-47dc-bc3f-3db9422728bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85af1ce1-3b11-48e5-96cb-f2a7e085f88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d17c78-97c1-4d8a-9ce5-cca6cc2e6821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3154aee7-73b6-4950-9914-02f262f917e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f212a8f-dee3-4745-ab11-a62b65be457f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25da293-f39d-45db-ab6c-a1a09ad33df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153bd4dd-fa2f-4f5e-a44d-54cdf23c4a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2932422-ec6f-4313-8543-617220444551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55efa29-c08f-4d24-bdfa-8972a3e13228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bef82ad-828f-4f1a-884e-6d3c01c9f6a0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f332b740-b0d2-4897-a3be-9a458c88437d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a7e651-0070-441b-a7ef-a12bdea639ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfa36d6-dbfd-4531-bbef-5dd6b1b99940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa94ac91-22c2-4dc6-995f-dca2a9f3a0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42352198-b45d-43cf-8fcc-5c7c813484e1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b98b33-c686-4704-a571-792353514e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf07503-cf8b-4f3f-a98d-8444fdd94041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c712c323-5d6e-4e09-aca2-db53fc28eecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca74812f-021f-464a-baca-faee1063fa79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8748ee78-1cb8-444a-b45b-cc3b63ba7f3e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cbfe76-d37b-4198-8508-101b25ab944f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b05c37e-b4d5-4d6d-9868-92acc8f1b813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7548c3-d579-4e9f-87e7-f2e60d360d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a8ce7e-83f7-4e94-b5c3-4f39f8ab8851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8ed19d-29ab-41e6-a46a-265d297c58f5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17676f58-d00b-4132-ac74-d9aa75ff8654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054eed48-6844-491a-aab2-bfcc532fbd03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c40aec1-7ad5-410e-8f6a-3e043cec385a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dacd2c0-385c-4b4b-959b-c07c659f0f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2baa51c8-1e21-49d2-9f49-c753d643eed2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22e170f-73a5-4fbe-8a8d-6dfb1ad0fe1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd63ed4-6466-4525-aed2-9eea91b37a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6f9ae3-0f69-4e46-9931-95e704963eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4271f97-697c-4401-9aaf-dc1801a97b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f47619-b878-4195-bd09-17a57bd6a510",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4fc2ca-813a-4e34-8cb1-1d05b76cf8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcc5e3d-9b50-4f0b-90c6-43f1b2b6df72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3565963-db34-43ac-af91-951da87220d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5c8572-6099-4025-a0af-c80e2e69857c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea727a55-f505-47b5-8513-ac9a4e83475f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd620d2-d105-482e-8b4c-159a49b0ef32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133ede0c-1b6b-4d6b-8d34-f1e1442b0579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d176a9b-da48-490c-bab5-4e9f39e4046f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0297430-4ddd-4239-a2d0-b2a508fe0bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dba34d-832d-4750-abc5-10d55648ab01",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe440c05-7865-440f-b824-f0a2be9657d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b705bd-b033-4d5f-800d-8daa202b4149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2a18f9-f62b-4d90-b3f1-e1cbe59433d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8320a5f4-8f62-4f0c-a833-a3912c449ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa61e38-3e99-45e1-be38-f31f09085221",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467d1158-cfa2-46f1-9443-15e0ab0bad50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be50e7e3-0cbb-450f-8c61-e81e149bbecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8012f9af-6eab-4eef-865c-a0d056cb7db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70428b9c-b92e-4101-8fc8-70a034eaed29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545f4c8d-b80d-4095-919a-e89cfe724270",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f454bc-5699-4397-8782-3875d83e6678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3caa040c-cf23-4dcf-8814-a4979b71717b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f9e927-e383-4df3-b443-5920cb4160aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc6f809-33de-4355-afbe-5c6f01531f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a06d48-ab01-404a-a763-51d8b02d3321",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11250469-5c9c-46df-8cd4-0a9c5dce702c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d83df5c-b34c-4c19-91a4-886e5b886841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3827a98d-fdae-42a9-b58c-2b5e40e0f491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6861a7a-6ba2-4330-9e10-3ee93b33a751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3334c1a5-74c4-47a7-bee4-4b3371eb3282",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65615d3-2dd0-4e78-b678-aa950fcaa4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7ed228-0303-400a-bb7b-b4aecf504aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "124d55c0-3c36-4db6-be9b-877f14cec779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa37303-9e9a-472b-8978-d6615daf9f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9de20c-a614-4fe1-ac0d-7242c7672d68",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0cbf99-cda6-4992-99a1-54b4e2d22885",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42cee099-7473-4455-b2bf-44f53785a907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5aa7fcc-8e1c-4c2d-bf28-fd52b77ff1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e7cd96-e7d9-40af-a972-95f1bd69f16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dacc7cc-6a23-4f97-978e-c8f468657f83",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47775c98-e27e-4d98-86e0-f3d7edcdd546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b254094-7d4b-4f51-ac9d-f82dcc2cf6fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9b7762-bbdb-42ed-81ce-80f5cc0ab072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7374664-fa1d-4c31-adb7-4f88803ac050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacd9f8e-bb6b-436b-808a-9a6296d456b7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a2a1d1-8629-4b68-9779-478a02cdb97f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc48a826-2041-4dc3-a662-e98ecba0111d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88a5580-13e5-4054-b886-b8961d4ebb48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96887e6f-cabe-446f-a17c-9919011a5bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0594b752-5162-4464-bc71-227502284581",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7475bb-1c64-49aa-8bba-733ff8137cd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f8e436e-e0aa-463a-9297-5aec51802364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97c26d7-c90a-435b-89d1-b1982f9f1bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f087ac1-b919-461f-a7fd-ab1dac78382b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717bf033-a5ce-4114-91e1-a57b1c43f9da",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9acb6d9d-158e-44f6-ac9b-9a2f3a17f324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0daeccd8-4379-45f0-967c-9cb443358b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c68d1d1-8649-4545-972b-e13bc19dedfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3d3f89-c505-4cf5-bed6-bc68a41372b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be7894b-5611-4b09-b479-a0d32340ed3e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8634ec-3c68-4e35-844d-c735f7dc4665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18397154-aef3-4118-bc46-520c697f4d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89055a16-88c9-4f7b-879d-1616bfd493ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7adbae39-a2cc-4630-86ae-9d7a894961b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fa8675-d9ff-4f2d-8a84-552817c7f86d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a2a543-b0de-4009-9c5c-67e52d687965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "799b1362-34ab-4997-97aa-f76894267850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1602198b-ea15-4668-84a9-8ecee669d4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2805eaba-9623-415a-a180-4b2e4615c3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed34971-ab19-4443-b284-ef4cabc4312e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee759cb-523c-4542-86a7-f92b955cd56d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a468b6e4-2cfa-4eda-be91-8f4d075a3168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5361eb58-a9a9-42a5-976d-75e6e2d66ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973a4cc1-274d-4f75-ac22-a7029ddab757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0480f912-c1ec-4c0a-9481-73cdbc40a980",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9093b2-ef0e-45de-bfca-e02ff600e7b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2648da6-aabd-40c8-9962-f5ebbaedb781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "351f2607-6f5f-45e8-a9c5-8e5ab7e2240f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effc6962-3f30-42db-924c-ef314359e8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca00a1ea-1528-42e8-b061-ebe1e3b9a40a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cccee74-4c70-439b-9c55-86d57a7cf325",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c485458-0627-4ffa-b601-fe2fcda50085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b35c6a-108d-4dc4-aac0-b55dc5562cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac79757d-713a-4e70-962b-12ae981121ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157d4398-6479-4605-a3c3-13e8a1879c7d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955e4773-b8df-4ab7-be98-59ae04cdfaf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05ac4b71-7a4f-441b-a4c1-9f50ca23b2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2c95ff-adee-4fcd-b720-d828b0cae1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b9f047-ce21-4d7b-a12e-f3c73c10495c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91d09d6-6c82-40ae-94ac-4fc88f041299",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2ed8fe-15ca-46bb-be7f-dfde97ed9ff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6206b788-e213-4c8a-9769-b7e75540b97e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a04060-dc3b-4671-963b-e2b4d2caf514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d3450c-0cae-4536-95cf-400a44b1fc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab32c56-73fa-4e0d-be17-fe6e4c9add4a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190dffb9-f812-44d4-81ba-4df472a650a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fd6a60f-050e-4464-b100-0e70d00d513b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967d9b5b-736c-41c3-be55-54c00fa151f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34bf100-74ff-4a63-bb13-2c2821c4ab04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4a7c76-393b-4150-ad5b-ded84fefbe69",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73491b9-e13c-4c11-86eb-e52c57827622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3f63c0f-c77e-4016-af0f-c23f58938184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc4c6c6-57b8-4e65-a987-86d932bd8f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf8eeb8-f261-4f2f-9ce3-0e9c90986e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13bb81d-c595-4bd6-b7e6-c3032deb340f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c92c12e-81f3-438e-a9f9-1406e910b9a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5295596f-c68f-4bd9-99f9-5a87e9025a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a8b326-cbe3-4955-9ddf-7acf4dbfff21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8ca41b-0b3a-4774-8388-e94c9e49a538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086632b1-8a8b-4f21-a1d6-ba072d00cf33",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dcfc14-15c0-491d-94a0-129c2bbf2fca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cffd170f-3ab8-4793-9428-6a95a1c85090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6e7b1c-e892-4b40-a2ca-91596f8d4823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb18a81-d468-4ad9-9f9b-feacc44204e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916f9d12-ac52-4299-8452-e3d15d05888f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff38bc0-4109-4812-9ab2-fa7551a6eb3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6b1b18-674c-4788-8848-96c5ca11ae55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2209d24d-fe12-4aae-9a80-c5ad0ca0a0fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea74a6c-c3e1-450c-82f9-ec97e819b924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2912ea9a-4984-47f7-b89e-6f031a5c6e9b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a2f1a3-28ac-456b-8a26-35b9fe4ad3fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "090086a2-36a4-4b1b-8626-3ee6fde44531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b2750e-929b-4fcc-bb06-a6ff51d868b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853f9742-eec0-4fd6-b4ab-74a4b2aab757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c240018-2b60-422d-abd9-65f7865b542f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086a06f4-69d3-4127-ab88-4e907ed248a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "533b562c-2352-4cb6-acb1-4faef5eef13c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695581c3-6c1a-4d08-9829-e0ba4e8fb886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5812efd5-83e7-4695-8164-3d7e65608b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554bbe02-daa1-4532-b6dd-9ada4c9930a7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a906bbe-205f-45aa-af63-7a5ff3fc976c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ff74e8a-2a5a-4b9c-bb93-01191f4c1b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97372e4-227e-4762-8a4e-9852315726f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d132591e-7e49-44b6-9a68-684ed52f992a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1da4bb-56d8-4dee-9b37-ff6f97d842c1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b6499e-5592-447e-a8fe-8f34a98b8680",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cf1e18e-bc71-4427-bc6e-f749254de3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49236d1d-eb6b-4ab6-97ca-430056f26ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9554c60e-e6ff-4b57-ba8c-b8f89b8ea7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b68e8b-06c2-4de6-bd1b-9d600fc9f904",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f251914-2d3c-4c98-b1d6-aec60c58bd1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "289037b8-7e2d-4621-b671-69d045709860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c581a8de-3d59-4526-8512-f53c32f3984d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc2d5e5-dfc3-48fa-a27e-020c77687a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78191038-762f-48ca-9552-f6ca9f557ac3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e591c3-e86d-4fa3-931f-6f54ce2528ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "650d9b62-56d7-4a94-9894-fdda1cfe7da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff04acfe-1cb4-45a7-8949-d07f2465f6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581899d4-9a1a-4056-80b5-101cd670560a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bff1f5-488a-4d34-975e-770fac1de3bc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4270235c-5bf2-475d-8f7c-2eb11e5ddb51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c028c996-5a00-4e7f-9f9c-29e92db6fe3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b06b34c-224f-4de5-8502-32bc23994bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec43d90-5939-44eb-b637-29c426c85a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865cbeb4-bbe7-476e-93c5-54389c07469c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f659e48-bb91-4506-9782-16cc10adad9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42417ce5-1c59-45f5-a6bb-26a6a83b500e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc49117b-b7f6-4a1f-9b8e-aa439c894e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c4e08a-63af-4421-945d-588c2015d009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3caec6-1f5a-40e6-89dc-92c213820971",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39359d6-5680-432c-909b-b9251390b349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b69d11df-ade5-4d7c-87dd-c1c0fe780c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd38642a-5c27-4626-a937-b25149491fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530cb116-477c-4358-a857-9b59b8a02454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9c9b26-85b4-4355-aaa8-e5143b1509f0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492ae754-3af5-4af8-b8fc-9d452e562e61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dae0c3f-04df-4e7d-bcbf-e85ba10469f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbe6efd-a22b-414e-bcd1-3b30d9ba2a69",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23149d6-1814-42d9-a81a-d424d20661fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524c1a02-d6a2-4885-95ce-73b526ab5e4e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a0684a-cff4-4420-97f7-39a502a04e1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4159c0fe-3504-4982-bfdb-1771ec3bf1cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3cabad-4dec-4284-ad87-a49dc6b4700a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b546a3f7-f61a-4326-8433-951c7cabbfff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6750ee34-2f97-406e-859b-9eed8f02491f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724a7ee0-ac05-45a1-b7f3-dc43a144fa30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e0172a2-a0e1-4508-ba6e-6b026d5efe23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f6488e-9e06-48da-a0be-835640574cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67e0a25-b08b-4e1b-8c9c-b4e56bbe38e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d8910e-341b-4ccb-aadd-655c17da84ee",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd580836-1c16-4486-a762-addda64f4a5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6655599b-55f6-41f9-9c03-8510781a7d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb54266-adfe-43cf-8951-5c6a3bc15cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3ce931-a0f5-44da-8c4d-8f23cfcf53db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf622ceb-c96c-4894-a282-8b8515b5616e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8b373c-3949-47f6-a3b4-1ccd015cf528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "089ca670-97aa-40ad-94dc-11f6765b7f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a3577c-f967-4d7f-9974-16e7f0f47789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89506b6-cdc5-409f-9438-c045024a499f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30197ea2-722a-422c-adb9-29d513f8228d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa45a656-95b1-41f8-a8af-f79bbc19b9dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b996e85-e1ef-40e3-9067-7baa3e7e59eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82be8f2-53aa-43aa-901a-a976fd7f261f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0c8224-447d-45cf-be02-16a5c3ad4d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948537d3-5f1d-4f48-9f55-09e8652cf316",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c4fc64-28ba-4a24-ba90-c33d61b06133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f1c6f54-9357-4670-ae0b-9ecbd3b90f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08b6725-3f30-4f04-8c57-32b5be20edde",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c89ba3-61e0-4e62-823f-5a7811bd7d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1790719-965a-4944-8ade-af95aab11730",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5529cd48-4cf7-4f4a-ba7b-648e9788565f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "249c23d7-2711-44c3-a912-bb20b6b177a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f03a36-10cc-43da-9bd1-fcc3f016198f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a624e7-fe7f-456d-a114-0c06c566dd99"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53847283-f5c0-4f4b-b2bf-d27a3fc1ce15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b43ea809-0ce3-4769-b761-1873c043bc47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4050efb6-bdc5-4dc0-97ae-607a4ecaf8ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8cfd9486-c131-4740-8acb-6e9ccb446d3c"
                    }
                  }
                ]
              },
              {
                "id": "a9052377-3381-4aac-9c09-5cdc6258d814",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "214d4166-814a-4ab4-ba32-95c4c8456463",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fdf6fe-6d1f-4e69-90e0-49f29380582e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7f6f27c4-b913-47e0-9afe-32106fdb58bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e214548e-dbf6-4f54-bdd1-8ea459030159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8c653ee-4564-442e-836d-34831e759565"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23b0e139-f1f0-44ae-bda7-25c8a5b19a5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "361c3c17-568e-45e2-9a69-f882965266b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f9f425b-7ffb-443e-9891-2ed30cb10ff0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1fba925-ae70-4e0c-b933-8242fab50183"
                    }
                  }
                ]
              },
              {
                "id": "27e6a6c1-bca6-48f2-9e7e-bce2897e0df6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "710a84c7-0c64-4be7-9f0c-da5902572772",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c000ca3-262c-4907-89a7-19b85dc541fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "567ec264-4596-4aa1-9dcd-9c060f5b5f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c151a3c-1d03-41e0-b6aa-a7088c53aa6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59357efc-44f7-40df-bf20-51f0005614b9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6e8f0418-28d9-48aa-9bc0-b9dd8e2c806b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2ed22c9a-2945-4a52-bbc5-2e66c6715671",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dacf79b9-6e26-48ef-8d7d-9c65fad66086",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c6df818a-2524-4511-bfc5-6ebca68e0fda"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2188570-b7e6-41ea-ba54-d7e4885cbb0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93b3efa5-827c-49e2-b2b0-bdd8617e2351"
                    }
                  }
                ]
              },
              {
                "id": "e6b4765d-5ab1-47d6-bfba-95098c5d1497",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19fd7026-8d82-48c7-b896-1802d1e1d92d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5784c72d-98fe-4190-8261-d75bb44b1474"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "693e46bd-e436-4f54-b626-362225ba2471",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e38006e3-55be-4e2c-996d-45992992318f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6967ed5b-960a-439b-9913-cc86eb4b3904",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "70a9e65a-0467-4367-8237-ca7a4c89684d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3dd82f2d-acc3-47bf-934c-18da49645b2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9ceca77-5043-4083-8fa2-ebfe10eada9b"
            }
          }
        ]
      },
      {
        "id": "afe53143-081c-4879-939a-116dfdc184c1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "62b4ec60-b4d2-49cc-a181-5a3319158940",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32b7496d-2a43-4c4d-be57-9611b521dbb9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef649a89-fb61-4713-86cf-4f5987fec35c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4905a38-9f47-4c2b-b1ff-9e11be40f1ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "02d9e78f-dd2c-4394-9add-112351e51f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be5d11d-7b4c-4368-afe6-4d54ff2db5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59b905e2-23b1-4faf-96a5-a14fec2d2ce3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df9e207a-4068-4aa0-b728-e823fe8cbdf2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7d234c3-6c96-4ba2-8ded-8d529ea9e19f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45d2d443-c7a7-41b1-aaec-5e8ac3a49e6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23fceade-45bf-48fe-8250-573eb26656cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "466c16b4-42dd-4c8c-97b9-1c2c8939373a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e5ab7b6c-372b-40d4-ac2c-720cab5e3c95"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fb57e98-5197-4f49-bbc7-d4e00baf2c38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31c74a6c-3fa8-4bf8-9bdb-d14bed385d77"
            }
          }
        ]
      },
      {
        "id": "808a4efd-b78d-4ab1-938d-cd18d924f0b0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7a8b43d9-706b-4ec5-b80d-f463ac1913a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46db58a4-4c2d-454d-adb7-dad1325209d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f13650a-9f55-4686-8980-4a79a97047fd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a679ee75-113c-4ff3-9499-7481ee248495",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c893af3-ef85-4ea3-872f-9a568a906236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcb43c8-098c-48dc-b876-2fbbab618377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d9d316d-3e95-4d36-98a0-6a7f450221c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25e1ce6f-50d4-46b6-873e-307e2f9c66f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0aefbadf-5f7a-456d-bbd1-db62101e6c4b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4318f982-e637-43c8-a54a-9fa5278c378b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff764180-3fb8-4f67-8ece-fddd31994e2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ac5ec4d-896c-4df5-a57a-94b3b17103dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7cfcdd55-0320-4c6a-a3bb-80a090d5360c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9dbf7057-38fb-479e-be74-0b6ff31b457e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f7a7681-1145-4c92-beb8-c4b7808e7769"
            }
          }
        ]
      },
      {
        "id": "ee0eb877-e669-4bb3-ba07-0a3c9e87784c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ed5a0b34-1fc5-4197-96d2-d144056ccd83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f48af796-4b72-47a7-b4d0-11a81cae9a16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1752b7ea-177f-4811-9d49-136c9033464b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a133a2c-5613-416b-8e52-a75a3267ad91",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c422509e-1636-4a03-abf8-781d5a15f8b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6fd001-f3c3-45bc-9220-44ba484a1c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f932f1e-b2d0-45de-a4a7-d3c021b62721"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c24d649a-85dc-4594-b590-783926f76667",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d8f84d8-2064-4011-bbf7-3da78ae3de6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb18c7b9-5931-4494-be6a-97f4c55ed945",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f2ec4a9-50b1-4357-9246-e1bf991b9e24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2f7303a-e448-41be-a073-563d8903c0c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd3a99d6-d4c6-4d4b-a686-d72b8a7860d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9619d79d-24b3-4b0d-8833-b956dc7a2fa2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d5097d4-e8e7-42c2-a793-c1ce8d0a93db"
            }
          }
        ]
      },
      {
        "id": "a49c53f5-c04a-4e82-bae6-9214c5c798aa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c98cc100-e8a7-4e83-84b8-9d6cf856b50f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf3799d0-d7c5-471e-b8c2-358f03c9cf5a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "54707a0f-1a2c-4472-b6fa-f76a42bac7f1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c47cd8e-7b95-4324-8966-49883f1fa113",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c40da41-60c9-4f39-bf5a-b39231307458",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.218253968253968,
      "responseMin": 5,
      "responseMax": 322,
      "responseSd": 31.187667741810905,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722473044622,
      "completed": 1722473055948
    },
    "executions": [
      {
        "id": "7784642d-82a7-4dae-b86c-b64474db3293",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8b8a5b6c-8ded-4076-b7a3-8cc82c6cea31",
          "httpRequestId": "f140eb1e-3623-4fb4-9966-67347ef59081"
        },
        "item": {
          "id": "7784642d-82a7-4dae-b86c-b64474db3293",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "10cbfebb-e0ff-4dfb-9759-4702923c619f",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 0
        }
      },
      {
        "id": "661de18b-e3f7-4168-8e5f-03e84ef9b755",
        "cursor": {
          "ref": "5794ea58-8aa4-49aa-b090-11eced1eac5d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "47acb231-21d0-416f-8160-cb8dacc7e029"
        },
        "item": {
          "id": "661de18b-e3f7-4168-8e5f-03e84ef9b755",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "347a30df-29a7-4d45-b094-17269f18892e",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "7388efcc-01e0-4332-a0af-57502d0e81f9",
        "cursor": {
          "ref": "a4144a92-2474-40fa-9d53-1b35ee97c3da",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "187e897b-3550-4277-bd72-bc77cee4f707"
        },
        "item": {
          "id": "7388efcc-01e0-4332-a0af-57502d0e81f9",
          "name": "did_json"
        },
        "response": {
          "id": "2055b05a-38a7-4870-8857-b4c770b482cb",
          "status": "OK",
          "code": 200,
          "responseTime": 225,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d67a85d-b420-49bc-bd8d-3eec1e52d480",
        "cursor": {
          "ref": "f2f27587-8669-4e67-82d3-f48ae9958ab6",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "14f173b3-5476-4a49-be86-e1ec87c06de3"
        },
        "item": {
          "id": "1d67a85d-b420-49bc-bd8d-3eec1e52d480",
          "name": "did:invalid"
        },
        "response": {
          "id": "e94bcde6-c04c-48d9-a0e0-e746daf97fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d67a85d-b420-49bc-bd8d-3eec1e52d480",
        "cursor": {
          "ref": "f2f27587-8669-4e67-82d3-f48ae9958ab6",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "14f173b3-5476-4a49-be86-e1ec87c06de3"
        },
        "item": {
          "id": "1d67a85d-b420-49bc-bd8d-3eec1e52d480",
          "name": "did:invalid"
        },
        "response": {
          "id": "e94bcde6-c04c-48d9-a0e0-e746daf97fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea3438d-78ca-425d-b08c-2828f5eef7be",
        "cursor": {
          "ref": "7e5000b5-583b-4a2a-8bb8-ef8e52052674",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "496f087a-1006-4137-84f9-13758b82493e"
        },
        "item": {
          "id": "aea3438d-78ca-425d-b08c-2828f5eef7be",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6fd73c2d-825d-4bf5-afd0-a190a1b2e215",
          "status": "Not Found",
          "code": 404,
          "responseTime": 315,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb7b5e8-c9b2-4c84-bf15-d72cf1d2c2e0",
        "cursor": {
          "ref": "e8aafea4-1fc5-4cb8-ad68-e9f712d6ec44",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bc81c048-c88d-4d7c-9f20-297fef4ae0d0"
        },
        "item": {
          "id": "1cb7b5e8-c9b2-4c84-bf15-d72cf1d2c2e0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1d8bffb3-9f61-4e34-8d6d-1ec1e920765f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f70661-0bdb-4003-8a77-38a2686dbf56",
        "cursor": {
          "ref": "a8d1287c-9332-48a9-bd1a-f0d0527ae041",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "03243df3-717f-4cd5-9a4a-33e33a0b5b06"
        },
        "item": {
          "id": "63f70661-0bdb-4003-8a77-38a2686dbf56",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1664df80-fb0c-45e6-8f07-acc21dc027aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a9abfa-f338-421a-a1e3-e0d7c9e961b6",
        "cursor": {
          "ref": "15bbb3d2-7e74-4196-95f8-deba371213de",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "82a64e31-c1e3-44b3-8543-4f3cd2130e42"
        },
        "item": {
          "id": "b5a9abfa-f338-421a-a1e3-e0d7c9e961b6",
          "name": "identifiers"
        },
        "response": {
          "id": "13636ad7-47ee-4629-91fe-1eb0a75efd4a",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25361974-4b95-4223-81f5-90739177b87d",
        "cursor": {
          "ref": "072ffac8-fc88-4b64-abbd-5bf15faac67a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c94e331d-4203-4780-9cd1-ac3c074dd14c"
        },
        "item": {
          "id": "25361974-4b95-4223-81f5-90739177b87d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "360c1cf4-284e-4a7a-8961-db09ecb8fbc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b209bf88-2772-4749-a031-c6549ed99002",
        "cursor": {
          "ref": "3428e897-b8f5-4176-a347-890a4abf4f8d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "72f4ad29-1746-45ef-9ecc-0525a00e6abb"
        },
        "item": {
          "id": "b209bf88-2772-4749-a031-c6549ed99002",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "72debf10-2f5c-4ffd-b607-1694b63a6c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d413fb08-c70f-468b-bd75-ce0346988aec",
        "cursor": {
          "ref": "7c37b664-587e-43ff-b6ea-527a68d6db36",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b0dfc937-8800-42a6-99c6-f29c690b0301"
        },
        "item": {
          "id": "d413fb08-c70f-468b-bd75-ce0346988aec",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ded554b2-84b9-4162-af65-0a98ed46d144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ca35ce-75ba-4a75-b453-7dc21c96fc51",
        "cursor": {
          "ref": "a4ca22bf-59e8-48e8-a40c-b451480c3842",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4e577622-f0c0-43c4-a205-522851d865a8"
        },
        "item": {
          "id": "a5ca35ce-75ba-4a75-b453-7dc21c96fc51",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f114aaba-7250-4259-9098-68f7f658551d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a923c2-6c91-4d73-9c0d-b6d4201a9125",
        "cursor": {
          "ref": "0ccc2f7e-c98d-4408-a47e-a25ef2ef3c33",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9f400fab-629a-45c1-ad94-c40d3dacf5ce"
        },
        "item": {
          "id": "23a923c2-6c91-4d73-9c0d-b6d4201a9125",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "471395d9-df32-4f00-b75d-ecf129bac335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfca348-72bb-47cc-8cce-6416c2566a3f",
        "cursor": {
          "ref": "2bd3187f-a853-46ee-b562-02a8d730ca53",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "27d2c923-3654-466d-ae8e-f6fdea2d8c0c"
        },
        "item": {
          "id": "4cfca348-72bb-47cc-8cce-6416c2566a3f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ebc34a5b-a5f7-417c-8938-09bef2f405f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532e1820-7b45-41e0-b092-6771bbb2ae3e",
        "cursor": {
          "ref": "22145193-dc6d-496b-a411-7a704b86a68a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b452d2a2-5e23-4df7-88a2-76e2f3b064c9"
        },
        "item": {
          "id": "532e1820-7b45-41e0-b092-6771bbb2ae3e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d8f1b32d-4326-4452-a111-17a45b1ca7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c150972-8c2a-4459-9b33-1cb7cc93c16a",
        "cursor": {
          "ref": "139afbae-5fdf-4c66-8160-739a062b2ff3",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e6579365-4b64-4d12-aad6-0089bb210932"
        },
        "item": {
          "id": "1c150972-8c2a-4459-9b33-1cb7cc93c16a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "37d35e34-a38c-491e-8f4c-23d038937627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7181db62-89d1-4b50-82c4-88517ec3fc17",
        "cursor": {
          "ref": "d7b80de1-cd90-4616-9c80-ce529d117b43",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ea3fb24b-02af-4dce-935d-5a509ab0dd48"
        },
        "item": {
          "id": "7181db62-89d1-4b50-82c4-88517ec3fc17",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8a36c759-c91b-4762-9ea1-8439114f402a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add1a14b-dd7a-447c-97e9-ebf4ffa3a187",
        "cursor": {
          "ref": "dbf07113-9c0c-4835-9d53-3b16c2f318a9",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "046b85c9-a207-42ee-88d7-6bd025be298a"
        },
        "item": {
          "id": "add1a14b-dd7a-447c-97e9-ebf4ffa3a187",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5621fa52-2f6f-43bc-824a-5a9f7f9328b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a674f52e-13e9-4d43-8e2b-460444a66f95",
        "cursor": {
          "ref": "d0db69bf-632e-4304-acc3-c2ad4799a709",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "eb00261d-d945-422e-a8e4-b8f24201a129"
        },
        "item": {
          "id": "a674f52e-13e9-4d43-8e2b-460444a66f95",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "79356a27-366e-4568-954e-3aeea940bd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e53e20-4660-4487-8d59-ea8e177a1b6c",
        "cursor": {
          "ref": "43b5f46e-cde4-414e-a2e4-87a68b4fd53a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f758138c-c964-4dec-a7b5-6608e58ef004"
        },
        "item": {
          "id": "e8e53e20-4660-4487-8d59-ea8e177a1b6c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5c29b5cd-d7f3-4a71-94b3-a64ab778d8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8aef26a-3082-4939-908b-366a29e3a62c",
        "cursor": {
          "ref": "2d0442d4-8229-42a4-9ab3-63a5fe803d76",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bbdfb609-d8e4-4088-9b48-813b018e97de"
        },
        "item": {
          "id": "f8aef26a-3082-4939-908b-366a29e3a62c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8000f640-ef6c-414b-81c2-818ab383a306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c753136a-ad06-4ffb-974a-b46637dfd8bc",
        "cursor": {
          "ref": "7bd1a3de-acdc-4758-bc08-847f000d2836",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "870cad9a-7a57-4177-88b7-9a7d02019b07"
        },
        "item": {
          "id": "c753136a-ad06-4ffb-974a-b46637dfd8bc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2358e2b7-67fc-46b2-83ba-cab9eb18f530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ab9b0f-35b8-4e22-a963-86bf6a08b591",
        "cursor": {
          "ref": "86d22a71-1494-4a59-9df4-1f6e78b98cb5",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cb73edbb-e445-47fe-a395-a552ef7688fc"
        },
        "item": {
          "id": "b3ab9b0f-35b8-4e22-a963-86bf6a08b591",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9ecbd88d-0d87-4bdf-a3eb-422dd2317080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95eb4cf4-6e3f-48da-836f-3a1d6ffe9c28",
        "cursor": {
          "ref": "8df917d2-d76d-4315-895d-605377e223a0",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "660cf69b-8067-428e-bb41-2568ee2730c2"
        },
        "item": {
          "id": "95eb4cf4-6e3f-48da-836f-3a1d6ffe9c28",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c586a010-e15b-462d-a13b-5a172038ca05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac56b8be-7a0e-4303-a413-274fa4516843",
        "cursor": {
          "ref": "3e9b0b15-bb8e-4f63-89bc-d2022df23181",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8047ac01-c185-4ab2-94bc-b82548457869"
        },
        "item": {
          "id": "ac56b8be-7a0e-4303-a413-274fa4516843",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3d12be08-1bfb-4d02-b26c-aefe7a25ca9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d0cd70-749b-4e63-8bf0-7517aad825fe",
        "cursor": {
          "ref": "981cc0f3-9cf8-44dd-997c-522027da8fbf",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0ff1684b-c1f0-488a-9ded-2f64e920830b"
        },
        "item": {
          "id": "65d0cd70-749b-4e63-8bf0-7517aad825fe",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e4838bf0-39a1-4674-bac9-f76ce77e8379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1417ae-ccae-4d6d-99de-8ffd86db2226",
        "cursor": {
          "ref": "d0df3333-1265-484e-8bc5-f8ecbc41a701",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ca75ca69-c1b7-4967-a79f-316ca2df0743"
        },
        "item": {
          "id": "ee1417ae-ccae-4d6d-99de-8ffd86db2226",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "483c434f-7b4d-40a3-a965-3044a26a9342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436e4a7f-4470-4129-85ce-aacce75de49b",
        "cursor": {
          "ref": "f8ae53c4-af73-4e6c-a6c8-d06b1cfade83",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c095110b-de2f-4e64-b845-81dd8157f535"
        },
        "item": {
          "id": "436e4a7f-4470-4129-85ce-aacce75de49b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c2984865-946f-4603-a08d-1986cf57b807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3912bb-1fe0-4c9e-afae-fed446c384d1",
        "cursor": {
          "ref": "b9c09553-0e97-4036-9122-146deed6f34d",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c7a25979-7336-454b-882a-2a7f10e573b1"
        },
        "item": {
          "id": "2a3912bb-1fe0-4c9e-afae-fed446c384d1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3258638b-03cf-4945-87f0-7621d81c8173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb3b3a5-d2aa-439a-8aae-6e5d1a1c6923",
        "cursor": {
          "ref": "f926fccd-9034-41be-a509-0cc3f2c1a34c",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4b88942c-15db-4ada-b57a-a349aeb8b450"
        },
        "item": {
          "id": "adb3b3a5-d2aa-439a-8aae-6e5d1a1c6923",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bb9ff89e-7de7-414a-b09a-b76228a33139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db3e7f3-749f-46e6-bb74-9f82ac7439e9",
        "cursor": {
          "ref": "68eb60e6-24b9-413d-a1a3-bc15c8bd76b1",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cae0a063-6fd4-4fac-af04-887a9cedefc1"
        },
        "item": {
          "id": "8db3e7f3-749f-46e6-bb74-9f82ac7439e9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "55eedc9e-f99d-4631-89a4-b25c24cf3bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bc436d-4b00-4c44-a0eb-22a837e1978d",
        "cursor": {
          "ref": "9aba84ec-7f10-4b1f-8c13-57efc952d8a5",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e09bdc8d-f5a9-4d93-98b3-39c2ace345d7"
        },
        "item": {
          "id": "c4bc436d-4b00-4c44-a0eb-22a837e1978d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e7a709c7-fd96-4817-8346-898afb12414a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4ba9f5-e471-4cb1-af11-4840e4db6e63",
        "cursor": {
          "ref": "e4b36d2b-93f3-4f8e-8ab3-4ae0ce09fea0",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "81aa6100-b7ea-430b-8038-0ca4fdb4bd67"
        },
        "item": {
          "id": "9d4ba9f5-e471-4cb1-af11-4840e4db6e63",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b92b6f65-78e8-4e2d-9645-e143339895f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef06d88-3aae-4b5d-a25c-e857dccc4de8",
        "cursor": {
          "ref": "2737ed24-c5df-43cf-b835-5211e6f57786",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bcdb33f4-d3e7-4100-afc3-2876dc8fb795"
        },
        "item": {
          "id": "2ef06d88-3aae-4b5d-a25c-e857dccc4de8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f5c18af7-cda2-48a8-a8d0-943aa98029f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ec6e98-358d-49ba-9f96-b33f26fc4a5e",
        "cursor": {
          "ref": "9bbeb24e-184a-44d3-b700-366dcd7bd560",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "895019fb-de1c-480a-96af-21365d986083"
        },
        "item": {
          "id": "46ec6e98-358d-49ba-9f96-b33f26fc4a5e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "36f4fb8c-cfd0-419c-aafa-85d1bad1532c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5e5a54-c3e3-40fe-ab07-c336a5562959",
        "cursor": {
          "ref": "b6f81ac8-d19a-4eed-82e0-538aa0152f54",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e1126f38-1cb9-452b-bc66-43de64feb5e4"
        },
        "item": {
          "id": "df5e5a54-c3e3-40fe-ab07-c336a5562959",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9ba3cd27-6f75-450a-bcca-6fa170db5e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2d53d2-6061-4567-999e-a9b58986c314",
        "cursor": {
          "ref": "a7bfcaec-9f70-4d19-8972-b2a472c300a4",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7aac5013-ae41-41ca-a0bb-ca678df54875"
        },
        "item": {
          "id": "1b2d53d2-6061-4567-999e-a9b58986c314",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "187116e5-f0b0-4788-8fc2-1ea0455e3d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be835ec0-ea9b-494e-b63c-8b9da296d2dd",
        "cursor": {
          "ref": "5f3ce492-55fd-43f9-9bbc-7c85be666f22",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f9143fab-3e06-4cbd-aa1a-ffcdc8a8f57b"
        },
        "item": {
          "id": "be835ec0-ea9b-494e-b63c-8b9da296d2dd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f288ea4b-d840-40a2-b892-41cc6617dd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97db53da-3b01-48d0-87a1-fdbe92debef2",
        "cursor": {
          "ref": "0a4540f8-94fb-46cd-8772-021da577a83d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3becffae-7e92-472a-8b00-972c0ee09ad0"
        },
        "item": {
          "id": "97db53da-3b01-48d0-87a1-fdbe92debef2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "139a8c10-cce3-4d63-b400-7b382d82ce2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464f2296-ce04-4210-9d91-338cac7cf87e",
        "cursor": {
          "ref": "d6763102-0208-4a93-b937-26e7887bc73b",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3b32c4d2-b5ac-42fd-880b-40300c6144da"
        },
        "item": {
          "id": "464f2296-ce04-4210-9d91-338cac7cf87e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7937a038-ff3f-4d8f-84ea-b54b824bb38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875a28c5-5d65-439f-ab5a-027408aedb87",
        "cursor": {
          "ref": "2e00f1c5-9b49-48fc-9e87-b4ff07f58f85",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "289ab2fb-dcd8-41ea-a317-81eac48cb94a"
        },
        "item": {
          "id": "875a28c5-5d65-439f-ab5a-027408aedb87",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "93f8d187-478c-4ef2-91e1-a71a23998c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad6fe0f-f337-4fdf-8e40-6842381b6e4a",
        "cursor": {
          "ref": "013e12bf-4093-480c-89c6-7cf6c599af55",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "467d30a7-1b12-41d5-a063-fd90c44e1785"
        },
        "item": {
          "id": "5ad6fe0f-f337-4fdf-8e40-6842381b6e4a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3838095e-bfae-4786-b2a4-71224b7b6636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759a177f-50c1-43e8-8675-81fb197d6621",
        "cursor": {
          "ref": "408d9321-42d4-4b58-9df2-9dac043bca32",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9aaa1b09-1a19-429a-b4b2-a9bf766bbc22"
        },
        "item": {
          "id": "759a177f-50c1-43e8-8675-81fb197d6621",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3dcf5597-ae53-43f1-b543-da23098be443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c679e6-b0d4-4fff-b78e-5ecee7497d47",
        "cursor": {
          "ref": "78a31b18-9cf7-47ce-92af-f58961d7deb3",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c394fa79-ae2e-4e85-9a1a-f15e52b67038"
        },
        "item": {
          "id": "66c679e6-b0d4-4fff-b78e-5ecee7497d47",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c281cc89-6621-4c6b-be09-4fb054040285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f9293f-ef23-4241-9a54-3205b81d5a33",
        "cursor": {
          "ref": "723272a3-5300-4d6c-b9d7-fb69f09f6624",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1bcf1a0c-6724-4452-a3eb-aa9030f102a2"
        },
        "item": {
          "id": "78f9293f-ef23-4241-9a54-3205b81d5a33",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e77ee5e7-15e0-403e-b987-a57f326a781c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8fe882-302d-4628-8e54-eb30f3d41b1a",
        "cursor": {
          "ref": "232a1159-ba24-4a10-94fa-d94ca2cbffad",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c99046ee-c92d-420e-a1f9-2da8c1be8f38"
        },
        "item": {
          "id": "3c8fe882-302d-4628-8e54-eb30f3d41b1a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5f256f30-a262-440f-aebd-10ee275bd59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c7868e-a6d0-44f2-863a-a7426666cf61",
        "cursor": {
          "ref": "d20506a1-a04d-4de7-97d8-b7355bb6d907",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2d242da3-d36b-450f-8595-5d1e33975044"
        },
        "item": {
          "id": "c2c7868e-a6d0-44f2-863a-a7426666cf61",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "16bff001-fd33-4494-9ec3-6c8db08a7f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e53729-f6d1-4cda-8382-41d8911fb628",
        "cursor": {
          "ref": "4a4b076a-7abe-4d30-a9a7-55be2a533c12",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2d48cddc-43b5-4603-b650-2b772f40758b"
        },
        "item": {
          "id": "19e53729-f6d1-4cda-8382-41d8911fb628",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "af0f2897-6f4f-4d22-b60d-35d871280315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1d4d59-b824-4c0e-a1dd-95d7bee79949",
        "cursor": {
          "ref": "34a838f3-0654-4a8f-af97-e93e40082aa6",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "14e83f05-72b2-4def-b5b6-aef7a2b57164"
        },
        "item": {
          "id": "5b1d4d59-b824-4c0e-a1dd-95d7bee79949",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "298fbfdf-3f07-4c93-9597-9eecad0d0da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8712a298-d58e-46ed-b5c6-13d527cb3df8",
        "cursor": {
          "ref": "ec66cc6f-f9ee-4a67-b34a-580a57677e71",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fd025a9a-0533-481a-802a-4a7a2fd84d09"
        },
        "item": {
          "id": "8712a298-d58e-46ed-b5c6-13d527cb3df8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3d6e88b0-af10-4778-b17a-0bfce2b66d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45293c09-e7f9-49c8-a08d-b06a2ed028a9",
        "cursor": {
          "ref": "8ea343cf-276a-429e-a6b6-72b9a64bdccd",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "776ade32-2edb-450b-9538-4bd6456c807c"
        },
        "item": {
          "id": "45293c09-e7f9-49c8-a08d-b06a2ed028a9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8a1c1b6e-add1-475a-a4b0-029287390bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a40bb37-c8cb-4ec6-afad-27e8bf42dfd6",
        "cursor": {
          "ref": "0095c149-99ee-4d82-86de-a96fcc4b4e59",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a21fdc7b-c039-4744-9b83-f227f3673c5a"
        },
        "item": {
          "id": "6a40bb37-c8cb-4ec6-afad-27e8bf42dfd6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d675c4c9-dbce-44e8-a228-34f8b5e0e6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ca8750-aba6-4224-80c6-39daf7993513",
        "cursor": {
          "ref": "d4ce1617-afc1-4d66-9364-f14759018198",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2f56bcfa-eb90-4250-9226-4eccb91965ac"
        },
        "item": {
          "id": "e1ca8750-aba6-4224-80c6-39daf7993513",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0c0965a2-df10-4525-92cd-7baf6fb36e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8507de7-79a6-480c-8496-ff895792e976",
        "cursor": {
          "ref": "62c64714-e106-43a7-be82-c5aafca15d42",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c3802f81-2c5f-4a36-a46d-66ecb0243eeb"
        },
        "item": {
          "id": "f8507de7-79a6-480c-8496-ff895792e976",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "397d2b02-2832-4d40-bf43-cb13d73a5da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a38c95-186c-4918-8960-094b74f82ae9",
        "cursor": {
          "ref": "4288ecca-ca70-4c83-b01c-ab6410ebf7e7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4e5e6451-c675-4b05-b106-f15e2ed6c518"
        },
        "item": {
          "id": "81a38c95-186c-4918-8960-094b74f82ae9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8fa0ff17-1584-40d7-abdc-846262e4522d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bf75bd-ef83-4e94-b5a6-53968f26a59d",
        "cursor": {
          "ref": "8653fd1b-75eb-4d7e-85e2-ea286d7fe22c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0064ba3c-cc99-4bf5-923a-ae5e171055f3"
        },
        "item": {
          "id": "77bf75bd-ef83-4e94-b5a6-53968f26a59d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "221bf9c8-1b5c-458c-a8d6-ff97409b4cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4197fc95-bbe2-4951-af18-4837dd4eab7a",
        "cursor": {
          "ref": "ebd9371a-d1a8-4dac-9254-12e2aec5c02d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "baf249f0-efc6-4d31-968d-eae2a86c70c3"
        },
        "item": {
          "id": "4197fc95-bbe2-4951-af18-4837dd4eab7a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "da5d9a23-bd93-42e9-97cf-5845f86ee363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6323cba7-45f5-4214-8621-e4532080b00d",
        "cursor": {
          "ref": "e727dfa5-f4e9-4bc1-9f55-b52e33d66c7f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cc5f261b-d855-4d35-8e37-4f30b5df5ee1"
        },
        "item": {
          "id": "6323cba7-45f5-4214-8621-e4532080b00d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d830dce3-b50f-4b95-b64c-34559e912729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a77b793-aa38-46c9-ba17-1958057ecbb2",
        "cursor": {
          "ref": "c5e07ec6-e984-4a3e-aacc-9acc6c27c763",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1eebf4e6-02ef-42e1-af5e-e5a09c77e77f"
        },
        "item": {
          "id": "1a77b793-aa38-46c9-ba17-1958057ecbb2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a49c7715-c319-4103-bf0b-5f977b5fd72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f259103-dee0-406c-a22d-5e48c66b57c2",
        "cursor": {
          "ref": "d010b7fa-42bc-44d7-bd4d-8e1d58fc6550",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "12310370-6334-407d-90f9-ee755eea2e00"
        },
        "item": {
          "id": "2f259103-dee0-406c-a22d-5e48c66b57c2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2a2e1770-5604-4467-80f7-3738fa326232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf489a34-7a74-4455-becb-a0654c853890",
        "cursor": {
          "ref": "a7309583-bae2-4799-9ed5-d1597f9f99f3",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "414768e1-8135-4b72-8c69-e53e0ae70388"
        },
        "item": {
          "id": "bf489a34-7a74-4455-becb-a0654c853890",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "873f9576-f4d3-4b91-9e1c-56b68aa6af7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1caa800-0b07-419e-8e02-0a9e90213569",
        "cursor": {
          "ref": "aa440ad0-fc42-4a49-ac0d-96db052b4e6a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f19c30b6-34dc-4009-813c-dc34f5a46600"
        },
        "item": {
          "id": "e1caa800-0b07-419e-8e02-0a9e90213569",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8b7059dd-ed15-49af-80e1-327ebfe12843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51a49c1-f985-4c68-817f-c10795440691",
        "cursor": {
          "ref": "9cfc0e4a-c805-4bae-bb9b-a01e7230e489",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9d400e5c-cc30-4db9-83e5-40934ec557dd"
        },
        "item": {
          "id": "b51a49c1-f985-4c68-817f-c10795440691",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "32f202d2-ed2c-4847-8153-695ba54b8529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a99fb0-b871-472c-b7f8-5b3c2208d584",
        "cursor": {
          "ref": "ec994cf4-2370-4061-9624-799ab4cdb429",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e7441a49-998a-4e64-8518-30d32aede034"
        },
        "item": {
          "id": "06a99fb0-b871-472c-b7f8-5b3c2208d584",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e6ce5153-2da4-4d38-98ac-3763117bca6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf51d8f-fc02-4009-8437-b1f2bf57f630",
        "cursor": {
          "ref": "5e13d0e7-cc94-4a30-b2e2-c75337e6e493",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ba977df3-ca07-4e2c-9a9c-0c0602214520"
        },
        "item": {
          "id": "cbf51d8f-fc02-4009-8437-b1f2bf57f630",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "33e1c876-23e9-4301-b9fb-94050404b2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14b972e-fda7-4443-ab42-626c03933627",
        "cursor": {
          "ref": "3d7045e5-97e2-4dcd-b2f7-213514c5306a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ab6b2b91-6f99-4dbb-96cc-fcc1dae9a84c"
        },
        "item": {
          "id": "a14b972e-fda7-4443-ab42-626c03933627",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "586e8d3d-0d62-4ad1-9f0b-a9485b564edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584d44b8-ec57-412b-87ac-565523965cb7",
        "cursor": {
          "ref": "77d21677-7991-457d-9107-302b3251a5a8",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1ac730f0-1a18-43c4-a6da-adcd12116a49"
        },
        "item": {
          "id": "584d44b8-ec57-412b-87ac-565523965cb7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4e0ff1d8-3018-41a5-8dfe-e12e260e5234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94686512-b232-4a4f-9da8-74c788c9ed65",
        "cursor": {
          "ref": "e0fdaa04-241a-4db2-8c42-429dfb4e7e17",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "95a5908a-daa9-467d-bdfa-98e29ddd3d1a"
        },
        "item": {
          "id": "94686512-b232-4a4f-9da8-74c788c9ed65",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "eb4dc653-1cdd-4420-b3b1-e5539222a592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2af7832-904c-46fb-8135-3cc308f06101",
        "cursor": {
          "ref": "9765d5a1-b073-413d-b065-6e8cdb5341b5",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8d049979-6c33-4a58-b676-6cbe4ffdfb81"
        },
        "item": {
          "id": "f2af7832-904c-46fb-8135-3cc308f06101",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "656a4df1-c61a-4bd5-9987-967ac6613030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3256d0d-8735-4c6a-b543-1f6bb59bebaf",
        "cursor": {
          "ref": "25615ea7-0d8b-4454-ba46-0890793c4767",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b3a95d47-2bf6-4ca5-9656-2f46bd70517b"
        },
        "item": {
          "id": "a3256d0d-8735-4c6a-b543-1f6bb59bebaf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ef216780-980b-4080-a3f9-8a39edd1ddae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603552c3-b13c-41b5-9cc6-0798c30826e1",
        "cursor": {
          "ref": "de53769e-b88a-4782-8146-b658ca9d6b35",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c5f240a8-2f41-40eb-bc19-97eba97290e7"
        },
        "item": {
          "id": "603552c3-b13c-41b5-9cc6-0798c30826e1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a431feff-4710-4b0e-916f-b706f01cf87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a40903-7425-4c75-ac96-3deb498e9517",
        "cursor": {
          "ref": "e9771b80-5633-4699-ad07-7fc6b68fdfc7",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "89b2d71c-2229-46ee-a0c8-aca408d28a60"
        },
        "item": {
          "id": "76a40903-7425-4c75-ac96-3deb498e9517",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a2f78cd4-6fbe-4b06-a074-8e0c09a9b82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455f0653-5e98-49f0-baba-ccf6440fbe8b",
        "cursor": {
          "ref": "30996aec-b27a-4071-937c-ae535924068e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "de8a30cf-f11e-4fde-a551-0c897103893c"
        },
        "item": {
          "id": "455f0653-5e98-49f0-baba-ccf6440fbe8b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "eac628f6-2702-4249-a66b-cb1a64c2d84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46de298d-d59d-4f8d-b36f-29b91e2220a9",
        "cursor": {
          "ref": "00ef2b54-a4a5-4dd0-aab9-dc310443f88d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "524ee9a4-4744-4f02-9c78-3099e171210d"
        },
        "item": {
          "id": "46de298d-d59d-4f8d-b36f-29b91e2220a9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ab789e95-97e8-40fb-8d29-eba42f8e10a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8002dce5-33ab-4878-b372-71f6669f400c",
        "cursor": {
          "ref": "acc31b67-5fb3-4360-b7ac-c89e4ea1c265",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9e816070-70db-46f7-9188-672c229b191d"
        },
        "item": {
          "id": "8002dce5-33ab-4878-b372-71f6669f400c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "021abf51-c889-4629-9a19-efe2a70d4ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc88571-6f58-44aa-88a4-f0308ff15a44",
        "cursor": {
          "ref": "b71196a8-8a28-4807-b1ac-65a29eac3079",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6cfcd7bb-ee29-4289-bb30-1b2761033f53"
        },
        "item": {
          "id": "bdc88571-6f58-44aa-88a4-f0308ff15a44",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fba91359-9de3-4d50-9f3b-717cf61ecfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cfde90-5ef2-4270-a392-98214334bb9c",
        "cursor": {
          "ref": "36e98fa3-0e1b-41d8-a3bc-4369d0490d2d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4964759a-80ce-4223-be31-96ff69ac1ebe"
        },
        "item": {
          "id": "d8cfde90-5ef2-4270-a392-98214334bb9c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8659a57d-3a47-42b9-92c1-e53728264754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627ba55e-2ab1-4ecd-94eb-3c4a32a84a82",
        "cursor": {
          "ref": "4dc6c7bb-4819-415a-9c76-be614d7f75b3",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c9b0931a-43b4-4731-9441-8d47a14d2c78"
        },
        "item": {
          "id": "627ba55e-2ab1-4ecd-94eb-3c4a32a84a82",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "802fe284-e43c-49f0-bcb9-1e4a87bed180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b20ff59-6452-4b42-9224-c872cbfe6c84",
        "cursor": {
          "ref": "ee5df4d8-b7eb-4d6f-92b7-2ce65f09d537",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fbca2f96-11de-4f71-98b0-8f8dc11790ce"
        },
        "item": {
          "id": "6b20ff59-6452-4b42-9224-c872cbfe6c84",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "67c142ed-b091-4e5f-97b2-87e65459f8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c762ec-d7c2-49a6-9096-da577dc7f30b",
        "cursor": {
          "ref": "e69539ec-b447-4c33-952a-9b74e96fa11c",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "56ea4d19-23e6-4863-8202-279937288412"
        },
        "item": {
          "id": "29c762ec-d7c2-49a6-9096-da577dc7f30b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a9574041-f7b7-4a87-8143-4dcb91b28af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d978a4-f44d-4adc-bd99-605b98c6ad8e",
        "cursor": {
          "ref": "c31df013-5525-485d-923e-8628dde77daf",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cfccb90b-e7fb-4392-9c45-abe74f329e6b"
        },
        "item": {
          "id": "c8d978a4-f44d-4adc-bd99-605b98c6ad8e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "15b379c4-3a49-48fe-ad75-b12cd34f2bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a029484b-4992-4410-afef-d50a798e97db",
        "cursor": {
          "ref": "a75371eb-7d70-481e-a38f-2900639e0a01",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "476637fe-5c40-41d4-9017-e679a7b486ec"
        },
        "item": {
          "id": "a029484b-4992-4410-afef-d50a798e97db",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ad66b7e4-647e-44a0-a474-5fc4467c8c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80c752b-c29d-479e-88f6-69009f3a17fb",
        "cursor": {
          "ref": "494455cf-f5b6-482c-aa06-88ab39b1bf06",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d126806a-756e-42be-aba0-ef8ac5c267f7"
        },
        "item": {
          "id": "e80c752b-c29d-479e-88f6-69009f3a17fb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fe5e3eff-837a-4286-97ef-a234f39684e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e848cf5-f434-46dc-a2cf-be6addac92ba",
        "cursor": {
          "ref": "2bc2e150-c6ad-42f2-84d1-1db3c0499b60",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b5a58e2c-9ffb-4514-9a9b-3f208084a45e"
        },
        "item": {
          "id": "1e848cf5-f434-46dc-a2cf-be6addac92ba",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "99dab798-4f59-44c9-b9d7-fad08ed2ac13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc4c5fa-3ae3-4a5c-b01a-b2f5856514ec",
        "cursor": {
          "ref": "18570c75-d23e-4052-bd51-62c8720cf55d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6d1c5064-a550-4f06-9b22-6f90a4f2ee94"
        },
        "item": {
          "id": "3dc4c5fa-3ae3-4a5c-b01a-b2f5856514ec",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5cc6fd0b-8f8b-4460-b067-36dd9bdca73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6e1efe-8e12-40c1-b60f-8a93692f7d4d",
        "cursor": {
          "ref": "156a14e6-c125-432d-9e8b-73afb96244fc",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dceaf2bd-6125-4152-b291-53151a889776"
        },
        "item": {
          "id": "3e6e1efe-8e12-40c1-b60f-8a93692f7d4d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "43f52670-e15a-4008-8b2d-58defc762527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c497db33-0a60-475b-9a56-c81730a46071",
        "cursor": {
          "ref": "439482e9-f3f1-4984-952a-707f6194e23d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fb7acead-24a0-42dd-9435-44f82d8a7a7e"
        },
        "item": {
          "id": "c497db33-0a60-475b-9a56-c81730a46071",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1f63e7bc-fbc1-421b-b3d0-2b9b469a9b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d581672-db05-4ded-96cf-6a40693c1a2f",
        "cursor": {
          "ref": "a520bb63-cccb-44c0-bbb4-de50041f803a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5c5d5287-b130-4c94-8911-78366db167b2"
        },
        "item": {
          "id": "2d581672-db05-4ded-96cf-6a40693c1a2f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6a7041d1-fbf9-40ed-b0bc-8f688161a164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c26bc8-4bec-4396-af14-9ae39aa711a8",
        "cursor": {
          "ref": "f886050b-2d43-4c09-a3d5-33231de8c01d",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b1b76e4a-498a-44dd-9c39-addab00645ac"
        },
        "item": {
          "id": "50c26bc8-4bec-4396-af14-9ae39aa711a8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a2ac6e58-5774-4839-800c-1b1c57c0d4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b53f841-b071-4141-801d-92ea1978e504",
        "cursor": {
          "ref": "d1880f84-7e16-4062-9560-17113ce4391a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f39cb79f-d9c7-428d-814f-5fea8e022bdc"
        },
        "item": {
          "id": "8b53f841-b071-4141-801d-92ea1978e504",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1dc10f0d-1e52-48ea-b7f0-4f36dc8d227c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4666d8d1-5c60-4775-8217-161b3ac644ef",
        "cursor": {
          "ref": "94c5a9de-a3e8-48be-adb8-87e1c521e37a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "00873481-3f4d-4692-9256-74a4c40f31c0"
        },
        "item": {
          "id": "4666d8d1-5c60-4775-8217-161b3ac644ef",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9ca00171-ccc6-457e-859e-541c204030b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d1d8bd-26f6-48e2-a133-95ac18fb3a49",
        "cursor": {
          "ref": "9afd5444-581b-4858-81bf-5db4ab865269",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ce0c6d18-4cee-4311-b067-e7f05af0bd0a"
        },
        "item": {
          "id": "20d1d8bd-26f6-48e2-a133-95ac18fb3a49",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "91c6be7a-4a60-4114-ab8a-5a28cbd94831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d10c98-7953-47a1-a779-2bb54ed6d782",
        "cursor": {
          "ref": "435d4c7a-a94d-4b17-9521-3429242fa581",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ff100c46-9a4d-4ef8-bf9f-779c99f590d5"
        },
        "item": {
          "id": "f4d10c98-7953-47a1-a779-2bb54ed6d782",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "836c3929-b7f0-47e0-a59f-87a29343efde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d7bb2d-628d-475a-b25e-cc136b5243a3",
        "cursor": {
          "ref": "906f992a-570d-482d-bf5b-22b4c557bd51",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d5c826f7-c9d1-47f5-b893-f2f7a050c678"
        },
        "item": {
          "id": "45d7bb2d-628d-475a-b25e-cc136b5243a3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "03fa917c-11fb-46ed-9357-7be6dfe85b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3917b62a-c6b6-4229-91e8-7c67c95c6818",
        "cursor": {
          "ref": "b5a77e72-54bd-4fc5-b61d-a5bafaea9e33",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7829c594-ca82-44e9-b63b-77a830e9611e"
        },
        "item": {
          "id": "3917b62a-c6b6-4229-91e8-7c67c95c6818",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9002890d-583b-4664-b925-28fc526d3a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda35cdd-6a3e-426c-9415-954ff9fee50b",
        "cursor": {
          "ref": "9e3bd284-c9bf-45b8-a7f0-b944f9cfeb70",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "abfbf74a-f950-4a87-8a5f-f28f94554e1e"
        },
        "item": {
          "id": "cda35cdd-6a3e-426c-9415-954ff9fee50b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4b5acf62-9cc0-4c09-b49e-5a24ce2c1361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a374a11-bfd0-408f-aa62-da1644767937",
        "cursor": {
          "ref": "5df01308-3c1b-4441-865f-ac8fe182088e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "64362e3f-4f86-40f8-8250-e82570b5a046"
        },
        "item": {
          "id": "9a374a11-bfd0-408f-aa62-da1644767937",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9b92c9d1-5319-4ac6-b169-9050f3e1c17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d34280-7d69-4ea8-8e52-e7c78c20bf3f",
        "cursor": {
          "ref": "f9cba2a5-f7d4-40ab-8254-793d859bd3cb",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "58485d15-f345-4781-afdc-136304d78b19"
        },
        "item": {
          "id": "c3d34280-7d69-4ea8-8e52-e7c78c20bf3f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3e0af9b6-5e76-4267-8c3b-7636c4471b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ab3090-ff94-4d37-b8b7-545982ebe81a",
        "cursor": {
          "ref": "214a89f4-ace5-48be-9c66-e77d5efcdcd9",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5034ed84-5740-4f5a-bc44-6a2c8ed4e684"
        },
        "item": {
          "id": "67ab3090-ff94-4d37-b8b7-545982ebe81a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "608f611d-f7b7-4a08-9221-83f1dc8b0d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a810f9b-a58a-480c-a606-4a621a3f3f94",
        "cursor": {
          "ref": "e9c7b1e4-a464-4d36-8988-f5dcdc87631f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7c267da2-088c-4d6b-9697-f242419f07c7"
        },
        "item": {
          "id": "1a810f9b-a58a-480c-a606-4a621a3f3f94",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "92bc60d1-ec8a-4383-a9f7-32b249910ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52992c40-ef60-4847-9dc4-60ac42e0907c",
        "cursor": {
          "ref": "a4386a87-33cd-42a9-991b-6ec8a90472b9",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b1d9bb52-4b7c-4e49-8576-f013d042a6a9"
        },
        "item": {
          "id": "52992c40-ef60-4847-9dc4-60ac42e0907c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "332fcdce-76a9-42ee-ad6f-5623194b84b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21631359-922c-416d-8ebf-aa148112c992",
        "cursor": {
          "ref": "9c5995cc-dc27-4b92-a88a-34297dfdb6cc",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7364b995-fd4e-4037-af36-bd72d755f8ec"
        },
        "item": {
          "id": "21631359-922c-416d-8ebf-aa148112c992",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ff54f4aa-8e3e-459b-ac68-3ecb337c722c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b94ab82b-ce7c-4867-a3f8-5293560d6d51",
        "cursor": {
          "ref": "34cd9550-1938-4e62-ab23-4a607d6d4717",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b2e9f33c-a983-4b01-818f-c74b9e7d79f7"
        },
        "item": {
          "id": "b94ab82b-ce7c-4867-a3f8-5293560d6d51",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a1a688ab-5689-4aba-ac99-99202bdd5726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "08ae8345-55fc-4ceb-b31f-b5c18adf9cf5",
        "cursor": {
          "ref": "50520b37-b35a-46b0-b759-e0af65eceb2d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7c19d8af-dba3-4581-a89d-5f11098f7d53"
        },
        "item": {
          "id": "08ae8345-55fc-4ceb-b31f-b5c18adf9cf5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "18bcc844-0963-4ec0-ab4c-6e5e8e0dd588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ec64df2c-f7d2-4356-9c4c-12d710c4b3ba",
        "cursor": {
          "ref": "f3b770fb-ef52-4a52-b296-2853657cce70",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "459c12eb-f5c6-4e01-b174-57e326ef0400"
        },
        "item": {
          "id": "ec64df2c-f7d2-4356-9c4c-12d710c4b3ba",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bf85906c-0032-47c6-8d3b-4ebff9b83de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9c3d4e75-c382-461a-b4e2-8d9874ea8d6c",
        "cursor": {
          "ref": "664c0e3a-fc2c-4e5d-9b33-936a69473938",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f2b8a941-1ee2-4ee3-b26e-9cc880e457dc"
        },
        "item": {
          "id": "9c3d4e75-c382-461a-b4e2-8d9874ea8d6c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9561999d-e8a1-4680-8485-94712bd43ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "b3411e25-16d9-4c67-a649-1097a30a214e",
        "cursor": {
          "ref": "acce5651-eadf-44ea-a416-939bc683d50e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a5d46463-1331-4c5b-bf1f-366dce779dd8"
        },
        "item": {
          "id": "b3411e25-16d9-4c67-a649-1097a30a214e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7ed70308-3e28-4494-a5d6-adeaf7a9124e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ef9b0e4b-5322-47ce-8ded-90ef7f631c9f",
        "cursor": {
          "ref": "6c104894-f2b2-4521-9dc2-44ac877e3c18",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "abb6334f-21a2-491d-90e0-2205cfd12ee8"
        },
        "item": {
          "id": "ef9b0e4b-5322-47ce-8ded-90ef7f631c9f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0e93fba6-fd76-4fa4-8af3-6c80881bc3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8f37658a-fc4a-45fd-b65c-7297abd13508",
        "cursor": {
          "ref": "65f47b98-c355-4581-a436-54b9e851722f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "eb932042-cf26-49e7-95b9-70e4a12ee3a9"
        },
        "item": {
          "id": "8f37658a-fc4a-45fd-b65c-7297abd13508",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "afcf45db-4d7d-4ac7-b12f-8b0e7324d4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61b3e96-7863-42ad-a089-703323b2e26f",
        "cursor": {
          "ref": "55f95823-e302-4d3d-b5ef-8703b044944e",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8499f332-79da-43dc-a6d1-83757ebb0375"
        },
        "item": {
          "id": "d61b3e96-7863-42ad-a089-703323b2e26f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "68ab881b-a4e2-4ebd-bb11-7e689bb5a43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0eab4da-8f3e-4c0a-810f-fa9bff68f5bb",
        "cursor": {
          "ref": "07c4a4e3-1123-4d8d-9ff1-70afca8fa262",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b04a7db6-8267-4b17-8d1e-d8fc8e410357"
        },
        "item": {
          "id": "d0eab4da-8f3e-4c0a-810f-fa9bff68f5bb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7dbe9dd1-d789-44e2-807a-85a173e23273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71d3368-35cf-4434-9d1a-4e5c5ac376aa",
        "cursor": {
          "ref": "3556a1c1-d6fe-4f83-b91d-9900f545e03d",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "16046e31-a504-4d76-98be-db582c752b66"
        },
        "item": {
          "id": "d71d3368-35cf-4434-9d1a-4e5c5ac376aa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e9fa2835-77d7-40b5-876d-a48d44b7c69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6c4117-b369-4abd-8f11-f94eda750b42",
        "cursor": {
          "ref": "a4ce4bfb-c6e8-4663-9e4b-f042e8b6eab4",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "28ca48fc-b857-48c9-bba3-6708184eaefe"
        },
        "item": {
          "id": "2f6c4117-b369-4abd-8f11-f94eda750b42",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1883ce9b-34a8-4cc9-8169-3c7427a769b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0336c274-05fd-48a6-969b-c6ca31b05734",
        "cursor": {
          "ref": "1b3c07a7-46e3-4749-8723-7e1eb6750790",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "acd5a681-7b7c-4f78-9f88-cf15d21ac273"
        },
        "item": {
          "id": "0336c274-05fd-48a6-969b-c6ca31b05734",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "153e8114-7012-440f-85be-57ddb579ed7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19afa996-c452-4f5b-b510-d7f9e92af588",
        "cursor": {
          "ref": "d73d0b26-bbb5-4117-bdee-7a7526e785f7",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "40d9ee90-60c0-4b44-9acf-eb432c61e78c"
        },
        "item": {
          "id": "19afa996-c452-4f5b-b510-d7f9e92af588",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a417abec-f55b-455b-a3fe-388cc5e326f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c238231-92d3-4b94-866c-ed2343393b2c",
        "cursor": {
          "ref": "ce944994-8c72-4b56-8af7-217edcd52c2c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "89cfd2e0-a789-464a-86d3-24155550b971"
        },
        "item": {
          "id": "5c238231-92d3-4b94-866c-ed2343393b2c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9d754606-18a1-4755-82c9-af77d4fee2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492c4f83-5f67-4744-a289-d3ea2d58ca52",
        "cursor": {
          "ref": "1f99b134-30af-420e-b62c-547a8656666b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "24c747cb-681b-4c3d-a871-a5b22b9353a3"
        },
        "item": {
          "id": "492c4f83-5f67-4744-a289-d3ea2d58ca52",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "97548ddd-8c1f-4fd3-846a-17fc21e82b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a194e9-97c2-4a37-a29d-9d13264921d7",
        "cursor": {
          "ref": "fe03ce06-82bc-42a0-9b36-8aff865c5ba4",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0d4334a2-f245-42fb-a6a8-f7c538a52072"
        },
        "item": {
          "id": "b9a194e9-97c2-4a37-a29d-9d13264921d7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9a5399f8-fe66-43bb-922d-045cda8d9da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592933a0-0922-412f-bae4-e92974ac2d99",
        "cursor": {
          "ref": "1e638a01-a8d6-4763-91e1-516e438bcd54",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "aba260d3-1078-47be-81a0-1583c740f6b3"
        },
        "item": {
          "id": "592933a0-0922-412f-bae4-e92974ac2d99",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b15762cf-71c1-4547-bfa1-0703bb394553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95397611-3eeb-4dc2-b5ca-1090b6cd36a4",
        "cursor": {
          "ref": "2499c6c9-3148-42ff-bc16-6644ca7f6dd3",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2f49ca21-a924-4213-a8be-6341ffd57131"
        },
        "item": {
          "id": "95397611-3eeb-4dc2-b5ca-1090b6cd36a4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8eae414e-fe01-42e5-bb67-65e812c32bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1b6f59-1123-4bdd-ae8c-46e1d630bb21",
        "cursor": {
          "ref": "23a5d0d7-e1ef-4b90-9912-0209ec2d9e1c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c60da84a-43e7-4666-84f1-e82666fb3eaf"
        },
        "item": {
          "id": "bf1b6f59-1123-4bdd-ae8c-46e1d630bb21",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b6efd59c-bba2-4eaf-b70d-49e266019f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d5777d-bb0d-49f7-a5ca-791fb5f931ce",
        "cursor": {
          "ref": "72839e7d-0755-45a4-983b-24e4802f45cf",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "71795df3-2f11-458f-a967-796f91385dba"
        },
        "item": {
          "id": "62d5777d-bb0d-49f7-a5ca-791fb5f931ce",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e51d5191-fe2f-4342-a194-e95d7eaa37ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30a0784-6690-4b18-936a-976589a70784",
        "cursor": {
          "ref": "cada5a6f-9d49-41d4-a938-1e4d8cbef38f",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2f032266-c9cd-41a6-9a3e-2ae6f8be9003"
        },
        "item": {
          "id": "e30a0784-6690-4b18-936a-976589a70784",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2f586cca-bf15-48ff-88bd-513cc16ea58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0444d6-ad27-4bf1-9364-80fcc853ef44",
        "cursor": {
          "ref": "e76d6e2d-9303-4766-bf98-a2994307f7ea",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cd6262bb-2d06-40be-af0b-bc65f756228a"
        },
        "item": {
          "id": "1c0444d6-ad27-4bf1-9364-80fcc853ef44",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "29057bc8-bc14-47ae-9008-29d896b562ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b26e02-244d-4fe2-b1c9-0deef6c23b64",
        "cursor": {
          "ref": "15025d0d-b9e9-45bb-8eee-06d473faa3e7",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "39c268c8-5e31-4741-ae13-e607886841ff"
        },
        "item": {
          "id": "45b26e02-244d-4fe2-b1c9-0deef6c23b64",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "63d39961-2e3a-4814-95a1-190a248969ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c582c7-7397-47c2-bc92-91ab52844df5",
        "cursor": {
          "ref": "4f8e44f1-ba03-4398-b492-928e0b640afc",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "79e52f56-2c83-4d00-be35-502fb9b5e33a"
        },
        "item": {
          "id": "49c582c7-7397-47c2-bc92-91ab52844df5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b041429c-cc78-436e-b784-b5756bf5067c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ca601c-83ed-482e-a192-e607e19ddde5",
        "cursor": {
          "ref": "d1fcef17-eee3-467b-b124-22f141d5bef8",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a38c346b-b29f-4dac-98cf-8c66a2999e3b"
        },
        "item": {
          "id": "17ca601c-83ed-482e-a192-e607e19ddde5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "458cc405-b79e-4b67-9740-c9eff220a377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f8ba88-5f68-4ba4-b487-7a85e37019f0",
        "cursor": {
          "ref": "f3aff8f0-1cb3-4186-9d34-a42ea7a185c2",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dee0ba8a-d1e6-42c9-b3bf-a40b4c3dc7d1"
        },
        "item": {
          "id": "81f8ba88-5f68-4ba4-b487-7a85e37019f0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b9dc4606-69d1-4efb-8872-18c66f8d6a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb71695-04d0-4efc-80bf-a223f75a2f21",
        "cursor": {
          "ref": "e3f42c39-e86a-449e-bb80-9d5796fad7d7",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6ec31ef1-ecb0-4cec-accc-85afbba3abb8"
        },
        "item": {
          "id": "ccb71695-04d0-4efc-80bf-a223f75a2f21",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ecf94392-a86d-4328-b2da-53983d8b2af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57265b2-53ba-4f89-9cd8-88169b366a64",
        "cursor": {
          "ref": "84a2467d-8fa9-4ad7-9b4c-043ea3f80c67",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2716caa4-2908-4a8a-af29-13f96ca7aca1"
        },
        "item": {
          "id": "c57265b2-53ba-4f89-9cd8-88169b366a64",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "390ef516-2234-4429-95f3-dba8cbec5b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c980306-54b4-444a-9f14-8d1bf0fa8778",
        "cursor": {
          "ref": "a0f3a410-903f-4148-8fa3-51941ce68a13",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ef964a6c-22a4-464e-9679-f0449c7f83f4"
        },
        "item": {
          "id": "0c980306-54b4-444a-9f14-8d1bf0fa8778",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ce97954c-365f-4bd6-8c2e-e1060eba6fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a850e6-5947-4245-a05b-073ec35e28ca",
        "cursor": {
          "ref": "43b32c8e-376e-4a79-aeac-20a9a9436e65",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fc82b213-4ded-400f-953a-0ede1b5c49d4"
        },
        "item": {
          "id": "48a850e6-5947-4245-a05b-073ec35e28ca",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "89b77c3c-e25e-42bb-b615-7b1d53a075b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c5641c-751b-4108-9141-33731b377cbb",
        "cursor": {
          "ref": "71c247bd-ab7f-4377-8a21-d5da08212e9f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "397a7d86-267a-40f2-b4fa-ad07dd6a5d3a"
        },
        "item": {
          "id": "c2c5641c-751b-4108-9141-33731b377cbb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0106c2d4-f5f5-4421-8c88-05827ddcab16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2295dcd2-e964-4e51-9caf-eababeb4189b",
        "cursor": {
          "ref": "6acb02be-70a7-44e8-a1f3-e67be8fa8598",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "12816748-e7e2-4b35-93ca-5aa3db457664"
        },
        "item": {
          "id": "2295dcd2-e964-4e51-9caf-eababeb4189b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6fbe55fc-88f0-455e-85e6-9f4fb7dac2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024580d4-09d4-42ae-9944-0075ab936662",
        "cursor": {
          "ref": "0bb72c91-e038-4c5d-8a2f-f844c5757674",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "03d43fcb-f69d-468a-974c-c4a08bdf7f09"
        },
        "item": {
          "id": "024580d4-09d4-42ae-9944-0075ab936662",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "786d323b-a256-417f-a240-3d849834ebd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d28f37-6b67-4f93-89b1-f5f4700df7c2",
        "cursor": {
          "ref": "6ee231c9-538f-41b1-b4a6-7786a3429f6a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f0b23399-d544-4136-97ab-c05a76f23a77"
        },
        "item": {
          "id": "14d28f37-6b67-4f93-89b1-f5f4700df7c2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7575d07b-8f18-40a3-9ff4-eea4499de75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fe3586-4aec-40d8-8c38-78e49ba3e077",
        "cursor": {
          "ref": "a7787a82-5a72-4d74-b76d-984c1cfed0e7",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f0717463-e5ea-4a79-b92d-ee2d7973b08f"
        },
        "item": {
          "id": "37fe3586-4aec-40d8-8c38-78e49ba3e077",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ea8598e3-257d-4bc2-b16d-4724e1c2b2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a2d561-085b-4987-8bf5-dfda94b67024",
        "cursor": {
          "ref": "485f909d-5e12-43ed-bc6b-08cb2ec8f3fe",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4bc17c23-3b08-44b2-8cff-e26d39faaadb"
        },
        "item": {
          "id": "69a2d561-085b-4987-8bf5-dfda94b67024",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "442b5ce7-294b-40c0-a6f6-e5e25a5e2c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47eddb5-7845-4966-912b-e32eba72c7c1",
        "cursor": {
          "ref": "31c83268-b014-4ce2-bdd0-8e59a6e9d027",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "769a054c-14c1-4619-946d-ac78e666af67"
        },
        "item": {
          "id": "d47eddb5-7845-4966-912b-e32eba72c7c1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "98b02d2c-fa62-4e62-b1ba-a23f187c9b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f411d0b-7cea-462f-a935-eda7507f6a01",
        "cursor": {
          "ref": "9a664949-b6a3-4818-b26e-e3cdeb970e7f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6d64b22e-dccd-4845-9802-74086378f1c2"
        },
        "item": {
          "id": "5f411d0b-7cea-462f-a935-eda7507f6a01",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "aee6d5e2-1f87-4bcb-a03c-4d10d408ed8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aba3bfc-4bbe-4f12-90dd-319e6b8891d8",
        "cursor": {
          "ref": "6664f38f-77e5-4e55-8c7c-80d56b2c8e37",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f42b73ab-5d79-4b08-b6a3-69ea537e4e54"
        },
        "item": {
          "id": "4aba3bfc-4bbe-4f12-90dd-319e6b8891d8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "615cbe20-891d-4868-ba9a-f1fd54e39128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b384589-6e38-4e43-a99b-7f17265681f6",
        "cursor": {
          "ref": "9676820e-8ba1-4c82-8d78-32be68fc6d51",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bcc222c0-0086-4a7e-a32c-76ff28d25a3a"
        },
        "item": {
          "id": "9b384589-6e38-4e43-a99b-7f17265681f6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3db77d0b-cdea-4b33-bfa5-cac433789017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b188b30d-8e88-4d91-8766-bd6dadb2be9c",
        "cursor": {
          "ref": "b5c2bd26-8f20-40f5-ba99-65d3ea4f93fe",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "735a2ba2-8fb2-4f1c-8e8a-1baf83f1752f"
        },
        "item": {
          "id": "b188b30d-8e88-4d91-8766-bd6dadb2be9c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ca4385cd-406e-4b4f-98ec-ac89644af634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476a32ee-3841-4bb0-b23e-f009b81f7aa2",
        "cursor": {
          "ref": "2e3fe170-2819-4cb1-9e73-f58bfdf91190",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4424f012-3502-4fb7-9601-5380debcb7dc"
        },
        "item": {
          "id": "476a32ee-3841-4bb0-b23e-f009b81f7aa2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "88468bde-b3f9-4df4-bb65-a8b7e9791872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5024e381-ba0c-46db-9daf-707c5ff0aa87",
        "cursor": {
          "ref": "b0b00c74-5ae6-47f6-8de7-1dfe161ae0c5",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "383f35cf-2ed6-466d-bc37-1f8351990a28"
        },
        "item": {
          "id": "5024e381-ba0c-46db-9daf-707c5ff0aa87",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d6cbec7d-adf9-4ea4-946c-f4369c214682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46c3c2e-10c2-4770-9539-b5ec2036352a",
        "cursor": {
          "ref": "92a7a637-d7f5-4928-94f6-7757c0dd7f3c",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7eab761c-1264-43ba-8277-a38df7cd99bc"
        },
        "item": {
          "id": "d46c3c2e-10c2-4770-9539-b5ec2036352a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2ec68e22-33cc-40b3-b878-d89747f212d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49879078-12bb-4877-96e6-0fa911c84de5",
        "cursor": {
          "ref": "e8b2e432-9ab9-41e9-9d92-f0b333ab714b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "124cf013-983c-4037-9ab9-d743be730553"
        },
        "item": {
          "id": "49879078-12bb-4877-96e6-0fa911c84de5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2387bbb8-d754-448c-aab4-89b842837d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd501699-bb11-4799-a913-3b27b87c2232",
        "cursor": {
          "ref": "2a7d9dc1-f9e2-4ec4-a828-d23f5dc82bea",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "631a92ed-7f26-465e-9111-a34fa814d3c6"
        },
        "item": {
          "id": "dd501699-bb11-4799-a913-3b27b87c2232",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "34934da3-d2e7-4ed2-a546-a6d82f32d75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da6526a-555b-43d9-9d7e-111a6f4dffb9",
        "cursor": {
          "ref": "71201f36-13b5-4f8a-a4cf-95de3c9e0dea",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8c2bb8ff-73e3-4880-a479-1875470a3087"
        },
        "item": {
          "id": "3da6526a-555b-43d9-9d7e-111a6f4dffb9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ececd0df-0d0b-442b-8087-d7bd24c832a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b460c0-dba2-4257-a39f-3afcb3435bfa",
        "cursor": {
          "ref": "a21df4dd-ea3a-43a6-825a-41235f153d3e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "92da500a-2fec-45b7-938d-3321b642f3c9"
        },
        "item": {
          "id": "e8b460c0-dba2-4257-a39f-3afcb3435bfa",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7ce95f02-0cac-4565-9143-ed9ae0e74501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b354610-73ea-43ce-9725-36fb3c3623d3",
        "cursor": {
          "ref": "c6306647-9b7c-4d44-a6cd-9cc7ddddf42d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "04691f88-82f9-4d7e-b94d-88004cf7d79a"
        },
        "item": {
          "id": "7b354610-73ea-43ce-9725-36fb3c3623d3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "98b095ef-7bb4-4ad4-8adf-d627c972ea84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696d608b-b5ad-473a-acea-9e90dc6653fb",
        "cursor": {
          "ref": "6485c181-35f6-4e8f-86e8-9aad191c8caf",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f2ad912b-2a75-43dc-8b1f-6954d25057f4"
        },
        "item": {
          "id": "696d608b-b5ad-473a-acea-9e90dc6653fb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "390e91d1-15a8-497b-bed8-3d7280f00754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267fef61-4813-4e74-a4c4-78c8e855975d",
        "cursor": {
          "ref": "7303f382-f5c9-49f9-90aa-04e111db1d47",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "01d8966a-0b09-42bb-b3be-08d1a1349fc9"
        },
        "item": {
          "id": "267fef61-4813-4e74-a4c4-78c8e855975d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "42ca135a-df56-49d4-88e7-065dc82a0a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637b225c-c7dc-4435-be8e-d1316b83bdf6",
        "cursor": {
          "ref": "48305497-5dba-4cb2-b871-d8283d6fd4a2",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "21a68dc6-9f45-444d-b7fe-ec4c60156c40"
        },
        "item": {
          "id": "637b225c-c7dc-4435-be8e-d1316b83bdf6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "386d3317-eed8-43f5-95ca-dce08c1e58b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e9869e-2bd3-43ad-85d3-a49a2edaaea0",
        "cursor": {
          "ref": "aba514d7-eea6-4e93-a034-64ed3243c633",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9986fa4a-9b24-4661-821c-6650d5220fa0"
        },
        "item": {
          "id": "00e9869e-2bd3-43ad-85d3-a49a2edaaea0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "af9cdad0-edc9-426d-b2da-653a6508a709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1b77c6-8f91-4cbf-93de-bdacfce11362",
        "cursor": {
          "ref": "6677556c-3a71-4b72-9f93-aff32e85e07f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8bbe318c-d251-40fd-a730-1a3ce0945a47"
        },
        "item": {
          "id": "3f1b77c6-8f91-4cbf-93de-bdacfce11362",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ed362b1c-b0a9-4a97-b7ab-9a7f32f59d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f2f838-f157-46b2-a69c-5fc19298d26c",
        "cursor": {
          "ref": "e54d7545-2fe9-4652-ae93-bb9be987a71c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2d95ddb7-bd70-40b9-aa34-0b6f7e1fdc74"
        },
        "item": {
          "id": "97f2f838-f157-46b2-a69c-5fc19298d26c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "781a90dc-ab80-4bbe-a010-da2bc4bc9332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5581e464-caf5-4f7f-95a8-ecf1ac2814a2",
        "cursor": {
          "ref": "9697ca27-93ee-47a0-9df3-5764747541c1",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ee28a8b3-e1ae-48ea-845a-3553b47ad846"
        },
        "item": {
          "id": "5581e464-caf5-4f7f-95a8-ecf1ac2814a2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "00784bee-46a7-4508-9d66-e22650a09ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a2f3b9-d97e-4d5b-b3a0-fc45e075c0ad",
        "cursor": {
          "ref": "2ba6ab45-2793-498b-bd4f-82970b3b2297",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2e615122-61fd-40af-82fa-0be1971f8eb4"
        },
        "item": {
          "id": "47a2f3b9-d97e-4d5b-b3a0-fc45e075c0ad",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dafad000-d513-48ed-a087-b6088ec7a7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fd8b35-a0c9-44ae-abe5-74b272426bf4",
        "cursor": {
          "ref": "e2b17d0a-2292-4472-9837-6e439af0db2e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3790dccf-2e8d-44b5-957a-9b94b2904278"
        },
        "item": {
          "id": "a9fd8b35-a0c9-44ae-abe5-74b272426bf4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e78d5615-f121-47cb-b296-0dea87668df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8eab18-f5a4-46f4-8155-41b7f03cb008",
        "cursor": {
          "ref": "a58ac26d-c37c-4d2c-8aa5-8824a5e2f815",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6de51000-701c-467e-b6c6-7b9130b135d4"
        },
        "item": {
          "id": "df8eab18-f5a4-46f4-8155-41b7f03cb008",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "873d4fe7-9128-4cfc-b309-29d043b0c8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452785d6-938d-4612-a9e6-635d3e2a81c0",
        "cursor": {
          "ref": "1fd78aa2-0c1d-4fc6-afc0-dd3b195bdebc",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d836713e-f1d1-4c35-98e7-459f90b387aa"
        },
        "item": {
          "id": "452785d6-938d-4612-a9e6-635d3e2a81c0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4c734886-3287-4e0f-86e4-40ee6f4367a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5754bd0-8a44-4933-ace4-37ed24ec9f0f",
        "cursor": {
          "ref": "063a780a-4e08-4cff-bfe2-4a958b7be19b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "09dac156-956c-4d37-9e38-508b259c1abd"
        },
        "item": {
          "id": "e5754bd0-8a44-4933-ace4-37ed24ec9f0f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "aede52c7-8df0-4d54-8f31-57b2a6789bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bce5549-c31b-464f-a6c9-0b499bab5a38",
        "cursor": {
          "ref": "afa7b527-2901-41e2-951e-40d5fb4acf72",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "65bc38f8-1e91-4d08-84c0-bde231c48462"
        },
        "item": {
          "id": "2bce5549-c31b-464f-a6c9-0b499bab5a38",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a3d126d1-eacc-41c5-aa6a-4a56e79a9adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0825b0-c300-4f41-a848-8d3f89c182b3",
        "cursor": {
          "ref": "9dac64f8-2892-4ffc-ab43-983d53f78e02",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a4ec58c5-e947-412c-a9be-57caa85552dc"
        },
        "item": {
          "id": "ed0825b0-c300-4f41-a848-8d3f89c182b3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "703e58df-f860-4f1c-8e28-f2bda07bb932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725e7c4c-d488-4294-99c0-6bab910201a3",
        "cursor": {
          "ref": "276605c9-6e3d-48cb-8cff-f967f64b0dac",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c28a7e7c-b801-4630-a6c8-c4210e2eac80"
        },
        "item": {
          "id": "725e7c4c-d488-4294-99c0-6bab910201a3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "dcc1db7a-db2b-4d30-b155-470160de7ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff29363a-08df-4a78-b637-e8bee7e6ffc9",
        "cursor": {
          "ref": "5fe621b3-7e75-44e5-9c6c-2f3894ed6a7b",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a5391fb4-4fbf-4ac3-b28c-3c937501bbc4"
        },
        "item": {
          "id": "ff29363a-08df-4a78-b637-e8bee7e6ffc9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ee6caa9d-752a-412b-9e07-2cd5f39ad8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1e9cae-dba8-4a58-b58d-7445a518ed55",
        "cursor": {
          "ref": "59cd5b22-e36b-47b4-bae5-70aea78ae4b9",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cf54ff9e-efd4-47a3-b943-4ddd4000426a"
        },
        "item": {
          "id": "cb1e9cae-dba8-4a58-b58d-7445a518ed55",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f79b6eb0-c835-4f75-800a-f14ff8e73082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270669cc-b1ea-4ed3-b40b-583d4dcff7f6",
        "cursor": {
          "ref": "d9e68b14-324d-4e9b-af9c-a88ae83e0732",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6fd48806-c951-408f-a63f-d16c28159417"
        },
        "item": {
          "id": "270669cc-b1ea-4ed3-b40b-583d4dcff7f6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "87a91868-2097-4204-83fa-df9dfaeaf7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e4ca8a-cdf6-4077-9fbb-d341ca714c57",
        "cursor": {
          "ref": "4c475400-68dc-42fe-8b59-6ea25c691d24",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "880e3460-27ac-4b1d-bb56-fa727dfad379"
        },
        "item": {
          "id": "09e4ca8a-cdf6-4077-9fbb-d341ca714c57",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8ed2d6c6-f6bc-4e93-be98-36914cd753ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee35ef38-9d2e-4e92-bf1a-24fa89a9de0e",
        "cursor": {
          "ref": "338eff0f-856f-447e-8226-95802ae4a27d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0f072a21-2ac1-4ef1-beac-634433dd9558"
        },
        "item": {
          "id": "ee35ef38-9d2e-4e92-bf1a-24fa89a9de0e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "76875b24-671b-4a7f-beed-b1a29b98b20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0796744f-e6d9-4fac-a213-ac8c7388678c",
        "cursor": {
          "ref": "1de2d1f6-7473-4425-bb0c-893d9e9b9965",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "83c2e916-2078-4cb4-9756-fed160c9286f"
        },
        "item": {
          "id": "0796744f-e6d9-4fac-a213-ac8c7388678c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1634cc2a-84f4-4503-910c-b89da8a2e56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10280943-1137-462d-bf1a-e017216aad09",
        "cursor": {
          "ref": "efb5f5cc-55d2-4afa-9ba2-5876af2b2579",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "58b7fd4f-91bd-40fa-9b90-e3c1352c11ec"
        },
        "item": {
          "id": "10280943-1137-462d-bf1a-e017216aad09",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "54d757a5-baba-42b3-b1a3-e93b970e868a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dced4014-730d-46e1-bc66-c662d3cd556a",
        "cursor": {
          "ref": "0845514f-6a13-4714-a1c6-d4443c8cc25a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9167df08-5f01-4429-bb15-df11139a3fd0"
        },
        "item": {
          "id": "dced4014-730d-46e1-bc66-c662d3cd556a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "61d0e6a3-618c-4883-a42b-00c7f443bea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02087f8e-3d2a-4858-8e25-3303ed555456",
        "cursor": {
          "ref": "f4483931-8cab-46af-b4b4-2407651284dd",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "10763270-06b2-4bf7-a5d9-1eca073cce4d"
        },
        "item": {
          "id": "02087f8e-3d2a-4858-8e25-3303ed555456",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "90bd0b9c-0c8e-47be-a0e5-5b72e87105a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93a1643-e492-4b43-84f0-a75559f45038",
        "cursor": {
          "ref": "3a5a3330-c8ea-4cd5-b949-db998e4293dc",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8e1ba8b9-1ee3-4106-a511-2bfd9bf9187c"
        },
        "item": {
          "id": "a93a1643-e492-4b43-84f0-a75559f45038",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d6041232-ec0e-40f8-b304-b5b0c6ddb366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf9dd37-3949-4b79-9f38-801b3f47520b",
        "cursor": {
          "ref": "cbe8cfed-517c-475f-8349-0e67aa0089d2",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "73b9e6d8-59dc-41b1-8ce4-6d7df5df536c"
        },
        "item": {
          "id": "baf9dd37-3949-4b79-9f38-801b3f47520b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8ebbc546-dc4d-470e-9ae9-fd0b570e95da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6906d015-081c-4984-932c-0e08f5433e3c",
        "cursor": {
          "ref": "34173a41-2903-4b1d-871e-c0f5281e900b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "94512547-eaec-4862-9e77-834ff66aaf34"
        },
        "item": {
          "id": "6906d015-081c-4984-932c-0e08f5433e3c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "191b6f35-63c7-4dc7-be24-4d2b4ccb28ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0c8a58-115b-4f20-a549-facc30e80a1c",
        "cursor": {
          "ref": "cd52f15c-abe1-47df-9e57-3c423ef74a50",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "40045582-cdc3-45c2-8030-d81c07e8808b"
        },
        "item": {
          "id": "2f0c8a58-115b-4f20-a549-facc30e80a1c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "90bf0a59-6e69-4441-8d26-890397f43628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2f43f1-d0f2-443b-ad09-a38d831ee68f",
        "cursor": {
          "ref": "9f0b9ea1-e46d-4d69-bfa9-4b06d99858c3",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a47dee74-b8d4-4ad2-a2f9-85429c7e0086"
        },
        "item": {
          "id": "2a2f43f1-d0f2-443b-ad09-a38d831ee68f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7137fcc5-6854-474c-ab70-98423a1700cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418c87b0-17b5-4f70-9910-9e154b4be9a2",
        "cursor": {
          "ref": "f6747f43-ed21-42e8-9f73-7f7170eb93a3",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7b89e8e7-7b23-4227-9057-ff1959018d77"
        },
        "item": {
          "id": "418c87b0-17b5-4f70-9910-9e154b4be9a2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7971dea8-fc7d-4929-8731-8a6996f92a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcd9fa0-2cd3-4f53-bc93-13486017be76",
        "cursor": {
          "ref": "a73c262a-b650-46a1-aeda-2dd1ce900504",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8a19f54c-98fb-4204-9823-67c57928e723"
        },
        "item": {
          "id": "0bcd9fa0-2cd3-4f53-bc93-13486017be76",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dd882a7a-062f-4e78-b959-f2e5dd01dc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb9c087-fc0d-4e53-bf4c-50e7ef7e56ea",
        "cursor": {
          "ref": "77db12cc-e925-4167-88e1-f9f834b9bbe8",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "68500cac-3db6-4680-b214-55acec1d3b0c"
        },
        "item": {
          "id": "cbb9c087-fc0d-4e53-bf4c-50e7ef7e56ea",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f4263fc4-6767-4c66-9aa2-c27fd917a8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e285ea0d-a503-4d3b-bca2-3a08469692d2",
        "cursor": {
          "ref": "b34e1b49-38a0-44be-8196-c6d2a9a8f25d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0dc2b54a-26ee-428d-82f6-a1df06c95cd6"
        },
        "item": {
          "id": "e285ea0d-a503-4d3b-bca2-3a08469692d2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f83dc94a-5cb5-4f22-989b-dcfccb5dff9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d2e5e6-2677-4bee-b2df-a71f247dfd03",
        "cursor": {
          "ref": "8de18a7b-196f-40e5-a503-2a9c4ed1becd",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e2a19781-a9ad-47c3-90d8-1ac417882095"
        },
        "item": {
          "id": "26d2e5e6-2677-4bee-b2df-a71f247dfd03",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "606c5c91-4a97-4062-9cdf-484273847add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9423c1-b5c2-42fc-b6d7-f165ae189c01",
        "cursor": {
          "ref": "e3f1e920-a664-474b-85e5-fc6d11f880d0",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f662a37e-04bf-46de-a4c4-a996032966ef"
        },
        "item": {
          "id": "4a9423c1-b5c2-42fc-b6d7-f165ae189c01",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "be28de6d-9a4f-4a17-8a17-33681bea5fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df0eaa3-e53b-4ead-80f5-6e8055769fb7",
        "cursor": {
          "ref": "e7fa617b-acf1-43e4-8cc5-0aeeccc3bb7d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9fdf2f2f-8d7e-4831-bc9b-8a965ca1dce4"
        },
        "item": {
          "id": "1df0eaa3-e53b-4ead-80f5-6e8055769fb7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5b07378f-4ac5-4f34-bda4-97a37829ff73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51754ed9-2c79-4a62-916d-a1c27ca4b4a6",
        "cursor": {
          "ref": "6c08f9b3-c8b9-4ba3-8c08-8a0329e5c648",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4bc8a5d8-cf62-416d-ba93-107cc359d97f"
        },
        "item": {
          "id": "51754ed9-2c79-4a62-916d-a1c27ca4b4a6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "65e8a358-170b-4bc1-aca0-f5ecfc680e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518fb45c-c92c-4583-9049-f178aafe8934",
        "cursor": {
          "ref": "ccbd83cd-e2a6-4c04-a961-07db56b2948b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f90b5e4d-3a5b-4932-b4fa-a48e87315c6d"
        },
        "item": {
          "id": "518fb45c-c92c-4583-9049-f178aafe8934",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1d1013b3-e71a-4107-ac8f-5d0ffc2a83ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad111c1-fbf9-4b7b-9589-b80cabf17f7e",
        "cursor": {
          "ref": "6b14129d-d1f3-48b2-9ce5-93ba8fdec513",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3831f4e9-12fd-4a8e-b969-0d91cc73375b"
        },
        "item": {
          "id": "0ad111c1-fbf9-4b7b-9589-b80cabf17f7e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "404df0d7-de48-477f-ae82-e4c07c917027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5a7da5-6ecf-428d-8660-9723993686ff",
        "cursor": {
          "ref": "5c30d5aa-74ba-44e4-8a87-2ee4c2ec28bd",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3c5d44d1-f657-4c99-873f-c95eb60b6b6e"
        },
        "item": {
          "id": "5b5a7da5-6ecf-428d-8660-9723993686ff",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "34cfdf61-0b14-42fa-afa4-c47286f0a544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd5b3b6-e472-46cf-a136-2ed8d9b0192e",
        "cursor": {
          "ref": "766a059a-4357-43fa-ac8d-cd484091e7d7",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5f59edba-b4a2-4025-8044-3505b665bf59"
        },
        "item": {
          "id": "9cd5b3b6-e472-46cf-a136-2ed8d9b0192e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "23c31741-77ba-4674-9b5f-e82cea7e7ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5936db8b-d45e-4afe-88ef-a4c55f981785",
        "cursor": {
          "ref": "1ccfca32-fab8-4c2d-82c8-834ba089847d",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d01ee21d-ed8e-415f-a056-e34b64f9afe9"
        },
        "item": {
          "id": "5936db8b-d45e-4afe-88ef-a4c55f981785",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3f768887-5e72-48bf-a0d6-a8c91625824c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943da35c-fa23-4ef5-b085-2c32f777a443",
        "cursor": {
          "ref": "045a2fcf-8fa6-4528-a6e1-1455e52d45ef",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c8db458a-d34f-48fd-a4fe-a763fb0e62f9"
        },
        "item": {
          "id": "943da35c-fa23-4ef5-b085-2c32f777a443",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e9ebc7c2-07e3-4d8c-b7af-b8557fe991bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ea5a6b-945c-472b-8790-1cba4bfbdb32",
        "cursor": {
          "ref": "fc835738-9cde-4fd8-a773-8a876d3befca",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f5a23d19-a6f5-454c-bb84-5342ddfdbce1"
        },
        "item": {
          "id": "90ea5a6b-945c-472b-8790-1cba4bfbdb32",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e2687fff-5cd5-43f0-b6a0-c452496d81d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4765fe3-19bd-4878-91e5-b31bb055f0f5",
        "cursor": {
          "ref": "e44a9d84-b610-4dcf-b6e5-a85860e63f82",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6497b26b-3b80-4430-bcd9-bad2fb6f946b"
        },
        "item": {
          "id": "e4765fe3-19bd-4878-91e5-b31bb055f0f5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b2d70bec-a53d-4b2e-985f-567da0ec0092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f212a8f-dee3-4745-ab11-a62b65be457f",
        "cursor": {
          "ref": "a2b0433e-02a8-4aca-9c89-3c5ebba92e82",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a170f4ff-fd50-4439-b54b-318036e2efaf"
        },
        "item": {
          "id": "5f212a8f-dee3-4745-ab11-a62b65be457f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "559ae58f-f585-484f-831b-ffdc1971d5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bef82ad-828f-4f1a-884e-6d3c01c9f6a0",
        "cursor": {
          "ref": "92bffc4a-f0da-4e0c-96a0-eb636f532c44",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e87107f0-2164-47e1-bf94-8afe2e8706b0"
        },
        "item": {
          "id": "8bef82ad-828f-4f1a-884e-6d3c01c9f6a0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "614cefd7-11aa-4fa0-8387-02fe08dc2761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42352198-b45d-43cf-8fcc-5c7c813484e1",
        "cursor": {
          "ref": "1512638e-7277-419a-bc92-cd8a2f63d27e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a9eec8a2-0bc1-4889-9bba-a65dfbd9afc0"
        },
        "item": {
          "id": "42352198-b45d-43cf-8fcc-5c7c813484e1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "481c2ff8-1bfd-4bdf-813c-08fa485ff272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8748ee78-1cb8-444a-b45b-cc3b63ba7f3e",
        "cursor": {
          "ref": "bca7b400-31f6-40e9-b79b-26e034c51fc1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7480c5b8-3691-47d0-8a53-77e0c9c5b873"
        },
        "item": {
          "id": "8748ee78-1cb8-444a-b45b-cc3b63ba7f3e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3d631329-02bc-42e2-a37d-c86f2d0fb128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8ed19d-29ab-41e6-a46a-265d297c58f5",
        "cursor": {
          "ref": "06d5f948-eeff-42ce-8fe4-25afb42e92da",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ec38430e-acc2-47dc-b37d-eab5d4871940"
        },
        "item": {
          "id": "cb8ed19d-29ab-41e6-a46a-265d297c58f5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9049d20f-46ba-4326-bcf0-51b250aed48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2baa51c8-1e21-49d2-9f49-c753d643eed2",
        "cursor": {
          "ref": "b8cf9078-45cb-4c81-a8e1-7e02778a4ad7",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c6ffb935-6ccc-484a-84a7-a77224fb92da"
        },
        "item": {
          "id": "2baa51c8-1e21-49d2-9f49-c753d643eed2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "07257e56-e605-4773-89dd-27513a20d1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f47619-b878-4195-bd09-17a57bd6a510",
        "cursor": {
          "ref": "47df77d5-d316-4060-8e2b-4ae110bf66d6",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e8aea8e2-85a7-4354-b4cc-26dc0cd9921e"
        },
        "item": {
          "id": "40f47619-b878-4195-bd09-17a57bd6a510",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "681f96d1-8973-4121-869e-50d369372654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea727a55-f505-47b5-8513-ac9a4e83475f",
        "cursor": {
          "ref": "5034b759-40f0-4dc2-8704-a895fedf42ec",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6aa8e7d6-ede7-4908-a077-9524f2c37d64"
        },
        "item": {
          "id": "ea727a55-f505-47b5-8513-ac9a4e83475f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4d5814d5-792e-4aa0-8e3a-41aaaecc6987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dba34d-832d-4750-abc5-10d55648ab01",
        "cursor": {
          "ref": "3bca5c8b-12e8-46f3-afbc-013189ce9ece",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "85a788e6-ccb9-4a7f-817f-568440448c97"
        },
        "item": {
          "id": "70dba34d-832d-4750-abc5-10d55648ab01",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9a734a8f-1b21-4506-9d55-3f6548f64cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa61e38-3e99-45e1-be38-f31f09085221",
        "cursor": {
          "ref": "82e28cae-54a3-4784-8997-42739afd7158",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a442e512-0a7c-49aa-a9f4-385434c6f0b3"
        },
        "item": {
          "id": "aaa61e38-3e99-45e1-be38-f31f09085221",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e48c9d94-63e5-4a6e-a89b-a15a345235d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545f4c8d-b80d-4095-919a-e89cfe724270",
        "cursor": {
          "ref": "02f578b5-ccfc-402a-8cfe-12f2c5c8944a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "50cd87a0-40e5-44b2-bd88-d4f1277ccd32"
        },
        "item": {
          "id": "545f4c8d-b80d-4095-919a-e89cfe724270",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "dfc19227-0984-4fe4-b84f-c617275d300b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a06d48-ab01-404a-a763-51d8b02d3321",
        "cursor": {
          "ref": "f66d8b8a-8eb3-4d13-8255-3900c2d3a994",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2755f2c1-d23b-493f-b990-8753290dfd2d"
        },
        "item": {
          "id": "e2a06d48-ab01-404a-a763-51d8b02d3321",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8329e790-b3f4-4906-bdb9-febffb5ff918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3334c1a5-74c4-47a7-bee4-4b3371eb3282",
        "cursor": {
          "ref": "a933b0c6-58a4-42ba-b4bb-4ddcd195bfe3",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2beb5691-3387-48fb-87ce-d2f3cfbe4fa9"
        },
        "item": {
          "id": "3334c1a5-74c4-47a7-bee4-4b3371eb3282",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a3fbb4ee-ca86-4000-94b6-cc5d451d0b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9de20c-a614-4fe1-ac0d-7242c7672d68",
        "cursor": {
          "ref": "cfdfbf7e-bb7d-464d-b7c5-781b496dfdc3",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e0e13d05-30d6-4067-96b5-2c0481f67b88"
        },
        "item": {
          "id": "de9de20c-a614-4fe1-ac0d-7242c7672d68",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "64815159-ed1b-49fb-a1aa-69da97028ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dacc7cc-6a23-4f97-978e-c8f468657f83",
        "cursor": {
          "ref": "b3dae864-1d0a-4814-9107-46ba71740868",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7048a557-3de9-4f29-a83f-67d5a8b983fc"
        },
        "item": {
          "id": "3dacc7cc-6a23-4f97-978e-c8f468657f83",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "57ab09ad-3290-4952-868a-8396270892a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacd9f8e-bb6b-436b-808a-9a6296d456b7",
        "cursor": {
          "ref": "ed63a44a-a207-4c50-b46f-0b21db47019f",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f406266a-acca-4b9b-9551-c4cd86fca6c9"
        },
        "item": {
          "id": "eacd9f8e-bb6b-436b-808a-9a6296d456b7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "93e47729-46b3-48ef-a03e-b49acae300bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0594b752-5162-4464-bc71-227502284581",
        "cursor": {
          "ref": "d6f2d9b8-af13-4a40-ac81-82228df29499",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8dd5c12a-6cbb-412f-a886-7d46506d8ed6"
        },
        "item": {
          "id": "0594b752-5162-4464-bc71-227502284581",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6c548412-398d-481c-a38d-164f1e2fa939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717bf033-a5ce-4114-91e1-a57b1c43f9da",
        "cursor": {
          "ref": "35593f03-d225-4c86-b71b-8767fc6865c0",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1f1d3f6b-4c3a-4ebc-9079-1ea208125194"
        },
        "item": {
          "id": "717bf033-a5ce-4114-91e1-a57b1c43f9da",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f3f97b0e-7337-442c-8fec-70164e60661b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be7894b-5611-4b09-b479-a0d32340ed3e",
        "cursor": {
          "ref": "6c5df120-a010-48d0-ac9b-2ce965428662",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "75f44531-0060-4cd8-9892-cb683b3ee7a1"
        },
        "item": {
          "id": "8be7894b-5611-4b09-b479-a0d32340ed3e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a6a8fec6-edd3-4a15-a0c6-d7198000b016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fa8675-d9ff-4f2d-8a84-552817c7f86d",
        "cursor": {
          "ref": "ec90ec44-ca52-41b5-b117-ab85cc253c96",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3ed21680-4f31-481d-80e3-ed86c8014a36"
        },
        "item": {
          "id": "80fa8675-d9ff-4f2d-8a84-552817c7f86d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "11118c27-489c-45bd-8fc6-39c62c8fbff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed34971-ab19-4443-b284-ef4cabc4312e",
        "cursor": {
          "ref": "e2faa565-acfc-46c5-bf5b-a8fe02c4a3fd",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d8f41645-4358-4f39-9d2a-d3fde55f624c"
        },
        "item": {
          "id": "2ed34971-ab19-4443-b284-ef4cabc4312e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a7876ba5-c63a-4969-9d15-df7bf0f4fc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0480f912-c1ec-4c0a-9481-73cdbc40a980",
        "cursor": {
          "ref": "2ac4f5ad-2855-4157-80c2-e8274019f713",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bce01bd7-743e-48dd-bb10-c6b445968b41"
        },
        "item": {
          "id": "0480f912-c1ec-4c0a-9481-73cdbc40a980",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9ab5ab30-9d9b-4c6e-99db-db2a8b25eb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca00a1ea-1528-42e8-b061-ebe1e3b9a40a",
        "cursor": {
          "ref": "faacda1c-f35b-433b-b6b7-f5a351781bb2",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "89803e35-30f7-4548-b617-8ff94ef33fe8"
        },
        "item": {
          "id": "ca00a1ea-1528-42e8-b061-ebe1e3b9a40a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "26d00d8f-d49b-4c58-b61f-0eea93e508be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157d4398-6479-4605-a3c3-13e8a1879c7d",
        "cursor": {
          "ref": "9f266437-5c75-49eb-affc-fd85828554d9",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a76ce6f6-0a33-4ab9-b333-1ab3aef552d3"
        },
        "item": {
          "id": "157d4398-6479-4605-a3c3-13e8a1879c7d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "410e6e63-1518-46e6-ab92-1cdd3545fbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91d09d6-6c82-40ae-94ac-4fc88f041299",
        "cursor": {
          "ref": "d2a2dc3a-6eae-43a6-ba02-136d225b30c4",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3b73749b-e2c6-4e3b-b813-5185731b4bf9"
        },
        "item": {
          "id": "f91d09d6-6c82-40ae-94ac-4fc88f041299",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "853577cf-10fb-44bd-a957-3cc4b9208f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab32c56-73fa-4e0d-be17-fe6e4c9add4a",
        "cursor": {
          "ref": "ce07da19-27a6-4a75-a391-7eecfaf3738f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0a6d9317-d443-4b26-8de6-cfff77ee415e"
        },
        "item": {
          "id": "fab32c56-73fa-4e0d-be17-fe6e4c9add4a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7d82a6cd-48e1-4331-8262-84d13fbf11cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4a7c76-393b-4150-ad5b-ded84fefbe69",
        "cursor": {
          "ref": "0a116dab-7e33-45fa-8715-fc010482e4fa",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "69c7b872-8280-4912-821f-35cf8105b99b"
        },
        "item": {
          "id": "1a4a7c76-393b-4150-ad5b-ded84fefbe69",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f44e9098-8490-497f-91af-9fe5462749d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13bb81d-c595-4bd6-b7e6-c3032deb340f",
        "cursor": {
          "ref": "68cb6b2d-5e0f-4b90-a859-12bce6e33569",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7e55fbf2-ee58-44b5-88f4-37fcef202cb6"
        },
        "item": {
          "id": "f13bb81d-c595-4bd6-b7e6-c3032deb340f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "36373648-a67a-4734-9a99-a4145bf0aed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086632b1-8a8b-4f21-a1d6-ba072d00cf33",
        "cursor": {
          "ref": "1047d784-6c91-48c9-97bf-23cecd548fb7",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6df0a1e5-a3bd-4e08-8a19-4c4608175c40"
        },
        "item": {
          "id": "086632b1-8a8b-4f21-a1d6-ba072d00cf33",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "20db49e3-bbe9-400c-922c-a8805111f3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916f9d12-ac52-4299-8452-e3d15d05888f",
        "cursor": {
          "ref": "67e3800b-961f-48ac-9423-71a80585c0b2",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a2d5f186-8106-46d4-92b7-18631a627c27"
        },
        "item": {
          "id": "916f9d12-ac52-4299-8452-e3d15d05888f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8a92bd9f-5fda-4aba-9420-214d37632319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2912ea9a-4984-47f7-b89e-6f031a5c6e9b",
        "cursor": {
          "ref": "c4e80956-6d4f-4bec-942b-8a4347b81490",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "78a84fbb-bfb4-4ff6-9c7e-cc22318257e8"
        },
        "item": {
          "id": "2912ea9a-4984-47f7-b89e-6f031a5c6e9b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8c4f1a50-f9a7-4327-9b63-fab43778ba3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c240018-2b60-422d-abd9-65f7865b542f",
        "cursor": {
          "ref": "23c8cbbb-f6f1-4496-9d63-9d5aa83858d9",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "35e38fc4-e8ef-47fc-bfa2-6aa63a83fea2"
        },
        "item": {
          "id": "9c240018-2b60-422d-abd9-65f7865b542f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6ed79c81-da05-42d8-87b3-1ba12f849b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554bbe02-daa1-4532-b6dd-9ada4c9930a7",
        "cursor": {
          "ref": "83c22cbb-bee8-4632-ac79-36d386ffa819",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f1bfa6f5-a42f-4524-b9c1-775e16d69558"
        },
        "item": {
          "id": "554bbe02-daa1-4532-b6dd-9ada4c9930a7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "13fc5111-7924-45e7-b01d-047caf263cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1da4bb-56d8-4dee-9b37-ff6f97d842c1",
        "cursor": {
          "ref": "9151533c-d700-4ba3-b1d7-733747ef2efd",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "97106c35-e2eb-4629-a617-b8e703f5e489"
        },
        "item": {
          "id": "3f1da4bb-56d8-4dee-9b37-ff6f97d842c1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "be586644-a94e-4a2c-a580-8cb20fd7d1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b68e8b-06c2-4de6-bd1b-9d600fc9f904",
        "cursor": {
          "ref": "523166fd-eeea-478b-b5f0-74705b500af1",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f33828d2-fa37-4b0b-9318-c8555ccc34a2"
        },
        "item": {
          "id": "51b68e8b-06c2-4de6-bd1b-9d600fc9f904",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6f5fc8db-d574-4737-9656-8aa2f444479e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78191038-762f-48ca-9552-f6ca9f557ac3",
        "cursor": {
          "ref": "ead8b6db-1eef-4f26-ac30-8d7467cbbaa7",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6e1ec5a1-7535-478e-8fdb-62891babbebf"
        },
        "item": {
          "id": "78191038-762f-48ca-9552-f6ca9f557ac3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "43ce303f-ad50-4335-8356-465ef9ce2a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bff1f5-488a-4d34-975e-770fac1de3bc",
        "cursor": {
          "ref": "274d996c-1e4f-480b-ba9c-ca3e023820db",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2812dd07-ce7d-4f0b-9657-897b2eb1d2c7"
        },
        "item": {
          "id": "b2bff1f5-488a-4d34-975e-770fac1de3bc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "36afa116-bd56-4c3a-83b4-a4606d56aad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865cbeb4-bbe7-476e-93c5-54389c07469c",
        "cursor": {
          "ref": "787eded4-75f4-419b-a050-8729d7416e26",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bd0b00f3-a1fe-4449-bc7f-921307305d2c"
        },
        "item": {
          "id": "865cbeb4-bbe7-476e-93c5-54389c07469c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "998becee-3530-4088-a0e6-56e9c76182d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3caec6-1f5a-40e6-89dc-92c213820971",
        "cursor": {
          "ref": "d54b0eae-47bf-4612-9138-b4f0880d96c5",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7d8ba5d6-f8cd-4f22-b175-fe0b2b286e42"
        },
        "item": {
          "id": "eb3caec6-1f5a-40e6-89dc-92c213820971",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d38462ec-d98c-49f4-8921-621426cface7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9c9b26-85b4-4355-aaa8-e5143b1509f0",
        "cursor": {
          "ref": "15d0a09a-6f2f-49df-aa30-e4168a8d2d9b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5accdb27-f5db-4ed7-b1c6-18bb57246e2b"
        },
        "item": {
          "id": "ad9c9b26-85b4-4355-aaa8-e5143b1509f0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a9783acb-7ffe-4467-a198-f45ca13cb56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524c1a02-d6a2-4885-95ce-73b526ab5e4e",
        "cursor": {
          "ref": "9160452d-74ef-40e9-b40b-e866e925bb5d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f33bd8d5-27b9-4ed4-86c5-64c2db1e3b3c"
        },
        "item": {
          "id": "524c1a02-d6a2-4885-95ce-73b526ab5e4e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "55a00cdf-31db-4c3a-9972-4150641ad71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6750ee34-2f97-406e-859b-9eed8f02491f",
        "cursor": {
          "ref": "e95e934b-0836-40ac-bce2-5ec401ce8cd3",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d0f7b20a-d84a-4664-b8f7-16df2cf42a62"
        },
        "item": {
          "id": "6750ee34-2f97-406e-859b-9eed8f02491f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "892f9063-1e17-487c-a28d-6615f0eaf3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d8910e-341b-4ccb-aadd-655c17da84ee",
        "cursor": {
          "ref": "6f96d01c-9e7a-4fa4-936a-81976e9052a6",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "919e9375-c718-41b3-8a47-aace6d876874"
        },
        "item": {
          "id": "15d8910e-341b-4ccb-aadd-655c17da84ee",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fb6bca4a-ff1c-4e02-936e-2a4ee198efa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf622ceb-c96c-4894-a282-8b8515b5616e",
        "cursor": {
          "ref": "87c4fa4b-cd4e-4d07-8c4f-46f8dbc0ea58",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9345ec2c-d260-40f2-9226-95154e5e0e6a"
        },
        "item": {
          "id": "bf622ceb-c96c-4894-a282-8b8515b5616e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5293110a-f6f0-491f-b13e-ee000d4bcfc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30197ea2-722a-422c-adb9-29d513f8228d",
        "cursor": {
          "ref": "06607f09-1ef8-45fa-b153-519e6fa77680",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a9d68b81-2396-4e1d-8d6b-baac25e07c65"
        },
        "item": {
          "id": "30197ea2-722a-422c-adb9-29d513f8228d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ad2ed9ae-5d2b-40f4-be92-17317e63d932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948537d3-5f1d-4f48-9f55-09e8652cf316",
        "cursor": {
          "ref": "ad2c2b7f-d524-489d-80cf-fba13e3541d9",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c69eea46-3bad-48a7-b138-7757317384ac"
        },
        "item": {
          "id": "948537d3-5f1d-4f48-9f55-09e8652cf316",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d660b6db-ebf6-4c91-89c9-7eed1454cbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1790719-965a-4944-8ade-af95aab11730",
        "cursor": {
          "ref": "4cc44711-8512-4026-a041-fa3aa21bfb05",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8dc387c0-50b3-4ecd-9a22-e5ff3d353d4c"
        },
        "item": {
          "id": "e1790719-965a-4944-8ade-af95aab11730",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9a505536-ed96-4583-98b2-f9e20b3cc85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214d4166-814a-4ab4-ba32-95c4c8456463",
        "cursor": {
          "ref": "b0613049-466a-42eb-b605-aff56eae2ece",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ee7c38ef-d6ef-478c-9f58-d8243aa9ddab"
        },
        "item": {
          "id": "214d4166-814a-4ab4-ba32-95c4c8456463",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f675caa2-c977-4924-b495-5668e44f9f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710a84c7-0c64-4be7-9f0c-da5902572772",
        "cursor": {
          "ref": "e05e1632-c9a1-4d7a-81c0-7addc89da32d",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "973b4c13-444e-4ef1-9e97-d0cfe5ca3f52"
        },
        "item": {
          "id": "710a84c7-0c64-4be7-9f0c-da5902572772",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "14d32935-ae24-4d13-8d70-6e39aa4bf123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "2ed22c9a-2945-4a52-bbc5-2e66c6715671",
        "cursor": {
          "ref": "a19cdaf0-a560-4529-b606-c7db893e784b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4432339b-8945-4e07-b0b8-a20f9b4008c2"
        },
        "item": {
          "id": "2ed22c9a-2945-4a52-bbc5-2e66c6715671",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4985f9e4-4cf5-4295-b51a-9651ac2c3a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "e6b4765d-5ab1-47d6-bfba-95098c5d1497",
        "cursor": {
          "ref": "58b48719-b9db-4176-956a-266d470dda7c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8e896667-f842-4775-9e75-87a5ec595d99"
        },
        "item": {
          "id": "e6b4765d-5ab1-47d6-bfba-95098c5d1497",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "598e25b3-0acc-41b2-812d-61e9cacb20bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "ef649a89-fb61-4713-86cf-4f5987fec35c",
        "cursor": {
          "ref": "40a910a5-4b7e-4c58-a108-916ea0c260ae",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "db55a1fc-df27-4083-be7f-021d5c4ccb7c"
        },
        "item": {
          "id": "ef649a89-fb61-4713-86cf-4f5987fec35c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cff488d1-4cff-4423-b8b3-8e24eeabc061",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef649a89-fb61-4713-86cf-4f5987fec35c",
        "cursor": {
          "ref": "40a910a5-4b7e-4c58-a108-916ea0c260ae",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "db55a1fc-df27-4083-be7f-021d5c4ccb7c"
        },
        "item": {
          "id": "ef649a89-fb61-4713-86cf-4f5987fec35c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cff488d1-4cff-4423-b8b3-8e24eeabc061",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f13650a-9f55-4686-8980-4a79a97047fd",
        "cursor": {
          "ref": "d4801f3a-c61e-4a5f-b27b-dde2304a7120",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b31200d3-c17e-4f57-8b28-86ddf9801e63"
        },
        "item": {
          "id": "5f13650a-9f55-4686-8980-4a79a97047fd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "256dd43a-289c-44b8-a0bb-2ff291305051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1752b7ea-177f-4811-9d49-136c9033464b",
        "cursor": {
          "ref": "6bfa96f2-7592-4a25-bd97-991a270309b8",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ad930d13-554d-46ca-8f04-7632457b55d7"
        },
        "item": {
          "id": "1752b7ea-177f-4811-9d49-136c9033464b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8d6f473c-10ad-42e3-8f5c-f03e20d4766f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}