{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e09cfd44-49c5-472f-87e3-00b050697eed",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3451b794-ce01-44ff-ae2c-fcdc16309f3d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "202628eb-319d-46b8-80dc-4c417184dbf3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "be40f483-75f0-4053-a9e1-bed5508448f5"
                }
              }
            ]
          },
          {
            "id": "1e67cc35-a3ac-45bb-8b9f-fd67bf5d6a9b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17aa2092-2d51-4cb0-9135-afc4bcda8b47",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fcc564c7-5d13-4ec6-88d6-2c5fd3a58afd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "21e60338-2d7d-4834-b7b0-b92300a5b0bc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e2857cbc-a55b-4fe8-aced-31b1a9a3e385",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2789b1f4-a4ed-40f5-b538-0974fbb655fc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "259ae556-8adc-4bb9-aa86-1f11fb4de5de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f4fb505-97eb-487d-8ebb-e0cf9381042f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7cb943c1-1514-438c-90cc-73567c3f3b27",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af7f9d02-2e25-4925-9053-702f1ee7c10a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "662d4d52-f012-477d-95cd-ec9690e8a2ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "267e5fe5-2087-40fb-a9d2-174ac499bfd4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73c6852b-7fad-4452-bfd1-5a52fc834a42",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "78b58516-401a-439a-b717-3a654e091a47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18913921-66af-42d9-a4cc-2cdaba847f39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "831587e1-90d6-41f6-9d59-f8acf5315399"
            }
          }
        ]
      },
      {
        "id": "dcfd4eb5-ec44-46f6-b655-a866bb3270c3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fb1c43c3-67be-4396-ab80-54618ba77753",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79c82ae8-fa92-491e-a96c-a614319b1af7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "19264a3e-b0ab-468c-9b40-cdb47faafa9c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4047f3c8-ce03-40f6-8921-54c56dc7c864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f71beefc-b32c-4287-acc4-853151fbc060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f07be19-3042-47dc-a33f-a2ea14aaecde",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b86eba-a54a-43f1-ada6-e2e2491ed9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "356e848e-448c-4f4e-ad69-7a9176a5b47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0270cd7f-0da6-46a1-9623-57582eb33937",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087baefa-75fc-443e-b867-399599252f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89c7818d-0720-4ccf-b4cc-da3c0ebdd9f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8d69407c-baf8-4a2c-8d0d-0fd47c217428",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b469691-4ddd-488d-9b55-f1610cfea73a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a77cb66-774b-4d46-9308-e7c311232a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7173297-7826-4e1d-aa8a-896d36ada35a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cd478f-8587-438c-87ee-7fabec16a406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c537b2-8801-473b-949b-bf1920c8eada"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2f602ab9-0dca-45fb-940c-815a9d70bd84",
            "name": "Positive Testing",
            "item": [
              {
                "id": "57884939-34f1-425b-979b-46ffc862d003",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a3e5335-05fb-4348-8f07-e88deb23ec9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2dd3b645-3a07-4447-9ac8-7bdbf9682b82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f6e2f3d-e0d6-4a10-aa10-188b39758d86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2911973d-6463-451b-9017-f20f3141517b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a780ca0b-6eb7-42a4-81d4-066eecfc7138",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3b14912-4162-4182-b231-2e24704828c4"
            }
          }
        ]
      },
      {
        "id": "16b0fdc4-92ae-4b51-824f-6f885c34f5ba",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "65ebd13e-17a1-4592-8a26-0de5c848e55e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2cb8cc2-421b-4997-8e51-ffe3f7cff303",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "036ae79b-1ebb-43cb-b7be-6fa4a96a37b0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdf5f1b-5d16-4be0-bf2a-be30eb487239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603ba6ab-dfdc-492f-8b89-6cec3a4c8f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9576d036-2f17-4ca6-b1af-7f00356fda4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c12ae5e-a7df-457b-a14d-aa00e15e061d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070e4174-396f-41f7-9306-8b2c4e875b63",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a98642a-3a91-4bc4-9867-0fdd250e6223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada4ca6e-906e-42b2-868e-86a91c83c0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dcbdf0-6110-4899-93a9-176d2c68f74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f40fa49-4e79-4ddb-9b89-cbcfe926c899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada5ac3a-9342-4827-bb31-349f128ec268",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33238b7-4ed6-4a57-8615-df5fddc77264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5f092b-be71-4640-bb8e-f36e41581110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc78007-daf4-4414-a107-f7bdc0110d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da8ebe9b-4f3b-4e2f-9c15-2e15c232e0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c1a4f5-d8d6-429c-b9b1-3c8ece4b20af",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe335822-51c2-4f72-9ad1-9c96322fbfe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd92896a-0401-4771-be9d-c512f08cb663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec75abd2-4a9b-4788-9bdc-ece56045a11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdf483a4-ab5d-4f12-83ef-00ea82249db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b08e05a-f8a2-4f93-9620-5f01f82ceac7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9cec7a-b353-4a0b-a228-84264dcfea92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5853c085-a82d-49e8-849c-6eb004b99503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2aad8ad-6f89-461d-938f-5f2497ae5e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "196cabaf-5486-464b-a675-aa8d3a010fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719f030f-9510-48f1-bac4-b4daac8960b2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9972116e-89fe-4de6-88a9-c31009dd4e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd793883-870a-4f79-a552-15c33d62dcd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cc66bf-8888-43fd-ae6d-851634df1636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ae055fe-c996-4a3e-bc2f-962b3faafa64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa5d43a-73e3-48e8-aad8-415dd3e74f4e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6938ea6-9b2a-4080-9852-87787168833b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf151fb9-7c54-49a9-b90d-e9ab03669628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b93536-a23e-4b57-b39d-e185482ccb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b39c85c2-a8fd-4bd8-a7de-2841eec26b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c72d07e-aa8e-45cb-8f47-782c3639776c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5828fd2c-4950-40ee-ae04-e078ffd060ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e647c36-5f9c-4b90-bba8-68f67c4643a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491deaea-5309-44d2-8598-fb0f51ba3fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7071bc8f-72a4-4bea-8dd8-add1e0b635a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6820a4f3-5c33-43cd-aa26-fbf6f871f708",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd5e31b-8929-4c95-b845-3e3ee169c28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37aa106-da2a-400c-8423-48c37e8f08a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636c06fc-4c7e-4637-af8a-8a5597d1c6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "762f7888-b4c8-43e8-b697-62b29cbcbe38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f54828-2c10-4e41-bef2-703b58e88c0e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8715c8fd-da38-4907-844c-d6859dee5b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905dbe3a-dbb0-4a85-8038-e1ea29f3199e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1507ac1-ebc7-497a-bca3-5ccc485659af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc9a1af7-2220-4335-ac0c-7031adffff39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e98c60-8630-495f-8a42-a467a25a98a6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6a6faf-7576-45cf-9604-8197b1d25e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b607f712-1a7c-41db-bed3-2ad02aaf5088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0694cedf-724e-42cd-a9a0-12c2e6fcf4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa225361-a8a2-4080-9154-1651f5c46db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c1c078-5924-48ee-ac99-d58803b1f6d8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a83770-b807-4bc9-92a1-fe977ae4fc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73d665d-c55b-4961-8d97-2ee11812c9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5089aa54-b729-4946-ac17-3030fa436206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c0ba497-a374-4480-bdbe-3361ddd70c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464dac27-01a1-40db-8ee3-07760ae4fd72",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5361107-6940-4022-99f7-14453621de07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b9e094-1304-4292-a617-42bc74186a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db2e826-11a6-4dbd-a4a9-171fb9bff072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fad45faa-6486-446d-8549-8c64831e4d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20eb458-27b5-489d-aa89-51e7146f6822",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf0455c-fc54-4fb4-a58a-e6c7eab640c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db5a0b4-1b54-4282-aad9-e5c44a5fb1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9652cbc0-a51a-45e7-9d23-50ad433caa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "126d432b-0853-4c1a-a738-2e1be4760914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fb6882-7910-488f-a437-4ded28b3ab2d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca3acb2-5dd5-409d-8322-c1852ca346d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6393bf33-09b0-44ab-b8d4-96cfc89b8efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a29271-d5c9-4c53-89c8-d74440c02d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc6f1f65-be21-440d-a9d5-8d92b8b87304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba15c670-3125-44a5-b93e-50bec4fb2a5c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71422908-1be6-40ef-a731-d8d7b58c82d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc61543-92c8-46fe-96fb-ea2a0a714078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27dec76d-cf44-40b5-8a59-5f98b52c2e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91168f79-b05f-461f-8073-da2ce446cbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998c6283-5a04-4482-9f0a-ccfc02c3576e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb417fbb-abe1-483c-8860-1965daa808f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0dc5c60-cce2-439a-be3b-5e152e221252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2452184a-abdf-4020-acc3-4cdb780a08b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "931378ea-e638-4e70-babb-c1f419427867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b75679-a3f1-4e08-ba0d-f2b010635482",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c43626-c5ac-461a-8c08-8370e320f5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42f3c59-1ca9-47f4-b0ad-29e9424f4d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28899cf-0bb4-4a74-99e8-0401d3b7303c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d75ab4-c67b-4b6b-9e04-a58ac60fc734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f94662b-2f2f-4b33-8650-e9d287ac2846",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f4b80b-b28d-4a96-9f61-bf2507944f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87dc6e59-c30e-43bb-a806-31338d0b4d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b2cbc6-9eeb-4c0f-92c8-deb0a9446992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6da020c2-a971-4b89-baec-54b6f400680e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fac748-5084-44db-baf3-a6152f6da6aa",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789c8843-fcb8-49fb-ac97-c1a8e9d95768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f611dfbc-6f3b-4e74-8b08-7b9f77d4269e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61f7175-eed2-47df-9657-9aab4f0da201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "941b6e96-ffa7-4eaf-80b9-53bf6dc7f09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7815c16e-ed3e-4f0e-b2e2-1e92177aa617",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3adad08-ea1e-45fa-ba0b-64ec61c4980f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a297f24-459e-4b61-9632-bddda319df09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06e7a58-1503-425b-8980-32904ef4b37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "682d2d49-d056-4a4e-ab79-ad4f0f24cb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cd513f-b36e-4bc6-8800-174323cd9699",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63fe0d4-3a04-4ac8-bdbd-c27388e52c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf582db-31f3-4b3e-8301-eaa7bee55a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3967318d-975c-4078-8d81-227113fa5c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7daa6d-ec9d-417e-b075-b1806b2e25f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ffd1da-6999-4891-a78b-6020656294b3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda8538e-dbfc-4e6d-a6c8-9f1d41ebd0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65557bb0-7b2b-4d77-9f44-09a4a0de97ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d01deed-1d87-4831-a37b-e4ea13a691d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b883680d-5dab-4b37-aaa2-be90ebcae692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd0c5b3-36c4-4d99-a903-a15fa092e8ad",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b73bc44-42e1-40ce-a00d-6b7d97330d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae53b72-7c4a-43bb-a7e6-289159b82b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a162fb73-cd8d-4b01-b220-e662e551382a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b707bc-236f-41fa-bc86-b6c9063a7649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7aecf5-43b1-4feb-81b1-90628b71fffa",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c334b6-b1fe-4d4a-9f00-e7f581a6cf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77b3b78-08c7-40cf-884b-66a73187f21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7655e30c-ea7c-49fd-9e1a-f3505aaffafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41c193b1-7e90-48ea-ad51-3bc7fbd97459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784ea77c-1fe6-49c5-ae01-ef7d8d379649",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15380fb-f985-4337-bb27-adcf3117dc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d2775c-6fc3-4c74-8803-3291e8087aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930a4ea1-718e-4cf6-b748-0f57c4552c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e98e49-6940-4175-aaf3-8a8a0f9959cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f61f80c-5ef5-4f75-afd0-d1dae3470657",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1484766c-f7eb-41cc-8385-00e8992be414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f29a7fc-ee26-48d2-9117-4abe26c81264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68145bbd-b4a5-4313-8944-1106783a5423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49037d02-bba4-4215-ad2a-6642679b61cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2c5bbc-625e-4d0a-b98e-8dd9c59054e5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63dd5e22-3fa8-4804-847b-f190c8cb488d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d84a43-a06e-4980-bf9e-bdd8187f3007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b609c60a-b9bb-40a5-b810-f853ff613e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e23fd843-2359-4830-9dd3-e15c36e6938b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee4f587-4225-48a3-ab98-81d710af8e2c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52285951-fa6a-4975-a7c1-c8d70df385d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691f502f-eb6a-40b0-bf92-e8d5dedef0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae70f183-aa9d-4ffc-aece-5e806eadf41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dde34d-553b-435e-bd12-a02c1684433d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e44030-65ab-4f98-ad87-777c15a012aa",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7277a75-c968-4e44-a3cb-39353e4badf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228336cf-7717-4231-9f2b-b363074bf979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511169cd-a8d1-4a1a-b60f-0534ebefe355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "69eb0edc-9443-483d-8670-391602ed3907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9d51cd-a4b8-443e-a9fe-b58fb3399c67",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65820329-e57f-4ee8-bb9e-51ebe22257a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b05de6-c210-492f-86a3-43262e7107ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b422cec-e13d-447d-a6a8-25e501668fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e60f4271-1cdc-4467-bec1-a2b028fc89f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4caa03-139f-4554-895c-e7a9fdd3223a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6529a8-d156-4c76-98bd-49e51afb6aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecd52fa-29c2-4b0b-b273-fcf2d7406183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea896053-8c0f-4ab8-911c-3c6dcd70f1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1806e3-fdd3-47d5-8865-4ef55a250d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e6ac16-2e13-4327-92b1-15b5576824a0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a37aa23-2268-4997-8fcb-166007b65b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7f64a2-81ad-429c-baa8-65e92e62b094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f5177f-f9cc-42ce-9c4d-a3d9e5bf95ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4623cb6b-aa4f-4386-bf71-b4a8243481ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb5fd86-e810-4a2f-828a-f7f8ea32893f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4d7bc8-1df7-4c83-9578-2ea892a94abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9c31c0-3288-4def-b300-35d9932bfbb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bda1cf9-d474-4763-b364-7cce2bb50ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7295dfad-a6aa-4e81-80d1-1444b00c0f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b032bf25-7e7c-4aff-bbff-182dcf5ea522",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722c7ef8-642a-4f7d-b20b-545b8e3890c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6e1eee-8ae7-4e9d-9724-7cfa6b8d9ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2108338-5c6c-4b70-a1ce-9e92fc067cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cecd46ea-8104-4421-8fb9-e5824e0a8993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64873bf5-9c90-4ea4-a74f-2bb424f81b67",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fc73b7-2723-4c63-b277-a054278c3664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3e2c209-055a-4faa-9558-b102a031c276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9497b347-ec38-4465-9b42-cbafcae48f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7751b64f-f3b1-4bda-884e-2abfbd77f2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d31969-68c7-42bd-b8a3-b2408a766c79",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2527cf50-c567-4d9b-842f-a43fdcc11401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237333c1-873f-4695-b0f1-e08ec3c16a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548a938d-9b91-4518-9eba-9341845a9119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "882dd634-4b2a-4d3d-9c26-eb0fff0ab92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d899d0-f7a7-4563-b98e-a84da3e602a2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2039f865-612c-4269-bf21-7d2254632e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8281e7-6af1-4c78-b1f7-434b5d8dbdf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00393ab8-1547-42bc-90cd-c4c031b2b307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2249929b-e8ff-4c26-be78-02c7b491d089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f25df27-57af-4179-a91c-a2512bd7d616",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fb8a3a-a98d-4b1a-b3f2-d8519ecb54dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0fed13d-788f-43a2-aceb-af3263ea2c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c57399-445b-40b2-b4c8-e7c0f18d9fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "425780cc-d881-47be-8485-6b6394c0246a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004757b8-27f7-459b-ba11-be88a3ad6ec5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc3e14d-136e-4e56-883f-5b801a77e526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acabeb98-22e9-444f-af77-d59cf8b7c0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b52d156-4f4b-4e98-9ae6-607f664c6caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9df91a1-6cf9-458b-b890-01ea161b9773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa1d768-330c-430d-b6bb-752261b29849",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d14596-79f3-4cd0-b996-81e66e6c9a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88cdbcf1-faba-481c-86de-1875fef807a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19d7d0d-51be-42d6-8848-ff6d4b6a2251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "45695291-148d-4c5f-a7e5-58f93d73a692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43dd79b-5081-4500-bd3a-dadf7554984a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92925208-a026-4061-bd9c-6dde4e714320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e60d61-d327-4509-824b-f2bfbd9552dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c55022-cdc5-4f6b-87cf-2bab081e8a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b6620c80-36a9-4c89-9114-2069ed081986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f69eee7-bdb2-45f6-a0e9-bc7e259c505d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4d79bc-aac3-4136-9da8-b9f521e23738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a929daa4-ffbb-4550-90fc-8c0c106cd3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4706ae26-cacd-4e49-a411-6a4bc73ba6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e46c58ca-af0a-4758-b12f-80186a47bbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0922f142-9714-4fe8-89c5-1d962ea8bbde",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6127d087-29c1-44ec-8a7a-29683e4e5b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d31dcff-a114-491a-a67d-e60ceb28f24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ed861d-fb4b-456c-808e-f6ba501f93da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5525ac-0700-458d-a1be-ac70c536caa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38af6051-c162-4ada-abb6-e0a303069867",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8624ef-6586-4252-b820-052c571ce6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9287db3-237b-4edd-a715-ce84a8e4f93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0977f0e-ec1b-4f2b-a9c1-fb64231dabc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f60adb-3f29-40f5-92ea-125f3b02aa13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e91e8ab-f8f5-4713-83a5-7f8524f78c03",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63424448-b402-465d-9c76-9d5e9d64692c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ec5ad7-2792-4b4b-a250-30817d8abcc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfcaa9b9-398c-4229-808e-e77523dd72ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ea7ffc-b00f-490b-90ad-23890792d9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1710758-674b-4255-a170-e2d670e89975",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5eb7d16-2430-4d5d-9f69-42124b562401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa036bcc-d70a-495b-aa27-b2b8c13900fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a3e77c-d004-4972-ab19-6595bd4e856b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a33bd90-f494-41a8-9cad-34b3d76eb6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e6e5bf-c5e2-4318-99e5-e7e80ac59115",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b556a90-1ff7-41de-a68c-00e969bc1c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3090ed-13cb-4331-b8f1-50db1d1f5f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633ec460-fb8c-47fa-bc14-49e281525578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2dd89c-947a-493c-8fd5-47256fa50a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c068c3-93ab-45a9-ae3a-0c15eb8212d0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc4463c-a42a-45c3-b1db-d805cec9cbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1498dd42-5981-4556-a3a9-a9c43b44b79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c48817c-d016-4706-aee8-bad4aa53a66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "224c4748-e9a0-4489-94a5-699c3514df66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bd9432-8822-4fe4-a664-9cbef6bcf3db",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bd2b7f-80bb-4316-8959-6cce93f9bccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d21b654-33df-44c6-a54e-8f1b90308a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191c5a04-91ba-4666-8072-5709803e0fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "135c94b4-703a-4dd7-9dee-e66e57d6f683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08b98ff-d4aa-4f62-bb82-bb941bc6e60f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751b8521-899b-4f86-bbaa-35a8da0e9e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14bf10b3-9068-448f-8221-8ef9ebdc808b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1def7296-ce8f-4bf4-9a0a-e74356143862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "be9d3a97-5f40-4093-9ff5-236bd88d749a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776a077b-0c10-4253-98dc-31ffca4dc298",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f03ccb6-b269-47a6-bae1-e89bdbafd1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673398e3-c1ff-4202-9f6f-6846d9f87ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1187f6e9-8660-401f-9434-d51d7520a326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3738d5-4a57-4bc1-9552-b76ced57ef84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d75ec8-f2cc-4738-a28c-d6e46c9ad9a0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee4b16e-511c-4636-b9cb-c185d80f0a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735844ec-3973-4ba2-88f5-bf8748ed7875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997a831b-6336-4e91-b25a-b7370fb51677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb57515-8b42-480c-b045-23fd467b9754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bca254d-a99d-4f44-9b17-c0e8e4e4ef9b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d48f8a-d33c-4236-8915-c311ed0fe8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6506124f-ac24-4990-9623-6cc2c111e403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b0896c-3755-4339-b906-622c76b00a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a70a6eb1-fd6b-4123-aba0-70dfefe2892a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffa5ea2-fa8f-4684-82b8-186b573835ea",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853426db-e0fa-40ac-ac95-020b7854486d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd396f2-ffcc-4ffe-8599-efca73131381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34c4cd4-ee42-40db-a182-288aa01bd6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f58de7a0-d6a1-40d3-9f0e-602a90c1f766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d1fdc3-aebe-45cf-8d3e-1a1565ff33d8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ace0883-caf1-4d80-9fae-bfdfa69740e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596ae103-68f2-4e3b-9bc8-44eca0fccaea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496cde4c-f22e-4470-b996-c32e0251d093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "37f311d9-e9cc-47f0-a972-973386d0098d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a85ffc4-285f-4f9f-a48e-c73368ab54b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f95d9f5-331e-4f35-b8b6-6ce728a3ca56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95f76af-60c8-411a-832c-b78dc655015f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79a74f3-521d-4368-8679-cc8ed570e0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8676ec54-6b6b-49ab-8934-0a41fe3bad45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7169e3dc-4e20-45bf-8eb2-e57ca609b688",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e502cf3-b3c3-4420-a91d-5bb42b54daa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01264c1-8161-4ac2-b2f1-84416b2e2f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7368bd3-d0d4-4013-9f5b-a8b37614b55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b98a721-f8ec-4124-ac8d-e4f379448e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0ef672-8dcc-4c23-abb3-e26387eb03de",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8a19d9-21af-4746-83fa-4596de7025b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18db655-4137-4ee9-a68c-507bb6cc4cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39383b1c-2680-4b48-a62c-168026390412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4ac03f-4af6-415d-a9e8-37dc3741f0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2c7a5b-1140-4bf2-b167-5362fbdc5518",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7deb88-c583-48da-b8b6-d34c92be4f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91217b99-7718-421f-827a-c3d697d01706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315d85ac-786f-49b7-8012-f97eba7b7063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "076a12a2-5b3f-42ca-a59f-23640ab01513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68177c70-70a5-418a-ac91-fa4751dbf908",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd73c209-a488-4bcf-8822-215400099bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208e496b-d881-46d1-b085-c6140555cdaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c0fd6a-55f5-45cf-8004-41e2765c74ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d5010d7-c975-40e9-8df2-d784d492312b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23334530-f21f-4fd2-92fc-e91e5f0d5f91",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa05fa7f-89f3-4fcd-9ddc-3f1119106b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309e73d2-5a27-4763-816d-4e0b883211e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ff2641-c05a-41c0-b863-6aa752c2a214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8a8b2d-a40e-49e4-ba7a-b2773a6c3257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64d49e4-0ad5-456d-92c7-147f64832007",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e47a6e-765c-416f-8653-f8cb1b9808f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8abc9606-7a0f-44a6-ad2e-ad5560e05f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afffb1f-cbd0-404e-af5d-2ccbbbf0e129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "623cbac5-2daf-4e98-929f-22ad55e45b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65272599-9e03-4f3a-955b-f59927875a78",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94670259-2a8e-41f1-9f2f-f922f7c24e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077322a8-0642-477b-ad31-39ee10a9c3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a305dd-8f48-4642-98c5-7ea126d2f823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "157bc6ff-d073-4866-99e3-ee6599b4ca94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21178174-7a37-45cc-9086-76f2dd61c49e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab74b25-83b7-409a-9343-8ff45ed5476f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aef3803-efad-468a-8a61-20c0160dbf44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a34f665-1966-4d2f-8aa7-e814c4b6027a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9036d7f-fa45-4063-8778-fc067446da36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11420af-7c5c-45f3-a799-e39611c3ab55",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be7d59f-adbd-4d06-bea9-c00a69a922b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c361ca-e49f-49cc-af6f-a3acc6a7d0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1a3cb5-24e2-4814-8b51-8c432ec4d789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eba7221-c075-44ae-8e32-1e3b7c9dccfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a41257-1c03-471b-b641-e5003d160e20",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47885f94-1414-48eb-8a2e-e60cbbccdf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2211c7b-bdb8-4af8-b203-89c792319c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc67aefd-fce6-481b-81cf-75e5a41bef3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98551399-8011-4ed4-b437-50a5608a21f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa78104b-4d40-40f5-9d80-87b26bcdbee7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e261fb-ed30-441f-9a10-4fe4b8f43cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74edd5fc-3e63-48ea-988f-a9785647027e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0ee24f-ea2b-43b6-8a66-2c1f276f8d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6211a7f-4c40-4933-87fb-160baeb430ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bd8521-fe77-41a0-a6fe-05f765790865",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b49e0e-6a2a-4f14-ad25-d061671494c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c080e884-e888-4948-abc2-dea8a5dc5e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff186cbf-c024-49cd-adb3-dd36875dc4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "13efb65a-9c3c-446d-9f24-64c261591091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7247441-ca2a-4c3d-8907-6c8511e00432",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98a44ed-5a4d-44af-a0a4-d51ab7c3593f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769bbe7a-bbef-4ce5-9d7d-25b689f7cabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe12f849-8e2a-45b5-aa79-616009e55859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7353da-bd0c-46ae-8fbb-8e096870d207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f6b4aa-dbd7-4cfb-bd44-9874f44c28c3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd618a3-1ca5-46c3-ac12-a788974dc286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda43880-b046-4062-952c-8960429a5366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ab57b6-cf42-4c18-98b9-78cd5778b87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cce0e4ab-12c1-449c-b2b3-6b5047bd2e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591204c4-3c5d-4adf-9f2f-7a8acb21c0b9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19d54b1-dece-479a-8ea5-3b95c4906e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f420197-b5a7-4a9d-8c10-aad06704d286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3bf8dd-02da-4379-be17-813543bce60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d379e847-2a65-4ad1-be36-46a3234f3ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59613799-850e-4a1e-9690-cb669db20c53",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850b1adc-c8d1-4246-a555-4903ee8671f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3bd3b72-8b6b-4125-9775-66a3fef7ce30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0521e6d2-d084-4f33-a77f-e83afda8d8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9cc7da2-3451-49c0-aa5f-ba9bf4645552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bb65b7-bbe0-45e1-a4b0-135d80ab234b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae17f062-cb49-44de-92a8-d2b52afef67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1010f7b-2801-44a1-9d49-66d458e21a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ca066e-2b90-4df5-bb1d-ddfd4deff02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1abb4523-5c67-4760-8d29-9897b86ebbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32c1974-20ab-4b8b-8da9-ae7c897fd437",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40caeb6e-f72d-46b8-b38f-66309f1e8ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8dc364-1c63-4190-b5f8-f4c0c2001a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fa508f-ce9a-4c7a-818a-aba497d9209f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df5bf7ab-58ba-4c93-a100-7b49e23c4aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85abec4d-ec06-4f9c-ae8c-ab7936b267d3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad5bf16-3e29-447d-aedb-1b55ad00f0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ab1c7e-40b9-4869-a148-722d2c65281d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bb95d6-4f6c-487a-99b5-8be54f1c7f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2989e386-0651-4c92-9e89-69d245a2044f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9e2bd2-e244-46b7-a139-96e2fef27fd7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ce28c5-2e1a-419a-a008-d66c550b085d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405fae91-6bb3-48f3-8078-0c4f4b915283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8912052e-5117-4fa6-9a60-9f4404927bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d5ad94-125d-49e5-82fb-388c4d15df64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc2bffe-ba8f-4504-8d33-1afaa4b9abe7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99fcc30-4547-4294-8aa9-8991c4a085fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46ea5e5-d020-4f2d-892b-60b7450bc4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba7fc29-e02d-4300-b0f0-c8e1caf83e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d838bd2-c6d2-408a-b24c-8520079e91cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ded061-64fd-4774-804f-7bb939659521",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab99e066-d435-47cf-a919-3e17f285d8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5254bab3-3844-4843-9526-ac307f099e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819fdb76-465d-4f8c-b06a-4e99610da5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8be3bd-48dc-417f-aa9e-da9efdc0f371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d970b2-2506-48b2-897c-4b11297d09ba",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3680c9f-e27c-41fd-90d3-de24b46f11b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c5e01f-cb24-46fe-b661-46bbec7971e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da791a7b-1372-46b2-933d-310fee722b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51c6c831-6298-44ea-ad37-0772a5c93dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e759ed-2eb8-49e4-b0e0-ba51fdfba22c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb1bb76-73e5-4d85-8d03-74e0737efd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f12b68-ce1e-463c-90b5-aba82f7557e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a76c2cc-09a5-4b21-9c92-b5bce28623aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf300a0-cbec-4330-beea-145d509db062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2175ef0-30bf-4100-addd-71b7762c5a27",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c3390d-9054-4414-83bd-35e54a19391f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90c7726-83d1-4d27-b635-82fd59c4ae2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce09344-544c-4ddf-92c6-7ed6e25f3821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5473908-9db0-4a03-bbc7-08f1acba0bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566528c3-2097-4311-a9ca-63708cd33542",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f8fade-5e4c-4e83-9c48-4ca78f4d1a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a132bfe-6597-4222-b362-94c5f985e75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5eb79ec-e3cc-44fd-bf6b-67aa0b18e39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fce6708f-9f24-481c-acaf-cf6108076d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5c175a-e51f-4ac7-89b0-4ae671175e93",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a8eed7-9ca6-4e3e-9a5b-fe7478844425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab448026-f1aa-47ca-b19c-74e94ac9b2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37eec6a8-3b92-43ea-957a-2c4bfe9327ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e296623a-c3b3-4667-a988-05559a3d24e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e85b09-cd30-40d1-8d82-26475939850e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63de45ca-eb82-4e4f-838f-cd236b786794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34f7de2-5120-45b5-bfde-664bf320547b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9078e36d-d03a-4726-b51d-ff75428c3a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a21bf4-fe3c-40df-9cbe-a1cc51b063ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a72697-544d-4113-9ec8-1a9671c10744",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac22f7ce-659d-44eb-8c5e-636fd5853e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1fc8c3-0a4f-4ce8-a48a-d0ed19039d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e5c8b6-5937-4b5f-a43b-eef47fadc0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03381a6b-0112-4d91-a2c6-be92a643a0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cc3dc3-cf8f-435b-970d-64faa176310a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a820015-dfc5-46bb-b086-86ee1565559b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91baa2ac-ddd8-4a44-b5ff-74d78edb9451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8423d875-400c-49dc-bffe-21fd49266fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dba1eae-2a49-49d7-ad95-363a3d306591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6729f934-2737-43e0-8452-c7d50909ab96",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee7d229-4a88-4c66-9546-950652536a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652ad2d8-cdc2-404d-90cf-54bb72916706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d370031-8ad9-4116-bb23-ff6807512209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3348f0-93b4-4b69-81ef-fb3fee87f44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9acf0fb-4b8f-4225-9b1d-831d317ab946",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f14809-caea-4bb4-98c1-c6f97a66b299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd975c7-a97b-488d-b9bc-2248be273d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148ccb01-6e01-42a1-8bd8-7d8022452a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "815d8a6d-8e28-4ae8-be1a-97ad6aecf0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2c0083-0d9d-45dc-ac41-b24ebc4122a3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0267ef6-c648-466e-aa3a-7f9416cdb94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6136b931-a04b-4890-a205-7d1ac35a9ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a710c76-c25c-41be-88d8-86feeeeab540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fb6465-4a5b-4d2a-8e0d-91933905ee1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5428d8d-eaa6-4c79-b3ab-09de655d42f5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa244e8-3f66-425f-8966-d89a76f707f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da297c9c-58cb-49d5-a1f5-0f3ecaac9885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d165d174-c706-44a2-9118-82d928312630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b446e110-1c80-4d9c-89a8-a163f6d027aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a250219e-c334-4408-a246-fc2a1537fccf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec01a649-d839-4a06-9266-8d7e8a7d4528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e5391711-796d-4829-b3c2-eb0754d2cc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29cb412-a8fc-4a3f-bbcf-d85aac584dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "584168cc-b9f7-49d4-b6dc-890bb04b4ece"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4f588193-723f-4d2c-891d-3fe9b1a98d40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "270a1268-88d4-4fa3-9e06-33a589e86d10",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5f153e-9561-4aa2-851a-70a33e402867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "265b2118-935d-4219-9864-4a367dac1cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3913d2-1a13-4966-a378-ed56bd741c22",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d01e6185-d669-4c64-95a3-3d78ade60ff5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b72ad9b1-1115-4c1c-9a50-f7cba2a3c381",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0e09e4e-3653-4bd5-9c5e-3d73f05093f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32c218ee-fb1b-40cd-a5a0-d3d1bda8f911",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26d4a53c-ec22-4d58-afc2-4ce4be25928d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "67a0d823-8577-436e-87a6-f3130bc8fdf3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cfa56e83-29f9-4072-bb5f-3d85dac9ed47"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "650bbf78-f1f1-41da-adbc-2e97392893bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "878fcc60-4189-44fe-9aac-8d1f41c81a23"
                }
              }
            ]
          },
          {
            "id": "e9fd0d4b-a3a1-4918-a93a-a50fb725bf26",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c949db6f-3c64-4fd8-8bf1-875936a17503",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "de02fba2-3eb4-4e62-9baf-94f521802385",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e941e104-c698-4b58-8ce9-10b7dcf42784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "57d5f0d1-d04a-442b-825f-3a84a01366f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab99043-2407-417d-a938-9802b1d20949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2a57ab-d7d6-4e61-b9cb-e8f17f5aa441"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1d973876-099b-4f7b-9cda-ef3f7bf1947b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "198414bb-3db6-4d91-92f0-c7e62003a973",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2672bf89-5763-4d29-a4a2-a50550add740"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fbf059c-5693-4635-8245-c438b1256552",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c08e3357-58a7-4d9c-b06b-5d4b76a772cf"
                    }
                  }
                ]
              },
              {
                "id": "f01bc330-c90f-4339-8ba5-a9776589ba69",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44a492de-fdbf-4ecb-980f-e233df5ac517",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f82af6ce-8d20-4f80-8d2d-2b806ab89c2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6225b079-46ce-4acd-8601-8dba69e1807e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0da4e3e9-53c2-413e-90d0-cebed7c3c31b"
                    }
                  }
                ]
              },
              {
                "id": "4b79d531-f014-4e1f-bed9-753fbdf64ce8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5486a83-1034-4e4a-8c9c-c93ba2e6f349",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b41e3f70-cabe-4ce5-a9bd-2f7ce048a652"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18ecceb0-fe02-4d17-ab40-a3e00c0958a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6e152fe6-ea54-48cf-b1de-7b692caa17b4"
                    }
                  }
                ]
              },
              {
                "id": "470d4265-c5a1-45f7-a677-fe5a1bb6b757",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd2545cb-2263-4cf7-a462-b64fd0bc636e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0fbe1df1-8371-44b9-8bd5-7c0d760fefd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c33074ac-2d18-4960-b54c-c8aa224d8625",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c0377cf6-120f-47b0-b30c-469ffd76e603"
                    }
                  }
                ]
              },
              {
                "id": "979d6e19-6ab6-4e5e-b651-7b1ec438a141",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9db72b64-b793-4661-94df-f73cf8aeb67f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7767f0e6-6445-4d23-bab9-dbd6f7d054a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b539499f-ff8c-44e5-9406-fd5119e415b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "113a1e06-0f09-496d-b264-22b48299d1dd"
                    }
                  }
                ]
              },
              {
                "id": "47d62637-83fe-46e2-9bb9-298a9defd80d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae49111a-6887-4a35-bac0-3fdc8a5f1f58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e580ab8-96cf-47fb-89c1-bea86afd36c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1ab715e-8185-4d6b-9a40-51a9ccc5f80e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e071648a-191a-4b81-b697-71a2091ae09a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "488ca7ba-58a1-4660-9844-e6d689148b58",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce0e2940-4726-4597-ae61-a80578821fcc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "56a1a89f-5774-4dd6-846e-3cb03537d7ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5df4a67-185f-4f1d-bf66-02110272c2f8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb48cc15-f10d-4604-ab3e-f859d5168495",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "63735744-491d-4bc3-9c00-75d95b45c819"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3174309b-8261-4030-bf50-af36dd57d2c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e08950a-62b9-4efa-a217-4cd266f07eed"
            }
          }
        ]
      },
      {
        "id": "4680b5c4-a764-4823-b7df-fd274f8ff9a2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "32a90a32-10c6-4a51-ae00-263d0ccbafc0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a513989c-4f21-4b75-b125-8041cdb5c884",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1e1a198f-cd29-4e58-ae07-d6927fa20df2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1aac4c1-072f-47fa-9038-ed67091d84d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc12f067-25de-4f2d-b2d0-8c9d3ff3a824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d4cca4-08df-4eb5-ae4f-7f24d82d651f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e764b3c-ff9d-4d87-a205-6bf033d4e5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dd58fa-b7b2-460c-a0da-2b3535fe66fc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c45517-bfda-4349-9645-ef35baf073da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e172f712-36bb-498e-b5fb-29f6ff1be79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba64cb0-ed64-42ee-ba29-f1c65d3a658c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd90147-2e75-470c-be0a-05507da8f8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2264b4-adc1-49ae-83c5-ca513f8ae31c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ef2d07-e698-4dc2-95fb-ac47229686dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e367aab6-3ad7-4f94-8369-383dd650b4e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956a0b1d-1daf-48ad-abc3-51098e2e246c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f784cc5b-131c-494d-b3fb-43484b5b9bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db1c886-d51d-497b-bff1-2581872b6234",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b278f13-db54-4498-80a9-b0ab1b4ccd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51eb2a5d-d88d-4710-8b71-cc2c4804d91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a0ef54-cc50-485b-a177-b659bcb333b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62c4ec23-7f52-4c63-b3ec-a9e618c9cbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a34095c-86d4-4ad5-a703-be1f2fe70669",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cefac14-964a-444f-91c1-f56f78a62294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d14c184-e81e-4284-b2eb-9bd994796e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c67a8b8-831b-447f-acb6-847afaa45f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83468c5d-d6e0-4b07-b15a-041503c250fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f4099b-5978-4dc2-8076-2c4e1ae34e94",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00143a97-c037-4db4-9125-25299540a742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb66600-f13e-41a8-94af-3ccf3332fd14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a329ee0c-d87a-4db2-8b81-7a94e5c95ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8601878d-615a-4dd2-8c7b-18026d61fa21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359f8a31-b957-433a-bcd4-bdf68352da3e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de4a885-36ca-4e96-878f-4e59a8bbe9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9f5bef-40c7-410b-bc0f-d6f322515a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46abce5f-7ea6-4aca-a938-0c9e49424af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "84995aa9-5e56-4a19-bf93-4a8427a96ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b792f2c4-8dc2-4e11-adea-3e9ea3c7ac66",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bcfb98-bd39-45ec-b113-b93a705e4e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac0e12e-a649-4cec-88f8-dcb9d22571a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53288a44-766e-4d9f-ad77-5923cc0e1367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c78bd42-7b98-493c-b65f-83a4803a6485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5223fad-bd3f-4fb7-aa49-77b2fed1ecce",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356bc785-5839-4c3b-8e6e-608b9b371e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2e5440-3b47-4064-a01e-8040c8df9264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f0964a-0475-47db-aa9a-9c46dfacb2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e011018c-a782-4826-a0c5-c2796355189f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4356d69-156d-4aea-bee5-7ea79f340e67",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c86146-4be2-40d2-929a-949c03bfa09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe52c88f-2310-418f-9d4d-c8c87d019a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf6433c-d9ff-420d-a3bc-30ff1ff5e4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4916abfd-c5aa-4a7a-b33c-472fc952acbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf406c8-b330-4f60-94f4-f9046efaf727",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e34b7b-e8ab-437a-b4eb-b0ed1d62aa9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c428f316-9bf7-4529-9a7f-75afa1398a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca24a18b-f5a6-44d9-aefd-a343222ce992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8a094775-1929-4cec-a120-b75cc3809e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1169d391-ed77-4944-91a6-dbbfb10afa4e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67a4e6a-ff49-43f9-9154-9c99d7156741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda5e44f-0087-48fe-a73f-926c48b87c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5d0a85-3b22-4373-88d6-b8686db0d13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e72c22d1-5e0e-4715-b3c0-870c41851bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e24e71-c7b7-4c58-b7d6-fa882d0077a0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a267d5-44f1-49a2-9ffb-99e4fe1f5b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc26abaf-c1a7-4c4c-8d34-2e1101e6bd9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4540aa3e-10d0-4b2e-9d48-b3a2ffce93ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7411b42-8f84-4c74-9b29-9051dd2a235e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136906be-7230-436d-9712-347b54ffb30b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d350bd-cf1e-4fd3-ae68-c60034cbb26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbfaeb1-d164-47f9-be95-99a57c5c8e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e8682f-c916-4083-ae5b-6b70b92800b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7b77ba-16a4-468f-82cd-76166ecc6bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c9579c-7878-441c-a867-8c81741e396f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a800e23-e389-43bb-a9af-a17e6fa446db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5b7fc7-271d-447a-b9e3-2d68f676d063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b01154-a72f-44b7-8b0f-6d08787dfd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5984397b-5e68-48d7-9f0b-41de29675291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a571a7-9dc2-47c7-8ff7-4ed91456b408",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f5cfc8-696d-4d35-99ef-3601586f3224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d6a156-00e4-41d6-9557-54f7c697aa15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507682db-917d-4c9c-be77-6dbbc16eade6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6085aec2-de94-4eff-a2bd-d83728f38159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b7d84f-6ae3-47a6-bd3f-99f7340148a1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e31311-5446-4a5c-b63d-66f0b5f7bfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3bfcff-8104-45f4-b655-7f1283cf32e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b786feac-bce7-4cc1-8fa6-bbed87168a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "896df106-685b-45c8-880b-2835da7269fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b9231a-4180-49c4-9108-d42d8fa43e61",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ece8a3-f5cd-4846-b3b0-1591f93f8166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774765f9-cca5-4ae6-b4f0-bae565ec4f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c896b712-da2b-48ae-823c-37ffba1f2626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d27d12-8022-43f1-9908-61e2a0cee366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a06e31f-9237-4826-9baf-e18282f6cfe9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1901d842-8ecd-4a2a-9355-2d3e372d2f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd85b78c-d1aa-4fc3-9d5f-69c23a68f4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09122c95-2622-4826-91a6-55f473aad1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ee57fe-d796-4449-816d-4a205a9b465d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bedd38-8ca9-4642-9764-60929fb36ce3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e717b27-6a17-4285-92a0-0abe03e69f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e930642-f5f8-4a12-980a-be2853b25782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb4f382-d03c-4ec2-bcb7-66d0450de364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7c4735-0fe4-4ee6-92f8-7e4644e44255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c75d17-4206-4941-afdc-c0c641940445",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11aa528-a727-4fac-8e21-137f1e655b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb012353-e4d6-478e-b650-6ae80ba94207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1b0d7f-bf81-419e-afb1-3aa8201d7ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e28ffc-6c9e-468b-83a0-a3d43d4fd721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66733671-efc4-49a6-8069-9d8f04a03a55",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca36c14-3899-4e58-8538-84cf67bc5e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b61935-abf9-43b1-a3d2-cbf428e81397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198f08b3-3d69-431b-96fd-030bdebb970d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac785fbb-f766-490f-bbf5-607889ff4153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ceaaf8b-c3eb-495c-a340-bea3a592d5d2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861f994b-f54d-4e10-969c-e3a6396aedc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa02a6f-0e77-4410-8e7e-a0eb2d37e3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0cf46e-481f-46ee-8916-0bfb994bad4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d23deb9-556c-4e33-9dc8-0b94b2e98364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b2e7c5-6353-4da4-8acc-aa848fb3e564",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345aff8b-76e3-4fcb-819b-dac093e33549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57355e83-d731-4f23-9655-ba355ab328ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1dccc15-670a-48d9-9d5d-68e5d71a6a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80440254-6e79-4578-9859-1266e661d525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2498b31b-8e16-4ec2-8a41-2cbeb52f95bd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb2298b-c8a6-406f-99ba-603e687e1dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f569a52e-ae3d-4e5c-8c30-3682181d4b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1559399c-7c99-4197-a6d7-593b59cec2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26d09328-7fb1-41c6-9797-9345d555b12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572ecbf8-5bac-43df-bb1d-dc549f27e98a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199df2d3-eb1b-4c8b-8f32-911727fe7433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9fbfe2-cafe-41f4-8a2d-7cf464994c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2948208-1372-444e-b6c6-8ca1258acfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d74e290-3d9e-4007-85c7-c584f8dcf9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f74a38e-576a-4f6f-a33e-970e91b05201",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5448101a-fa0a-414b-9014-dc9d1812b6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e156486d-70c6-4ced-898b-43a31fbd3ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f66e5c1-a82d-4bde-8124-6de20fa415d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c31295-db20-46c5-a34a-f7d4eba470de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c1f3c9-23ad-49c1-afc6-0262f5a16a86",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ffe14c-8588-4b07-8d46-304b85479f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31701d68-eff2-4e25-a4b5-e4ec02f000b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b794153a-5c0d-40de-b918-0993a069b94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68faeef0-7307-4bb4-b004-101cd4a96fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d6cd08-310e-4a47-a4ec-0d9bfc0d2605",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de61658-bab7-43c1-bd8d-2b79f171edd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04dab83a-9ace-4c52-b992-4824062fded9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23275ac-b0d3-490b-a9b4-9d03ef27c68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2d65a9-9c97-4481-abef-4d4aad7bb41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04db3e04-14e1-4cc5-8c7d-1dbed5d0727f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010ca5f9-92ba-4c5c-b036-3d7bd0475f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85cfc0a7-0cd0-4656-808f-72c53a99ce94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c34294-7d4b-4a53-9729-3c2838a09161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "077bc93d-92e2-4939-aea1-f8b2d806c754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d4a60f-d767-4769-b165-23968706c33c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214e9df3-c7fa-4ad0-adab-6ccb0c3bff70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedc1137-3f49-47b4-a135-957b6710f441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde87e32-d198-41c2-a7bd-f206afef4188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46828ab8-49a9-46da-a3ed-ac2b9e274ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09523cd6-4398-46d7-aa78-8537d44bbb04",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af47d20-a0b8-4b6b-999a-1c8efe95b9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1bd6918-f6e2-4c1e-98e3-e7a6d1f45d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d91e82-a402-400b-a63d-3e87e71e5564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78ae951f-a9fc-490f-96ea-c5194286123c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "88b39bfd-6a12-48a4-a0e1-c59210161c73",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f648d4e-b512-493c-bff5-247bbcc35973",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e302f23-cf45-40d1-ad68-b2a1d43235a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7d78ad75-40aa-4a1b-b040-a1a542a70a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9a09fb-1be5-4856-ac16-b91bc9fc1f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afb53bf5-4fb6-4cb3-8d53-a57c60997320"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9ccd479-147d-4d62-9362-2b01e005931a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a0b4aba-719c-453a-b5a5-29d3acdd6f18"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3efdbf45-8b18-4be7-925a-6229426e2f78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae41385d-11f9-42f2-a239-755ace69b012"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f236c0f5-4f8a-454a-a14c-970295973a0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc0d6c3b-5cfe-4e85-a865-52617f20fcf8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3f14eb9-01d3-4f08-9ab4-1ae114f08f56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3c75581-e717-470e-9463-120b7855acaa"
            }
          }
        ]
      },
      {
        "id": "9a368be4-8908-4ee6-9f09-81ddb244aa64",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "90ca92b6-69b7-4101-be01-4c90c4f6a03c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b459082d-d4ac-4317-96d6-6e1ebffec863",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13b2885b-a4cc-4240-9bfa-e6ee3ba9c11b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb6f00d-ef3f-4a9f-82d0-adc5a92b01f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039afad6-a721-48f0-a562-cdf9f5f1abc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3810f1-ac70-4fa0-8e8e-8d6832c7ba2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "72c193c0-cbe5-4d9e-930d-140023d1401b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33004bc-369d-43a5-afae-f0eb5b441157",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfa07cb-5cca-498d-8d5b-695032dbffbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2603046d-309d-4783-b00b-55d156610631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331d3001-ee14-468a-9598-6722f23c4c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "284c8beb-d9d3-4fae-94a4-aaada5281d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c79cd04-7ab1-49f5-82b5-fbbe1a154433",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c117a2-1160-4137-ac72-694274704698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73aca5b-e956-4a93-82ae-9f74862e0ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a18003-4d3c-4b28-861a-eb93cc300c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf31159-f78d-43e9-a371-66f323b350ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b77e04e-9820-4d60-b372-547f29fb54de",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf834273-133f-4f32-85e9-09f0805249cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f50e3a-0a62-4ff0-979f-f46782096dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f35883-1a17-4055-86cc-1dfaf70705c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba005c4-0ddd-4528-a863-92eb3be6dadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91fc7c41-8774-4e96-aa3f-0d7b7a286dcc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657f1683-d9b8-4929-99bf-a7a2ac9142ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c4caff-9428-42c2-a40f-7503a06b6951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1bc6e3-34a4-41bb-99a6-d92a03a6c142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f05fa637-6c18-444a-95eb-2294471bc8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3580f5f0-e0f4-4502-922f-c9de018bbdbe",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea078945-869f-409c-bc97-5cd7828d3af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4e151e-ec21-4fb8-9ef9-25065d797268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2daf6d8d-b1e5-4fc9-831f-49de05005123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03a9bd94-28a9-46e8-affa-00ee0ed960e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5934ec5-a5a8-402f-b0dd-b3c5de36f3c5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fd2000-e3cb-45be-8df0-a0a6384b8a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cb8e96-11dd-4f89-8dbe-809dca15435e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa79128c-c795-41d9-9f8d-81f2a25b8026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6216839-8441-404a-a5c1-c85518b4d358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109a05aa-133d-4543-9001-74bf24f00403",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71555c13-aadd-4155-b1a8-d38716dc56b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ab3b89-8d2e-49ab-8267-a8788ebf49fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083e7d98-048b-480e-9a48-f536ad0cafb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f800691d-5eb0-469f-b031-c9aff31f3e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a74a49-51bc-407e-89c1-4d2a2c896c43",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b4b149-76e6-4e32-a47e-659905765284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc96d6ad-3207-4f49-9bd1-ce5b054cd7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d504be42-d204-4004-af5a-00e2be8f6106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c566066-89fb-4e28-85f7-263540743a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d9c40b-0c9c-4da4-985b-95fbef6f0e6e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a6fa3f-f6cd-4c45-9b21-dbcd06436487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f009037-8be7-4468-9b8e-6ed15b28ac08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0c6e07-2a1d-4329-8a97-e4b70882b0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27b76e5e-cb69-4cc5-8980-8442b0f98a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3a055d-95db-46ce-8e09-b2ecf49e6727",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5604441c-c9a4-467e-985c-80d27321337b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c9a3b2-fde8-4b5c-afab-67492a0dc583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c95b5b9-a743-4fd6-94c7-d4cb0bd0a3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd0d145-488d-4b12-8ae0-bcedb0047404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237a5c47-a9f4-4929-9678-caa64fa535a7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91ad1f4-ce2e-44e9-a46a-71f5337e9721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc572b2-17cd-43a6-a859-b671b4d874f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11dcb4e-d79a-4e99-bc63-170eb0e7b52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45c4ed43-0cbc-4cfa-b225-b9a455e2a6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d9c8ff-3995-4c12-93dd-e889c8e1cfe7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe28826-b8cd-4440-a509-fafd9564d14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7fe58a-1b74-481b-9eee-59e560fec079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee95183-3502-4b9b-b5ca-4df571146a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c6f16f-74ea-4008-917f-60c669c31bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d448324-e0a0-47cc-ada6-7188af7a2c91",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe8c68a-f264-4502-a7a0-8f1cb81ecb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d610881-e99d-4cf5-a659-652517014eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022b1187-f0f7-4474-a7d8-3a2959b80fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fac72ea-a193-41a2-856a-74b2bbd2884b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6bb2d8-e238-4398-9865-3cebe2e91e86",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9f4dc0-9c4b-4a61-9988-a7705ee1b1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c2aabb-0a6a-4428-8364-2868507a85d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82759aaf-b4a9-42cc-891c-75384f00fcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b867a3b4-a15e-47c0-ac40-ca5dfed6f349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf57c1fb-3318-41f8-82e2-175e994daaf8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c83547-de9d-4470-b75c-7e668d377f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8519a9-eab2-45ee-a766-1a0edb13bd07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f43f8a3-1dbc-4ac0-9ae2-505d95c7a564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7f1afc-9dc3-4750-84e0-c13b09220cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ec610d-da6f-43af-97ac-e4b131c9de90",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a73869-1db7-470d-8482-4b4c477e955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb80aaf-ad59-41ca-b841-54bcb9443bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d18758e-1937-4fc0-9cea-e29bee8183c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "30f8d410-297d-48c5-8f97-33fc5c9c67da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253ebe18-3a66-4e55-a62f-f1e0c5ff9613",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72057bba-2820-4d57-91e0-fa1909d985b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a53ec8d-eba2-40c1-be92-70c326722852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80fbffe-2b9f-4ea7-aea5-e239a175685d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a170f29-0dd8-483a-8d07-59366354f4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5a36ed-f388-485c-9b11-69d595051506",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91109aa1-da52-4e1f-8499-5a3ee3a25e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa4d978-6ab7-4465-9520-bc6a86449612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15cdc83-fd77-4432-9627-6996f5d39f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3de2bfea-7dae-4844-92c3-b0b0bf76e0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8849006d-9aab-4565-b609-51fff701c9f5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cba8059-b406-4d2a-b398-03cefa6a96d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c19f2f-3f14-4f9e-90d5-e41e46ff27ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcb73ce-2f9a-49b9-8cfd-0471d976c38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9d533f-cfb9-41d1-964f-36dfa5cd3334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d5fa4d-cff6-45c8-ac0d-8ff51c860db6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbc7cca-7004-4ae5-abee-eb6094c6eb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3934af-d5e0-4085-9ed2-6d57732ca31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8cd1cc-df40-4224-a65d-6ac262060929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b632f7b8-2a23-4128-b07f-466f8f71b6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11dbd7a-ff6f-49fa-985f-d59210adcb17",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dafff3a-bd30-4ee6-8601-3ed70a23c7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbe5869-2c9e-49b5-8d20-d5db0c6cb9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb15d56-4697-4760-acfe-2dfb2d510fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87146610-a525-41d7-be47-9e4e7eb802b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b80921-ed79-4410-b4fc-4409b346e3de",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f01c9c-e60c-4a0c-a793-56792644ae59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa2a946-f697-4252-ac43-7a614f40732b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b762d0ac-e970-4464-b06a-a7b44dd1c9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a541e415-5b5f-4144-9c91-482cbcd84d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e219b4a6-dfb9-4065-a178-338c96311744",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a44f60-4732-4c95-8ffa-ff29e9450a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08be9e81-f628-4f0c-a144-c71fffa71de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1729a379-3d9c-436e-9a9d-2d9b6120cc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3112c239-6c58-4b01-8c21-54eafabace13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9bfcbb-9ce7-41a8-96f2-99facd300fb7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dc08b8-6d73-45ba-a3ba-136ae6dd9de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac38124c-d506-4956-a02f-b6cdd2a7283a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0eabbfe-f64b-4a6d-8cf1-ecbf2b3937c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc23008a-1fff-4546-8768-b525352d9b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1e8d5c-0e0d-407a-8e60-c1e387f22e1f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08a79bf-0573-4f38-8634-5ca1a88bdc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cd2fad-882a-4999-8115-7a029c095dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6733a038-a91f-4d8f-a975-a5a5d7e70d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "685cdfed-0fe1-4898-a788-a88b512ff12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6a1ba7-0713-4b86-a2ba-3d14e8249faa",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1a715f-1925-49dc-9bdc-14c83d70a418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ca2677-e218-4382-bb57-fd2d83a92b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0f2984-d1f6-4c94-a89d-5c0a1d1b8366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01477555-d966-4f86-82ca-c59b5abb368b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e559fa1-06d0-46eb-9680-157ab67ff772",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9644d2fa-db94-4b06-8239-d7d158278ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1113fc-a7ae-40f6-bb9f-f38d56762197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7560b3d1-9761-43d3-b713-e22e61fba63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe48069-a0a0-4be4-9f89-f00360f5a6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae350f0d-00e2-424c-aaee-aee07b930f48",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b4160c-c357-43d3-8fc3-87878e9ae996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94c7e74-8e53-41dc-92fc-a464b5f46adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0d5bbe-77ce-4362-b025-d43a5022409d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c56bdad7-9fd0-4677-86fc-2badd041d936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b305320-621e-4705-a1b8-5073398c5b38",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be981ffd-50bf-418a-8fc3-b8d586cda430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b9440c-7f04-4712-ab56-e32c063fb591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f77cd1-0d20-4ccf-976a-8948f4fdf534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "074767a2-bb7e-426c-b971-b26a70f412a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b09ed81-54dc-4bfc-908c-1e5f42c93561",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ed379d-dce5-4040-aa66-c682f06db85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271e80fd-b2eb-430f-b7a7-c630642500fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe046f8b-7572-44f8-9960-52afe88075d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4685b1b-f51d-44af-991e-a90010965479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21f0b9c-267d-4423-89c9-e65b5143b5c8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca6a7d1-7ce3-4e03-916c-a2f5254539fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac2d6bf-24d7-470b-ad8e-c643f0114019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4e5e9b-c494-4932-963c-e72d44199a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "244a3fdb-5374-4ef1-8763-d76702ef7fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafae636-3739-489b-b70b-ec8759d1e425",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a732a35-27a9-4f72-a58a-a8ef7f6d63b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c6ba6a-3a73-4ebb-b5ae-005657bc70b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66aac443-56c8-42bc-937e-e45ccba6e622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ddac6b9-25e9-49c7-856f-0b4c617961e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7af0677-bf1c-4cd7-9f11-583dfcb30ad3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7843752a-719d-4cf6-8dab-4dac0f80df5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855cc501-5f22-4593-9d66-4ae3eb549ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a7a786-e4a4-426a-85cb-b891c7790f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26477911-0a8c-4e2e-b47c-2da81575ae3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f113836e-0f51-4874-9dc4-b9ed257903cb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de857ad3-eafa-4826-a588-6e60fafc5e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894fabbe-41d9-45b3-b605-2bd0718e1888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e6103e-49ee-4579-b369-3d87e664dd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0204bd69-afd0-4a4a-991e-5de6a28579e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e619d3c-4c98-48c3-af41-19c193b0a5ca",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06562c9a-61a3-4447-b7ff-a8f8cc195c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc43e08-d931-4521-9b63-b75da842d4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a94449e-7f0f-4077-9e7c-96121fa24dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58a35a8a-b4ae-44f0-8724-5bdc8a5bb2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee66ed8d-7ee6-4c5a-ba28-0cce7ec9a85c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02a3a4f-18a7-41cc-94ae-3ab167b53ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80977ac-38a2-4b77-8879-be90311f44ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1345846f-d65e-4463-9046-2506c31acb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eba6b37-1f1e-4ef4-bc81-55cfa2f2e792"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "38aa86fe-1ec6-45df-bb4f-eaa8dfc2a11e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6cf6c8fc-3647-4578-9aec-9d4f49f5ee22",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb7556e-3879-4013-b209-de52db4b4627",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "58d8f58b-1541-4319-b400-75ff43999072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8cd1dd-7ddb-4e79-a914-7837dca850f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f204937a-93fc-47c3-ad68-f2d359cc6a21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9743414-8c90-4371-99db-7f882f6f1e27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87b454d8-6b26-471b-8781-29ddc8373b88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0f3e137-90c1-41c7-81ff-775339cf8d1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ccb9c4f-1a3e-4b5f-a7a7-b18b043888d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26d56c93-e612-4b29-8cf8-69ba1149152e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1c5a8cbe-8aed-4b8f-842f-d538a4cc504e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9909396d-0c5f-44a2-9d82-f9b4eff28cd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5db3d78a-28be-472d-b154-5e53dd7f11df"
            }
          }
        ]
      },
      {
        "id": "720c5c8e-106e-4e79-ac4d-847cfb55023d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "406a788e-0b44-40bd-bf6d-3408d8c45ad7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2bdcee3-f30d-4806-99c3-4764bdbaa73a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6ab394e5-6182-45c2-9e1a-a5c78ad6de78",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ef5ca3-05c8-43e7-8549-cae7e07162bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f266fc-61a5-4e52-b4f2-5acfc06d15ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c336fc-52c1-4d82-8eb9-42bd80b871ea",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74cac9dd-f214-4a4d-8b89-fa186df023bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8a9c3c-b6c9-4700-863a-f43b45d12810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af13b809-21c5-4f00-9adc-7603a7dc6495",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbb9222-dd0a-457a-85f5-4814d0b63926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f37d65f-db2c-49a6-bb75-f909be0a3e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3be363f-f91a-4c6e-a811-207926b57bc2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ab777b-53fd-432d-8750-d05a79373cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90c4f97-c0c1-48bc-ac70-e5795339c786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d01b8b-708b-4bd1-9298-cb79ac15d504",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2a7cd1-123e-4b45-95b3-c9db34208825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57821975-705b-4771-ad7e-7c501cd4ea61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8673d0-8337-4261-bf76-4dee6f4d583c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68b06b2-7632-4b2b-9ec3-f20c50c5b52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6925b07-880c-4282-a635-5ca263f9b860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e9207b-9476-4d5f-957a-b2232a2f4a02",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d75f1f-4a04-41c6-a757-55a72448082c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8fe864-a941-4c25-97fb-393eee673642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22d6a68-a347-405d-a062-9ec9292d63fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5c3981-4150-4b2f-bf1c-a5541cd4d956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0437a296-958d-4007-b0a8-53e5e339f1fd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b65474-f742-4dd9-8652-45dbf9e9d0db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa1627db-8e47-4e55-a603-a552aa66d8b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95da753-b186-4628-8d5c-15bde23516e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207edef8-9521-450f-b37d-6af0021ea970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9061a8ca-b6ee-4920-8257-b2fa92f52d82",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b62420b-ca10-4c4d-8d92-12d465e0f0ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ad41846-2ec4-4630-b615-e3df83be611e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fde186d-ed07-4fef-9f02-3f13243f4226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f2d62d6-8fc2-4a4c-89fb-7fbc318a5c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d823fdf-03bc-4d15-a4cb-55ec07e60e6e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93992e79-c25f-4b62-beca-a65df35b0e76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e068632-402d-4027-8240-46e6a906f7d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6fe4b0-1534-451e-963a-ad8a033562aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085a6c7d-6290-49b8-be8d-9b049f69682a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db38de53-ce23-45d2-93a1-c15a1251abed",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374029ec-fe10-4957-b816-dbd097a8ac87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec6bbac-baa2-4704-9390-b64a98348fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7518d656-c67c-49ac-af08-3da3335c1a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1340db9c-2a9b-4b6f-971b-925a98ed7b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626b59f9-5bec-4dc2-ac9e-173cc7d20cb7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1ebb25-8e10-43ee-9a3a-25d52b772f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71d4fee-0045-46c1-a4de-c4ddca0cebfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9837b6-5086-4586-953b-d4a1b6714037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba4d8f1-3d9d-4ef5-9b13-8184ad436738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca062082-8cb0-4398-970e-28b1ae619bc3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9313577-80f5-48f4-9fd2-a92424bc8c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2248cc10-2834-479c-93c2-4aaed266427a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa577b36-ac91-4c0d-aedf-a22b36167476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f715007a-c958-4744-9eae-390ba8ea8ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8f8150-2662-4067-9951-73817dabb197",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8af95c-c072-4848-9676-b7e864e54bd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e065318-a24e-4fec-990e-c4c023255227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a4374a-a1a1-4c4f-abf5-b0450620d51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "036780fd-8111-41eb-a4ec-c59cabbc643f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5197d2-b782-4ae1-b9ba-60c805cc8e53",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9cc343-57d1-439c-827b-7f8620b2b48e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d01f549-4da2-4a1a-b048-155e21e8e6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16702cf3-4658-474f-9ae1-f372bba8fc20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249f08ed-ab50-49d4-9604-7e6521138ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85af2f80-c99c-47ae-943e-01076d39399f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53f38d4-dc09-4cf0-9465-08c34363888e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51996a7e-258a-49f6-b262-1974d499481f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4414da-1206-4df2-9ac8-03c3f9231d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1791c9c8-b481-4fca-8517-f2299221b21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666c7161-efe8-4a7f-9b46-102675cddca4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237d6f0f-5c63-4110-9800-4d323051998c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4664dd50-ae8a-448b-bd1b-f41f76a6553c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab1cb33-0cf8-4c4d-8449-7f08edecac6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ebd57e-e158-4172-8db2-82da8e77f6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5432c42-92f3-418c-9814-8c9e9979cb0c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5dc166-e18d-4597-b8de-0a492582278a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb22d814-aa75-4c94-a50e-6f8546609a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f5984d-182e-48a6-9750-befb61c8105e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5be4e53-3ada-4e52-91d4-ecd9197fabc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c391ef9d-7845-43e7-97c6-751749c2b6bf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee75fcc8-7fe4-4b9a-9803-79458819e218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ffe8ee-20bb-4129-8a2c-41f9ce4cc900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2de1b7f-184f-434d-8673-4577615dcc8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a6db6a-537a-4be9-a9e2-0d187ba4db07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5096389b-ae1f-4efb-a83b-7197c4798650",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d6d13a-8113-480c-a54e-43bdb4c0cdc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a52485-8970-4531-b603-85fce00bc669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92db3c00-866a-4c5f-9f19-3b51c8492b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f4c5cb-c204-4935-9edf-a729ff75b8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cf96fd-610e-4514-98d3-efb271c50913",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96777ad-3e62-4c9a-8889-5a91f1d70d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923c77c5-2199-4caf-8d8f-610f7e7e9e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed60c5ea-dd17-4421-8e41-fb7c489e2803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29eb1b11-65ba-45c9-b315-c670c040d2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5da700d-f9c8-4a89-91f8-eab7626c2801",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837f33f3-9ef6-493c-bcde-46e8674ca003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f8c523-ae88-4215-852b-61685987efbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "041c5851-4e21-40a3-921f-5ef91473cc9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51cb7a47-ac5b-47d1-b414-6a7f03e1261c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93494eb0-94d0-4d3e-9318-831e48b52ef1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72043373-7827-4871-a7bc-de4d0ff75b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f2bd94-114e-48f7-8965-ea12e7519340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64206804-0741-4166-ad3f-a37e449f182c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4cc2f8-ae34-4308-8a9b-bd6d4116ab30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a7e84a-d3d6-4d36-b9c1-1fab31327d30",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8e7fe8-f242-46a9-bd44-9132b43c10d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c92ae240-cc8d-45cd-806c-df245a74c574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f99020a-4f5e-4dfc-95c6-49ce45d44335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607df674-e3ba-47a9-b0c8-eeab15c404df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95898409-66d9-4b11-9edc-a4476d2025c5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6fffa8-4c75-4944-a9fc-2a45ae96ecf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c1079c4-c2a7-4450-b187-8ed183c0a5f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746c5056-18f2-4871-b71b-933c36ba570a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc275ab-e672-46f7-991f-5bd10c2b1a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3faa3a-bd6c-4cac-8807-ddd48f56f371",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346bd326-1286-4843-96be-d313574caee5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcee3cac-b6c8-4e9c-90af-bc0b53624b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f911f7-5c5b-493f-8d85-c45cc63f02e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42c1cb0-0f31-48c3-a3f3-4fa22a2b56a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcf7792-9c6b-472f-af3c-be51e2a332c3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08375197-5dee-4d42-ba25-95ad2ad06448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e03ddb74-7d49-4086-9fa1-fbf7f92e3d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a2d4d8-279c-4a31-9320-0ad2779ca9d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda4bd9f-8bdc-407c-8fcf-fba43beacc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7318bfb5-31f5-472c-812d-8fb2faa24f5b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6493ecff-91eb-4e95-bbb8-2af02d62604c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88400039-5d67-4c9f-9194-c476c1f8937f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b23adb0-c1e6-4f74-8790-02be4a29bccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b9e741e-69e8-4226-aacc-6b9dcd062b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894ec7f6-5a88-4081-82ed-9d4a1f77f3d5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0650e40-5169-4565-9f8c-0a34d6f56e77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33540a96-078b-441a-b0bf-315d2ea72613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb9e929-bf3a-43f3-b426-4bbba0ae4583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efa6642-2d82-43ac-b60e-b82e9ecd3756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058caab7-d6fa-4f83-b515-c1fddca47bf8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bdab9c-3f80-4345-87bb-886176c60f81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e88a6a23-df88-4360-b8d6-b4f9e4c7cf7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb82d29a-20d5-4e6a-afff-ee3cffe3f3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa81d20-be19-422a-87b0-cdc477aff61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4c4412-c045-409b-ab8f-bcf8d305b7e6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebcea2e-f0a7-4939-87b6-88c12599d163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a451b58-bf92-45db-ba2e-31019187c2a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e602899f-65b4-45df-a97f-fdc1331b797f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd1908b-a194-4398-a306-87483e32f0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6a1768-a06f-402d-8eec-e185839ddf8c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb0a028-5bb6-433a-b648-2198bf980541",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aebd016a-f157-4592-ad2b-9b340f200d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e35747-a99b-4cb2-884f-98b3a7b3a9a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83200c9-0388-4858-ba3e-93527eb204d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e3166e-0f83-41f8-b17e-693ce92e580d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5867cdb2-7745-498a-927f-eb4d42252f9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c188f7-bf6e-477a-9a0e-216271a88cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e92a69-0931-4bed-9c5a-6ad2e6cc0482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7397333a-f338-434e-8b34-9e09942c07c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6a946b-ba39-4faf-aafc-adf8d359024b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf729b5-077e-481a-a6e4-817e14f69d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5aee3f0-6d79-407c-9565-4adc6b4009e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d3480e-8aa8-4866-96d5-4ee191f2aedd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e99d438-c072-4cec-9fad-ac9774c3723c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285fa231-3f2e-49e1-a44a-d9d97501cfe4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2644b57-5433-4a21-a658-0cfcebdc0fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39976b23-58e9-446e-82b7-c2af9dd9a114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82747e9-c924-4caf-a8cc-5261006183f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7c0c47-67a9-40c2-a7bf-a43bf6ece65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcc7eb8-79c3-439d-97ca-695ba23c20a2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f051f09-7aa6-4850-a5a1-22ce8571087a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bcbec0d-dea7-4d23-ba66-aaf67c0f8458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba9aade-2403-4f83-8f3b-eeb1488c4ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea1239c-10b5-4b1a-8725-39ab167eb476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1911fbdb-5f34-46d0-8ec2-d3f7e596a2f1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670e6e8e-d19e-4b3d-857c-d6a4057c9ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3dcf15a-1333-46d9-9186-28adcf7ae3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b9414b-a8ae-43f8-bb29-1b05ed438250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005c05e0-86e4-4fe8-addd-ec48f86d6cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5f7556-e5e0-43ff-b331-283fc7ece922",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f765be42-7327-4494-ac42-a73c2f9ee64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee920bca-64ff-4a68-a539-abee73aef8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbd5180-c3df-4cb5-8813-591d8a4488ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251db1d8-2759-4887-b4c1-a61832e65ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3089f314-e93f-465d-9876-846f3af3f39a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57dab0fa-8eb5-4ef2-bae9-eb1ed5d5225b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ffc3c03-7f31-432f-a86b-6f7c4dd2b493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a57f167-b589-411a-a608-fdcd42699cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf67039c-88e9-4cc6-857e-2261dd4f9e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62202e46-c6ba-42a5-9e97-bcf8901073a1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f922a00a-ad71-4ff7-a6c1-0b1ad4f0cbde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00fb215e-4a77-4db4-abe2-b28b097e1634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f1f6b8-920a-42d4-b48f-cc2f05b90dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ba64c7-64aa-430a-b0fd-999fd1c528fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d104c628-8194-4177-b044-862b3b62531e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79604c73-ef4c-4571-b943-fe582465966f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1c4399-8ce4-4cfd-999d-1c2993d51eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73222b1b-98e4-4923-a10b-41f670e76fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78be81e2-35b2-4207-90a5-c30d0a98123a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c77d6e-d498-40c7-9c0e-56cb5984113f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490ce026-693c-4a55-ad3a-044ef9386cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9068e9-7974-4839-afd5-1be13ce90537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0aea22c-a664-4b4a-8300-6f49ba4bdb97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1102ecca-8608-493c-b0ba-316c92cd2eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b55d7bb-4246-4d9c-80fe-be9468c55221",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36b980d-2685-41dd-8077-b3d56ea41163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb91ff92-d692-46b7-a2fb-7027a734c7a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fa2605-5673-4a68-adf0-9a59dfd18766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d3c05b-e7ea-4584-bc31-a88068d4ef52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62699af7-1259-4f30-a05b-113644f123cc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b4df2c-c4c4-4766-9817-fbeccd75e0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7301688-3e5c-410f-aa6a-893beafa3e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7fb262-45ec-402f-a1ca-1837f732362e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b42782e-9ba0-4167-8074-503d6ef346f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e135b912-a565-47c0-b977-571e85e2d98e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae3ea62-1260-405e-94b1-76d4f575f10b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05fae7f7-5eaa-4870-a3f2-e33968e377d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843836c8-d28d-434e-a97a-8b935faf84a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3009fc2-ccc7-4227-8ed1-b6d94d7d8608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf17c6f-202c-461c-8e76-8e0631585f4b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96d6421-e220-4009-ac47-415ba9ec753d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f8846e-1d47-4b2e-8f36-318818049940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c1d1ad-c17b-4640-b145-42b3ed7835ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ae03d8-d557-4777-bf3e-99b5206473d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9588ee9-90f1-45d7-a269-496c30a2422e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becf6766-48e0-4a7f-a65c-501debe43ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec82ad81-05cc-4b8f-a572-5fa49ea6c715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24b3c1c-7802-44e0-b737-363783c041b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768aac68-a004-4b6b-9542-d2b146cc8ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e4321f-740f-4d49-802f-c4fe59509380",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6d8e87-64b1-4707-98a9-00ac1f0ac9d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998ce6fa-a906-4c47-bd0b-fcd9ca27f17b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c8fc44-3caa-449b-b524-fe988fcf9ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa841e2f-d05f-4d81-93e3-bdcd1c42fc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d294869-a55c-475d-af6d-fb818c9440ab",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e536802-032a-40e3-92e0-858237945132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df2ace1-1f7d-49f5-9743-1e5a16909f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13856fdb-15e5-4746-a79f-e10c8639ada3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d4cc4e-dc68-4c8b-bb48-91afa9c01b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f11cf88-b9f3-4170-a769-f97d31948f4a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58be7750-9166-4898-83bb-8ac0436479d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c5761b-cb26-49e5-83af-e95365972651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82197b0d-db70-4851-a153-e43e2dc5191e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635fb703-3939-4cda-a341-f1464feb06de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23dc133-29ed-4d68-a34b-223654a87eb0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f43493-ade4-4cba-b417-cb44f8bd48b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd58fcf-c53f-4ba7-b925-31581ad2ccab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6162df0-7888-4bdb-995c-9743dffb6cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb05fba-184a-437f-b128-1f1cd27accfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a51b25-4ead-4c2b-bc3b-00e171ca336b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21afbfd-0d17-427f-b704-9366e96c7585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d190cf-2042-475d-b2d6-4a502fa6eecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aafcb65-cf32-41a4-be36-d26f24747164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b963a4-448c-4dec-a028-5ba3f650fa19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3845dbb-3a29-4b36-8777-46157b3c08b4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5cccda-55cb-415e-9ee8-916ba178e595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e40b6c6-14cb-4d79-86c0-9572024c6f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0412e44d-71b2-41e5-99ce-c6b67bea14bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3650fd6-8f6b-42f1-87b6-f85c196078c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf3d1c1-0ff4-46d5-ab35-3786ce741715",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e900931b-5b8a-4418-9dfb-485ec50e2a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6ccb63-aebf-41aa-a0a0-db7c88d2e0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b277b55e-36fa-4ec3-a0da-f6134376d23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4fbc6bc-4088-438b-aea6-382aac32ac0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12cd039-e3a9-4477-8be2-4920c091093c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb820e8-c717-4bef-92f1-d1133fededf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5497076-b8ac-4117-b6a3-07843bacf0d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6af0bf-e070-4ae2-881c-d3222d20d07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534b7cfc-3534-4dbd-818a-68e02af9fe56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be44ca14-c96f-4201-ba4f-29ef5cc2f7ff",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6820ff-872a-4866-808a-7365ef37a126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071c17f8-8e9a-45c3-9336-374e9c74abe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148db532-e736-49b6-b78f-060970ae26d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b645fdf-013e-4edf-868c-2c4d0dcf24b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ceb363-2484-45b5-b79c-66e7086b925a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0428cd8e-eb78-41d1-885a-014560a6731c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d35a03-4fc3-466c-b989-44a02a49285b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec02fc0-bd37-402b-b9db-618e238408e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a99c7f-408d-4d38-a29c-5ce8687eca6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810ac236-e3d3-4a88-a95f-eaf9558c4f90",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c08f073-4ffc-41d8-9b4a-e9bed841ddd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff730bac-b935-4241-adbd-ff57978317b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41358629-c1f3-4a62-a5f5-5eb3474e6c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd42bfc-eca2-4923-ac9a-19f726fae65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515a1bad-6653-4d8d-8d7b-b5db488e78b0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53e1235-89dc-43a0-ba86-9f7435bf37eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e5b9362-a0df-4872-85b2-ee51d5fd9939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc45485e-b393-4b7e-b7fd-9419c59c42dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f213603d-af74-434b-b5ab-af6ac8dfc668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135c57f9-98ad-46cc-999b-7c15dd1cfe50",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f6cdcf-2e7d-4714-ae17-257ce267d045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d662a0b-25c0-4bda-9443-fa50656c5919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73b7560-fc7a-4f54-b31e-ab4d8918f80e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fccb72d3-a8c1-45c0-9bb2-cdda0160c92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5a8236-b47c-49c0-b83d-abbcbfdfeb5a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5aa2eb5-0f8f-4eca-9e95-482a548e7540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa57cdd2-a979-4fc8-8411-2efe54180d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25c0c12-cc99-43f1-b8aa-b8b05622ea3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02240bce-5cbb-4177-8ee7-744f78a8e58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa9c511-3615-40ff-8123-cf1a5978c983",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8304de53-b45a-4817-bca4-b9161d7ab32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f32c3bb-390d-40a3-be28-ce18164c5f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547c62e5-a948-483a-b63f-620a576d84bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9dfca74-c6b5-41bc-9c96-08664bc244ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8b518c-ad28-4eb7-8f60-34d9cf6638f0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed4aed0-5882-4fd3-9468-1cc946c8baed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b959cb87-24aa-4454-84e4-eced45e1e6d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66bb8b1-21ca-4659-b04f-844bb048ff26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b67934f9-67f2-425e-88b7-6e13585575f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b062c6-9dba-472b-ab69-03c876a7d2e8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9016f865-7f7f-4671-aa1d-8faabe0539ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bfb6ed4-2b8a-47c8-971d-257860fe67ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be873f1-5ee0-4cc2-80c3-5be9d0b05eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcb6c35-90f4-481f-94b5-14fd7df7a0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93552860-b7d6-4bc6-b5b9-e3119d86d6db",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea51e0b-4319-4d9e-95e9-0fadcc38e666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87023297-ec06-4dfb-8b1c-7725e06fd43c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4589bca-33e7-48d2-b190-7b3078306fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1de75bd-9506-4e47-ae36-52e8e5c8ae4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ccbc06-7f78-4e0f-a684-c22eaf5fdf60",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddb287d-30e4-4a2a-a61c-1f8ac4f537c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96bfaa76-419e-4053-9455-9d5c89220b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "491d851e-87c6-4735-be6f-a1078cf65b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2e5452-eae5-46bb-86f6-c25b60dc42a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47eb130-82a9-431c-bcae-3ac1086f5725",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d7054d-8fc5-4eea-92b3-f54f193bdd5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbf746ee-61e5-42ad-b1ee-e9b7b9ede310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21792a9-c74c-4892-a89e-f0d57adb944c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4346224e-94c4-4ffc-9c2e-e976dfa2d814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392e5b0d-7845-4c7e-ba4a-49d1440a4c15",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f7656b-9fa4-446f-81ff-3fc1b4bd3fef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87eecae8-eea1-4fd0-8d84-8fe51a0bdea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465442b3-fea8-4b3b-b959-13a6823fbed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68921f8d-861a-480a-9c60-f65cbecdd75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edac6d88-2f14-4f28-bde1-a8c501c5e558",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c3c2fd-adec-416a-a9a3-5ec07d5c35e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aff3c448-dec5-4008-9ca5-e3ba90d5dd75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46521133-d293-4523-8e06-6b050090ddff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f798a2b2-8953-456d-9db6-5666858da99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2b417e-c637-453d-b242-8c13d661ac89",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be864f45-4b74-4859-91a6-a4c163fea310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbaf8aaf-3e0d-4bcc-8c87-3ac4d69172c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5b2014-da26-485a-bb3a-058436bd6926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ae1f5b-017c-4720-9e3f-e33c1ee28620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7580306-aa95-41e6-b659-05efc5038226",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e5d016-b364-435f-8b48-00e6f2a86dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "178b1a4d-0ded-4809-96ed-43961372272c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a311f7f2-060c-4d43-a222-d733eb8a803e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f76aab7-a105-48bd-8c93-44c0db49ef3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d4cb44-f5a9-4003-885d-115af6fef458",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd568ae-54c0-48a4-8c41-a2f5f233ac12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "971609b2-415a-4b6a-b811-2fde9a6c347f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7e5d6b-1038-4474-a048-ece205b7982b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ce9f1e-34c1-46ad-8146-bc47fe21d04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b09c43-1cc1-4363-b954-40b1731667ad",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4912de9a-1771-4c55-b6de-8e71fde693d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00d08264-44f4-4928-9f49-fbeddf214d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1403586b-1206-4963-a48b-9f982e9ea239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ba3b8c-9764-4f4a-a8c2-deacfec7d270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa3ef99-c0ed-492b-af4a-130b445ec33d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28eeb03-c654-48ad-952d-da002a42f197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a719286-8740-43c4-9466-1aa236f56cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104eb6e3-2cb1-44d7-b4e3-40cb30a08a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293ffdcb-1b0d-4009-ade5-8cdd07107daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b8d0e3-98e7-4bac-81ba-72f5b48b4ce2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2452c2-96d5-45ff-920d-d4bcbd615dcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ece9870b-2710-46b7-b74d-237c4afe2200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060c84b1-29be-42fe-9909-409dc8a70e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e62d6a21-8b9e-4916-8e63-4db3f8fcc80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd573ada-e1ac-404a-94e0-00dbbf1d616a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039180e6-692c-4377-ba77-42a20dac6ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b8de61e-8d6d-4199-b03c-6de2f85fbecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d1fab8-1b2d-462f-a62e-37d5619ecf58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40cc1fa9-c74d-417a-9769-dfa5a3be086a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8af630-4e80-4c22-a634-f196f02edc59",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86666ece-e004-4f85-873b-ba4bb1bce3bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78e70012-5789-4d6c-ab3a-76cfebd04b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19eb597a-4f6f-4859-bc37-f10f00c706f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c576bc-a260-4333-b21a-7466bf7d4927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9e5cdc-708b-446e-8a84-3f1e253468bb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87503094-d20a-4168-a400-451ff4875e67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5e14843-78ab-472d-8528-9e89568a1825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7238fca-eea3-42b2-bbd2-c796eb1297e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99245705-1479-413c-bce1-972c272052a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a39fdc-74e6-42c5-8356-9cf3061c1ffb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faaf32a4-e8aa-4fad-98ea-c5d22eab38a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c11dd8d-891a-4b6e-aa5f-ca606d5c73b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bcd06e-4a76-4cd3-8b14-892bfdfea7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e7b7c9-3c39-44c4-86df-6b36736d629e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952c3c3a-8dfc-4f11-bef6-1f4298afd69b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f16145-145d-42f6-96a1-7187601661b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c20f751-a626-4d30-a039-58875742b6cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ac9211-5523-4e68-a2d0-f70535200e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e499b2b-55e1-4c5d-b742-ac9fd0122845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa18d86d-3aac-4a9a-ac59-82d8d74bd2d4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29439b8c-d331-47a1-8707-5d77fdc519ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "326be064-986b-437f-8028-0e258c13dc1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0d4338-5aba-4941-8bdc-4cd7ecfaa65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf4ac42-10a9-4924-ae6a-315a10090ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75afc00-ffe1-4001-b7e1-cd25fd71f3ce",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c233f52-e80b-4783-8e72-48bca042559c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a11069ee-3420-4ae9-9164-ff976de61308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a71469a-097a-4d3b-9a84-f2eff98be17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa647e12-d24e-499f-8554-1442b53ee859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60c5856-08c7-4039-91bf-85fcdd18f85b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9f4450-8802-44ba-a740-ba2c290c0e3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f395bde4-1fe0-4fe7-94b0-76f4a17ca2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9e782a-63b1-413a-a8d4-7b3e7444dede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e616ec21-d309-4981-84fd-d0a2bba0d188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b1b79d-a0f4-43a9-8974-ec75aa1e1420",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83994104-3ad1-437d-8ca1-7de6b38ab03a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7350bc4c-3ed7-489e-bba7-e44d7aa4524a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af52ee6-9059-442a-a6b7-03acc626c038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9431855-5203-4534-b02a-65f704a10cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460b2755-d5f8-468f-a29b-9826bb4a4791",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d24bf8-5d23-4acf-88a1-2712b26cb9b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c54b02f-aa76-4e42-8baa-a7f60578949b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937f8537-3765-4191-b271-1cff641497c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0ab17c-f7e6-4588-90cb-adbbfb43d9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b48dfde-738b-4c65-be76-0f2497fce1f3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300cc56f-81e6-4ca1-bdeb-574d66a65645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cae4078-8c9f-4285-a5c6-249b085cf0be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694c1509-06d3-4523-a24b-7d2fe02b7234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16656a4b-9c88-4b1f-8495-10b4084873d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce926f7-7cfd-4e27-8a9d-6eeb71e460a9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9119481b-c064-43e3-a2b6-f53f8a2a0c41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d77c1e-ea98-46a3-819b-d442ed660c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff87db75-19d3-47c4-97ed-850aeceb1038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6ff40d-3d0a-4d11-94fe-cf69921e9280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec84b1f6-9c28-4e97-8c5d-578f72f5220b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e99dad1-60f0-4f06-a917-b89d2ab64058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "344fe014-5408-4918-98a6-d64f77f02b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfbd0f0-ce7c-4241-bf87-46afeabca3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b47dde-e01f-45c0-b99c-7ea5152c76c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f7a540-ae6e-441a-8f27-4e060ff9fdc2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466267d3-dee2-47c7-b582-c0dba4b95110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f56163b-7d07-4109-9b65-643743c76844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7138534b-2aea-446f-8330-c6e66b3e9c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7d5b83-32e2-47fc-be6a-ac776fcdf700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0795c4-3fac-41b1-b6fc-cb253163b6b9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03320f19-3260-4fe0-84a2-2066b235dd39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a571d9a-8aad-4cd9-9df3-f7fb392f63a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8d3070-37b7-497f-9d77-1f179db2791c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c16c3f-cb29-4e07-987d-c22b6b0bc796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25756dc-1768-49a3-8404-98ca49b9cf64",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a86b787-9bda-4275-a440-bda03e52a2a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceba48a0-6fc2-4909-863e-44ef4bbdc626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cf2057-3484-4996-8553-dc07b646e12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc38c35a-8fed-49f0-b0b5-5177a45ef315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a12fff8-a8eb-4048-9e92-9db972e8003e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137b79e8-15e7-42f0-8710-dec6687a9159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "750566ce-d1ac-4c9a-99df-a2797f98f294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da00472-b73b-4f3c-9c14-63ce1512723e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d138fec-e39b-4c3c-9e31-47130d1a7e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26aed460-cd9b-4e2b-a1f4-7609c7879bc9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cf917a-1baa-4461-8766-04a321c3078e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10cb0926-b2ab-488e-9761-3380b5066c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ba7919-0630-48c0-b07c-db73a5834419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad48a85-3a05-4bb0-86c2-c514fddbf1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3315c5ed-adc3-4717-948d-398a85f79af7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb4afac-d91b-4f6b-9fef-3c240ebaa95a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09d8b796-80ca-48df-9924-f547ec57e5c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "519a7af4-2a7a-49e2-b0f9-a50bfea82eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4fb66b-41dd-499e-b5a8-1d7ee628ca76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6e8b7f-56cd-46a3-8a35-79fc58039a67",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3102c8-f3ed-4ce2-949a-b2ea34a0c4d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d735261-5c8b-4e30-907d-d38aa629e810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae82e2f-c83c-454d-b26c-a0021744a144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70590b35-8078-4343-8d8b-fc60fe181139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aaa6c54-391d-4303-8fc0-11a5faa72dc6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c14591-ed39-4553-9cfb-5c7709aab693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e43189c8-5144-41c1-9fd5-cb08a3c379d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6f940f-a48e-487e-95e3-003b6626cd90",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32c1829-47f9-4ae3-9dc6-67ac636a4016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0413b46-e8ab-4ded-bdd5-30e50b8c1d83",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca32d87-9153-4bd7-a9ba-1ab72ab07b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1143d7d4-33d2-4b03-b4d2-af24ed38f687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd1c56b-9d60-4a71-9042-a1d28a3fde2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacd363e-47c1-43b8-846a-fc78c9260391"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54a40138-f1ad-4a63-962d-c4d9b9d6f205",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d2be00e-067c-4642-bdf7-56c55f8a57a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a9101ba-382d-4a49-b55b-ad38ab1e641f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "868dba72-7d39-41db-aba8-86bb7f86177e"
                    }
                  }
                ]
              },
              {
                "id": "2b03967b-0a01-45b3-858a-110c7b8942d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "143f5e62-963a-451e-8ea6-2acb7a71fe4f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a1e67c-8803-4ed2-b6cb-8b60fcbea625",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "20256c9f-16d5-4d82-9a55-854ebcf5697f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162093f3-f7f5-4b27-a19b-d1d9829425bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fce1075-1c02-48d1-bd32-7adea35c6404"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c0b693e-393f-4c9d-a19e-d378db7f67d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f52720ef-1b6f-4692-b4fe-6b455bdb5df5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9605ee07-98da-4961-baeb-6f0bba265e10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22486d71-9dd7-4191-9bb3-fa5d1c5f7202"
                    }
                  }
                ]
              },
              {
                "id": "d3513a8b-d67a-494a-a70b-80aa120c10c0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "97dbecd9-ff45-4c36-ac89-ed95957ed7c1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b128268-19df-4f81-ab3f-b0ba658dd176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "971efb28-cd99-4374-80d0-6d2959d7f416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1853ea-f5c4-413a-b0b3-1ba698c0c632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d49442-51f5-4c66-9c76-7231c18f006c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cd262c81-728f-46b1-8f2f-6e6544aac462",
            "name": "Positive Testing",
            "item": [
              {
                "id": "763071d5-3e73-4afb-af0d-5e09a87230b7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6837c11-e6a4-43b0-ab4d-3cb2df0462c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5ada6c43-acf9-4d6d-85f8-4422565505c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "060ff6cd-4159-4790-bf04-367b94c48a37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f4758e5-7fd8-452f-9986-0e1d51263be1"
                    }
                  }
                ]
              },
              {
                "id": "d70f48c0-a6dd-44e4-ad12-4653a3d4c1a6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b09339f4-4e52-4a72-bf87-0318b4bd9273",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "082bcaf0-ab3c-4c7f-8221-ac9afd2b7a04"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6af0b980-d090-43d2-a3df-494cb4b305a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e90cff99-de32-457a-ba71-e84f49671a76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "958911ea-86ba-4e55-953a-366638cbebed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a81ff224-7ab6-4743-b3ea-8f0cac355cb5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aeebe352-c05a-4626-af09-8826af5fbd57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da3ba365-25b9-4c8f-87be-d17ce7caffb6"
            }
          }
        ]
      },
      {
        "id": "827c75e6-9c16-443e-84b1-7171020aa8db",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "828059f3-2b81-47d3-9bec-9dee48c9fd88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38a7905b-848c-4e37-a03c-b29a4e62f0cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e73aac3-9baf-43f8-b293-576e109215ed",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91441e80-6aa9-4f51-9e27-90e55159d25c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cb090e78-4cdb-4d0d-8568-e4a408e82233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4bb60c-8808-4c0c-aafe-3c1ccb15e5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f55c400-2b6b-4c2a-a693-69321ec358ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b50bf4d2-ca75-4e30-8abb-201032c9efee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e02924ed-e25b-4b70-838b-340cf8b29740"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56f45eac-736d-4ffd-ac88-223c18e5ad5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "113265be-afbf-4251-b55d-f1eaad71b4d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd7a0b53-503b-45e4-90fb-7715918f0e9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "08a9609c-90e5-4605-8d08-6cc1858852b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7a1ae84-b507-4519-86e9-259504e859d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b0c1dda-6edf-437b-817c-870176d98755"
            }
          }
        ]
      },
      {
        "id": "d9be5e1d-b467-4540-996b-94611205b0c6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cd94cc16-9467-46af-b66c-ce01ccecff47",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67bbb465-217c-40f7-8917-6aedcfa27409",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8f3e5c5-672b-4d0c-ab06-d38939a43563",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9973391-9290-4998-bf5f-a91c58007b11",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "170ed332-09f0-4dff-a67a-1a990fb8e5d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e674f74-1ecd-409c-a37b-474438bb03e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c7ca580-f086-4f2b-a614-7a686a969e34"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7576868-0e1b-4840-8de3-22c7f3aeb41c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19888be0-4770-4ba2-9486-503e356196af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ddd6908-597a-40d5-86b2-1040470d12b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e2356e5-af23-467b-9fee-f00dcff9669b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0146a89-e74e-4d5d-b8cf-78f662c606d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eff365b4-ea3f-4926-86ea-55b8385c3e35"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23e802fa-e395-401b-90a5-db9811b2f790",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "292f3c57-285b-4440-b616-5dee4e16ba78"
            }
          }
        ]
      },
      {
        "id": "7db6d815-589f-4270-a520-40921d794291",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5e0a9b62-8a83-447d-8e28-c58bf1be7fee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b52eec37-9c98-4188-97c2-f94d4ab6fc74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94d71671-b142-46e1-8c62-85017e068981",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e16c74-93cc-44f0-9fb5-cb3dbceb46a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8063dc3d-fc28-40b8-8122-7148a1a3e88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8aafb8-31c6-4da3-9941-5758db1406b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dace8109-8253-4b3c-8334-35785cf25baf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e1148ed-10a9-4254-a67f-3fd3da2c0dd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29304e45-9a94-4b2f-80c6-fdd45beb4e08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe26b18f-c297-4eb8-bf90-1029fa7a7e68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8e90277-2303-488f-a123-138566fc676d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c5cd1b5-0f82-48c4-a88a-b2768e87e212",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e1d56468-9840-452b-8223-f42ae655bca8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a1667db-c6c4-475e-ad54-3956da497ae6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa5a7de6-0b51-47eb-9ada-5f381ed926f7"
            }
          }
        ]
      },
      {
        "id": "5ed5bac6-baa8-41ce-bef4-3c4a37abd681",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d78d038-3b22-4b7d-b227-6c44cbb7b544",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8de22edc-fb84-41cd-9cd3-3fed837ab08f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "aeb7913e-3a18-4c20-baef-feb6d7c4b0bb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "952e4245-633a-4e5d-9754-7c8f7706a77a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab37c4e9-0582-41a9-8330-c12ece326588",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 232.3754385964914,
      "responseMin": 10,
      "responseMax": 8861,
      "responseSd": 1087.093441371959,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701045362777,
      "completed": 1701045438396
    },
    "executions": [
      {
        "id": "3451b794-ce01-44ff-ae2c-fcdc16309f3d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "78643125-d7eb-449c-82be-d05a598f0625",
          "httpRequestId": "2c1378ed-f1b8-4002-9485-3c34d68e6156"
        },
        "item": {
          "id": "3451b794-ce01-44ff-ae2c-fcdc16309f3d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "44995e4b-1c7e-4f78-9a15-91076aa3431b",
          "status": "OK",
          "code": 200,
          "responseTime": 136,
          "responseSize": 0
        }
      },
      {
        "id": "1e67cc35-a3ac-45bb-8b9f-fd67bf5d6a9b",
        "cursor": {
          "ref": "acf3fb43-ea82-4f39-87da-2d59acb0910c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "25375f44-b6fb-4642-8688-6131d80b7fce"
        },
        "item": {
          "id": "1e67cc35-a3ac-45bb-8b9f-fd67bf5d6a9b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d0116c41-0483-44e0-9309-1ebb12da07a2",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "2789b1f4-a4ed-40f5-b538-0974fbb655fc",
        "cursor": {
          "ref": "8388fe55-049b-475f-bc9c-7943132d9672",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "820d56ad-1b03-4be1-b569-26881a9189df"
        },
        "item": {
          "id": "2789b1f4-a4ed-40f5-b538-0974fbb655fc",
          "name": "did_json"
        },
        "response": {
          "id": "267e3880-9a43-4ba2-a573-3de4fd171f24",
          "status": "OK",
          "code": 200,
          "responseTime": 1401,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19264a3e-b0ab-468c-9b40-cdb47faafa9c",
        "cursor": {
          "ref": "4c6b2303-60e8-4f4f-9d97-2a283c0aea74",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "50294f4c-a277-4dbd-87d5-3d9f639c7d64"
        },
        "item": {
          "id": "19264a3e-b0ab-468c-9b40-cdb47faafa9c",
          "name": "did:invalid"
        },
        "response": {
          "id": "98060879-b3cd-4030-a735-ae39ae93f07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19264a3e-b0ab-468c-9b40-cdb47faafa9c",
        "cursor": {
          "ref": "4c6b2303-60e8-4f4f-9d97-2a283c0aea74",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "50294f4c-a277-4dbd-87d5-3d9f639c7d64"
        },
        "item": {
          "id": "19264a3e-b0ab-468c-9b40-cdb47faafa9c",
          "name": "did:invalid"
        },
        "response": {
          "id": "98060879-b3cd-4030-a735-ae39ae93f07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f07be19-3042-47dc-a33f-a2ea14aaecde",
        "cursor": {
          "ref": "9fe25a1d-23c8-4138-90dd-861cf82faee8",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "715eab28-2b6f-4db7-bd66-883f0bf41cfa"
        },
        "item": {
          "id": "1f07be19-3042-47dc-a33f-a2ea14aaecde",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0f319505-c46a-4edd-a7cd-d9afa26491ca",
          "status": "Not Found",
          "code": 404,
          "responseTime": 124,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0270cd7f-0da6-46a1-9623-57582eb33937",
        "cursor": {
          "ref": "ef381050-6bad-488f-9cff-0d3b617aad5c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "be0156e0-b0ac-4f5d-83f0-508da6f83ac5"
        },
        "item": {
          "id": "0270cd7f-0da6-46a1-9623-57582eb33937",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "679d9ffc-1c59-4223-a42a-8e167b927183",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b469691-4ddd-488d-9b55-f1610cfea73a",
        "cursor": {
          "ref": "d2e064ca-b058-4c67-93c5-89252ec40550",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f1138f33-cbc4-48c2-a67c-5c06a0efd055"
        },
        "item": {
          "id": "8b469691-4ddd-488d-9b55-f1610cfea73a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "50d074ce-7320-4cd9-8062-10dbf16da2d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57884939-34f1-425b-979b-46ffc862d003",
        "cursor": {
          "ref": "13077816-e3c5-49bf-806b-1a00aec3eb84",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "028e7455-4767-42a2-bf17-0b99702c669b"
        },
        "item": {
          "id": "57884939-34f1-425b-979b-46ffc862d003",
          "name": "identifiers"
        },
        "response": {
          "id": "f78618f6-00fa-42d3-af94-d51f6f356afa",
          "status": "OK",
          "code": 200,
          "responseTime": 1176,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036ae79b-1ebb-43cb-b7be-6fa4a96a37b0",
        "cursor": {
          "ref": "601d6abb-438d-42ae-aaa7-7b0f525dcd1a",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9dfad940-7c35-4289-ba93-813fbee7176b"
        },
        "item": {
          "id": "036ae79b-1ebb-43cb-b7be-6fa4a96a37b0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0a21001c-6261-4d82-96a8-63bd2a276da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070e4174-396f-41f7-9306-8b2c4e875b63",
        "cursor": {
          "ref": "217066d5-94ad-4f7f-8dc3-e02cae79ee14",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "90e19068-ba18-4194-8d99-30907e9d99b0"
        },
        "item": {
          "id": "070e4174-396f-41f7-9306-8b2c4e875b63",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3798a95f-c904-4da9-9be0-f73eba115e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada5ac3a-9342-4827-bb31-349f128ec268",
        "cursor": {
          "ref": "4db33f93-3d0a-4f05-8146-18588c8b0044",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8f2e9780-5de0-4f2d-bbba-3d9b7725991c"
        },
        "item": {
          "id": "ada5ac3a-9342-4827-bb31-349f128ec268",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dfb1ff3d-eba6-4d71-ab9e-e8bc645f1b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c1a4f5-d8d6-429c-b9b1-3c8ece4b20af",
        "cursor": {
          "ref": "42a3ec77-aa0d-46fe-bd7a-a37f68eccc05",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ae41b873-cc73-4406-804e-39ddbf7d5777"
        },
        "item": {
          "id": "d6c1a4f5-d8d6-429c-b9b1-3c8ece4b20af",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ab1f6f26-19af-45ae-8bf2-3357aff41496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b08e05a-f8a2-4f93-9620-5f01f82ceac7",
        "cursor": {
          "ref": "9d4c58bd-ad56-4c1c-b3a1-dd9892073493",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b320ded9-69df-4c2a-91eb-af888896f8ad"
        },
        "item": {
          "id": "4b08e05a-f8a2-4f93-9620-5f01f82ceac7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "05499050-eb65-43dd-b273-a97f4e5b47cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719f030f-9510-48f1-bac4-b4daac8960b2",
        "cursor": {
          "ref": "690b8568-f20b-4943-9426-ae85ba84622f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cc69a444-eb91-4728-8565-eb2b600e704b"
        },
        "item": {
          "id": "719f030f-9510-48f1-bac4-b4daac8960b2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7f863745-991a-4109-9fb1-43197a50a22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa5d43a-73e3-48e8-aad8-415dd3e74f4e",
        "cursor": {
          "ref": "e3a30a74-f457-4fa1-9183-e0a0c26a05d5",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b06f0e56-649a-4d49-937a-9192bdb1e5e4"
        },
        "item": {
          "id": "eaa5d43a-73e3-48e8-aad8-415dd3e74f4e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "130b83fb-fe33-46a0-bdc6-4b845814a803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c72d07e-aa8e-45cb-8f47-782c3639776c",
        "cursor": {
          "ref": "a18696cd-7cdd-4ad6-b756-a6cdce8180ff",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "22ffc549-f5c3-4527-80c5-d9db35d76247"
        },
        "item": {
          "id": "5c72d07e-aa8e-45cb-8f47-782c3639776c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "71ea8f89-977a-49e8-b095-976a4df02262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6820a4f3-5c33-43cd-aa26-fbf6f871f708",
        "cursor": {
          "ref": "71c675a2-49ef-40cb-820b-8ec87fb9dffb",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "061a16b4-f1d4-4874-ada3-212baf9b42e4"
        },
        "item": {
          "id": "6820a4f3-5c33-43cd-aa26-fbf6f871f708",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5fe5cff1-198c-484e-a788-0e6ed3a9b4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f54828-2c10-4e41-bef2-703b58e88c0e",
        "cursor": {
          "ref": "49b67837-775b-4e4a-930d-669ab547c2a2",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c26c0eff-4248-4b37-a0e0-5a793ed3d458"
        },
        "item": {
          "id": "23f54828-2c10-4e41-bef2-703b58e88c0e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9bc0c3e6-e436-40b9-ad62-1319352f145c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e98c60-8630-495f-8a42-a467a25a98a6",
        "cursor": {
          "ref": "6489ae39-f93d-43b1-b841-113293ea170d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "67fb82aa-3edb-4923-8d44-4a7385024de4"
        },
        "item": {
          "id": "b5e98c60-8630-495f-8a42-a467a25a98a6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9ca4cf8a-d209-4803-b5a6-e33bb76186ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c1c078-5924-48ee-ac99-d58803b1f6d8",
        "cursor": {
          "ref": "d2f3ae2a-c7e6-4dfa-a930-5ee6158b0fe3",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a7efaade-b72a-46e6-b610-763bd6e4c9ee"
        },
        "item": {
          "id": "37c1c078-5924-48ee-ac99-d58803b1f6d8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ccc6cc99-7adc-4af4-865c-86470f83f976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464dac27-01a1-40db-8ee3-07760ae4fd72",
        "cursor": {
          "ref": "071c7168-147c-448e-848e-1e862caaaebd",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bf03e1a2-b386-420e-a554-fd6f6553cd30"
        },
        "item": {
          "id": "464dac27-01a1-40db-8ee3-07760ae4fd72",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "51e52a1b-decb-4b31-b963-7b247daccdfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20eb458-27b5-489d-aa89-51e7146f6822",
        "cursor": {
          "ref": "f5544ec3-0b04-464f-a31f-058d99916aae",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a068d891-f94a-47a8-b7bf-f80f1f6c3b61"
        },
        "item": {
          "id": "b20eb458-27b5-489d-aa89-51e7146f6822",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "dddd9289-bf9a-4259-af3a-2530bc1ba5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fb6882-7910-488f-a437-4ded28b3ab2d",
        "cursor": {
          "ref": "e4513ec3-0f24-463b-b961-40850a4f945f",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0d45d24b-2720-48b3-aa11-f91974a5329c"
        },
        "item": {
          "id": "d3fb6882-7910-488f-a437-4ded28b3ab2d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fedf27a8-f675-4134-aff9-3e2c58bed75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba15c670-3125-44a5-b93e-50bec4fb2a5c",
        "cursor": {
          "ref": "5b6f2b6c-5b1e-4251-bd2a-056d6c4297fc",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "065af254-9530-4197-92ac-48dee26a81df"
        },
        "item": {
          "id": "ba15c670-3125-44a5-b93e-50bec4fb2a5c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9e33ccc0-9962-48b3-9f47-64164df9a776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998c6283-5a04-4482-9f0a-ccfc02c3576e",
        "cursor": {
          "ref": "dbe34c41-3407-4e18-b073-e9d40315704c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "50cd4270-1c8d-452a-86a7-5578eb454ff5"
        },
        "item": {
          "id": "998c6283-5a04-4482-9f0a-ccfc02c3576e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0de57020-fe0c-4b34-83a3-2eaefdbe4b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b75679-a3f1-4e08-ba0d-f2b010635482",
        "cursor": {
          "ref": "0aefbe2f-008d-47c1-a799-977bccdcfeae",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a4f9ff5c-9d50-4cb9-b694-5461b58d21e0"
        },
        "item": {
          "id": "d8b75679-a3f1-4e08-ba0d-f2b010635482",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "89850c1a-5d90-4d50-a7f8-d13d12f37287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f94662b-2f2f-4b33-8650-e9d287ac2846",
        "cursor": {
          "ref": "a7fbfaf4-55cc-4de8-ae3d-5f01f1bdd7dc",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a49df805-1a21-4771-83c8-083271408ab4"
        },
        "item": {
          "id": "9f94662b-2f2f-4b33-8650-e9d287ac2846",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9dce1fcb-6959-4b6c-8524-ec31af874823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fac748-5084-44db-baf3-a6152f6da6aa",
        "cursor": {
          "ref": "2e4ee6a6-e2eb-4c9b-9f61-8fe81bf0e647",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9d01a79c-0351-4b3c-abb3-6e65376ea21c"
        },
        "item": {
          "id": "a5fac748-5084-44db-baf3-a6152f6da6aa",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1a7c7d23-dbc7-4b31-8dd9-a0ea2fb3c0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7815c16e-ed3e-4f0e-b2e2-1e92177aa617",
        "cursor": {
          "ref": "92d31c97-4efb-41f4-baa9-ea27cf7a4872",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cb9f0914-7170-453b-a140-4975c6ca96c2"
        },
        "item": {
          "id": "7815c16e-ed3e-4f0e-b2e2-1e92177aa617",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "07a7f0f0-e81e-4ae7-90de-6a1d87e28c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cd513f-b36e-4bc6-8800-174323cd9699",
        "cursor": {
          "ref": "a8a69187-0a6d-4ca6-b781-326c36e4df61",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2a39bd3e-bddb-4cd1-ba22-ed1d7783d655"
        },
        "item": {
          "id": "80cd513f-b36e-4bc6-8800-174323cd9699",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "112c1a25-bd4a-4d26-a5ea-937bdc89b3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ffd1da-6999-4891-a78b-6020656294b3",
        "cursor": {
          "ref": "1fff8804-2c1f-4173-8b7a-94729ecbb84a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b7b30046-3e83-465b-b802-a9243fcd4afc"
        },
        "item": {
          "id": "18ffd1da-6999-4891-a78b-6020656294b3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "af7ccf5e-a1a7-4863-b229-501bd1b36df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd0c5b3-36c4-4d99-a903-a15fa092e8ad",
        "cursor": {
          "ref": "039c2263-4492-41ff-951e-6c08e0a1b045",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ee6eee60-b1b6-4831-8ec3-07d37b687bf9"
        },
        "item": {
          "id": "bcd0c5b3-36c4-4d99-a903-a15fa092e8ad",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "50cf6ca5-4a92-4d77-b362-b42efe7a9ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7aecf5-43b1-4feb-81b1-90628b71fffa",
        "cursor": {
          "ref": "5f2360d4-b670-4ce9-9e21-8e8b437158d6",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "92019957-151f-4713-b25d-762feb6eb97a"
        },
        "item": {
          "id": "3c7aecf5-43b1-4feb-81b1-90628b71fffa",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "626b9141-7aef-4b23-81dc-3ca314855b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784ea77c-1fe6-49c5-ae01-ef7d8d379649",
        "cursor": {
          "ref": "5c5489d8-4ea7-4126-a7e8-88183a744768",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4b0e5c57-2a66-449d-9906-7c1860c5b9e4"
        },
        "item": {
          "id": "784ea77c-1fe6-49c5-ae01-ef7d8d379649",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e716af2a-e686-45c9-8170-4447c0cfe714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f61f80c-5ef5-4f75-afd0-d1dae3470657",
        "cursor": {
          "ref": "363b3b5a-41b9-4570-a732-c9f22b52aacb",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e3f8bd24-46aa-490f-85c5-7409bd3d42d7"
        },
        "item": {
          "id": "5f61f80c-5ef5-4f75-afd0-d1dae3470657",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d23c94e5-9fff-4831-9a73-9ffe7696e0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2c5bbc-625e-4d0a-b98e-8dd9c59054e5",
        "cursor": {
          "ref": "0ab815cb-bfcf-42ba-b6a3-4eb7a669a188",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "12f9365e-b1da-430a-b46c-3d656ba6e512"
        },
        "item": {
          "id": "bb2c5bbc-625e-4d0a-b98e-8dd9c59054e5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d4d0fa6a-773a-4ff4-9620-f425243244ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee4f587-4225-48a3-ab98-81d710af8e2c",
        "cursor": {
          "ref": "670cabf2-3546-4945-aff0-8922823a2cdd",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a8e0b4ca-591d-44ac-b901-fbf181b4d9b9"
        },
        "item": {
          "id": "cee4f587-4225-48a3-ab98-81d710af8e2c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "80470715-46dd-4048-9493-51206a5e2791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e44030-65ab-4f98-ad87-777c15a012aa",
        "cursor": {
          "ref": "d5e30684-677b-4904-908c-4ffc7da5fc6c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "57512cfb-eb29-4ad6-863b-942007669b44"
        },
        "item": {
          "id": "01e44030-65ab-4f98-ad87-777c15a012aa",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "11632777-6b5c-4d44-b1bb-5e70b0b362d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9d51cd-a4b8-443e-a9fe-b58fb3399c67",
        "cursor": {
          "ref": "39ee38df-b8a6-4d2f-a7b0-56a3b77e0197",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5455a966-67a4-4252-bbbe-557134ffc33c"
        },
        "item": {
          "id": "5e9d51cd-a4b8-443e-a9fe-b58fb3399c67",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e06c20e9-ed9d-44d8-b5a8-91fd59d468be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4caa03-139f-4554-895c-e7a9fdd3223a",
        "cursor": {
          "ref": "6243e0ea-4107-47f5-92f7-40a70bb977c6",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a0605dda-6612-41a8-aeb5-dc7025a8f108"
        },
        "item": {
          "id": "1d4caa03-139f-4554-895c-e7a9fdd3223a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "347051b1-ea96-44f5-bca7-295e9cf72fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e6ac16-2e13-4327-92b1-15b5576824a0",
        "cursor": {
          "ref": "c0523284-67e3-414e-ab38-6264239bf146",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f7fc9aff-4c29-445b-b722-62efb3185f10"
        },
        "item": {
          "id": "f2e6ac16-2e13-4327-92b1-15b5576824a0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f1629d86-16e5-4139-99e2-6ed56a2df867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb5fd86-e810-4a2f-828a-f7f8ea32893f",
        "cursor": {
          "ref": "520ea3ba-9d89-460f-b03b-273779a18e45",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bf44efa8-8fe6-4450-b0a1-c15d2995a526"
        },
        "item": {
          "id": "4cb5fd86-e810-4a2f-828a-f7f8ea32893f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f68d90f2-0a0d-484d-bc2b-09b057fe81e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b032bf25-7e7c-4aff-bbff-182dcf5ea522",
        "cursor": {
          "ref": "723cda74-0212-48d6-a2dc-ca48b2c8fce7",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "34c5ddea-73d1-4cf5-a0cf-fb6dc5af046e"
        },
        "item": {
          "id": "b032bf25-7e7c-4aff-bbff-182dcf5ea522",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "273ea620-4920-4904-893e-8f71a7eb0998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64873bf5-9c90-4ea4-a74f-2bb424f81b67",
        "cursor": {
          "ref": "8a3d36d8-7424-4844-8859-b3dc1d20bd8a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f92785e3-8d9a-43f7-a058-b8d70e7d85c1"
        },
        "item": {
          "id": "64873bf5-9c90-4ea4-a74f-2bb424f81b67",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d1a421ef-54e9-4ada-91d6-31fd9a47acfa",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1396,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d31969-68c7-42bd-b8a3-b2408a766c79",
        "cursor": {
          "ref": "72e76072-1a3f-44ae-b01e-6bddeaac1009",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "de613fcc-a663-4c40-a515-cf4ab055fe26"
        },
        "item": {
          "id": "45d31969-68c7-42bd-b8a3-b2408a766c79",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b9de3e74-4314-465b-ac9b-6bf010e71bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d899d0-f7a7-4563-b98e-a84da3e602a2",
        "cursor": {
          "ref": "8c94f4ad-7ef9-482a-bd20-19bec4f6dc58",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f14bcf12-509b-4e38-92df-1e6e3d2fe9f0"
        },
        "item": {
          "id": "81d899d0-f7a7-4563-b98e-a84da3e602a2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "11023524-b8ea-4fe2-8142-e2e4c5f0ddb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f25df27-57af-4179-a91c-a2512bd7d616",
        "cursor": {
          "ref": "c7fb81d4-e673-4044-8305-4052ff5bf694",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4139207f-45d7-4383-b79f-4251503246db"
        },
        "item": {
          "id": "5f25df27-57af-4179-a91c-a2512bd7d616",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "912f0630-08a0-4c9a-ab13-56a6e46bb3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004757b8-27f7-459b-ba11-be88a3ad6ec5",
        "cursor": {
          "ref": "2820f837-f632-4f74-bd3b-062e02143aa4",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "18497206-7b97-41f2-b2e6-332a892779c5"
        },
        "item": {
          "id": "004757b8-27f7-459b-ba11-be88a3ad6ec5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7c0f4cf5-bc3b-4070-a8bb-148a282c5857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa1d768-330c-430d-b6bb-752261b29849",
        "cursor": {
          "ref": "ca05e28b-c718-4401-88bd-61fbfdcf3e28",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "74cc4077-01b4-4f88-af4d-37546ccc51bb"
        },
        "item": {
          "id": "7fa1d768-330c-430d-b6bb-752261b29849",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f11ac8a2-b0a3-4d4e-b810-5f9be65f0ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43dd79b-5081-4500-bd3a-dadf7554984a",
        "cursor": {
          "ref": "b60faee1-1771-4ab5-b845-6f8928c9a725",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "13e488fa-17d7-4ce0-b747-a0cbd8200e17"
        },
        "item": {
          "id": "b43dd79b-5081-4500-bd3a-dadf7554984a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f9a6a306-357d-47b6-8ae4-d13ebd978015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f69eee7-bdb2-45f6-a0e9-bc7e259c505d",
        "cursor": {
          "ref": "fbc6c4fe-8510-4a65-a0b9-a496288ba3d0",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "42f824dc-7383-4a01-8d11-98741635f2fa"
        },
        "item": {
          "id": "2f69eee7-bdb2-45f6-a0e9-bc7e259c505d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f1305e67-0531-4850-9f4e-240aa9d2cda6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1458,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0922f142-9714-4fe8-89c5-1d962ea8bbde",
        "cursor": {
          "ref": "fa2f9273-ba28-494a-8b69-acb35705d47e",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9b2b1070-d4a5-4286-a480-4a6c6bb1a6f2"
        },
        "item": {
          "id": "0922f142-9714-4fe8-89c5-1d962ea8bbde",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fd7de02b-134a-4d1d-b174-11e91de43373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38af6051-c162-4ada-abb6-e0a303069867",
        "cursor": {
          "ref": "1227bb2e-8cee-4f80-9763-ffaf17e6a620",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cedcd4ed-5fb3-4be8-8fd1-b3958b815909"
        },
        "item": {
          "id": "38af6051-c162-4ada-abb6-e0a303069867",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0b72f6b1-6d24-4755-9fdb-f0442fbcfd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e91e8ab-f8f5-4713-83a5-7f8524f78c03",
        "cursor": {
          "ref": "e642df5e-0ad4-486c-afda-d717520cd31f",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a79dc4dc-53ef-468e-b65e-7c52fc77ba04"
        },
        "item": {
          "id": "0e91e8ab-f8f5-4713-83a5-7f8524f78c03",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "30ecd346-d9c9-4712-85ad-d749fe4415bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1710758-674b-4255-a170-e2d670e89975",
        "cursor": {
          "ref": "c5b38815-a1da-41d1-a929-48439a09119f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4293b2ab-0a04-4ec1-a3c9-d3e63f728d98"
        },
        "item": {
          "id": "e1710758-674b-4255-a170-e2d670e89975",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "41c61ce0-0efc-4056-a0ac-99eec06717bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e6e5bf-c5e2-4318-99e5-e7e80ac59115",
        "cursor": {
          "ref": "3065aa0e-23d1-4cad-bd2d-967b5984a2f7",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0553899d-6816-4b09-a8e3-3ac6bd5c1ce8"
        },
        "item": {
          "id": "c8e6e5bf-c5e2-4318-99e5-e7e80ac59115",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ffbb5727-e52e-4977-a52e-1f9966e48a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c068c3-93ab-45a9-ae3a-0c15eb8212d0",
        "cursor": {
          "ref": "522abbde-3a45-4cfc-b388-e5574f758266",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "328d4911-bd23-4fe4-8cb5-2a63fb0e384a"
        },
        "item": {
          "id": "f6c068c3-93ab-45a9-ae3a-0c15eb8212d0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a6e9f5f6-6845-4143-839f-30bae05ae53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bd9432-8822-4fe4-a664-9cbef6bcf3db",
        "cursor": {
          "ref": "2d42c3e3-b365-49d2-b60e-a90ca66f1023",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4998ef9d-3ba1-45c9-a67a-c4af0031d0f4"
        },
        "item": {
          "id": "b9bd9432-8822-4fe4-a664-9cbef6bcf3db",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a9cc1fbb-d9b6-491e-8504-3ba214ea60f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08b98ff-d4aa-4f62-bb82-bb941bc6e60f",
        "cursor": {
          "ref": "6ea51ec4-bc33-46bc-8e3a-8e8af4635ec7",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fb225568-543d-4f3c-a1ce-02ceb247acad"
        },
        "item": {
          "id": "f08b98ff-d4aa-4f62-bb82-bb941bc6e60f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5e25a9f9-f957-4f3e-910e-01fa466564e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776a077b-0c10-4253-98dc-31ffca4dc298",
        "cursor": {
          "ref": "0181280e-49bd-4dc3-9a97-29379c653b03",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "01f73a73-0c24-484b-9c09-c756b956f148"
        },
        "item": {
          "id": "776a077b-0c10-4253-98dc-31ffca4dc298",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8ae36004-2ba9-4636-9fe2-b9c1bc8461a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d75ec8-f2cc-4738-a28c-d6e46c9ad9a0",
        "cursor": {
          "ref": "67c1d715-263c-443d-ae82-f27ebcf0e738",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1b078241-3182-4ebb-913d-86b656b5723d"
        },
        "item": {
          "id": "54d75ec8-f2cc-4738-a28c-d6e46c9ad9a0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "569be5a6-0b00-4f71-b1ca-e04087c95c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bca254d-a99d-4f44-9b17-c0e8e4e4ef9b",
        "cursor": {
          "ref": "43b8b437-6330-47f9-9b1e-0a82a622bdca",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7d6c295b-3c09-4dbd-89ae-372ae1aff30c"
        },
        "item": {
          "id": "3bca254d-a99d-4f44-9b17-c0e8e4e4ef9b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5a98489a-4cb8-4c47-b613-2c3dd64131cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffa5ea2-fa8f-4684-82b8-186b573835ea",
        "cursor": {
          "ref": "02ce6204-2e74-4e31-bf76-2a4224a24ae3",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bca281c6-49f4-4332-98a7-5da60caddbf4"
        },
        "item": {
          "id": "bffa5ea2-fa8f-4684-82b8-186b573835ea",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "61d50b84-e414-4dce-a0af-1af1afe43fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d1fdc3-aebe-45cf-8d3e-1a1565ff33d8",
        "cursor": {
          "ref": "fd3a4d60-9217-4529-8ebf-19176bff68a6",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c2b7f19f-c1c4-4466-91de-d1ccb13d39c3"
        },
        "item": {
          "id": "94d1fdc3-aebe-45cf-8d3e-1a1565ff33d8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bf438a90-3f54-4499-8f47-ab4be1104c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a85ffc4-285f-4f9f-a48e-c73368ab54b5",
        "cursor": {
          "ref": "4394581c-c081-4f49-bbdb-07f7d985eb60",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6c840633-cfd4-40d4-a305-418a0c4c428b"
        },
        "item": {
          "id": "7a85ffc4-285f-4f9f-a48e-c73368ab54b5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8afefe23-87a5-46dd-a752-6995e19f50a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7169e3dc-4e20-45bf-8eb2-e57ca609b688",
        "cursor": {
          "ref": "633369aa-b134-42ef-bf88-40779c58abfe",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "27e6c40d-44c7-46b9-98fd-ea5a077fd417"
        },
        "item": {
          "id": "7169e3dc-4e20-45bf-8eb2-e57ca609b688",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7ec2dbaf-cbca-4614-a29c-55c1c982571f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0ef672-8dcc-4c23-abb3-e26387eb03de",
        "cursor": {
          "ref": "2981c1d7-3ba0-41e3-880d-4a9a47c1ed0f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8e14dc60-f84c-4127-a13a-822a79edeb5d"
        },
        "item": {
          "id": "1c0ef672-8dcc-4c23-abb3-e26387eb03de",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9539a5bf-9b89-4ca7-8d04-0f5dd5c1d504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2c7a5b-1140-4bf2-b167-5362fbdc5518",
        "cursor": {
          "ref": "5fac55ab-8a61-4037-bdd7-279fbd602d45",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9bb9b24e-7dec-4ab0-9e16-8385f1702729"
        },
        "item": {
          "id": "3c2c7a5b-1140-4bf2-b167-5362fbdc5518",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2521d9aa-415c-43cf-9b25-71a1fadacd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68177c70-70a5-418a-ac91-fa4751dbf908",
        "cursor": {
          "ref": "713182cb-4836-4f88-8656-f14641521f16",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "437c21ed-dc65-48e0-b4b9-bc6531c254a3"
        },
        "item": {
          "id": "68177c70-70a5-418a-ac91-fa4751dbf908",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5d92c640-5b33-45b1-af6f-121e2498fa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23334530-f21f-4fd2-92fc-e91e5f0d5f91",
        "cursor": {
          "ref": "06d7669b-6a78-4a6f-9f02-329c3d80473e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "804f0d2a-06ca-4847-a9f0-7bf5f8021995"
        },
        "item": {
          "id": "23334530-f21f-4fd2-92fc-e91e5f0d5f91",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e24ae57c-7128-4e2d-82cc-baec5abc59d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64d49e4-0ad5-456d-92c7-147f64832007",
        "cursor": {
          "ref": "2fa9a63f-7413-4473-881d-c240d8687d93",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "689b445c-17e2-4daa-8a27-975c14329df2"
        },
        "item": {
          "id": "b64d49e4-0ad5-456d-92c7-147f64832007",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e3d4cdd1-1644-44c4-bee1-67e20b0389e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65272599-9e03-4f3a-955b-f59927875a78",
        "cursor": {
          "ref": "28135735-833e-42e5-b6f4-cb1449e52a23",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ae3aef85-fccb-4f02-a9b7-aa93216c9279"
        },
        "item": {
          "id": "65272599-9e03-4f3a-955b-f59927875a78",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2e810395-afff-4cde-8749-b70af01f6da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21178174-7a37-45cc-9086-76f2dd61c49e",
        "cursor": {
          "ref": "91a4bcef-6042-477f-949d-fc20bf51ab83",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0c0993c5-f645-4691-84be-a019c2b1285c"
        },
        "item": {
          "id": "21178174-7a37-45cc-9086-76f2dd61c49e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ab002960-483a-47a8-9b50-346ae9ef7d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11420af-7c5c-45f3-a799-e39611c3ab55",
        "cursor": {
          "ref": "e22679d6-9ff3-4aa9-9847-1a5738e7fd3b",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6b2fdefc-29b3-4558-98eb-1f415515f075"
        },
        "item": {
          "id": "e11420af-7c5c-45f3-a799-e39611c3ab55",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "57c0a130-25c0-4212-beef-02f4fd9c2b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a41257-1c03-471b-b641-e5003d160e20",
        "cursor": {
          "ref": "3795b0b4-13e4-4e3e-bc64-c3d47112c8f1",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f4fa0d6f-d040-4c44-b4f4-9d61bf75903e"
        },
        "item": {
          "id": "17a41257-1c03-471b-b641-e5003d160e20",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a049d8ca-5ead-4772-8fdc-85fc5de335f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa78104b-4d40-40f5-9d80-87b26bcdbee7",
        "cursor": {
          "ref": "5fad9be4-a1c6-41ee-b220-41b01610e0a7",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f5bb2c99-8a9e-4eb2-9547-f3f3b73e8df6"
        },
        "item": {
          "id": "aa78104b-4d40-40f5-9d80-87b26bcdbee7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ba1d27ae-37cc-4704-bbd4-9f4beb7767cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bd8521-fe77-41a0-a6fe-05f765790865",
        "cursor": {
          "ref": "7ca3a2b2-be27-4b08-b8d5-04eb158d3a62",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "32f17da7-bffc-4b87-9eb3-e7aaa8530c36"
        },
        "item": {
          "id": "f3bd8521-fe77-41a0-a6fe-05f765790865",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "92fa7396-2adb-4631-93cc-28308d8b95c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7247441-ca2a-4c3d-8907-6c8511e00432",
        "cursor": {
          "ref": "02168f62-96fe-42a0-8d8d-b6b598c69111",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3acaa996-f4c9-49e1-8849-a1c934d0ae0c"
        },
        "item": {
          "id": "d7247441-ca2a-4c3d-8907-6c8511e00432",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8a310732-2261-40fa-b6b1-32b8068c58eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f6b4aa-dbd7-4cfb-bd44-9874f44c28c3",
        "cursor": {
          "ref": "7f326566-8b5b-4083-9df7-ebbc60342ada",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1c31fc7c-59ad-4244-8ced-5b01e51aab6f"
        },
        "item": {
          "id": "95f6b4aa-dbd7-4cfb-bd44-9874f44c28c3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e0149638-0c1f-4d5e-ac18-309fa4a3430d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591204c4-3c5d-4adf-9f2f-7a8acb21c0b9",
        "cursor": {
          "ref": "4131a65b-9bfc-4c6a-b295-12b531d6116a",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "af9e2c6b-531d-40dd-a221-debcafbc8ffa"
        },
        "item": {
          "id": "591204c4-3c5d-4adf-9f2f-7a8acb21c0b9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e7f45e2b-e498-4a00-bf06-c1facf2f9b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59613799-850e-4a1e-9690-cb669db20c53",
        "cursor": {
          "ref": "7296c8e3-1f5a-454f-9814-92a7cb67ef4e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "364c30eb-bcc1-4293-838f-2bb7156d9a9b"
        },
        "item": {
          "id": "59613799-850e-4a1e-9690-cb669db20c53",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b04766fd-2f7e-4ba6-bf71-e057c1f3547c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bb65b7-bbe0-45e1-a4b0-135d80ab234b",
        "cursor": {
          "ref": "54f7dd01-1e92-4269-a06b-5ae7d6bc37d8",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0efd61d9-e95c-462e-bea6-cee090ef427f"
        },
        "item": {
          "id": "d4bb65b7-bbe0-45e1-a4b0-135d80ab234b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ef336278-ba15-4fa2-8ed9-db3eec24b3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32c1974-20ab-4b8b-8da9-ae7c897fd437",
        "cursor": {
          "ref": "154dd64e-959e-492e-a5e0-11f0959f8ac6",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b7843b11-4b56-4171-9939-ba23c649ecb0"
        },
        "item": {
          "id": "c32c1974-20ab-4b8b-8da9-ae7c897fd437",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8d812408-8fc9-4bb5-93f4-1fbf56e6f5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85abec4d-ec06-4f9c-ae8c-ab7936b267d3",
        "cursor": {
          "ref": "794aa21d-5afe-4aa4-95d6-f192efd8afcf",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2fe023d0-392f-4e0e-b7eb-896db6a6a337"
        },
        "item": {
          "id": "85abec4d-ec06-4f9c-ae8c-ab7936b267d3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "363f25cd-9cb7-4657-9995-fa75ea63316f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9e2bd2-e244-46b7-a139-96e2fef27fd7",
        "cursor": {
          "ref": "902f032a-ec06-49e2-ab82-17339279f3e3",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "da34e97a-5e96-440e-8bb3-cc2f847b2f78"
        },
        "item": {
          "id": "ef9e2bd2-e244-46b7-a139-96e2fef27fd7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "26b2dc49-61a1-465c-81fb-11a98eefcaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc2bffe-ba8f-4504-8d33-1afaa4b9abe7",
        "cursor": {
          "ref": "4a064097-1b61-40de-bac4-c55023032195",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "570ef541-bf1b-4c26-953e-51e7e7146e53"
        },
        "item": {
          "id": "5cc2bffe-ba8f-4504-8d33-1afaa4b9abe7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "69c9fdb4-01ca-4983-b00d-86e856dfc30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ded061-64fd-4774-804f-7bb939659521",
        "cursor": {
          "ref": "2e16a470-45b7-4e22-b148-9ce25d75aa56",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "50548803-bf17-487b-950a-a3f2abb8fa71"
        },
        "item": {
          "id": "a6ded061-64fd-4774-804f-7bb939659521",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "44256e24-278b-489c-a74c-dcf8244b7211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d970b2-2506-48b2-897c-4b11297d09ba",
        "cursor": {
          "ref": "b88f0916-7401-49d3-a895-c36ae2247356",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c690aff7-2856-4c4a-a849-bde7edbd09b8"
        },
        "item": {
          "id": "60d970b2-2506-48b2-897c-4b11297d09ba",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1c77d536-8cdd-44bf-8a01-8c24c1171408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e759ed-2eb8-49e4-b0e0-ba51fdfba22c",
        "cursor": {
          "ref": "79cd66be-ebec-4ec7-8cf3-4e5214971cb7",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a54edd62-9d4f-4f1b-afb2-4ba2466bc884"
        },
        "item": {
          "id": "d6e759ed-2eb8-49e4-b0e0-ba51fdfba22c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "53f7dc7c-6cf9-459a-8b49-f461472bd45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2175ef0-30bf-4100-addd-71b7762c5a27",
        "cursor": {
          "ref": "a797ba25-9a40-45c9-a8ca-379a6f0b7927",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "738e3a66-026a-46cb-b3b3-0fedece1101b"
        },
        "item": {
          "id": "c2175ef0-30bf-4100-addd-71b7762c5a27",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5ea370f6-f6f2-4e9f-8b98-513bb959c54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566528c3-2097-4311-a9ca-63708cd33542",
        "cursor": {
          "ref": "af16c733-ec16-4d47-9eb4-5ff2bbe19a62",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a729c3dc-2514-4c76-8e68-1d1781ad4611"
        },
        "item": {
          "id": "566528c3-2097-4311-a9ca-63708cd33542",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ada3d540-5ca0-4bf5-a651-f88df42443d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5c175a-e51f-4ac7-89b0-4ae671175e93",
        "cursor": {
          "ref": "9f49ebc5-6fba-4b8a-b6e3-c93218baaf39",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d7c56d8d-2f10-4008-8318-1101a0ccb842"
        },
        "item": {
          "id": "5b5c175a-e51f-4ac7-89b0-4ae671175e93",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8c486631-8479-476c-a090-da58e1e08fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e85b09-cd30-40d1-8d82-26475939850e",
        "cursor": {
          "ref": "7285650c-fa16-43c3-af5b-be27f99f984a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "11c02d46-63e4-4a0b-81f3-5597238f6751"
        },
        "item": {
          "id": "12e85b09-cd30-40d1-8d82-26475939850e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "001354c7-e80a-40a7-bede-37df15fb9708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a72697-544d-4113-9ec8-1a9671c10744",
        "cursor": {
          "ref": "29703f28-c170-4900-a0ba-7691371bc6ee",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f49382ef-0d5a-47ae-8d59-96371da8d775"
        },
        "item": {
          "id": "51a72697-544d-4113-9ec8-1a9671c10744",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "55b340b3-b5a6-4a18-8d8e-101d584d7e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cc3dc3-cf8f-435b-970d-64faa176310a",
        "cursor": {
          "ref": "b5a15cd5-20ce-4905-bedb-d5bced1f999c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cfa32d8f-0f57-404d-980b-d4815d46299e"
        },
        "item": {
          "id": "31cc3dc3-cf8f-435b-970d-64faa176310a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "58c62f88-9521-4d01-ad6d-20daee5b8c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6729f934-2737-43e0-8452-c7d50909ab96",
        "cursor": {
          "ref": "6e493532-c7a8-41c0-8a91-5f0498f4ea99",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cd2e01b2-5816-4846-b9ba-345e94122992"
        },
        "item": {
          "id": "6729f934-2737-43e0-8452-c7d50909ab96",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bca78375-1190-4a6b-adcc-0fe0340dc008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9acf0fb-4b8f-4225-9b1d-831d317ab946",
        "cursor": {
          "ref": "fbd0602f-daec-4b2d-9622-d2b7c86ed5ba",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "78a9c99a-1e53-42a3-875f-c60bb33f6371"
        },
        "item": {
          "id": "c9acf0fb-4b8f-4225-9b1d-831d317ab946",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6147fb8a-0cce-44d8-8551-330f0a82fb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2c0083-0d9d-45dc-ac41-b24ebc4122a3",
        "cursor": {
          "ref": "c7878610-0318-4534-b30a-825c1b257bf6",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e21a0bbf-4c6e-4a25-bc12-5d309141c04e"
        },
        "item": {
          "id": "ae2c0083-0d9d-45dc-ac41-b24ebc4122a3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fad3d8d2-4fc4-4427-bd03-36a8a2787817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5428d8d-eaa6-4c79-b3ab-09de655d42f5",
        "cursor": {
          "ref": "32be96ab-22c3-47fd-a750-b3512b080a61",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e341ffb5-36f1-4415-a8e5-9388d9911761"
        },
        "item": {
          "id": "f5428d8d-eaa6-4c79-b3ab-09de655d42f5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "015b71ff-253f-40d4-adb5-ca2996d8bf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a250219e-c334-4408-a246-fc2a1537fccf",
        "cursor": {
          "ref": "e1b280df-567e-447a-9e09-69765c695baf",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "db0dc848-5cc2-4420-b9cd-fd0ff0a72698"
        },
        "item": {
          "id": "a250219e-c334-4408-a246-fc2a1537fccf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2e9702b1-3eec-40b4-a184-2c95dfdbcc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270a1268-88d4-4fa3-9e06-33a589e86d10",
        "cursor": {
          "ref": "ca80e852-f2b0-4f45-86db-d07bc5f455b4",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ee8497dd-f9ad-4771-8e3e-c4b2bb1ea68f"
        },
        "item": {
          "id": "270a1268-88d4-4fa3-9e06-33a589e86d10",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5affbed4-d981-4edd-b7a8-7c9855874851",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de02fba2-3eb4-4e62-9baf-94f521802385",
        "cursor": {
          "ref": "63fed6a3-140e-4ceb-891f-1000487463fc",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6eb39470-ef6d-4693-a7c1-ddb3c06aa5cd"
        },
        "item": {
          "id": "de02fba2-3eb4-4e62-9baf-94f521802385",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "17298194-f5b2-43f6-8165-d118c0c7b40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1d973876-099b-4f7b-9cda-ef3f7bf1947b",
        "cursor": {
          "ref": "378b8161-f382-4fdb-9805-b7620c4fc366",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "417e0507-bdd7-41ef-b00a-67cedaa73cf8"
        },
        "item": {
          "id": "1d973876-099b-4f7b-9cda-ef3f7bf1947b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c258fd59-5154-4b91-b67a-d4664337e7bc",
          "status": "Created",
          "code": 201,
          "responseTime": 8558,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01bc330-c90f-4339-8ba5-a9776589ba69",
        "cursor": {
          "ref": "5efcdb7d-3731-42ba-979c-6f546b742c82",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e9fc8f89-ea46-4050-b4e8-38e30a446711"
        },
        "item": {
          "id": "f01bc330-c90f-4339-8ba5-a9776589ba69",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c2634c89-a614-4702-941e-574af5326b84",
          "status": "Created",
          "code": 201,
          "responseTime": 8861,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b79d531-f014-4e1f-bed9-753fbdf64ce8",
        "cursor": {
          "ref": "ec39b2a8-b274-4480-b396-1bb0fc95df1c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "48c79bd6-9ff3-4eb4-8cc4-64e8f21909ca"
        },
        "item": {
          "id": "4b79d531-f014-4e1f-bed9-753fbdf64ce8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1c3bee10-100a-4907-92eb-f7866f1a7c17",
          "status": "Created",
          "code": 201,
          "responseTime": 8117,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "470d4265-c5a1-45f7-a677-fe5a1bb6b757",
        "cursor": {
          "ref": "0a0fe993-a4cd-4d09-88c6-b9876937ee33",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "41af3fb7-a29f-4c75-85ee-fe6863cc22bd"
        },
        "item": {
          "id": "470d4265-c5a1-45f7-a677-fe5a1bb6b757",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "32194090-5110-473e-976d-b6f0e72eb904",
          "status": "Created",
          "code": 201,
          "responseTime": 7888,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "979d6e19-6ab6-4e5e-b651-7b1ec438a141",
        "cursor": {
          "ref": "39c285eb-a1e6-43a1-a249-c6bcb3255b55",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1b09fdf0-401a-4f02-b826-c52a11ee5645"
        },
        "item": {
          "id": "979d6e19-6ab6-4e5e-b651-7b1ec438a141",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4b0d09f9-3072-49af-a81a-567a172c5aed",
          "status": "Created",
          "code": 201,
          "responseTime": 7612,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d62637-83fe-46e2-9bb9-298a9defd80d",
        "cursor": {
          "ref": "d455fd8f-edc2-40ff-8605-4df522ff6b6c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7f018347-c7a8-42f5-a034-61400d478558"
        },
        "item": {
          "id": "47d62637-83fe-46e2-9bb9-298a9defd80d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "738ed00f-588d-4215-956d-bb336fbc92ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1e1a198f-cd29-4e58-ae07-d6927fa20df2",
        "cursor": {
          "ref": "2ac19a6f-ce0e-4a1f-be53-9cb128254531",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7705150f-0126-4428-bad1-1555f43c6190"
        },
        "item": {
          "id": "1e1a198f-cd29-4e58-ae07-d6927fa20df2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "66d5ecad-dea9-4c00-bad6-a57aab8fb36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dd58fa-b7b2-460c-a0da-2b3535fe66fc",
        "cursor": {
          "ref": "4eda5568-4771-4553-9c8a-78c4828edab7",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "44747192-d93d-4bf6-8dc7-38d1d3034164"
        },
        "item": {
          "id": "48dd58fa-b7b2-460c-a0da-2b3535fe66fc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b04ae4eb-45e7-4edd-b128-5ffd265a17bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2264b4-adc1-49ae-83c5-ca513f8ae31c",
        "cursor": {
          "ref": "5698f3e0-1ebe-4ed7-bace-80f41da2e356",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d09695ea-56a3-4c36-b3ae-8e03697b2dac"
        },
        "item": {
          "id": "ab2264b4-adc1-49ae-83c5-ca513f8ae31c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2bb93b07-1f4d-4f21-ab34-bee45eee5590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db1c886-d51d-497b-bff1-2581872b6234",
        "cursor": {
          "ref": "8018285e-7253-42b5-a0b1-f894525277e3",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0c5dedda-eb8c-4291-96f9-3990c43a4beb"
        },
        "item": {
          "id": "3db1c886-d51d-497b-bff1-2581872b6234",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c687183f-216d-44a6-bb12-a2aca4262537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a34095c-86d4-4ad5-a703-be1f2fe70669",
        "cursor": {
          "ref": "8596579d-1653-4308-8f74-f88abc246e4e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b1217a9e-6bd1-4b24-9179-0c27ab4d7c68"
        },
        "item": {
          "id": "7a34095c-86d4-4ad5-a703-be1f2fe70669",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "40de50e4-2636-4698-b3e8-ac56be0fccf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f4099b-5978-4dc2-8076-2c4e1ae34e94",
        "cursor": {
          "ref": "74e75f10-dddc-4816-a05d-46a38c3a229f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7eb3af44-53ce-43d2-941c-ecd0d106d015"
        },
        "item": {
          "id": "97f4099b-5978-4dc2-8076-2c4e1ae34e94",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7c4ca3db-39d0-4988-8ea4-fc8e3a61fb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359f8a31-b957-433a-bcd4-bdf68352da3e",
        "cursor": {
          "ref": "c3e79522-74a7-4c86-bec5-8fb62b40d7d0",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "207e5367-c3cf-4766-821b-b9b506298ac8"
        },
        "item": {
          "id": "359f8a31-b957-433a-bcd4-bdf68352da3e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d636580d-f5a0-4164-8a7d-4c68bc79f95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b792f2c4-8dc2-4e11-adea-3e9ea3c7ac66",
        "cursor": {
          "ref": "2ed09108-448c-4aa0-8523-36a578ec4a2e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bb63161e-bd36-4228-aec2-2915fb1f12ab"
        },
        "item": {
          "id": "b792f2c4-8dc2-4e11-adea-3e9ea3c7ac66",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "041f6417-56ab-4e92-b906-6273efa5b333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5223fad-bd3f-4fb7-aa49-77b2fed1ecce",
        "cursor": {
          "ref": "0fbfe34a-f4ef-41d2-b176-84370610d5f4",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e2cdaf54-d2b8-40cc-8f78-3fc1da9de802"
        },
        "item": {
          "id": "e5223fad-bd3f-4fb7-aa49-77b2fed1ecce",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8d988026-be71-4770-bc6e-3db56214ac67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4356d69-156d-4aea-bee5-7ea79f340e67",
        "cursor": {
          "ref": "a00e57a1-7897-4a06-a5b8-4917ca071221",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6d2d5ed0-6027-45f0-9705-f53e3378d466"
        },
        "item": {
          "id": "f4356d69-156d-4aea-bee5-7ea79f340e67",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "515e893a-280e-4f97-a3bb-3abe8110171f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf406c8-b330-4f60-94f4-f9046efaf727",
        "cursor": {
          "ref": "db9efd66-1288-453f-a451-198d234382f6",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e9327b58-be75-4293-8f05-b465154ee451"
        },
        "item": {
          "id": "abf406c8-b330-4f60-94f4-f9046efaf727",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d2e09f86-1353-4940-8251-9e9a70ed775d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1169d391-ed77-4944-91a6-dbbfb10afa4e",
        "cursor": {
          "ref": "6a2174af-55ad-45c8-854b-061ee2b9dbab",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fdb35769-6317-4c36-9025-d50e1c5e7e47"
        },
        "item": {
          "id": "1169d391-ed77-4944-91a6-dbbfb10afa4e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2847ab32-61be-4bc0-83a4-e8c7b1893d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e24e71-c7b7-4c58-b7d6-fa882d0077a0",
        "cursor": {
          "ref": "ecc96cc7-bf23-4a52-a51c-38a9615c753d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e2781259-9722-4794-bc7a-e1dafbae6a4b"
        },
        "item": {
          "id": "96e24e71-c7b7-4c58-b7d6-fa882d0077a0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "15650e8b-0542-4d2b-b121-c6c0c256861f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136906be-7230-436d-9712-347b54ffb30b",
        "cursor": {
          "ref": "494bff16-53bc-4ff8-be75-9e1ac3af2816",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d5426ba8-3bfa-4944-b757-5d3817aa5ace"
        },
        "item": {
          "id": "136906be-7230-436d-9712-347b54ffb30b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c285382a-ed24-4359-a0ec-999da28b8ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c9579c-7878-441c-a867-8c81741e396f",
        "cursor": {
          "ref": "7d3cc989-8a00-46e9-8c0c-7149183f7152",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "82f9baa7-8532-46ad-8b37-aa343b6ceebe"
        },
        "item": {
          "id": "09c9579c-7878-441c-a867-8c81741e396f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "68052222-c952-4098-9c13-c0ddd65b3a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a571a7-9dc2-47c7-8ff7-4ed91456b408",
        "cursor": {
          "ref": "725067d9-096f-43fd-b662-49cb041df67e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "169a14f1-b452-4c2b-a685-cd6bd2622c6f"
        },
        "item": {
          "id": "a1a571a7-9dc2-47c7-8ff7-4ed91456b408",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9f048b44-8080-4676-a3d9-d723e472411e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b7d84f-6ae3-47a6-bd3f-99f7340148a1",
        "cursor": {
          "ref": "f77fa3a1-7586-46c9-a7af-244c1a84cd17",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9df3dd87-06d5-4759-879d-fa6908afa6e3"
        },
        "item": {
          "id": "49b7d84f-6ae3-47a6-bd3f-99f7340148a1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "07d62c74-873c-414a-9b5a-a047fecf6fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b9231a-4180-49c4-9108-d42d8fa43e61",
        "cursor": {
          "ref": "d1ea9a3f-b443-479f-a562-0fc299a46cf0",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b3aca559-2732-4a9e-82d0-d6dd6dc9f745"
        },
        "item": {
          "id": "a5b9231a-4180-49c4-9108-d42d8fa43e61",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5738445a-8ea2-46ee-83f3-c6199da77a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a06e31f-9237-4826-9baf-e18282f6cfe9",
        "cursor": {
          "ref": "546a8f82-30ca-4e84-9165-230476116127",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2d69f1cd-5e32-4df1-84a8-ba06194f51a5"
        },
        "item": {
          "id": "7a06e31f-9237-4826-9baf-e18282f6cfe9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "934044e8-27e3-443d-8f3f-0767fd9f2389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bedd38-8ca9-4642-9764-60929fb36ce3",
        "cursor": {
          "ref": "c74b7766-85c7-4a1d-956f-891cdfec8d6d",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "609b8144-e51f-4fff-9c00-80b51f9067f4"
        },
        "item": {
          "id": "b6bedd38-8ca9-4642-9764-60929fb36ce3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b207665d-29cc-4986-a56e-c25cb765a9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c75d17-4206-4941-afdc-c0c641940445",
        "cursor": {
          "ref": "0b5b62f9-1659-4bc3-896a-9e0cd99228e1",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ced195b5-6438-4509-bb4f-9b50ce21e957"
        },
        "item": {
          "id": "e0c75d17-4206-4941-afdc-c0c641940445",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b69116c4-e1e6-4349-957e-4dd9f8a1b7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66733671-efc4-49a6-8069-9d8f04a03a55",
        "cursor": {
          "ref": "ddd3225c-a61d-4d68-bd40-c57271056677",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7e662ce9-71d4-498e-9d4f-4d04ed1fd35e"
        },
        "item": {
          "id": "66733671-efc4-49a6-8069-9d8f04a03a55",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "08d8c7b3-04ae-4dc5-8d58-fbd1a1b770b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ceaaf8b-c3eb-495c-a340-bea3a592d5d2",
        "cursor": {
          "ref": "96920822-89b5-4aad-bd0d-8d0e1189f4ec",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "29270240-298a-49ac-bf54-e94826d4111b"
        },
        "item": {
          "id": "6ceaaf8b-c3eb-495c-a340-bea3a592d5d2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e012acac-b139-4c2b-be91-db0ef0e2b320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b2e7c5-6353-4da4-8acc-aa848fb3e564",
        "cursor": {
          "ref": "dd3740d7-9d14-4f3a-9ac8-3259f9327850",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b8a957b5-2d38-4023-b958-72aec158e670"
        },
        "item": {
          "id": "c0b2e7c5-6353-4da4-8acc-aa848fb3e564",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "61ad9f0e-50f6-4514-a5e6-d88cdd7024ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2498b31b-8e16-4ec2-8a41-2cbeb52f95bd",
        "cursor": {
          "ref": "f6426878-27ec-4e4f-8bc3-9507c7227da7",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "86a628fa-7e29-47f1-a42a-7f2bad356160"
        },
        "item": {
          "id": "2498b31b-8e16-4ec2-8a41-2cbeb52f95bd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0b27a8a9-da2f-4a29-be5d-b7f73664b994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572ecbf8-5bac-43df-bb1d-dc549f27e98a",
        "cursor": {
          "ref": "489bee99-060a-4b17-b5af-e110aabb5abe",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "16a52c4d-748b-47a7-b8e7-2ea73ad62f5d"
        },
        "item": {
          "id": "572ecbf8-5bac-43df-bb1d-dc549f27e98a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "deab132f-a69b-4ac2-b975-3834b72882c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f74a38e-576a-4f6f-a33e-970e91b05201",
        "cursor": {
          "ref": "f47b23f8-3f23-4db9-a601-8ce71883557d",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fc8131a8-7e10-418f-9bc1-04cb9796ce84"
        },
        "item": {
          "id": "0f74a38e-576a-4f6f-a33e-970e91b05201",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2ab7aff2-19aa-40e3-8669-98e5da7eabd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c1f3c9-23ad-49c1-afc6-0262f5a16a86",
        "cursor": {
          "ref": "43450850-56bd-4f37-9db7-1da6abce5b3a",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0d4cdaab-16c9-41ce-aab0-e3b88c60f036"
        },
        "item": {
          "id": "11c1f3c9-23ad-49c1-afc6-0262f5a16a86",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b0e4fa1e-81d7-454a-b5c5-23619265bc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d6cd08-310e-4a47-a4ec-0d9bfc0d2605",
        "cursor": {
          "ref": "7fcd9db0-59c6-4cc5-8093-8b837229d686",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "da18b8e5-824d-4f63-b46b-b207238ff3ba"
        },
        "item": {
          "id": "60d6cd08-310e-4a47-a4ec-0d9bfc0d2605",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3285af50-51b4-482b-93d3-98e6fa3c0dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04db3e04-14e1-4cc5-8c7d-1dbed5d0727f",
        "cursor": {
          "ref": "a82829f7-c0fa-46b5-9df3-50d6b7f66646",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b666c1c2-404a-44a9-8ec5-4a209c4d709c"
        },
        "item": {
          "id": "04db3e04-14e1-4cc5-8c7d-1dbed5d0727f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4daba0e0-bc56-4841-9dc5-7ac0a0053703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d4a60f-d767-4769-b165-23968706c33c",
        "cursor": {
          "ref": "7295711a-925c-44f1-93d1-c9d4819e7a18",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e6d5fbef-de3d-499b-bc45-2d933d12e301"
        },
        "item": {
          "id": "61d4a60f-d767-4769-b165-23968706c33c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fbc54672-fea6-449f-9475-078c9419f420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09523cd6-4398-46d7-aa78-8537d44bbb04",
        "cursor": {
          "ref": "9b33546d-aa69-4f31-b2d7-418349152e69",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "18f9c7bf-a9f4-4e9e-8936-a46ecfa22626"
        },
        "item": {
          "id": "09523cd6-4398-46d7-aa78-8537d44bbb04",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bf4b6ae6-62d3-42a3-baa5-fc9d8647b444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f648d4e-b512-493c-bff5-247bbcc35973",
        "cursor": {
          "ref": "9e7f2564-10b5-4100-884e-8924cc145b5c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a6e64b51-f7fb-43be-876c-993effe75d55"
        },
        "item": {
          "id": "9f648d4e-b512-493c-bff5-247bbcc35973",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "034b5513-0c04-49c5-bde0-101c9d4f7c26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b2885b-a4cc-4240-9bfa-e6ee3ba9c11b",
        "cursor": {
          "ref": "67d74b19-aada-40cc-96fd-b3a6b9328118",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "34a8f46a-6433-4bcf-b08a-a82a702e67e9"
        },
        "item": {
          "id": "13b2885b-a4cc-4240-9bfa-e6ee3ba9c11b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b7ee8f1b-c7dc-468e-9ea0-78273fa2c39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33004bc-369d-43a5-afae-f0eb5b441157",
        "cursor": {
          "ref": "9bed3b74-50a8-4f09-abf7-2133256f417b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2426d3cf-8be4-41f5-94c9-04b7463a5c94"
        },
        "item": {
          "id": "c33004bc-369d-43a5-afae-f0eb5b441157",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "438d3997-69b3-42bd-ab4a-bf800521f8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c79cd04-7ab1-49f5-82b5-fbbe1a154433",
        "cursor": {
          "ref": "206be5c6-db82-45ad-a973-9ba99ac716f9",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a0e07844-8eb4-4be1-a5dd-1d518c3359b3"
        },
        "item": {
          "id": "3c79cd04-7ab1-49f5-82b5-fbbe1a154433",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "74791a9c-abf2-4d26-a7e1-0c7f774fa23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b77e04e-9820-4d60-b372-547f29fb54de",
        "cursor": {
          "ref": "576292ae-6a5e-4210-ae3d-757b77fe52e3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0f5a3adf-f94e-4050-8ad8-701a5165fe35"
        },
        "item": {
          "id": "4b77e04e-9820-4d60-b372-547f29fb54de",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2e21c2e6-9fac-45c0-b4ea-82970b1828b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91fc7c41-8774-4e96-aa3f-0d7b7a286dcc",
        "cursor": {
          "ref": "84cd6104-77d8-4c05-a2f4-a8d70301952c",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b1bee9d1-7b00-4b93-b769-bc703ca58561"
        },
        "item": {
          "id": "91fc7c41-8774-4e96-aa3f-0d7b7a286dcc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "140c29f6-499c-4973-8540-596775620784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3580f5f0-e0f4-4502-922f-c9de018bbdbe",
        "cursor": {
          "ref": "8835caad-e6d3-44b6-9d56-082a1301e118",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b116916f-d31e-45da-b52f-ca7f184d9288"
        },
        "item": {
          "id": "3580f5f0-e0f4-4502-922f-c9de018bbdbe",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b7cd1cdc-02a3-49a2-9602-b0214c678597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5934ec5-a5a8-402f-b0dd-b3c5de36f3c5",
        "cursor": {
          "ref": "a87f9820-779b-4e0d-a12b-cb6427737f9a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f1f616c8-d970-443d-886f-1c7be231daab"
        },
        "item": {
          "id": "c5934ec5-a5a8-402f-b0dd-b3c5de36f3c5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "21e7dd81-d455-41c1-b10e-eb40d009b013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109a05aa-133d-4543-9001-74bf24f00403",
        "cursor": {
          "ref": "dafa282c-8289-4e74-a025-7f52d900b65e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "46fefd68-a6be-4bf5-9e19-0fdac96d65aa"
        },
        "item": {
          "id": "109a05aa-133d-4543-9001-74bf24f00403",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2835a664-7e75-4725-a003-870658591a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a74a49-51bc-407e-89c1-4d2a2c896c43",
        "cursor": {
          "ref": "2d3c8eb6-7061-4152-b29d-a9e8a5c5bc59",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b8879d99-3ea5-4c13-ae8c-326af0900b6c"
        },
        "item": {
          "id": "e8a74a49-51bc-407e-89c1-4d2a2c896c43",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b9cabe91-9fbd-42dd-8808-87a29ce33ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d9c40b-0c9c-4da4-985b-95fbef6f0e6e",
        "cursor": {
          "ref": "4bfe1de9-a483-4955-9fbd-e34e64b04878",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "741bf110-5904-4238-ac18-569157e9db9e"
        },
        "item": {
          "id": "25d9c40b-0c9c-4da4-985b-95fbef6f0e6e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "74dd4f4c-42e9-4371-be71-450cd8a2ae78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3a055d-95db-46ce-8e09-b2ecf49e6727",
        "cursor": {
          "ref": "e61e6f1e-cb4d-4b0f-b6b7-b17d456a9a0a",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e1f443c6-2ba4-4aa8-a476-04ac22e24083"
        },
        "item": {
          "id": "7f3a055d-95db-46ce-8e09-b2ecf49e6727",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9c281d50-7a9d-447d-981d-9c7ad1d717c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237a5c47-a9f4-4929-9678-caa64fa535a7",
        "cursor": {
          "ref": "46df53be-079c-498e-aabc-2103ac9642f6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bdf31182-a1d9-445c-9101-f7e25261ba4d"
        },
        "item": {
          "id": "237a5c47-a9f4-4929-9678-caa64fa535a7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "54a413d3-f6c5-4d88-b91f-cc615f84a59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d9c8ff-3995-4c12-93dd-e889c8e1cfe7",
        "cursor": {
          "ref": "456840d7-76ea-47b4-ac36-7532700c7224",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "94cd8201-aa3a-47e4-a0c9-477b9b1ccc77"
        },
        "item": {
          "id": "f7d9c8ff-3995-4c12-93dd-e889c8e1cfe7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2b142c9a-c390-43d0-b807-606a1554bcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d448324-e0a0-47cc-ada6-7188af7a2c91",
        "cursor": {
          "ref": "a614f3d0-dfd6-4974-bf0c-a79daf9e0a63",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "29be6531-441f-4b43-8f83-101a544551d4"
        },
        "item": {
          "id": "7d448324-e0a0-47cc-ada6-7188af7a2c91",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "77086d1a-cf12-4890-b034-072d85aad51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6bb2d8-e238-4398-9865-3cebe2e91e86",
        "cursor": {
          "ref": "9bcb1a8f-b441-4901-8eeb-92ec25f5deb0",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "367e0529-800c-4f10-84f5-697f970823f8"
        },
        "item": {
          "id": "8b6bb2d8-e238-4398-9865-3cebe2e91e86",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "47ed959c-aefb-473c-94a1-199b9387aebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf57c1fb-3318-41f8-82e2-175e994daaf8",
        "cursor": {
          "ref": "34ce645a-898b-469c-b46c-09d32fcbe550",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6c399592-b4bb-4ebf-8704-d3da5b479043"
        },
        "item": {
          "id": "bf57c1fb-3318-41f8-82e2-175e994daaf8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "deaa766f-9996-426d-83a1-60f28575d94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ec610d-da6f-43af-97ac-e4b131c9de90",
        "cursor": {
          "ref": "e47f6d2b-0386-406c-a180-80a1bb1e28b7",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ecefa16b-5009-45e7-86a4-c017b4d2dd1c"
        },
        "item": {
          "id": "f1ec610d-da6f-43af-97ac-e4b131c9de90",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "80945593-6c4e-4469-bd24-b11885c0aeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253ebe18-3a66-4e55-a62f-f1e0c5ff9613",
        "cursor": {
          "ref": "e964827a-4067-43ec-8432-b7d9cc4968b8",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "de53f65b-e577-4244-bb7a-f6669825b929"
        },
        "item": {
          "id": "253ebe18-3a66-4e55-a62f-f1e0c5ff9613",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "33c2b6d7-98bd-4c19-b1d1-e47379523cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5a36ed-f388-485c-9b11-69d595051506",
        "cursor": {
          "ref": "5d8467ec-d8cd-46f0-bf9b-4e0dea20e03d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ecaf2a53-cab6-418e-9f9b-24e54304a83f"
        },
        "item": {
          "id": "4b5a36ed-f388-485c-9b11-69d595051506",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9c3f5b90-8bc2-4dad-9b64-aadc69dde762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8849006d-9aab-4565-b609-51fff701c9f5",
        "cursor": {
          "ref": "02c5410d-e533-4f1c-9bb9-d75bea90e63a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5bf9eb8b-5973-49ed-859c-22c1a5f0aaa6"
        },
        "item": {
          "id": "8849006d-9aab-4565-b609-51fff701c9f5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d39d225f-aa23-4f0e-a9dc-c3e4afaaf1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d5fa4d-cff6-45c8-ac0d-8ff51c860db6",
        "cursor": {
          "ref": "dc05d2ad-9db1-4a77-957d-f0bfef6bdb5e",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a0f96815-8ef7-4adf-b8e2-301b5403737a"
        },
        "item": {
          "id": "d1d5fa4d-cff6-45c8-ac0d-8ff51c860db6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8a08c0e1-f7ce-4aa8-a07c-0dc6e507c7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11dbd7a-ff6f-49fa-985f-d59210adcb17",
        "cursor": {
          "ref": "1f79b054-1e46-4df0-b6c8-909018305d14",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2b1a917b-3309-4e14-8f52-30e6a6b0b334"
        },
        "item": {
          "id": "f11dbd7a-ff6f-49fa-985f-d59210adcb17",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "758a4765-187e-445a-a7da-f2501e55fb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b80921-ed79-4410-b4fc-4409b346e3de",
        "cursor": {
          "ref": "da9c7472-fbc7-44d8-bb5c-5bc5ed89eb0b",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d52be1c3-df22-4307-b3a3-483727f98b4b"
        },
        "item": {
          "id": "23b80921-ed79-4410-b4fc-4409b346e3de",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "798164ab-3158-4328-8af5-0345056beae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e219b4a6-dfb9-4065-a178-338c96311744",
        "cursor": {
          "ref": "75b32a0e-741f-4095-bbb4-4bbc710d2d5d",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "84fa0dde-bae4-4120-be6b-682c22a14ad9"
        },
        "item": {
          "id": "e219b4a6-dfb9-4065-a178-338c96311744",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "955e051f-7151-460c-9cbb-999fb67ff53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9bfcbb-9ce7-41a8-96f2-99facd300fb7",
        "cursor": {
          "ref": "cb1e506e-f108-4724-8bb4-d12d12928e80",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9c8fcd05-709d-4ad4-bef5-892512f38712"
        },
        "item": {
          "id": "2c9bfcbb-9ce7-41a8-96f2-99facd300fb7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "376f03af-cf9a-426a-b398-c5a4a8a7877e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1e8d5c-0e0d-407a-8e60-c1e387f22e1f",
        "cursor": {
          "ref": "f23070da-ef22-4792-9f4b-72c4bbc71cc3",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c202a758-4c1a-478b-a0b5-a0d9fdf12818"
        },
        "item": {
          "id": "bd1e8d5c-0e0d-407a-8e60-c1e387f22e1f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "30b151d0-29d3-4ec9-ac7f-ca3438922c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6a1ba7-0713-4b86-a2ba-3d14e8249faa",
        "cursor": {
          "ref": "b2990e98-d16f-456a-9364-3dd0b5dc2fcd",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b8c51dd3-378b-4694-bfff-c226719d88de"
        },
        "item": {
          "id": "8c6a1ba7-0713-4b86-a2ba-3d14e8249faa",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ff8fb116-35f5-41e6-bbc9-48339cac85ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e559fa1-06d0-46eb-9680-157ab67ff772",
        "cursor": {
          "ref": "800725b3-1c90-4597-bc64-9cb5fc166394",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1389edb5-8dd0-4c9f-9e0a-23e23144836f"
        },
        "item": {
          "id": "6e559fa1-06d0-46eb-9680-157ab67ff772",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2ecef890-9c4d-41be-8147-4b4643a8acc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae350f0d-00e2-424c-aaee-aee07b930f48",
        "cursor": {
          "ref": "31c577a7-845b-48a5-918c-83d133e8ead7",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "48859fca-5e74-44ce-b6ea-704b84fef0b2"
        },
        "item": {
          "id": "ae350f0d-00e2-424c-aaee-aee07b930f48",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8a358edc-76e9-4c9f-b229-a95a4149e4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b305320-621e-4705-a1b8-5073398c5b38",
        "cursor": {
          "ref": "96366ea4-a862-4195-a671-b4f56b0158b1",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "70460510-edc6-4ad1-87ff-1a5e2f6caffa"
        },
        "item": {
          "id": "6b305320-621e-4705-a1b8-5073398c5b38",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f4aebbf5-3f18-4348-bc31-96c60370de1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b09ed81-54dc-4bfc-908c-1e5f42c93561",
        "cursor": {
          "ref": "0b7eba58-633c-4a34-b6f0-18251442840a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "078d76a0-a71e-4a80-bf69-dd6f4aa23063"
        },
        "item": {
          "id": "7b09ed81-54dc-4bfc-908c-1e5f42c93561",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "032b1c18-1549-4a0e-9312-0845c88a6df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21f0b9c-267d-4423-89c9-e65b5143b5c8",
        "cursor": {
          "ref": "fb40ccee-93df-4591-9d41-abe8ba5a1877",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "eacb9820-fd46-4819-84da-9693b2758ce7"
        },
        "item": {
          "id": "e21f0b9c-267d-4423-89c9-e65b5143b5c8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d993ecaa-ea2b-4eb9-8b6a-243d9e4b0bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafae636-3739-489b-b70b-ec8759d1e425",
        "cursor": {
          "ref": "43d3c959-815b-467e-88e3-de439c410b19",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "289c5f4d-837d-4c09-8938-c463115a4d51"
        },
        "item": {
          "id": "aafae636-3739-489b-b70b-ec8759d1e425",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d7ecd19a-d30e-4c8a-ab08-fd3d25ec7015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7af0677-bf1c-4cd7-9f11-583dfcb30ad3",
        "cursor": {
          "ref": "9339d4e0-dffd-43b3-8af7-8ec9786fd2cf",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "745dd153-6990-4ffa-ab89-98cea1902dfd"
        },
        "item": {
          "id": "c7af0677-bf1c-4cd7-9f11-583dfcb30ad3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f8d8c3ed-9631-4a3c-bfb3-6572533c1319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f113836e-0f51-4874-9dc4-b9ed257903cb",
        "cursor": {
          "ref": "7a679179-e596-4630-9e13-5f2101235961",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ffd3cf26-7349-4707-b663-43c86b8cb53f"
        },
        "item": {
          "id": "f113836e-0f51-4874-9dc4-b9ed257903cb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8cf99665-2235-47c8-b515-741466b7af88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e619d3c-4c98-48c3-af41-19c193b0a5ca",
        "cursor": {
          "ref": "597f4228-bf56-4e9a-bfec-ec0c59e8ac59",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e73e5064-50c2-4364-a421-dc10c14bd6ca"
        },
        "item": {
          "id": "3e619d3c-4c98-48c3-af41-19c193b0a5ca",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "46d36fae-f49c-4847-95ff-c147e2b736cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee66ed8d-7ee6-4c5a-ba28-0cce7ec9a85c",
        "cursor": {
          "ref": "42476b87-a74b-4402-81b0-c48cf5388cc8",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "69ee5bbd-83b5-415c-8325-6823e9c876c6"
        },
        "item": {
          "id": "ee66ed8d-7ee6-4c5a-ba28-0cce7ec9a85c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bb9edaf7-c436-4d7b-9250-f016b9e16114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf6c8fc-3647-4578-9aec-9d4f49f5ee22",
        "cursor": {
          "ref": "e5d1ecc0-29a0-43d2-9061-1cf150413c09",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "be42778a-58a4-447a-b5aa-8bde900089ba"
        },
        "item": {
          "id": "6cf6c8fc-3647-4578-9aec-9d4f49f5ee22",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f5064503-e778-4ac1-83d5-e3d113fe013d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab394e5-6182-45c2-9e1a-a5c78ad6de78",
        "cursor": {
          "ref": "75cb6769-8d3f-4211-96e5-e5a37c7bc441",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b2adabe6-308f-40ef-b028-6fb5063fdb70"
        },
        "item": {
          "id": "6ab394e5-6182-45c2-9e1a-a5c78ad6de78",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b9892563-235b-42a8-b4dc-97a658db60b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c336fc-52c1-4d82-8eb9-42bd80b871ea",
        "cursor": {
          "ref": "ecd87b31-a925-430a-86d0-a9e18299ef8b",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6de4e7f4-6c28-4c6d-a1e9-3bca20d6a056"
        },
        "item": {
          "id": "c5c336fc-52c1-4d82-8eb9-42bd80b871ea",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1a04d3cb-0a82-4848-945b-522d7d518942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af13b809-21c5-4f00-9adc-7603a7dc6495",
        "cursor": {
          "ref": "bf464b6b-d0f2-4ecb-9ae3-b4933bf75452",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d9f9de54-68de-45f7-8d5d-6450a57eb401"
        },
        "item": {
          "id": "af13b809-21c5-4f00-9adc-7603a7dc6495",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0df55247-2755-4163-81d5-9ff6daffbd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3be363f-f91a-4c6e-a811-207926b57bc2",
        "cursor": {
          "ref": "28fcdf3e-e31c-4436-b80e-7a0b49df6b79",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f52e5caf-5706-499f-a88b-49b7483f47c6"
        },
        "item": {
          "id": "d3be363f-f91a-4c6e-a811-207926b57bc2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1e161eb8-6b4f-46b1-ada3-8cb62f314dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d01b8b-708b-4bd1-9298-cb79ac15d504",
        "cursor": {
          "ref": "d0df78dc-6cc6-4fe3-a05c-34a80781d104",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bdaf9451-1e28-4199-9f22-5c263eb26bd9"
        },
        "item": {
          "id": "10d01b8b-708b-4bd1-9298-cb79ac15d504",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "be7d2565-5214-4cf6-b520-ef0ee4e3403b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8673d0-8337-4261-bf76-4dee6f4d583c",
        "cursor": {
          "ref": "e8c3bec4-edd3-4ec2-9e72-729bdb6c3bfa",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "87474bd2-a470-4c19-9b2c-7d486f22070d"
        },
        "item": {
          "id": "ff8673d0-8337-4261-bf76-4dee6f4d583c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6bb96872-15db-4e49-b38f-a60bc6dc0461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e9207b-9476-4d5f-957a-b2232a2f4a02",
        "cursor": {
          "ref": "a8e9fceb-8bbf-49ca-b7f0-6caa0993cc20",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c173bdf4-7925-4c43-87e2-ef2fc4a2b594"
        },
        "item": {
          "id": "05e9207b-9476-4d5f-957a-b2232a2f4a02",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "268a0120-8792-4aca-b85b-442681e11503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0437a296-958d-4007-b0a8-53e5e339f1fd",
        "cursor": {
          "ref": "202776df-49b4-4339-9aa6-0159013cb18d",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ded4b7f5-2616-4b2c-96ad-e2a41967c39a"
        },
        "item": {
          "id": "0437a296-958d-4007-b0a8-53e5e339f1fd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "24011aa1-d15a-48b6-adc9-3942f140c05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9061a8ca-b6ee-4920-8257-b2fa92f52d82",
        "cursor": {
          "ref": "c8aeac46-bb0e-4082-b365-f2848ef3a392",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3541d4ee-a6f9-438b-b9e1-7fd27913a27a"
        },
        "item": {
          "id": "9061a8ca-b6ee-4920-8257-b2fa92f52d82",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1c9850a9-6bac-43fb-9f7c-591848657af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d823fdf-03bc-4d15-a4cb-55ec07e60e6e",
        "cursor": {
          "ref": "80a866d8-deb3-4b88-a721-faa073bef9fe",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6c672665-74f0-43b9-8d2b-6b301a52430e"
        },
        "item": {
          "id": "7d823fdf-03bc-4d15-a4cb-55ec07e60e6e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1e35a7a8-e22f-4b79-84ab-60e38c696731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db38de53-ce23-45d2-93a1-c15a1251abed",
        "cursor": {
          "ref": "32513f33-5d14-43e3-abef-276b830a4844",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a5d24ee6-6299-4035-ae09-e50fd4e89de1"
        },
        "item": {
          "id": "db38de53-ce23-45d2-93a1-c15a1251abed",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a02ab599-bc5d-4d91-89c6-203a73cd4040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626b59f9-5bec-4dc2-ac9e-173cc7d20cb7",
        "cursor": {
          "ref": "1203096f-cdfe-422a-a490-7c563272a56d",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "770974ac-9daa-4535-9c97-f20f1b061b95"
        },
        "item": {
          "id": "626b59f9-5bec-4dc2-ac9e-173cc7d20cb7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9fd2ffe1-64a8-4a0b-bb23-93540201ebd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca062082-8cb0-4398-970e-28b1ae619bc3",
        "cursor": {
          "ref": "0f541730-da74-4039-aafc-10a68d83a1f8",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d13692ff-eb17-44be-9547-7893c17cd921"
        },
        "item": {
          "id": "ca062082-8cb0-4398-970e-28b1ae619bc3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eae5c77b-a772-4789-a90f-8b61ac394c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8f8150-2662-4067-9951-73817dabb197",
        "cursor": {
          "ref": "0e57e3a2-ecc7-4010-9f7f-1c16aadf5386",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e123d2ce-4367-4745-9d84-0d44391063f3"
        },
        "item": {
          "id": "1c8f8150-2662-4067-9951-73817dabb197",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7dff53b7-5288-4f2e-9edb-40abe19aa9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5197d2-b782-4ae1-b9ba-60c805cc8e53",
        "cursor": {
          "ref": "54a4dbde-bad5-478f-800b-d85ff621db6a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3801cd4d-162b-4de8-9de4-417776170b73"
        },
        "item": {
          "id": "dd5197d2-b782-4ae1-b9ba-60c805cc8e53",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2e79036b-2ae3-4e5e-9cb9-b6aa5f8f2261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85af2f80-c99c-47ae-943e-01076d39399f",
        "cursor": {
          "ref": "b6a63ca9-a43a-478b-ae49-18072064449c",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b4283e1e-d25d-4730-a16d-5338b77d0f5a"
        },
        "item": {
          "id": "85af2f80-c99c-47ae-943e-01076d39399f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bb26f6f5-2bc6-4fbd-b73e-77980d76ad06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666c7161-efe8-4a7f-9b46-102675cddca4",
        "cursor": {
          "ref": "edfa7f21-4211-4c71-ade7-c03b98687230",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4992452e-c56f-4e28-91db-8fda56cf5a88"
        },
        "item": {
          "id": "666c7161-efe8-4a7f-9b46-102675cddca4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0c5b9f3e-318d-4ff7-86e5-cc18bce40487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5432c42-92f3-418c-9814-8c9e9979cb0c",
        "cursor": {
          "ref": "def37dc6-95e9-4ab5-8a7e-68cb735b57c3",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "768ca680-cd12-4e92-8988-d115838fc900"
        },
        "item": {
          "id": "e5432c42-92f3-418c-9814-8c9e9979cb0c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f95a845c-7adf-4573-8891-7f7641d45afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c391ef9d-7845-43e7-97c6-751749c2b6bf",
        "cursor": {
          "ref": "145a1f34-e28d-4d3a-8f73-f68a56d3f5c6",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "29a22bca-0054-4bd5-beff-d1b7691a2e73"
        },
        "item": {
          "id": "c391ef9d-7845-43e7-97c6-751749c2b6bf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9f12eadd-8a0c-429f-9a4f-b6b73de4aecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5096389b-ae1f-4efb-a83b-7197c4798650",
        "cursor": {
          "ref": "43aef905-42fa-4b9a-adf2-bd3a4b311f9e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c2c6538e-6272-413a-b6b4-f334af9b7d4d"
        },
        "item": {
          "id": "5096389b-ae1f-4efb-a83b-7197c4798650",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f0824916-87e0-4c86-bd55-b9046608eb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cf96fd-610e-4514-98d3-efb271c50913",
        "cursor": {
          "ref": "a7a8ffbc-92c2-424e-a222-04c92c0ff5ed",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "99c86587-2885-4381-a1db-5bfd6d04f24d"
        },
        "item": {
          "id": "69cf96fd-610e-4514-98d3-efb271c50913",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b34c98b4-a54b-4631-a39f-af3f71daea33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5da700d-f9c8-4a89-91f8-eab7626c2801",
        "cursor": {
          "ref": "6eb6aec2-19c6-491e-a5c0-a3eb1f2efd06",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ab13a6e3-dfbf-43db-8934-58c518779cc2"
        },
        "item": {
          "id": "b5da700d-f9c8-4a89-91f8-eab7626c2801",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "040c1fab-fc91-4913-ae82-3715bac6701d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93494eb0-94d0-4d3e-9318-831e48b52ef1",
        "cursor": {
          "ref": "aa6d0342-97c1-45e0-96d4-bffb717130fd",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b84770bf-60b6-438c-8b23-2a0927512efd"
        },
        "item": {
          "id": "93494eb0-94d0-4d3e-9318-831e48b52ef1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "70c29a99-c21c-4f37-8995-e569c619f264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a7e84a-d3d6-4d36-b9c1-1fab31327d30",
        "cursor": {
          "ref": "9fa4515e-8b50-4a0b-a10f-1dbe59a41faf",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fbd12af5-561f-4b65-91c5-382034f2d411"
        },
        "item": {
          "id": "31a7e84a-d3d6-4d36-b9c1-1fab31327d30",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9c129f92-d665-46b8-897e-57f4180c1cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95898409-66d9-4b11-9edc-a4476d2025c5",
        "cursor": {
          "ref": "2e72d11f-c0ce-4e31-9789-8cd45196152e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "94b23087-9352-429f-a661-756bf00fcb54"
        },
        "item": {
          "id": "95898409-66d9-4b11-9edc-a4476d2025c5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "15c3c3f4-206f-4502-ac33-c670b120d3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3faa3a-bd6c-4cac-8807-ddd48f56f371",
        "cursor": {
          "ref": "3e2a7cef-7063-4a2c-885c-33b51476e14e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "33c313f7-0d99-4011-b987-8f1965a3952d"
        },
        "item": {
          "id": "1c3faa3a-bd6c-4cac-8807-ddd48f56f371",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7dfe46e0-3bc7-423e-8603-febd3b4cc33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcf7792-9c6b-472f-af3c-be51e2a332c3",
        "cursor": {
          "ref": "8d1283f5-d8a4-4419-a6fd-db33900e8edd",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "186058a2-6918-4ad6-a180-10a5e0ddf753"
        },
        "item": {
          "id": "2dcf7792-9c6b-472f-af3c-be51e2a332c3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b12d116b-c66a-4b47-b30c-346f7a36cc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7318bfb5-31f5-472c-812d-8fb2faa24f5b",
        "cursor": {
          "ref": "0a983057-f2b7-4b2a-ab3f-9bd06037942e",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e3406cae-bf47-422c-bc53-28c07cddb504"
        },
        "item": {
          "id": "7318bfb5-31f5-472c-812d-8fb2faa24f5b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e126fe02-fc8a-4284-a1a4-4824cc6dbf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894ec7f6-5a88-4081-82ed-9d4a1f77f3d5",
        "cursor": {
          "ref": "8e323513-e507-4280-a759-ed0200490102",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "56e16491-2034-418f-8a0d-f97412e59385"
        },
        "item": {
          "id": "894ec7f6-5a88-4081-82ed-9d4a1f77f3d5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ce8d93a6-48e2-41da-ae92-00fe3072eeae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058caab7-d6fa-4f83-b515-c1fddca47bf8",
        "cursor": {
          "ref": "0a535103-5ec9-40c5-8a07-18a875951992",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7b67111c-7b5a-49c2-b823-4f80be249f14"
        },
        "item": {
          "id": "058caab7-d6fa-4f83-b515-c1fddca47bf8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "79df2a61-ef9c-4089-b557-65ab14d97889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4c4412-c045-409b-ab8f-bcf8d305b7e6",
        "cursor": {
          "ref": "5225ca2d-69aa-4654-8a6b-939c2fa85df6",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f99f8cab-b7b1-490a-9c94-17c3635145fc"
        },
        "item": {
          "id": "de4c4412-c045-409b-ab8f-bcf8d305b7e6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9715a9f0-121e-4003-ade3-8adbc2dc1d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6a1768-a06f-402d-8eec-e185839ddf8c",
        "cursor": {
          "ref": "873c2e38-a854-4219-93d8-2081c29e2bed",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7c73ab96-3d25-4e8c-87d1-0e6df40bf0b3"
        },
        "item": {
          "id": "cc6a1768-a06f-402d-8eec-e185839ddf8c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d1e5b566-3653-4b82-ac89-2622280e1009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e3166e-0f83-41f8-b17e-693ce92e580d",
        "cursor": {
          "ref": "87eace2d-709e-428b-a4ef-a77b78f59384",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9056aed1-8203-49c5-acec-2b5069708994"
        },
        "item": {
          "id": "59e3166e-0f83-41f8-b17e-693ce92e580d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b5a9c3c1-dae8-4e20-bd61-d26dbc572089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6a946b-ba39-4faf-aafc-adf8d359024b",
        "cursor": {
          "ref": "98dc160c-2ff6-4209-b681-2524a06206f9",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fa3bd6a9-307d-4066-8ba4-3c740ba51958"
        },
        "item": {
          "id": "7a6a946b-ba39-4faf-aafc-adf8d359024b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b7bf7341-b2f5-4ce1-b646-f00709140448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285fa231-3f2e-49e1-a44a-d9d97501cfe4",
        "cursor": {
          "ref": "36063985-a6ac-4990-8aa1-942633d7726d",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4f3eb587-9d72-45c7-a45c-65098a66f377"
        },
        "item": {
          "id": "285fa231-3f2e-49e1-a44a-d9d97501cfe4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a0b19bd5-2656-4c9b-ab22-29f657dbe1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcc7eb8-79c3-439d-97ca-695ba23c20a2",
        "cursor": {
          "ref": "16a3bac6-0ad7-47f8-92c7-21c0d8470d6a",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2f307719-0e0a-4536-999b-7aaa6bc6c360"
        },
        "item": {
          "id": "bdcc7eb8-79c3-439d-97ca-695ba23c20a2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ce003778-9166-486a-a6c1-50bd80772916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1911fbdb-5f34-46d0-8ec2-d3f7e596a2f1",
        "cursor": {
          "ref": "d34b573e-d3f9-43e4-a67d-567779c24d97",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "51753782-c169-4717-afe6-48c92742c9b0"
        },
        "item": {
          "id": "1911fbdb-5f34-46d0-8ec2-d3f7e596a2f1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b87dc206-c4ac-4f0a-a732-249e44144a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5f7556-e5e0-43ff-b331-283fc7ece922",
        "cursor": {
          "ref": "a1662098-72d4-4f55-92dd-c4c8b1998b05",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2c9d7bc8-9093-4c1e-8938-df6520b8558d"
        },
        "item": {
          "id": "2c5f7556-e5e0-43ff-b331-283fc7ece922",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "59e3c869-ba58-4a69-a7fb-fbdce38d5ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3089f314-e93f-465d-9876-846f3af3f39a",
        "cursor": {
          "ref": "06169c40-50ea-4699-a71d-815839543ce2",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3128004a-1915-4014-92ee-63ff124a8c5b"
        },
        "item": {
          "id": "3089f314-e93f-465d-9876-846f3af3f39a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "69d3b907-8b59-4f4e-8f52-fb469b912752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62202e46-c6ba-42a5-9e97-bcf8901073a1",
        "cursor": {
          "ref": "50b2d3a0-c079-4e80-9c70-81df14af4f3c",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "eb17ca20-6567-4d24-9e4d-e05e6e470c20"
        },
        "item": {
          "id": "62202e46-c6ba-42a5-9e97-bcf8901073a1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dd458254-8629-4ee1-af18-50b0b525c9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d104c628-8194-4177-b044-862b3b62531e",
        "cursor": {
          "ref": "77ebd005-961f-4eab-b45b-708bff8b9a14",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "789146ec-f219-4e78-b78d-72ef7dc27884"
        },
        "item": {
          "id": "d104c628-8194-4177-b044-862b3b62531e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "741e51c4-1e2b-4aef-b6d9-18def06e405d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c77d6e-d498-40c7-9c0e-56cb5984113f",
        "cursor": {
          "ref": "2a94d69b-59eb-400c-ae52-86f557e3cc8b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "93fbdb91-6581-48c9-913e-ec5a6346193e"
        },
        "item": {
          "id": "97c77d6e-d498-40c7-9c0e-56cb5984113f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8bf7f121-9d02-47f5-ac8d-4bb8697dc92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b55d7bb-4246-4d9c-80fe-be9468c55221",
        "cursor": {
          "ref": "2769b894-0a23-43ab-882d-e835bd8e5038",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "85c00eb5-0b96-46e9-b8ba-79118df6f3dc"
        },
        "item": {
          "id": "0b55d7bb-4246-4d9c-80fe-be9468c55221",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e0407a30-6354-454a-915e-8b6be041a07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62699af7-1259-4f30-a05b-113644f123cc",
        "cursor": {
          "ref": "a6ed4ef0-c21a-4dd3-bf78-591187d4d4e8",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2f1c325e-4fb6-4726-a7ee-9a00af39f21a"
        },
        "item": {
          "id": "62699af7-1259-4f30-a05b-113644f123cc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b0cb896a-537b-40da-a038-f6a32706e002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e135b912-a565-47c0-b977-571e85e2d98e",
        "cursor": {
          "ref": "73ed1bb7-c531-4706-8252-cc27ec8bb61b",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ba59ac8b-d532-48db-9736-e7bac242935e"
        },
        "item": {
          "id": "e135b912-a565-47c0-b977-571e85e2d98e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "749e6991-e704-4bcf-ad44-f495bf0fc1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf17c6f-202c-461c-8e76-8e0631585f4b",
        "cursor": {
          "ref": "cceda25b-30af-486f-9f06-b101cf918f79",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "05f4442c-3456-4769-840d-aa23e15d1d50"
        },
        "item": {
          "id": "ddf17c6f-202c-461c-8e76-8e0631585f4b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c75a32e1-dc85-4f3a-8714-0a35b62c5c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9588ee9-90f1-45d7-a269-496c30a2422e",
        "cursor": {
          "ref": "16665a32-a172-40de-94bc-725a6d0339c3",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fee39712-8347-4334-84ed-238d273b8c8f"
        },
        "item": {
          "id": "d9588ee9-90f1-45d7-a269-496c30a2422e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7c46f7fe-6602-4c93-a7c2-3e0d60004554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e4321f-740f-4d49-802f-c4fe59509380",
        "cursor": {
          "ref": "36bd9335-7c35-4136-b6b6-e4b70af41afc",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "103c7fd5-305b-408e-b2f3-583e3917bbbc"
        },
        "item": {
          "id": "31e4321f-740f-4d49-802f-c4fe59509380",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c3259f4c-0713-459f-9ea2-eccf76f41f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d294869-a55c-475d-af6d-fb818c9440ab",
        "cursor": {
          "ref": "7d5e28e0-5284-45c3-bf51-0871106bf7e8",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b6a3488b-5301-4dc8-82d5-2e4327a8ff95"
        },
        "item": {
          "id": "5d294869-a55c-475d-af6d-fb818c9440ab",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "20196892-4d58-4e67-b5c7-776866c6077c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f11cf88-b9f3-4170-a769-f97d31948f4a",
        "cursor": {
          "ref": "895a7ec6-bb6a-457a-ab15-cfe43457d206",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "42a4db85-e3a4-4a16-b9a7-6cd0ad25fce0"
        },
        "item": {
          "id": "0f11cf88-b9f3-4170-a769-f97d31948f4a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "53108969-7242-4159-b216-8cf5cae5c90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23dc133-29ed-4d68-a34b-223654a87eb0",
        "cursor": {
          "ref": "b2931584-cdfa-4f3a-b575-ad1aa3dbd98e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9efbe029-214b-4240-b3c0-fdac95cc1b2b"
        },
        "item": {
          "id": "c23dc133-29ed-4d68-a34b-223654a87eb0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "82e1f0f3-ccb2-43e2-bb4f-56f0bfbd708b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a51b25-4ead-4c2b-bc3b-00e171ca336b",
        "cursor": {
          "ref": "648838db-e298-46f5-9fef-7ad1939ad5cd",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8bab7d26-8a3f-4cb7-90d5-17c20eaaad0d"
        },
        "item": {
          "id": "f7a51b25-4ead-4c2b-bc3b-00e171ca336b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "43a74126-f6eb-4ac3-b7c4-ef1eed121003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3845dbb-3a29-4b36-8777-46157b3c08b4",
        "cursor": {
          "ref": "0b2b7b17-ee82-4ece-bf35-f99335b55bb0",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "afff7de9-fb58-4c29-a405-319ce6998e0a"
        },
        "item": {
          "id": "f3845dbb-3a29-4b36-8777-46157b3c08b4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b1c2b4ac-e73e-4d7e-adde-3b9734eebe10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf3d1c1-0ff4-46d5-ab35-3786ce741715",
        "cursor": {
          "ref": "748180b1-d8a4-4747-9df0-291cf1ced759",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "652ed669-d057-4f0b-9e06-8d27c8d143da"
        },
        "item": {
          "id": "bdf3d1c1-0ff4-46d5-ab35-3786ce741715",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ecc0f14d-09ed-4aaa-98a1-0dce721adbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12cd039-e3a9-4477-8be2-4920c091093c",
        "cursor": {
          "ref": "9c752774-d1d3-4f1b-a5b3-2d4a851490ea",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b00c5408-723b-4223-a11c-6b50f60f319d"
        },
        "item": {
          "id": "a12cd039-e3a9-4477-8be2-4920c091093c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "34fdf56f-784c-4e18-92c7-60948106fee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be44ca14-c96f-4201-ba4f-29ef5cc2f7ff",
        "cursor": {
          "ref": "867145f1-f224-4816-b8c7-4a2410fffd4a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3f7646fa-a712-4875-8736-77d71295ac36"
        },
        "item": {
          "id": "be44ca14-c96f-4201-ba4f-29ef5cc2f7ff",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ddc62b3f-c295-4faa-bcaa-ad9aa0b39a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ceb363-2484-45b5-b79c-66e7086b925a",
        "cursor": {
          "ref": "306e1264-6773-469f-a1b5-a1986f6bc092",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "57880fd3-d0be-40d3-bab5-e671d510f21b"
        },
        "item": {
          "id": "05ceb363-2484-45b5-b79c-66e7086b925a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c1394434-149e-4441-803b-7baf64c575aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810ac236-e3d3-4a88-a95f-eaf9558c4f90",
        "cursor": {
          "ref": "29a7e8ca-0444-4810-9575-6139614b1734",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "090e4247-30ef-4411-8b69-1f6fc29724c7"
        },
        "item": {
          "id": "810ac236-e3d3-4a88-a95f-eaf9558c4f90",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ac5846c9-f3e0-49b7-b315-a3b36372abd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515a1bad-6653-4d8d-8d7b-b5db488e78b0",
        "cursor": {
          "ref": "9078e859-2d99-4921-82ef-5fbd27e79958",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a2728706-f4d3-4282-be63-a919b6694843"
        },
        "item": {
          "id": "515a1bad-6653-4d8d-8d7b-b5db488e78b0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "611c1d35-6768-4fca-b1d8-f5d247e400ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135c57f9-98ad-46cc-999b-7c15dd1cfe50",
        "cursor": {
          "ref": "29a3b935-daf5-4094-85e5-02f1af4c2323",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e01f4015-7ae1-48c8-a882-0ad39326688c"
        },
        "item": {
          "id": "135c57f9-98ad-46cc-999b-7c15dd1cfe50",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a3b31eff-86a9-4cb8-908f-2f2010a1913f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5a8236-b47c-49c0-b83d-abbcbfdfeb5a",
        "cursor": {
          "ref": "de9d3da5-fd7c-4830-839a-82ebe10f8dd7",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2f5d7b00-be35-4f0b-a089-b27e744d9d0a"
        },
        "item": {
          "id": "db5a8236-b47c-49c0-b83d-abbcbfdfeb5a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e2249852-48cb-4f21-8ae9-4df25d3f83e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa9c511-3615-40ff-8123-cf1a5978c983",
        "cursor": {
          "ref": "a1d093c4-bce9-4d26-8020-1595ab9bbebf",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "59326eb7-35a1-4308-ad53-c45abd5242d1"
        },
        "item": {
          "id": "2fa9c511-3615-40ff-8123-cf1a5978c983",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4249528b-9ab3-421d-982e-7940566ad72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8b518c-ad28-4eb7-8f60-34d9cf6638f0",
        "cursor": {
          "ref": "3cdf4bf8-c1f6-426a-8ca5-3d988ba82ee7",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "da242760-d7a6-46a2-a1ea-3dbeefcd7c51"
        },
        "item": {
          "id": "5e8b518c-ad28-4eb7-8f60-34d9cf6638f0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "307d7330-67cf-4e38-b848-3bf135710af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b062c6-9dba-472b-ab69-03c876a7d2e8",
        "cursor": {
          "ref": "02a1e635-f34c-4fef-b557-321847e20246",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3fc2ddff-f6b7-471a-a214-716d9b137aba"
        },
        "item": {
          "id": "52b062c6-9dba-472b-ab69-03c876a7d2e8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e60023b1-ce4d-4f9e-8692-c34708967060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93552860-b7d6-4bc6-b5b9-e3119d86d6db",
        "cursor": {
          "ref": "2cfdbf94-2f48-4ff9-9c59-d144be1b3f9e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cc3a65a3-23cc-461f-abb0-9893e8e52dbb"
        },
        "item": {
          "id": "93552860-b7d6-4bc6-b5b9-e3119d86d6db",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5518ebf3-4eff-4ca2-acb7-b264fe38e91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ccbc06-7f78-4e0f-a684-c22eaf5fdf60",
        "cursor": {
          "ref": "a3f50c5a-0a19-4ec7-84e9-5a51c4b1093a",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e1192e69-8017-4d7b-8b90-ccc5f8cd6517"
        },
        "item": {
          "id": "03ccbc06-7f78-4e0f-a684-c22eaf5fdf60",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3d284dd3-d701-4b2b-a622-467c11b025a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47eb130-82a9-431c-bcae-3ac1086f5725",
        "cursor": {
          "ref": "2db06060-06e3-4ae6-a8a5-b5bc95fcbd2e",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3cb0b5f7-551c-448a-8471-0efc7068cfdc"
        },
        "item": {
          "id": "f47eb130-82a9-431c-bcae-3ac1086f5725",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b5eaa362-fd56-4008-b8cf-361d2cba8477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392e5b0d-7845-4c7e-ba4a-49d1440a4c15",
        "cursor": {
          "ref": "9d78a017-1026-4d7c-bf41-f54e441d9c2a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6f41a235-4171-4281-8346-f3001fd95b2d"
        },
        "item": {
          "id": "392e5b0d-7845-4c7e-ba4a-49d1440a4c15",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "85ba76f4-33c2-4e6a-8006-650b857a1cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edac6d88-2f14-4f28-bde1-a8c501c5e558",
        "cursor": {
          "ref": "bb5d424e-4d5f-4c4f-8faa-0aec27e94daf",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "aec9f818-e7cb-4c7f-a3dd-655e2af5aa8f"
        },
        "item": {
          "id": "edac6d88-2f14-4f28-bde1-a8c501c5e558",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "aa87c0b4-2284-4ff0-a016-499b0874fda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2b417e-c637-453d-b242-8c13d661ac89",
        "cursor": {
          "ref": "443842dc-47f0-4ae2-81ea-f2c11b7e65ea",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "167f7f63-43c2-49b9-a090-4fee3388b80a"
        },
        "item": {
          "id": "cb2b417e-c637-453d-b242-8c13d661ac89",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5709346a-5d58-46f9-8d0a-91f949dd215e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7580306-aa95-41e6-b659-05efc5038226",
        "cursor": {
          "ref": "c1d039bf-fcb2-4d32-8598-86ae69cfeed4",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7e2ac97c-443e-443e-b2e3-bac65db273ed"
        },
        "item": {
          "id": "f7580306-aa95-41e6-b659-05efc5038226",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2de1f531-32c0-4e3c-ba99-39ec82c4f2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d4cb44-f5a9-4003-885d-115af6fef458",
        "cursor": {
          "ref": "6e003516-3cc1-4957-9416-3dbaabc298ad",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "dfb5a6b9-a95f-4d82-b827-34a37d72313d"
        },
        "item": {
          "id": "38d4cb44-f5a9-4003-885d-115af6fef458",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6153bf75-3679-484f-acfd-bc98f83eb663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b09c43-1cc1-4363-b954-40b1731667ad",
        "cursor": {
          "ref": "9cf9a878-3040-4677-815c-9974e11c86df",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9affadd8-b23f-452c-8ad6-99bfb18be534"
        },
        "item": {
          "id": "f4b09c43-1cc1-4363-b954-40b1731667ad",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "88802949-a0d4-44ea-831d-96f739b26c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa3ef99-c0ed-492b-af4a-130b445ec33d",
        "cursor": {
          "ref": "c22b2e5d-3257-48a7-be59-fd0ad304a3a0",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "15cb1828-d3e5-420b-ac2b-b57cc12e3349"
        },
        "item": {
          "id": "1fa3ef99-c0ed-492b-af4a-130b445ec33d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f786d639-a884-4872-9fc5-2c0ae14035d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b8d0e3-98e7-4bac-81ba-72f5b48b4ce2",
        "cursor": {
          "ref": "b06b31aa-afc9-401c-921f-bff2659677b9",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ff728ae8-0d34-4403-84b1-e96e6f2053ba"
        },
        "item": {
          "id": "b2b8d0e3-98e7-4bac-81ba-72f5b48b4ce2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0b87c180-cb3e-4b5c-9f4c-ed23d4da9556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd573ada-e1ac-404a-94e0-00dbbf1d616a",
        "cursor": {
          "ref": "b39ceae4-9283-4f72-a84e-875c8f9d6121",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6cdd97e9-f938-4113-8fda-52dd93238db8"
        },
        "item": {
          "id": "bd573ada-e1ac-404a-94e0-00dbbf1d616a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9eb38477-482c-42cf-8ff1-2317960def17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8af630-4e80-4c22-a634-f196f02edc59",
        "cursor": {
          "ref": "827a4225-d8e3-4aa4-ad81-373f239d8f4f",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "452765b7-9b38-467e-9023-519869f9aac7"
        },
        "item": {
          "id": "0e8af630-4e80-4c22-a634-f196f02edc59",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "602c5bd4-9f26-49dd-bcc3-6d8f832c6c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9e5cdc-708b-446e-8a84-3f1e253468bb",
        "cursor": {
          "ref": "cc062516-441c-4a13-9b95-e857bcd4b7f9",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "06bac6a7-5e6b-48d8-a585-fd1b21d60f61"
        },
        "item": {
          "id": "2f9e5cdc-708b-446e-8a84-3f1e253468bb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fb7b6c67-121e-4215-bbb5-e1f2e0b928ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a39fdc-74e6-42c5-8356-9cf3061c1ffb",
        "cursor": {
          "ref": "405f3fde-cedd-414c-b5da-e91f678b5a8c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "22346aa8-66f9-4f6c-a972-7508244d51d5"
        },
        "item": {
          "id": "97a39fdc-74e6-42c5-8356-9cf3061c1ffb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9775cb0d-5320-4b91-9778-d1cc765ffa7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952c3c3a-8dfc-4f11-bef6-1f4298afd69b",
        "cursor": {
          "ref": "3093b647-9082-4766-b350-0c0b77718058",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "94df0327-ae3d-49d2-9fef-41e4a2551e96"
        },
        "item": {
          "id": "952c3c3a-8dfc-4f11-bef6-1f4298afd69b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f4db505d-6643-4d14-a23f-f8427f740b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa18d86d-3aac-4a9a-ac59-82d8d74bd2d4",
        "cursor": {
          "ref": "24ab2e7a-ea54-45c4-beb5-cefe58f975e2",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "fab1183d-0c7d-4aec-939e-60de41fb666a"
        },
        "item": {
          "id": "aa18d86d-3aac-4a9a-ac59-82d8d74bd2d4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "07f87d1c-6023-4c85-ace9-2b82847d4e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75afc00-ffe1-4001-b7e1-cd25fd71f3ce",
        "cursor": {
          "ref": "8d7b1551-713d-4f40-9a14-bbccde6e287d",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "952dad81-eef9-4b48-83c9-9eec3c5f799e"
        },
        "item": {
          "id": "c75afc00-ffe1-4001-b7e1-cd25fd71f3ce",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9ffff468-8794-4c8c-b2e0-208f799929bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60c5856-08c7-4039-91bf-85fcdd18f85b",
        "cursor": {
          "ref": "adbd8d56-ecd2-4a08-8936-3cb65898f587",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7e187706-d463-478f-8d02-4f22f87bacec"
        },
        "item": {
          "id": "e60c5856-08c7-4039-91bf-85fcdd18f85b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e8ac112f-2907-47ad-a5a7-fb5c805c1fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b1b79d-a0f4-43a9-8974-ec75aa1e1420",
        "cursor": {
          "ref": "8be3353e-5327-4813-99e4-d263a483f6b0",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c62631e6-c668-4423-89b7-c83c46420fe0"
        },
        "item": {
          "id": "51b1b79d-a0f4-43a9-8974-ec75aa1e1420",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9b95fffd-1f21-44b7-960a-2002754d7cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460b2755-d5f8-468f-a29b-9826bb4a4791",
        "cursor": {
          "ref": "4fd60911-6831-41b3-9a3a-3213234e82a9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2ab924c0-1423-4875-ae29-ac8bd5eb3582"
        },
        "item": {
          "id": "460b2755-d5f8-468f-a29b-9826bb4a4791",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f444782d-49d4-4525-a43a-ccc74346ae2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b48dfde-738b-4c65-be76-0f2497fce1f3",
        "cursor": {
          "ref": "a89d73b5-3517-4d4b-bd88-dea56b1e6619",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e0fda0a7-b101-457e-8488-618f26463566"
        },
        "item": {
          "id": "7b48dfde-738b-4c65-be76-0f2497fce1f3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "76688546-5395-414c-b169-09df434a4829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce926f7-7cfd-4e27-8a9d-6eeb71e460a9",
        "cursor": {
          "ref": "8c2c9f1e-bb4c-42f0-a20d-5702f1b60c7d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "65761738-13f3-4f01-8470-6e1b926c5ef6"
        },
        "item": {
          "id": "5ce926f7-7cfd-4e27-8a9d-6eeb71e460a9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5a1c24a2-8bb0-4c5e-a654-618596db60dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec84b1f6-9c28-4e97-8c5d-578f72f5220b",
        "cursor": {
          "ref": "9794f4c1-0589-45f0-986c-c22191d49440",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "15396e62-592e-4cb0-a9b6-e9059c8f2121"
        },
        "item": {
          "id": "ec84b1f6-9c28-4e97-8c5d-578f72f5220b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fe3ffa37-c48e-40a5-ae56-776aa3fea826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f7a540-ae6e-441a-8f27-4e060ff9fdc2",
        "cursor": {
          "ref": "f65bac7b-d622-413e-8c53-08b219342471",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "cd5d15c1-dfa7-47fc-972d-933edefded41"
        },
        "item": {
          "id": "80f7a540-ae6e-441a-8f27-4e060ff9fdc2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c4b14022-f3aa-440d-954b-de509ec66baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0795c4-3fac-41b1-b6fc-cb253163b6b9",
        "cursor": {
          "ref": "2c46eda1-b28d-45ed-aea8-2f29ec0e3fa5",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2a7edbe8-afed-4c6a-b364-59dab2cf2445"
        },
        "item": {
          "id": "ae0795c4-3fac-41b1-b6fc-cb253163b6b9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f73b82d6-a6dd-482b-84ad-f061a4e70e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25756dc-1768-49a3-8404-98ca49b9cf64",
        "cursor": {
          "ref": "6bec4a96-62f0-4424-b308-0357db9b715e",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "78087cce-f36b-456b-9afb-a22f89e0894a"
        },
        "item": {
          "id": "f25756dc-1768-49a3-8404-98ca49b9cf64",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d31f8caa-3f9c-4b72-a5a1-1a1699516cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a12fff8-a8eb-4048-9e92-9db972e8003e",
        "cursor": {
          "ref": "9e3e9b25-6a9e-48a4-a7af-5d814424aa7e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bdfe27da-6d97-42d1-bfb0-f428648e75c5"
        },
        "item": {
          "id": "8a12fff8-a8eb-4048-9e92-9db972e8003e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5704880d-d123-4362-beea-56d4792b50e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26aed460-cd9b-4e2b-a1f4-7609c7879bc9",
        "cursor": {
          "ref": "1581b705-54a9-495b-b571-d7e062876b96",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a397c8f4-23d9-47b0-b3b4-b2b08bf2b87d"
        },
        "item": {
          "id": "26aed460-cd9b-4e2b-a1f4-7609c7879bc9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "aa612fe4-01df-4ae5-8918-ab17e587f1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3315c5ed-adc3-4717-948d-398a85f79af7",
        "cursor": {
          "ref": "4b6004fc-c4d3-42da-9f31-136fd28c1fd0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8ad6de7a-ee8f-416e-b5e9-6cf5e1d0cc29"
        },
        "item": {
          "id": "3315c5ed-adc3-4717-948d-398a85f79af7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "083d975d-deaf-4917-85f5-287091282d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6e8b7f-56cd-46a3-8a35-79fc58039a67",
        "cursor": {
          "ref": "80d1cae7-c5e8-4d9a-a731-398a59a5115f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "04bdb746-796b-44cd-9ae3-c5785e2cf6be"
        },
        "item": {
          "id": "1a6e8b7f-56cd-46a3-8a35-79fc58039a67",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "00032e4b-d25a-4007-9740-7861e5e55b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aaa6c54-391d-4303-8fc0-11a5faa72dc6",
        "cursor": {
          "ref": "fbc33fb6-ded0-44b1-a5a2-44b1de735fcb",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "258b0b82-9753-4f2e-aa4e-ebf89110a42f"
        },
        "item": {
          "id": "3aaa6c54-391d-4303-8fc0-11a5faa72dc6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "218a5147-51f4-4f99-9a95-dd24e63fb078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0413b46-e8ab-4ded-bdd5-30e50b8c1d83",
        "cursor": {
          "ref": "52317684-793a-43cc-8c91-60a942af347a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e3db2adf-d35c-4c0f-b9a9-ba68c4e6ac0a"
        },
        "item": {
          "id": "d0413b46-e8ab-4ded-bdd5-30e50b8c1d83",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c9e2917f-682d-457b-98c6-02d813f10730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143f5e62-963a-451e-8ea6-2acb7a71fe4f",
        "cursor": {
          "ref": "819c2bf3-361e-473f-b07e-068a9bd27c28",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "73a716ab-34c7-4a9f-8647-96e62c11719c"
        },
        "item": {
          "id": "143f5e62-963a-451e-8ea6-2acb7a71fe4f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "05013e0e-ac0f-4881-b088-190e742be665",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dbecd9-ff45-4c36-ac89-ed95957ed7c1",
        "cursor": {
          "ref": "03402edb-5ac3-4876-b625-7c9d15cb4cfc",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bea6ff13-57f2-4c8c-aa71-cf5a90ceff90"
        },
        "item": {
          "id": "97dbecd9-ff45-4c36-ac89-ed95957ed7c1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d8829bb1-5463-434b-9b93-7bd40af55b9f",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "763071d5-3e73-4afb-af0d-5e09a87230b7",
        "cursor": {
          "ref": "84f2f38c-2a19-4e92-a2ee-34dfec371580",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7689c2c0-58b6-48df-a531-8f5042111946"
        },
        "item": {
          "id": "763071d5-3e73-4afb-af0d-5e09a87230b7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4b0c240d-d42e-4115-b42c-582f4edaadc0",
          "status": "OK",
          "code": 200,
          "responseTime": 1536,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70f48c0-a6dd-44e4-ad12-4653a3d4c1a6",
        "cursor": {
          "ref": "74a66ccd-4a06-433c-bc1b-923a5260d620",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d86529c9-853e-4e9d-aed5-ee7821134dc2"
        },
        "item": {
          "id": "d70f48c0-a6dd-44e4-ad12-4653a3d4c1a6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ba4bbc8d-0362-4c89-9f47-cf092824471a",
          "status": "OK",
          "code": 200,
          "responseTime": 1436,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e73aac3-9baf-43f8-b293-576e109215ed",
        "cursor": {
          "ref": "78946229-0c70-4f27-b9eb-56079cd5c56e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "43682ba8-a611-4f35-a715-489eb78da4b6"
        },
        "item": {
          "id": "0e73aac3-9baf-43f8-b293-576e109215ed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cdef8b89-c12e-4fbc-a8db-e6d203ccc7ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e73aac3-9baf-43f8-b293-576e109215ed",
        "cursor": {
          "ref": "78946229-0c70-4f27-b9eb-56079cd5c56e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "43682ba8-a611-4f35-a715-489eb78da4b6"
        },
        "item": {
          "id": "0e73aac3-9baf-43f8-b293-576e109215ed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cdef8b89-c12e-4fbc-a8db-e6d203ccc7ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f3e5c5-672b-4d0c-ab06-d38939a43563",
        "cursor": {
          "ref": "a880f329-666a-438a-8e6a-20010edc984b",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "edfe2c84-dd28-49e4-8c1a-0502eaf199c1"
        },
        "item": {
          "id": "a8f3e5c5-672b-4d0c-ab06-d38939a43563",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "62e86683-60ae-4cda-a027-f0c72517c369",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d71671-b142-46e1-8c62-85017e068981",
        "cursor": {
          "ref": "790578c9-526b-46f8-886e-50f7ad91733a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "2bab51e9-47bb-4601-8ad5-08b3da5df91d"
        },
        "item": {
          "id": "94d71671-b142-46e1-8c62-85017e068981",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "262bab3b-f058-43fd-bf7d-39e096c0c55c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}