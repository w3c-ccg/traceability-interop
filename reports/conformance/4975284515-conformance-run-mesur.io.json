{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a9675708-98af-4081-a17b-6cc442556399",
        "name": "Clear Cache",
        "item": [
          {
            "id": "dc69e6a8-25cd-46f6-a85e-86a1aa7138c0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b82e3c5d-0ce3-4312-849a-c5aeb8b86e10",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "222193b5-34cf-40ad-be27-7c27f975d8eb"
                }
              }
            ]
          },
          {
            "id": "8c4dc182-07c2-4f02-89e8-a1169f583f66",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c3455b7f-25f0-416b-9832-97aa7517ce4a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6176fa0a-fbe2-446c-9c0f-aaab4588d475"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6fe39695-2825-45cc-b8ca-2b14c785ce99",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2152cdd1-13bf-4858-96c2-d77021e242fb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ef7ee0e0-af10-479d-8015-9b9125f8e01b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e1170e4-86eb-4934-b42b-b33305b09a44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a078642d-9648-4e1a-8616-7e86b0e47834"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9292545-d7a4-4ce1-8630-dd33651c5991",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff9b470d-bb36-4708-8459-085e71af08d0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1eac89f0-cff9-4dcc-96ba-5bf985c69d65",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12e6dcdf-162d-4530-8b43-1389265c2092"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57c4caa3-5669-4be0-aab6-cbc01c6b029a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c79736f7-2d29-46f7-b23a-b10d487583f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9367cfaa-9e1e-4581-baf9-14e370125a8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c2f260c-f1ef-4267-81c5-08e0c83d84cb"
            }
          }
        ]
      },
      {
        "id": "7c64deb2-7565-447c-bd97-b6b84c0abeae",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "df4376a6-8725-486a-abd3-98bbddaedd3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7853226-203b-4f8e-8f34-638b034e5654",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2209765e-657d-4332-af5e-4b60afa9ea10",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db8714b-b065-444a-bae4-76365ae18262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0d0813f-4e45-4eca-90cb-89e1be98d759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d765337-4e29-48c0-b6dd-f79ec103e92a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa6f840-e7c0-4cae-8b3f-f178b3333971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eba31c7e-6387-48b3-90ca-eaee61f3169d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da86dc7-742c-4cc5-99a9-83f0d954cb44",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9451ae5-ffa6-425a-92cb-f62f4bd7663b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7b22440-678b-4047-b694-a2db048fa94e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cbd67d0e-08e4-4a01-8e39-00d0503ccd35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "547ff94c-7be5-473a-8d44-55996d921cc5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99df61c2-3904-4e17-8b08-f5e4c6aca907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46c4486f-383e-494b-936f-6a82e5c26f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7362581e-d1d2-4d42-8ed8-3c08a28e8bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40feae98-aa33-45df-aafa-c58f9f67870a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0c4b19-8adc-4700-a1a2-1c24e00954a7",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4a7292-3748-4b08-9238-7f8f0e5af78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7a95eef-fcfc-45c7-869f-f07e85772e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb7539f-39d1-4b75-b294-5761f6dd9bac",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "78a0d029-82a0-42dc-8a1b-395728593490"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "79835282-070a-48b9-9e9a-ff4d9dff6872",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1e78c9cd-8a31-44b1-af9d-70346f4d220e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92fc0643-cb28-4ad9-bb76-829efe5b71ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5fd945a6-978e-4f48-9aad-a6492729a183"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b3e036c-8107-4d11-ad38-bf3692fe5207",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "8a7ca45a-b55a-4885-94cd-8cceecf2e234"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63e1f3d2-b7e0-4c1c-8e91-9bbc08625938",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13c14f7c-192c-4e72-b231-9ecf13413e8a"
            }
          }
        ]
      },
      {
        "id": "54da892d-97cb-4495-a4e3-7d6bea928880",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "39c75f80-fbf8-4c5b-9e3e-1374d81209d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "841775e2-d399-48c0-9337-418ad0124dbf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "27ea631a-dacf-4a61-bc4b-b167a517d306",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87d312c-7f5c-4acf-9bdb-3cf42905da7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5d0f61-a8ed-4214-bd78-97a5e689f43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9de8f8a-e471-4737-9b20-248a91924368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f6be5f7-f222-459a-b4a5-776722ff1b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f96b14-a9f2-4fd8-a87c-f89d18fcafc4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c03a0b3-2bd9-4bd1-bf98-dce7e1c36766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25393d2-8d54-4544-bb3d-eae686b821c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3503f897-cf65-43b0-834a-c85a5a51ed24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9be62b42-5121-4875-b99b-29a1b946f135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060f6d76-cadb-41a2-a6ce-0100d2ab9ba9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f6d355-9d0b-4e92-b902-5823f9aad4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b93ed1-90db-481b-8e1c-951f3dd2aaa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1934a5f4-fe9a-40f8-950d-23963dbd7ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cd5c82f-8bb0-49b0-ac49-f9a8d0029ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed1b3d0-49a4-4759-8e29-c5a8cf733540",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b50351-6ed8-473a-b9e1-4825ed8a1e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f022cbc-cf4d-47f4-9d34-7ca8ab3593d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43aadcd0-8e2b-4dc3-828b-fa8aebb81c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4c97807-b66d-4ddb-8a2c-c7fe2e991c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c23908-329b-4d01-b6ca-e94cbb8da571",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b45b027-0002-4b1e-968c-31fd30623076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e52ea6-85c7-43f0-8f3c-48a76267f92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea58840-1edf-4846-bbb3-99ea5697750c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa61fe9e-bf0d-4753-9e4b-cf06327af00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34b9562-a380-4fc1-9bf4-212f10f502a0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3578902-dd47-4895-ad7c-3330329aeb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3cbbaf1-83c5-4351-8bcb-c3be40df4b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a9616a-a8a4-43e4-8067-0d534d7a6300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8678034e-3a5f-4dad-af81-353c6b9d6537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70da18de-9e80-42ca-8454-7d1ea4b63c60",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86731bd-d49b-4460-8a34-bebee2b0fc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85c8b26-24f6-49c8-a8dd-36d12170e897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da7418d-9254-4066-90fb-aaa601668f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea85cbaa-4c58-4ebd-8c9b-35fa3c7027ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36caf29c-eb93-49ad-b55b-e9c4f60d9ec3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5d60e4-c172-4154-8ebc-ff8b55b45782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073a5e54-d119-4983-87b4-6bad78045c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db8b67c-11f0-445c-8e32-1c92c35357f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8aeaf43d-1edb-478a-bfee-3ae89110b9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa00f1c3-ab9e-4ae6-b600-2f1debc9ca1d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0849bd-5321-4f8f-85a4-e8b5747d36d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220a0444-e9ae-4a1c-b2bb-56f178b0ed08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f22da5-29d8-4da0-b2b4-8cf564b6a410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcbf07db-c027-4664-9188-bc41cd13df48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6f8afb-4762-4c7a-8b2a-a514dd69339b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a4c25f-da53-40f9-ac56-1785b1cb4a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5e6278-dabd-4291-b5ce-78fa15f26952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fd4dcb-ceb5-47e5-bfcf-f7b4aefd64ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49604380-0c38-4ce8-a26c-b3c85da5c1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404b8ec6-c20a-4de7-b764-5be3672d3346",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2988ef9-4124-488d-bc49-a544b722b877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecf7077-90e2-4141-9b5f-bce88412f9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76526d65-67bc-48db-afad-e406c53ef3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8796fd18-d700-4e03-b415-5285f0d25b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cc47ac-21f8-42e1-866f-1dda112e6228",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3219f9-1817-4b39-bdd9-aa9dcfb237e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7c4b80-6902-4f28-a5db-006ad9ed2097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c5067f-d7f3-477f-a619-ce505d7386f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7447cb1e-1bb2-421c-b2f2-e7e70fd7b833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dee98e1-3dec-4ee2-81c4-2d80cde8f098",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140c2be6-6d70-4165-a919-d31b3b38701e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a26a117-b282-4aa5-b9a0-1455fbb3c4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4aaa31-8fd8-48ef-8043-acc04c20489c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d237053f-23b9-478f-a7d9-2a837363461f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836163c4-dcd5-4f68-b5f0-f97ede21135b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f57710-1250-4ff4-9419-8f2a38c64a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d175d5-e9b6-405a-bd19-adfeabb59afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b974000c-0dcb-4f9a-a704-f0bfcee1eb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9ef48cc-841c-44bb-a4e4-8ff023968920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da647a2-d69c-4583-86a5-ffd984c23721",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf1ada2-007c-4cb4-933d-45300a46ef31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d908b27f-6ac1-41dd-8d90-107c1cf71186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203ecc29-0150-4236-b98c-6c030cb15ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6f7ee5b-42e6-47ab-93c7-6c8f0f228563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c97ce92-8206-42cd-8e8f-f9cc7f01e5b2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ae0a28-a9b5-4dda-a162-9f076d23da61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f754d85-f657-42d8-89d2-3299b25a3e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121359dc-790a-41b0-930b-70513df3ccbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1db00e14-205e-4e71-a137-519c8e97694d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ac2bdf-277d-4f54-8622-1076f290b249",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396464c4-d7a8-4e00-a282-f16905f08a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd2815e-8530-474d-ac72-9f26bed7495c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a398666-fc9a-4c27-aaf0-1ddd0c632d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e97de613-f744-44ad-bb75-f9a4eb431812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4767c081-15ed-478c-bbdb-7bc7fb31eb16",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b0cad9-5792-4e16-8c7e-0f924de523a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c89f021-6866-4d24-bb8f-072eceda49a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c22af7-bf39-4e62-8258-ca9cafafe4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d1b815-2c96-4bfa-bc8c-2b82a7f46db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62fa401-a17a-4b3b-8302-44758e060f6b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b8a59c-1a05-4f67-9d4f-477a9e984188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd983dd-9635-4d74-9f1e-e8c51f69d920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f36daf1-b9c1-4dbf-94ea-e773d6541094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0828bf75-41f4-4d50-8101-929bc2152c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371e3291-d8a3-4cf4-9be1-764cdcd58728",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d4f057-22d3-4b57-8731-128e3fd0b722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f01bd0-bafa-4d8b-a3a3-b46bcd5fc66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0704dbb-68dd-42d0-bdfa-555332588ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e629b21-4dcb-44ba-8b9e-db43d6b1b9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea56aa7-68b2-4c0b-9967-5380a5d67313",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c6c871-762f-4aea-9893-17b95ffd19a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab6a1d6-f19e-4c74-ab62-876398e594b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfaef93-e67a-46c2-ad54-bdaa3aebfa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "037df43e-1843-4d55-90d6-e26570e81e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e79c57-a56f-4847-acf7-2b66a6c87f70",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2f76d3-09d4-467c-a0bd-f0455118fb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d01e3df-6c1a-455d-86c1-014cde321ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c57c91-be68-40ef-becb-439d45ccff48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1c9b11-6350-4d6f-b462-5e7c2e7a3c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cfebf5-bf81-41ac-958a-72f687d2d253",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3397709b-d192-459b-9b0b-3287f033ed66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076b58bc-edc3-41bc-af15-eec558e44bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f602f8c-74ac-40f9-a554-1e6bd1667add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da33bb43-f498-48ba-a501-5fe241c24a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3d528c-c469-4454-a3db-5821d7b16d30",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a37f4d-01a7-4b28-a80f-675c14d66f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd68d8e-b251-408b-8f65-d040a47e7c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ea1496-dc03-469c-90f7-95b9c0730066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bff8af34-e742-4298-b072-749ae67cbaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2051d06f-dafa-4296-bfb2-ac0705511496",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a8aaab-b7e0-4577-b348-ac13a2972488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11890b35-f92c-49d6-a355-66e7df5d6044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965b3e0c-bb91-4f7a-aba3-de30bd3bcf76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "22fc6cd2-ee06-4e52-a6d3-2558ccc88ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce33a0b-8560-4136-ae17-57520fad0f1b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31d6e01-7314-45c9-be78-fc6dd82f2219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48780ead-cecd-4f80-a587-8bcd04d8d6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27df86c8-bfb2-47bb-ad8e-3e28cb330d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd2904d-762c-4ed4-beca-e2dd6ba24568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc15908-ea77-4dea-ac89-777b35c8d75e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036902e0-8cf6-4941-a62e-cc591ad4c82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf01147-2afd-4805-85e1-1c1eee5c2aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57209b21-e095-4286-b84b-b023dae47655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f56975b0-da22-42af-b59e-079e51fb67ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebe6f5e-14b4-40a5-84c3-2c5a38b20ba9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f03270-71ba-4e64-a2e6-f431004eb6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0236e86f-1056-44ba-9be8-17b381526800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05357339-1491-447b-9663-3a071a8e8f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c211924-cb6f-497c-bd9b-477d923ecf7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7d735e-2d7b-4f47-b282-98f0cae54e85",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e3846e-4fcf-4a86-87ed-4d5cbab143d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2475bc5-d441-4078-8ab1-1eceeb245386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9063f0d6-8bb3-4340-b86e-0c3362204cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c478d00e-6753-40e3-b9fa-e48701df4d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19952bf8-2501-4d0e-8440-8b72e1d99338",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567fce28-1078-4c7d-b6a6-60921dde2041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b92ad0-637e-404f-abce-becc465c8e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc8eae3-15ed-4a4c-bde6-c9c63930dfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "51cec537-3a35-4361-95a3-25c179d2010d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784096b4-15b1-447d-a8be-29cb78c559c0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522e6bce-2943-45c8-9199-838309da25c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32632f9d-29ed-42a1-8534-20f299270a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcfa544-2edb-4ce5-b981-e5d57fad4d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5be9acb3-f14e-4a80-8adb-19eb398ea58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c507cbc-3a4b-408c-abb3-a37a6fd21250",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a639e4-1409-4c4b-8466-6d5aba739fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7cd865-4fff-42c3-8315-41ae00b36a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cee36e-5e5c-4215-88ac-efd08289cab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89cb7dd9-50a3-4f23-aa4d-92e28d3a2b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1d377b-5d4f-451a-ae5f-0fcfda087696",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e70bb7-1c22-40de-9046-db5ab208992a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b55dfb-482c-48e0-be28-0309cb094d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a997dd1-6269-4feb-9243-9eaf70996b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3f06a7-ed4c-46e8-abc2-2b879789d805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f5528f-e313-4ec7-b2e9-83e5f2d66693",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7f095e-587c-4fc9-a927-e8d572e41ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f2378f-2b40-4368-89e1-086fdc14befa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46780ca-e0fb-4a8c-9e2c-1d8b75887025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a91e8856-36a7-4eab-a6bb-60009a744c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88de4761-7e39-4e37-af4e-87b4c872c405",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7ba5f7-2ab1-4979-b366-e7d696d78e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e20cf81-6c42-4d79-ac03-b1c9bf52b87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28769a71-4b90-4017-af8a-d012a126ed4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0fbae701-c693-4107-8a8b-10c65a223375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a9f4e1-4644-4ce5-b4ee-32c83d99eb9f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea1fdc6-e264-4724-896e-9027c92c53fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee57ccb7-50b7-4831-92a9-e508ec0ddd8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8580fed7-9ec1-4f74-a4cd-f87dedeb9e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e994ed-0a0f-4272-8bd5-f26211649912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d9f699-96a9-4583-a844-def2658fe9d3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0845644-f0f0-497e-8233-858248622de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0259c1b4-0839-4d25-80f1-f2a947773f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bba128e-48d3-4f5d-ace0-d13ba6adc366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63fd7134-12a0-427f-ac59-fe7c4bea8cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628c7e9e-5d97-4cd0-852a-c58a28e2d7cd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fc42f3-e22f-48ad-ae3e-1de76b9a76e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93fbadc-cc9a-49ad-a9ac-1eed6df63120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b0ad4a-249f-485f-b2ec-c53710d80fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2566ec5e-2fa0-4095-8617-50e742d9d42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d8de45-86ea-4e42-aafa-7be263634a3f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d40fb8-2b43-41ac-b67b-12c4187b432c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e87be4-27a5-49e2-8bbb-7c27ae9042cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3341628-bebf-4c68-bc3c-73726cc021b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e8f7af-da43-4881-aa4a-901e603dce57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4466ec-235c-43cb-b7bb-17e1fbfb5b1e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcc5cbb-fbce-4e79-963f-0e6c3f7e8589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd10e986-2996-4a1f-ba37-78d5cb285984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42931f7-a79a-4cc1-9ac2-1cded2705273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc45f90-75bb-4de4-8edd-e0c0067d7dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d43c78-55e1-4703-baf6-72ef54a11637",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578de2af-97e2-4f76-8d2d-b4b0281c0d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fc2b76-109a-4e87-85cb-2d49faca2304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2ac2e2-d90c-415c-874f-9277c85a883c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b023a98-cf60-4951-80e3-eb577494612a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e171ff-facd-4532-a7c2-f569abc66e9c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9217de1-c790-46f0-8350-ef4a2cddd38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da91e721-79e1-47a7-b2ac-08c299bd3240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6772d090-32ec-435e-a279-f151f0747dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4389cd-8629-4fd2-9304-f7a65a0edc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a0c658-b3e0-46f0-8e0e-2300e15f682c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828b3a55-4e65-411b-923f-1dbcb691b447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2eb55a5-eea6-4202-a85d-f460abeb5dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e2fd32-e007-4d0c-88fb-89f1b937feb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "99fbc7fb-5b42-42b3-a062-08719e24b916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b41f76-198e-48ad-9faf-40ae64f6c00f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3d32e7-8248-4f1e-9ca2-a41daff07390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3f5af4-72dc-4853-8602-3c09efd8dd54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27becf02-8b91-4483-b269-75832688a3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a58593a1-9b1a-44bd-8a34-02f551c0d657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71c2b8d-4b58-4029-8760-a88a67b576a7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66c44eb-7491-46c0-98eb-b4cc56960d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0029b3c9-62ab-43ed-beed-de98f5d55ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f992551-2623-4e9e-9ecf-80a227132745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9099b153-f827-4639-865d-021ec45148d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ae4cd5-5e27-4db5-ba6e-20f960a61dd6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87db7116-04f3-4163-8b4a-b4f7121c2800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11cfb97-6674-4df1-812c-0197023683c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a9e8fa-bed7-4131-8b99-833029f5defe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f64368a-9e23-4d19-93d7-21d14afa9c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f538c691-7abf-4195-b41a-2744e85bc1e0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6dc5be-aa14-4682-ae65-89705ba467cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b7f92f-947d-4c22-83bb-6310e100dfc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64463e4a-9367-453f-aa61-4ddc90ba77ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93cc7923-a0b3-4347-8a56-b428e6f5fdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17acb44a-a6ea-4e91-bfba-f9cf05e605b5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a421f7b-5964-4909-8ac2-4e0807aaa9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4435289b-8a91-4fa8-b24d-ea442b60a465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e131f11-c66e-48dc-9eb3-07b564466d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69a263b5-243b-4f97-bec1-6e6b597f5c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbc0c40-c014-4f8d-b469-ff33591ecb41",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52eb0029-6b56-4ee6-a684-c21c19397c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdde9f8d-43a1-401b-8257-c36db544f61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c9e093-cc29-416d-9adc-46e795162769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c021091a-e73a-412a-a9ee-ce2cc597b3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc50f61-feba-4b4f-97ff-e3daf8f832cc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23d2fac-b4ff-40c1-b4a0-7f168fd1914c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3014456f-efe2-4816-ad48-f92df80c1279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e8e8e3-1462-459d-ac03-d16c4dd85bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fdbc343-c41b-4e46-a43d-614fa814e8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcbd2cc-20ce-43d4-b4b4-bb6198491d0c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd127dfb-6bfc-4052-b080-580a1cb2d7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f744f2-1aa2-459a-99c9-b76486ef25ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f386ef-5c3f-4c8b-a078-cf79013cd127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c42a54-7e8a-4d4d-be4c-61f4b882d57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bad712-9528-4693-b2a9-3acadf9667c3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd02b4c6-1413-44c4-bc7f-664f0de9c173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f882fe25-cb5f-4faa-83d2-50d1b745fb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b864bef2-488d-4379-ae08-370f5ebd0a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1a8a7f-a5f7-4a0b-901d-d23b4d9e5598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce70e67-feda-4e6a-9cf8-e06ebedb6ec8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdacc01-8f30-4865-bd06-f84726802b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d5ab35-d272-4db4-9d0e-5a1a5417809e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c688e4-17b0-4312-935f-31eec0e5c409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fea4eb3-13a8-4daa-8501-e4a767b372f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eebe31c-3c0b-4a3f-9e8a-a8197fa0fd98",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a6df3a-df11-4012-82c6-59bd36ad4acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db61f324-897b-4a92-8bfb-a7cc790d7b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ebfff6-6a97-4927-b050-243a817b69e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74686c08-2449-48d3-93ed-c5b41351252a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85656e5-93f3-4dc9-b8b1-87ab29000e7e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd37554-c386-4f95-9773-cbab30a77914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05dac53b-79d9-4fbd-80df-6640e9c6bdad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59818d15-de0a-4623-a81c-a83e4ade33f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50245681-0585-4882-bfda-d0b154567a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f7ddda-18b4-4514-b3bd-7a1ea77a15c4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb2fbdc-de88-4900-80b8-904a845b5d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87e46cc-d0b6-40b7-a4fd-f5b8ef10583f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a40ef0b-43c9-49d4-9594-c4e802eb9156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e33e88a7-283d-4a88-9506-c1364085ae88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba57784-a25f-4a0e-bba0-da1980500570",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b47fbc4-4517-4559-b038-d81cada7c8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350332e2-0ac1-41ed-a090-db17178a016e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b3c2ff-cadd-4f7c-a61c-7393c59f4f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f491d8-9e3c-4c12-810a-d0ea03a1729d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6aca90-9378-4068-abad-6ced9d26ee6b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01ca1af-7e7c-4796-a8db-c2f0a2da556a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa9045a-5ed5-4180-a2dc-4e85c1d015ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d426f6fe-e43b-4b20-8b30-e7cd84f57005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "60107ba7-6587-4f97-a368-3de9e66fe180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a7223f-cf96-4348-98c0-e5e3cc69b861",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9b0863-add6-42d2-b1f7-ac24e9d898fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6640bc-e026-497c-a86a-684853bb2447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75be40b0-50db-4965-bc0a-f9751ddc7146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac92cb4-b232-44a5-97da-190210cb7f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3025876-18c1-4ee3-935e-3e8d587aa07c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba4acb8-89e3-4237-867b-3d325e00c725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07638926-d409-4d31-9c9f-287e81f73d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400b816c-62c4-4007-b4d6-bd3a49d28287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8784b7c6-2ada-4510-815f-3ef44a91826b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fe323b-54e8-47f2-bf11-7865c4e24b8f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0be95f-d3e2-4b7b-8c8c-a184a38eba0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b44aff-3577-4c26-a5e1-660c16ce49bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4141df6f-4072-45b9-a0fe-bb10ecd55292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb988bf6-58e0-45eb-a657-ca03cda3b09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd76805-6300-452d-b8ad-973d324a8456",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f846fa5d-8f81-46bb-a659-4b9c5d0f7c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176ef1ff-5f40-4103-870f-9c6de2236c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cd2928-faad-4a65-ab56-4b675aecf58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "788e9102-f7e2-4ec1-a851-db8b966bc0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc04d2e-8c8d-426e-a054-5b2e97268591",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22840d09-1bc3-48f5-b1c3-4aadd59fea8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5808a8-0c06-4e6e-94a7-df57ef68bfbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0850d29e-d42b-4c8c-a8a4-fdf39322e994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "51ff2822-b7e0-44e5-ad4d-27d60139e266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229c83f2-8a4e-4e90-a015-053933bc82c2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ffd4df-3768-4f15-98e8-d7624e86c469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97a5b9b-97be-4b43-93e9-0b6df0789e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad5fa59-c2bc-4d02-9e89-0dad4a0adf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aeb8eef-ec27-4eed-9ef8-2b64a30315d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee650839-24e2-4cb8-9be3-5333702f4d23",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e95f080-d411-42e9-8893-586af70ea0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e2d66d-42ce-4e1c-b65b-abdeb52a8f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4846aa-0c98-4c61-8691-ee61d8b34003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a783a1-bd80-48a2-a1ce-9610e50546bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e05ebf-1356-46cb-9439-1b6e7b3b88bf",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff84f68-8ba9-45e1-9fe1-ca6b3dab5d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cef1336-a714-4ced-bcaf-eaca7de4a3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddcb51b-c40d-421e-818d-b15c1209329d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "467c553b-7ef2-4ef8-9f1a-26f0b1c076b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3cddbd-d1b6-4aa3-92d4-f3ba083a5544",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fdb9b2-e288-467f-8b7b-e39eba02b537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcec2eb7-27c3-4a30-9d88-9cb65bce6a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858949d4-edef-4a6e-99aa-8f6faec356b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f020698-d972-4922-ac07-0aa3110a8c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0aee779-ecd5-462d-ba99-a15137b9dc84",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84a5434-9bb1-4bc3-8954-e6a1b3459189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355b439f-bfd5-49f8-b3aa-c9c000c1cd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ea78cc-0b61-4db7-a53e-5c67df1cd405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "37da8823-1b49-48a6-b982-c9d455c2efb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b93ffb-38cc-4ea1-992d-4453704cd722",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db03b1fc-ee99-4298-acdc-91e8e5a5a5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cbec193-554d-4196-85ed-3318e87b700b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01406ac7-712c-4d40-8951-437740c64181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2aa5041-01cf-4d07-a4b5-7801462da880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35aa265c-4546-4aca-a776-7c1caf2ce548",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d6eb73-91f7-44b4-a4d2-6964d39c8988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b70260f8-1b01-4c1e-a1a4-9e4fe022d114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16e7a7a-cb37-429c-8d01-296027634454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a82fccb8-cd25-4cfa-bb43-0618ad63c92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db727177-83ed-4691-b60a-a004782e9cc0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b68332-0c06-4955-95c2-4d7e6782065d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a116426b-d909-477b-9233-634a916a511c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813441fa-151a-45f2-b906-14b8747c13da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdfae3e-42e7-447b-a750-5f5e3f09f883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd76e5d-e1e8-4d97-8dc2-d45257cad25a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8fa94e-021d-4827-9f02-92c2fd30fae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9147642c-c8ae-4e40-9343-06985ac27c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6c50a7-d7a4-4151-9c78-eb511ccef205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03881137-0c0f-4b20-92cd-1c39146ea512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc63a1c-5c0b-4daa-a71e-644eb07081ce",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227278a5-7138-41d4-91a3-64b478adc29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3133ebd-f0f4-43b9-b234-b4429208a89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9181d05d-0ce9-4b74-ab7d-cd2b4b0e4344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a796689-4de9-4a62-bce7-019a63332b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e023ee-931e-45bf-8568-5df7197740cb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d252f3-7ff6-4ec1-b1d6-afd45f2098cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92b549c-08a1-4bf6-ad50-25ebc2960b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3cac10-8fa1-45b8-9a02-1ec575c7ad97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9967094e-ebe3-4adf-9970-bb36c8e91845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec47a0c-c0bf-4b46-a926-2f0aa4e1e3ee",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc88083-a1ea-47ad-8a13-04a179889977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dea5dcb-1836-4819-962d-f81582a993ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dd0553-ca08-4e7e-8c38-5526fde63f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9254f4-cbcd-441d-b4bb-9c956a147031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d250d5ac-b3e1-4e0d-9ab6-5986ec326101",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616e54ca-3ffa-482a-85c1-e295b3d58f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41bb3644-3ab6-4866-89c4-43dfd4dfea5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a690d5b-c56b-4118-80ea-5e8f0ac1fb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7279a6-b915-4839-9d3f-da51bc390c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b917e6-43f6-4b7d-9e5c-119add95456b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f19195-d3f5-48e9-a004-d2b68d7989cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cb02c4-3c15-4305-bf95-a4c1a03a5571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df62351-caa8-4548-bcda-f7c5aa2c78e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2683bc-38aa-4414-bdb9-e7bd2af24905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f73b49-fbae-4d7b-9a17-97ae7587d5db",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7934008a-3123-46a1-8f8a-644a4911c378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ed015e-af99-418d-a8d9-771081eca704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b097c1d-df55-4ff0-923c-aaf60169845e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17df903e-4f37-46d8-8857-a10960f98620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7455121f-9767-45c0-ac27-dbc672ad1c13",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406b2bd4-96b9-474d-96b9-8e7c5b60fbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1617bbae-21d5-44af-82dd-bf2b22c7aea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18b9495-57ad-4f81-b32f-1ef0e6bcc9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05383d63-4676-4cc8-b585-15a64c5b00ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915909c7-b15f-4545-8270-3d73c1d325d6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c21513f-3ac8-4bbb-8116-390e367d3be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0ad811-cfc3-4de0-84d5-c52f26ea28cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c344bfc9-edae-44c0-a120-75933b4b39f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "255d10fc-0545-4ead-a0e9-ed8e51ab414a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be11428-cd5c-419b-8971-a8adcd76ba49",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbaa964-0f96-437f-8849-7cd6bc15385e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8f217c-6c94-4735-ad4b-cbd777b9be56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d87d99b-3a60-46b0-a499-6f7c6c41577b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3664a60c-8dbf-4748-adba-b13d9fd01477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d476ff-9128-421a-aeac-6ce9fa35826b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a212a6-a947-462a-9e62-65cce636db0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7d091a-a70d-4335-9481-c6d7cd5264b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bf9c45-f91b-4efb-b8d8-6425f616e188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63674bac-7823-400a-9264-e2366b6a801c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049c2a82-3bf9-4aef-a707-b2a1302f8bc0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fe52cb-bbb6-4baf-a5eb-b956e8e1855e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2d8df0-816e-47e3-a548-5297d5bcd99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc90ba5b-67a9-40eb-bb73-bee406303a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6d016e-b9cd-4ddc-834e-6f1e523eb165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a94bca-4c28-4697-a847-73f7de2410cb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6222a1-f026-4860-abd5-527144c5e3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fea16b2-3b12-49fc-87b5-8aa62e57d090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4b51aa-e4ac-40a5-b395-c8fdbbe0753b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca02cd93-648c-4ad3-9922-909fb481325d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32a9918-09cf-4d02-96d8-9accee6f4861",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30903f0-0d3b-4ac6-be40-8acc1113f83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66684de2-75e4-43b7-b67b-65f9539d479d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7775566f-a854-4e24-878f-6cab299bc2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e38f8503-b11a-4c51-afc0-613734cca842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82545da-4a95-4016-88e7-8b5638d84e4f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5b774a-3266-4892-8cda-ec4499780291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abdc0cb4-bfb3-4357-80bf-8ec856b92519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb8f9fc-ce02-4c7f-ad19-819a952942ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15020b8b-abc2-496f-bc21-d80dd184f2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72506aa-8823-41d3-a9aa-6e733b964b2b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ff469d-e9b3-4edb-824e-412e4f1fcea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708e3d5c-3c33-46f0-970b-8c94296998cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99b6ec3-c3ef-414c-a237-8be5ace105fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c428cbc-bdf4-4b9a-a26a-d51b05816153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051f086d-6f2b-4412-bf7f-a830a3e538e4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48eab62d-676e-46ea-9e5d-51a9d1673b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a147148-3c24-4a5c-8c8f-2fc45a521e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa1af15-8815-4c36-b65c-d44cc61cd85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b35dd61-ac39-413a-8a43-7a62a977087f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fc8e57-b450-475f-b523-b2c55f7f9572",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9935f7c7-9d45-479e-b1eb-41465d0a2e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a548661-5bb1-44e3-863f-8c7a4166965b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2a1dda-4de6-4313-b80d-65f50c3b9c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4345cf33-6e25-48f6-a877-605ca57cb434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9698484-9efd-40e2-a41b-360ac1935b2c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82dea106-d71d-4670-8183-e1f003ad010a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc4f599-dd57-4de7-8ff3-ab23c1d021b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d07e74-f92d-45ca-9af7-d192788048ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "919bd528-75e0-4076-bb70-93a4a04a6ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa6ba96-e777-4e43-badf-5b322259d7f6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ec5c2e-e3a3-40ec-953e-57437ea9488b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae894371-26c1-434c-b390-118c3bc5bf2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a984d486-a3ab-4b54-882a-2cd9e9b6b103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "943e68b0-a565-4fe9-82ba-61b8c08107fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdeadff4-e38b-4a8a-9ed6-7cac0139d907",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349c2ed4-2471-41cc-a218-8c9fcc159990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "74d80ae4-cc66-4292-8887-4a2b69339c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49d525a-e625-48ba-b3d7-3aae3d4be50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "411523eb-1d3c-471f-b5e1-06d5ea6525e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4fcb6660-489d-46cf-9613-52d26daf863f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce6fac04-a3d2-4e2d-9bc5-c4c507e65aaa",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1791c3a5-bb71-469e-8fb4-8f92fdc469cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6fd8314-64d0-4349-8323-3f343589ca4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5bdfe3-6fe9-4689-be81-e764ee7bc1cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85079230-b561-4c18-b210-1b912e39be82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049072f9-1270-4235-979f-88c934ed3f6c",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823b9099-1c0d-491f-95eb-c6236ce6e404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33255504-54a5-4e9d-94b0-ef9ea29a1061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2c02f1-8afb-4dad-b5db-d2a09604d5b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a29caea9-d570-4207-ab53-702e54d3ff4c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccf33f9e-d55b-4be9-9632-fde30bb711b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "359c7a97-b2cb-47be-bf2d-d8ea5ec66f7e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63c53731-8179-41c5-b848-83703ab2bf63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e671c9a5-a56c-4a36-972d-76013654b07f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ba9e0a8-d79f-41a5-b8f9-3d9e58b830a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8bcbcdfe-d326-4556-8054-223ee8fc1f54"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "825e7f71-1aa5-48bc-b954-51236369bf8b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44fe0951-64ce-4d2b-b817-468038338823"
                }
              }
            ]
          },
          {
            "id": "a826bfa0-d0ee-4333-88c8-dca4bc944e89",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e8376738-df50-4d22-8623-aa6939b3c671",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "327e51d3-dc46-4994-bb40-05c2f9120235",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4720e94-2200-405a-b896-57fd9b255c00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d7bb58f-db99-421b-bfda-b871dc4ea23f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8756526f-896b-4cd0-9a48-e726cb1138d2"
                    }
                  }
                ]
              },
              {
                "id": "abdb1320-0605-4e60-9b3d-956ed44701f2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b55f2765-2742-4d58-9f7f-320997b18c79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb10f192-5171-46f5-b63a-85e90f85453c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e277213e-bf6c-491f-9c35-1abdf46aa4ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7f8bf3c3-e54e-40ab-a188-16da2e1307ad"
                    }
                  }
                ]
              },
              {
                "id": "104105f5-f112-4b91-b259-722147bba839",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8e14261-46ea-470a-bfb4-2add92a8abae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd6a20cf-7c27-4087-966e-f33bae8a806c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3223377d-9ec3-4b76-b188-dcfbde6a549c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "44b16c8d-64ff-48bc-bca4-e1ec941fec35"
                    }
                  }
                ]
              },
              {
                "id": "baafc7b8-dba6-4953-95d7-f473e4bb1a1e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5c8de15-12c9-4b75-a071-23bf66919fe1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2650cd0b-8347-4863-98e6-ffd9862c4944"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea0e5075-fbc5-479f-a5e4-de9fff00ab89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f022618b-113e-4941-8439-59f0a08e3bed"
                    }
                  }
                ]
              },
              {
                "id": "4be221e5-eea1-4a31-a6f3-79b262f420d2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5754295-677f-4de0-a387-1395d5d45ef9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "799b6ee5-a765-4885-a35c-f9d905802147"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67d366c1-28ec-45a8-9883-a7f6427f8ea3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d77263e6-df3b-4965-be02-7bcc93bdaa4b"
                    }
                  }
                ]
              },
              {
                "id": "d29d7dbc-24c8-4e30-8ec0-8ef063432601",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6362abec-0ea5-4cae-b1d3-bf51183f9dbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29337de1-fda0-422f-87cd-55f9337d4285"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d2ba060-548f-463f-a825-edd02838d85f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "28d48699-567f-42af-b8db-17773345d8e9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aacb871f-b1b2-4499-a857-d36e37cc71a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74c69be9-74cd-4889-80eb-3c1b729317ff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2741c2ce-291c-4eaa-9d28-092ae421f71b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cb1aaea6-a26e-4b17-83ea-e642c0ea1f3a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "accc58e6-c800-494d-809f-878275b16e5d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e725ae1f-5d68-4295-bfab-76083404d12e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46c6b32c-03d9-4b50-bd56-57192ada7be6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8936e766-8c6b-4969-a388-28938b35f09b"
            }
          }
        ]
      },
      {
        "id": "ac02b84d-ab36-4baf-a431-f9d92f71da26",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e1cc35b1-a81a-4f6c-9702-df393b2e734a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6562e696-4fbe-4432-bad5-e6ba8816cec8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "03bc54f8-f4f8-49a6-9b7d-1560df99f961",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acc8d1c-086d-4de4-bd2d-7af1991c33a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d798c38b-4395-41b0-8288-4f8ea1913ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ae8731-3edc-46ea-9cb3-fd99896a3e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4d129f1-c644-4016-b1bc-48bbafa06af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1765b233-f012-40b0-b861-4178edd11238",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1a451c-6c06-46fd-ba49-285f542824ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb65b5c4-f634-4ca6-8851-c17a87cb5360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc064721-f608-441a-a7f6-eaabfff12169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "260ef11c-3352-407c-94ea-55d42e026cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35877f0f-1f2b-4149-a151-0cb735b23acf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17733997-6d51-4325-a61b-91ced315616f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ba13f0-bcc3-4f22-9c69-0e26dc1cd625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc516de-679d-4312-a05a-442105791aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a26adc-e230-41a5-b111-cb8231b72204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea2c144-b57d-481c-b13b-928c6d4652ce",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63526414-6df7-40d8-b30e-23dd0f87cfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a4d350-38f3-4af2-8210-1ccf334a1df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802d3a47-872e-42de-ba71-eea00d2e6db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b9e82f9-ff9c-412d-885a-bfac25445db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a56d767-e5e3-491a-88a8-1f8b8e0d18b2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4cb28e-9397-451a-93cd-afefba11c13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63fb6cc2-9394-4328-afae-12d59bc63ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef497214-8539-4dc2-a743-878c7aa32638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1a0c1d-d0ec-4ebd-8aee-5dc54b73ab15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d791a8-84fd-4336-883e-920d55c1fe47",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d593fe-2ab1-44d3-a3f8-a1ab6bd2b12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4700a31-dd31-44b9-bd03-2b814bdf4b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa8f5ce-b6e8-42b4-be75-56e2312e766b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1eacd1fe-56f8-4485-a78a-80bebbf81c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96362834-87ba-4b98-89e4-b693e129cbc3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4969f8-2332-43b4-884c-82302e75bca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163cbc6e-6fc6-4cd0-bef7-77a24d981f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da2c136-bd08-444b-a511-b0f18bea6a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4dda337-f718-4fb4-998d-eaa37e0ba585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551a51f2-6cad-426d-b252-98177318d119",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2e12d7-44f8-415e-b32e-bbce9463bb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e418e954-9abc-435b-a259-d50cf10a6e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e307a5d-e366-4d6c-bdab-b30c3df75858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ce1418-4d09-4be6-971c-efe6261b2021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e404fd14-1a65-4ad9-8374-582c26ea7497",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a4ae75-493e-41e0-b9e0-4d0d704e4fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5041d56e-7e28-4b22-baf5-ff9e4faf4bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4733561-a7f4-48de-93fc-e5c964e53e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4457a797-fbba-4717-8c68-71ea0eaf5b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60e5260-3f74-46c7-b75b-34f73a4e7843",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14316090-4025-4933-99c3-07b194c6a7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc54ad9-cad1-4343-ad2c-4e8c714d2f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e79565e-7756-4698-8c54-3f2cde79ae07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23b01f1a-1abf-4db3-af15-df40bd6119ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6ad465-0102-468c-a97d-2968dfc0048b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ee6fe0-ef68-4d91-bf16-48bbf85a3f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4ab81d-2276-4f32-a1d5-3d62d30cbd57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d857dcbd-4bda-4dd4-bcaf-d36804c015c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9a854a-01ab-4215-8ade-f5c1d17b2755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4e85ea-a98c-4896-9765-b9dc32a529eb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f3514b-ef13-44b8-83a3-678129912c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea43c47b-d2f4-443b-a20b-4d0e53b98e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219e4f67-d64a-4e01-a451-0ee31eda2e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "482d8ee5-deb2-482e-b15d-2a62bd0ecd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb41e1d-6970-4cb0-bd25-d817526d85c3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88e1338-7faa-4a83-99c0-3746c07bafa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a395f5d-894a-4e1d-a208-516c4409d41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d2f3a6-3de1-406e-9bd7-e18cf6e6e334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3757a0-00dd-44c7-bfea-79ff1c63b290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa590ea-9dab-474a-bf34-894d6c64706b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbeb16aa-0c9b-4d04-8252-5122fc7521fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d395fb-6441-403b-b009-fc4637d02bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4600a252-c686-444b-8a81-e76c0ef3f0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7ca18a-a982-4810-b913-9b26e9d0e30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63ab201-16fa-43df-b7e3-35195de8325e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acffa2ca-a403-4465-8ce7-f01d25b3e64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb2497f-d7e8-4d0f-9b97-236b3000d981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26c7e05-17f1-4cd2-92a5-d927eb9012bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b63767b-c824-426b-b89f-8c35eb849aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8fbf65-439c-4481-8a00-76b1d2176f4c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a5acc8-c6f7-4e0a-85f1-2a4b76792f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476f0510-dc73-4238-adf1-f17cd20e5e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6396e17-fcb0-4339-ae2f-ceb8ab782a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "78fbb804-7157-4cfd-bb9d-60c70896cc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a710fae-2399-4696-a106-ae0c5832aedf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253cb165-f75a-4306-9335-2ebb07962580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed09288-123d-4dc0-b437-a0f0152aca8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eec872e-0b10-43a2-957a-145c1608cf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4001764-a171-4857-9238-2e4ac9a94495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b907ed-1425-4a0d-9fb2-76de09cc9dea",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ca854e-2a61-4904-8205-59b3f73d3ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5c0b86-40d5-43f1-aadb-d0155bb87b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd98b02-69f3-42bb-8a52-aea80235659a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c3f5ff-b40b-429c-92ab-7bbc0598daa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a2cb7a-ad7c-477b-a994-054105219a27",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e2a7f3-2e0d-45b4-b539-645840106d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922aec70-8c1f-44e8-b931-a1cf43e0f69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935d10fe-32fe-48a5-b101-1e55c6fa3c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37b1510b-8f43-4e89-9e0f-e374a77ee1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2714ed4b-4282-4710-93be-b74224b88096",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4f843a-558b-4c60-aedc-c2ed415f8efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58dad0d-8b72-432c-a007-b94b9e10d582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923b9308-e0fc-4ec2-aece-797f0f31cea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b80bac-7c80-42fb-96d6-280a7511546a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9e7385-8c18-48ab-b5c0-d3f07f7aa4f5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef70faee-e911-444e-8381-7319fb5f5294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1f0795-8d19-46fb-861e-41c0191efd82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8363c8-cfe0-40fb-b6d4-4b2fe63fa742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c28e1906-d3bf-47a3-a096-5b998ff61432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c09358a-762c-47d0-846a-d0ed3ba388cb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83f7ba6-4143-46fb-b143-06b2ebd91d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "917f6d12-0f1e-4e0d-b1ab-e570e51c2bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9afeea6-0514-411f-a2f1-1aed953ac484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de53a22a-3ec9-4787-ab74-f7176ecee603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1a0f53-5c58-4f5c-a673-ef73a9d6274b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f84c13-9da5-4752-846c-436b2d57d8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba0885e-7048-4986-a56f-3460510f3680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1637eb-95ab-4f88-a96d-f3ca02e74e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1a2868-2685-44ce-bb96-73f51b33ae3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638ffa16-d159-41b1-8dff-082b67685813",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9258c818-26c1-4fe1-9205-c2f208c7ce86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d446bf3d-265b-4948-8922-490fe77d11e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056f84f5-8bf0-45f8-b923-e2352255ebe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9b2183-8f18-41e8-ad87-3d9f2c78b64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8022e40e-185b-42b1-9f04-1c32cc938ed0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da3054b-fe2c-4152-bd2c-7ec47e654b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e69ec6-1af2-4df5-9aeb-41883ede70da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028aeb7b-9246-41dc-924f-6e3c9f9c4d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "454179ba-739d-401b-bb98-c2e8c8698c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4874f9-1aa3-46de-b5d7-d8ca9c551231",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878c6967-26cd-4bc9-98de-eada3bbd0751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e864099c-830b-41b5-a03b-ddf1cb439341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38464523-ef65-4c74-b1bf-5cab6ab42c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6872d10d-11be-41fa-9271-39c281fb847c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c74597d-402f-4a95-8f93-fbfe1f8cf955",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f096174a-058b-436f-890a-8f931a1eb66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70db76d5-87e3-4ae9-8979-5fb89e4b9d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1ae618-38b2-4c8a-9619-23255d3e95d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3be7f253-4dde-4563-a7f3-646d6552f311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc92c3a-e549-42e9-af22-1ed21df01b81",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91caecf-5fad-4724-a73d-7a41de75f070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f42a88-a190-4e44-9839-cbaa9d91113d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edd655d-2e72-4795-a2e0-22540dbed6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2418957-812f-4292-80dd-9d9e5dd311b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ed88a5-4c0b-4c3c-8149-04bfa07de9a8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c1d60f-7a00-48db-9575-587cdcef9a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f32c2e7-bca6-461e-a185-1f0c360b9988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc65fbe-020b-4554-ac5c-1b61a8ee2242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78438977-fa11-41b9-b4d2-21ebc6df253a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062c460b-8023-49da-94b0-3f8ded01cc81",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59eec0ac-833e-4c26-bd91-90dbceffad03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcd1d18-77fb-481e-8dd3-2ce0e21b2268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f582c60-c061-4716-b0a6-5bd4aa08a167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50dfc020-53d6-44e0-9fd6-1869739436a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac25fb8-f854-4fa3-b198-cb76a3a8f90c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68b933f-3bb6-4106-820d-b32ff74d9dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fabb2c3-427c-48f4-8dc9-934f4a9c7318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551edda8-dde4-4461-bf2b-73320d6f5b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c31b0eaf-9606-4bb3-a7d1-1418d23ba6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8acce9a-1feb-49fb-997b-76202b3a9a6f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26dfaa1-643b-4008-abdd-265fea43c354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbabb08-741b-45e1-b1ca-040e0d5148d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ad261d-d334-435a-8a11-30ad884d3d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0f4430-ebfd-48fe-8ce5-2555f00d9c68"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ed28d14-0705-41d6-961e-4841ebd49c7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42c36ed4-2c1c-4d75-b71b-e298563e19f5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719e7a51-7a75-41c2-8775-8443d56c8d2e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "50dd1010-cc09-4cfc-95b0-42d2f2c55a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76f8036-5cba-45a5-8979-27bcb0b0d529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "062e2c02-f4c3-4c13-a2a2-a9b8e90f15f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23414a9-dfe2-4458-9be3-bf5db532feec",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c213189e-cf82-420e-be45-81dc2a8e20ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2127d8de-050e-41c0-9dcd-1525691b8b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18574e5a-f70e-4e04-b922-307785bf956d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "307ed841-1656-49ed-bc0c-470f4033c0fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90ede845-55f6-4ae6-a0b8-622c2864610f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aefdd120-64c3-4c4e-aa48-eb082df5e419"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e74756f9-293f-40dc-8410-9e0b01273d6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b27ca397-dd42-442f-abbd-17563602169d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24ef8c8d-7de4-4d04-ac8a-74ea09096f6d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "036fac95-bd6a-4bac-93d4-28453e3244ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e82938fa-38ed-4046-9e59-8eb7ce30ae5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b60ca5c0-215b-410f-84c1-818ac8db8ee3"
            }
          }
        ]
      },
      {
        "id": "2e82ecfa-093b-4c18-a939-2db10356d0e0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c9f82587-4ef9-4b14-84a8-2849538a3016",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8a4543d-64dd-4a95-b88c-7a443a76ff84",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "55ef2b08-7f8f-4895-8e7d-9aba68fb31e8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9286debe-48bb-4390-ae18-1f2763765897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3224a1-0e32-4b92-91cc-b9f7c343b5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11f3a18-5e43-4b4d-8ce9-f1ae0835b57a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c98d84-8dcb-47a3-a5b7-3a633de97c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b11289-1a30-4ed4-a8e9-c7774fd4fbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3766a209-10af-49cd-b567-2c574a490e73",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53ceaa7-93cf-44b5-b288-1bb6b3d291f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125699e3-13e9-4859-9207-ce9531669757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd380d44-ffa0-4a6d-8979-bf16ccda0774",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebd0378-d588-4e86-b1e0-6f56cd04f8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d62347-3976-419d-b125-6b48189ddd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ac41c4-d889-41f5-924c-7d86c232f409",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e86089a-c369-47a8-b5c3-9fde875ae103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92687bf-347b-46ff-a28f-f89128283fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418456cc-79db-4693-bbc7-a26b01800f7c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a620aa2-6039-466c-86e4-9c1716c6ab03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66bcdd8-b235-4f34-a6e1-7d2fa99de8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f63035-c85e-4f6a-afb7-2d83812361aa",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187e2086-6c8b-4a8e-9081-97bc51aadfb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f0af98-7f71-4298-add3-4759cb4993e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c303fd-7504-47e9-9954-d294017f84e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40131c44-f98d-4cb8-a751-3bb80c1878c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7313c7-a8bc-4c9b-af46-f2b570cebf45",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafc0f8a-44b9-4d91-9c56-396a56b55b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "484a4112-4db4-4876-b9f4-d53512afbf56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "def7df46-9a35-48b9-9199-28596af167bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81b42ad-2bc8-4c87-a911-128011bbab9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a66b6d7-958c-456a-bd4f-cb21154eb059",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60943fe-96f6-4a9d-973c-844e27ced206",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1ae9f16-7e6a-4349-87ac-9117c2bb7bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd4243b-f40a-48d8-98ca-3805504d07e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa49e35-7424-4799-b264-2f5c28ee297c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f26b62-d187-4a73-9797-cc9a027867cf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832cfa81-b3a7-473b-97cf-1b378cbc1ef0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "311fabe4-5d5e-4f61-a48d-d16e73523340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b534ee6-10fe-4cc8-8f9c-91485fbb84c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6280c2-9d92-47f9-b249-66a8c288d195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ee6713-ba9f-40b8-9d93-14f89f44b3bc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b1796f-97d2-4e6a-96df-23535bbb0d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee1f555-6fec-45e3-b900-449155c3cee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48729377-ce98-4644-8bc2-08cea1372ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2e57a2-11f0-406f-a979-0deb9ca8790b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02c0193-9d2a-4052-a9dd-cd344e469aec",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b7df0f-746f-4aa8-a001-041ea4f1f7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274ceb78-f204-47f7-be9b-fc4c639549a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80b9a71-c2ac-4752-903d-004916d91657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb47021-b698-434e-ab38-8f9ec9abc985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ade51e8-2a0e-4c9b-b53e-d2d82cf48661",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8b6351-68ec-4dc2-9614-e0d3a81b4769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a627f6e9-64be-46d7-84d5-e8acb3fd0f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84e620a-2514-48ae-9ea8-06980685901b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e52cca-928f-4338-b250-051dca9ae96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689beeeb-3dc3-43c1-aa1b-d7dcd69ee645",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d54c57b-0470-4617-bf33-0137f1d73ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97762185-af90-4682-95ff-2ceabe17ee3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b24a49-cdd5-415f-a0a9-62727f808525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721f570b-a4ad-4c59-b9ed-604954a61c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbcb29b-538f-49f5-93b2-9ae1e2c4cafc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda7d666-5c87-400b-a1c5-e52c54b8259d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd37dd51-44f6-4c38-a81f-4c8e20ca54b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "034a730d-c660-4934-9478-dff2b925a813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b8a4ee-c3cc-471d-a484-eaf694434e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af695ee-7cf0-4be1-866b-98fbdb612266",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2a4826-55e0-4099-bcaa-adef948d11b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0f19577-f29e-433b-aa55-e21640e2be42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62db96b6-67b8-4bc4-86ad-4574d1596356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f336244-4813-4fde-bfb6-94242b5ddbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3c17e3-2866-4da2-9dca-f7df0a59a7f3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61262b46-0fbb-414e-ad64-39962ff77cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad219e6-7782-4de3-bab9-a227410c767d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1274ab0-bc3d-4139-820c-53d2f61ecb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1376ecde-df30-46d1-8674-6574eb7953e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e0b68e-abd6-4c14-beda-75f86477483b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bedf6f-f9cf-4b1f-8057-18f16a00a49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059fdef1-20ad-49e1-a896-6e383c2f9db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e59161a-d2a2-4eca-a26e-56fcf7f15e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beedc7ce-b679-4067-a3da-4feb76662705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf098f2-7c46-425f-b7ce-d4eef0a2d115",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aad0a9f-6ab9-4fc4-8a49-95ee602e0706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5186833-3526-4f0c-979c-10a4717c16ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "476f1fa6-4e7c-4b3d-b70e-def518443238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79fb161c-bc87-4ee6-8343-430862808161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbd7182-a945-46b3-a597-beeb7f929613",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7fa087-3564-4759-8e7a-cc4c308dc2e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2609a32c-9095-47c6-88fb-13da1785e2c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cce75c7-1e82-4aad-a902-8156b94af8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0d06c1-e899-4047-bbc7-f3915d003806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d268627f-e00e-4f99-8f66-81af14ec9ee9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69da2c9-9c27-4990-a63d-58af5a49f6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a069fbbe-4150-4916-b2a7-7b9383e22f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db9a0de-8b5d-4037-a49d-2b9a28ae56df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20f78de-468a-4ec3-90cb-c47de3a23fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a19a47-7153-40d3-aab4-cca115ade416",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84fabfe-fa0f-40d8-b9d5-d44286cfe7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383aa69a-04ad-454a-99a3-7e0621221d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "224b0012-92c8-496c-8b7a-89210ba917ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591b93d9-6724-4bfa-9b81-8f3eafb9b15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478f3a47-e41e-43e2-aa41-81346c041ac5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ca2ed4-fdab-4595-94a4-d2dc61a6cc9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825e9883-de3c-4059-99cc-d45b87dd197f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60e4f04-e8a3-4697-aa51-00f5aa5f6d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23588e8-339a-4b94-8702-00d1f22cf058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2cdf1f-2d0c-4169-b36b-0f437dfc16b1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f03e0c-01f4-4338-9d39-e2e4d3bbd1e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d9384db-0034-4155-b073-88feef9fd4bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fe1ac5-1d25-4e4b-b2ad-8d04a381853f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70889c3d-7e3e-4b42-b0bb-5ffd56602841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a214df-6c3c-4664-8e6c-9c5e5c322248",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f3303f-b93d-4fd3-affb-b0b8c8b10929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0379cabb-2d54-4b6d-b417-aeb761c6c3d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a667f4-05f8-428b-9f2a-7d6426c5a667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16dc6a4b-4835-43df-b900-c85b449833b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b76cf84-910b-4610-bb4f-a95569a5f03f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07755312-bd60-483c-b9ad-9c70e2430979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b4eb5a3-4252-436f-bc73-e757e0e40e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e9f6d3-66b6-4fab-879f-75603e5a4b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5a5239-0bbd-416f-aa2d-0027f9caf758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa61426-4548-40ef-bac3-c22488ed4f17",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2010dd8-33e8-4efe-b5e7-c152eb0487d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e573181d-a10c-4f16-ab2e-0225774681bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7762953f-6bd7-45d7-abf3-01586228a7eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1426009-6aa4-4739-ada7-b30c2541184e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cde848e-8981-47e8-ad20-8f175c72394c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e1aeca-3677-4843-bc7e-7eaa78a5e25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3895ca57-685c-4a60-b3db-60390b45e01c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25770596-739c-4d1a-85c6-e10fb6068e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669f1b16-174b-4632-815e-09bd912e6e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32408cae-c088-4bd3-8807-676d2994b5e5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98edebe8-5bc1-45c1-ac8d-953f8cdcc86f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d432e90-9918-4570-a4a9-e9b05dad2e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2accf55-66e4-429c-8f63-8d03ee830ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff984238-da61-4d2a-ac25-830ad457f1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d951fd0-e744-4eb9-8328-25d653416ce2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bd8121-59d2-43ff-a4b0-95cea4908256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "830d3410-053c-46c1-b709-4aaeed18a643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c46990-46a9-47d8-a758-f1178cd096bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbd0eca-06c2-40e8-a60c-81042d46d198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0b883e-ed96-4516-8456-78264f4baf22",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a56898-0abb-40e9-aace-be0272dae5cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad7685a-b6e4-4d33-8096-bb1b26bfb322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a983e2-8456-4e2b-8d68-ee74c34d6ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b1c3e4-5a2f-4e75-954a-3a7a916dbe6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0b2544-64cd-48d6-853b-47eec9101d2f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb375fcd-c394-4df7-bf61-fca4e1ed1bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74060889-bb1d-4704-87d2-a3c553ffea75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2849ec96-75e5-477b-bf81-47e9520b7b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080e6b9d-9906-4bcf-b939-ca1f0b4d0c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f1faaa-a4b4-4edb-afef-3c7e317be6bf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6769cd79-0e79-4bae-bc23-0d25ac746bfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90b23019-4f6f-4c45-a692-66049dcf5976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a4f572-86d6-4ee6-9c7f-817aea33361b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961daa7d-f324-4f74-9883-f1b67fb37095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdfba53-5b49-46ea-8fe6-0d038764270b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5340f4-13df-4180-94f4-d2ca38b820c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d30ffefe-55f4-432e-b32b-da70591d4b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7ba90d-2560-4830-8a90-4b92cbf93e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46cb8093-e7e1-454c-8444-8b3a18a4ced9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6283d2d9-8f81-4c66-b18e-9d2fe904660f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3751f828-bcd6-49cb-8f2e-91d20f21cdd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edcc6ff-560b-4dcf-8e5b-a24c97781a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb229329-c5b6-4176-87f1-f3461d187ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce14317-03c4-4daf-8d98-f5acd5cb9aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fadaef-f019-44d3-a458-e9d120d690ea",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65509f56-70f2-4658-ac8a-ef7bf323ed85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb87b47-a6cf-4009-b1cd-a5c08d064e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "122f40a4-1368-476b-9bee-3a6196155dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eaef7ca-e7f1-41a3-8a7f-3f574ad65d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d236a42e-43c5-4f0f-8496-6fe91758b5d5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc3b91c-5faf-4926-b4fb-6b86c40e909e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3c7dbe-3bf8-4648-98c4-1e5b524420bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88f4a2a-9038-45c1-8f73-b6149202f43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999e9665-fa1a-4c23-a99e-0a06526be410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67c07aa-547c-4a3e-ab36-51c5dce56d8a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2926f6-5177-4f6d-b0f0-dc06c5e7bbc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91eee5a-ec68-406f-b2e4-500618b6bea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e47670b-a004-4a2b-97a8-803923e6a6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68023ef8-a790-473c-9269-c86f5e9e4c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dbc512-ce62-4774-b842-01f1cf6b7726",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07a9c83-d097-4e6e-8605-da86f623b70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec8f2cac-216e-488c-a9fb-8ed9a0e5b158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d75e01-7860-4bf8-8b8b-260f9072917d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0460d840-f0cd-4509-8322-3aff2dee9d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2251e795-2203-4bba-b249-4692297042dc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49a12dd-c4d4-4007-adc9-67587f907ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61298fd-857f-4616-be3d-150f77d7534f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537e7e9c-5797-4dac-8ae1-b0d160b46c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3fc5fa-90aa-4043-85ea-2ac4ecda5849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1d8a9e-e4aa-40a0-ac32-de37227d58c3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b13a3a0-e33a-4704-b73b-2d5a7ae2a332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786e5c07-bd73-441c-a7f8-73e934d58b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a66f3de-8e81-4c4c-aaf8-4e751a60c774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d21e26-0e26-4b08-947d-def303b02869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc473628-f0bc-4459-bf48-0da3007656ba",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2b21e9-f387-4bdc-b2ab-f5121b44035e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3035f434-689a-4068-ae6a-02e6a17ccde6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16079c12-fa8e-420c-8c96-8e03b72ce4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5585604-ada4-4cf8-81a9-6f8145a4f650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8676a5b1-ee7c-49ba-8507-03d821362625",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ee9b2d-e404-4d0c-9811-cc833524d0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43bfe6b6-fb32-4fba-88c2-0096493939b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7f85ec-5c0f-4080-b70e-446102fcb280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f66191a-033f-4ae4-b162-bc5f5bcb81a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15434c1d-bf29-4885-927f-44928719b0db",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05821a46-904f-419e-842e-57de53fc1971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf054da-382c-49dd-b79c-017e8bc85df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2204ee14-f59f-41ab-909d-a06c078e43ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656010fe-0391-4cc5-9258-7990304cb97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533883f3-0e62-4499-bf12-73564a448b2d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49431290-7522-4b63-ad00-5d130fb30f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40cc1a7-5304-4ab9-8537-17078d3caaae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ae7fc3-07c2-4f81-90b9-451341e99d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4bfadf-7fab-4e88-abff-3146f20285ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ea02aa-ca30-40b2-adfd-840981cfbaf8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33dad35-a3f5-4fd5-8aa1-d46fd54d7bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a834daac-22c3-4825-bfd8-6202377bb556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9a603c-038e-4b57-922d-a19ac86545f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1e43c7-e713-4d99-b1cc-c5544ec65e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9a4ba5-90d6-45f1-9c18-dff7be55f099",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338ba67c-5055-4e2a-9ea0-7ed956d77401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a4d0d0-e7ab-4e2c-8810-6c68547b3cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a806596f-ab70-414c-83a2-09267ac4e79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88aa0cd3-8458-4371-94d6-912720fe3dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f975bc-31b8-47fc-bcab-6f59024f61d6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d58ff3-c909-43a0-aace-4b531aeaa5e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a4568c-beaf-4bc7-a494-5f8fdd41da5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac5c2e6-b9ce-4ef3-b1b8-d2966fd7e892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8b2370-afad-49fe-82e5-ee4ad663b19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c63977c-6f20-4fd6-b820-cc023751e32c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bfeb61-850b-49e5-9dfa-7e1409d347c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf33b375-f14b-4c95-8ab0-5da4215813e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bbd8e2-e1c5-4f5e-867b-043eac762cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d718e7-3704-4989-a09a-c18b4a6fcdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f75930a-b646-4124-bac2-56ab87c59afd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee626639-0701-40e3-9805-0c83b24ff78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1991d6a6-0018-4cf4-9418-ea2642d075d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a59d0d-26d4-4c44-9637-48190fba7dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94da3059-20f3-4e45-aad2-0ee595dfe993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279fadd1-3f86-422b-b011-70d58590981d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6dbd3a-a3b7-4a5d-a8fe-cc4b1a5849f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b3c89d-22a4-47f2-a93c-9d32abed35d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58241fa3-e071-41f1-ad47-694ae4bd3607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8a1f35-36ad-4438-b626-35a259151fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03ceeaa-6f9f-46bb-9cfa-e97e99a37c50",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe89742-5435-4507-a562-5c5cc57aafc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c570a6-5542-41a1-ad69-0fdcc256064e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8147cef2-3b04-43e2-b524-7db5087167e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76d1c47-6806-41f5-a027-f11db925900a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6130f02-8c74-41ad-85b7-1871631d67ac",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a66236f-369c-4cb0-a162-baaf3fbdb605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3437920-709c-4a7c-b22b-51ef1ac9de21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98f38af-cd26-4d37-8c94-31193f24f6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab286895-a7e9-4ffb-b1c4-5ec84ff4642c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf8b1fa-7fe5-4f3c-8e71-5479a8569849",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043447e9-6c12-46a9-98dc-df580a69ed06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d5a7cf-f0e2-4f75-a6cc-6323ddc31da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915c12ae-2111-495e-9925-22f7eb4b3871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7146fe-bb1e-4f10-b363-a23dc52c95bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21768787-ef96-49dd-8925-94b2d4e989c4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3fe097-696c-4302-bad1-8caf947612f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1045e75-a673-479b-b53d-06068669299a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a4b744-e9d8-4748-8d71-f78604654fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df0284e-7e37-40a2-a968-f9f57bb124ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c0ecf5-e38f-408a-a1f4-880376e85a08",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8e49f1-60c0-4e8c-9a0d-ac43a2c0a34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8382e700-15ae-4b74-8510-e8fd3f3b905a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e6ce3a-51bd-46bf-82d3-43d3ba5d2631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1acf6089-9d6e-495c-933b-c3cfabb03d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4361746b-1220-4c63-a1f3-7bd1553de961",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5021ea13-a246-40b5-81c6-2dc9965a868e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ac0d86-386d-469a-a535-5da31a98c9d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72461359-7246-471a-bd41-7acd15181f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915a00db-bac3-48da-8e7d-2e9ec51d3afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a559c1-afa8-4825-8c72-91040d75b751",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6506829b-2976-4b8f-a302-79eeea94340d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2f43f1-a19a-44e0-8d63-3f4f45dda276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fe22c0-5818-40bc-822d-ef1f78c47adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32f7664-ec46-4df1-ab48-c8ead41c8dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9d94b4-8043-4776-a9ea-3229dd73ec67",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48973027-83bd-4a28-8afb-d48bbc4b3638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d111a27-95e1-4929-8f9e-2d3393cabdb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c42196-174b-442a-8d8c-9a13b0efca58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43fe5f80-8416-4ed9-bd4d-61f85bfce587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6133e5e8-edd4-42a4-9f91-4aa8764982d3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d4a0a4-68cc-428c-bb49-9e13d5749261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8240100a-0d56-4263-9825-b18b05990cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7872b5fb-671a-4325-93ba-0159cb28e7bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b2e730-e2a6-4081-9a5a-c853e9bd2c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe01b0fd-b9e3-40ca-bcf3-1439a345d0c4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682ba720-78c5-4c2f-aa22-67708c79724d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4fec10-6c39-41ec-a3c3-26c9c3d3c26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12baaf2a-e875-4b65-8644-0574ace4eb48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d756724-ba08-45d1-a11b-206016ba5007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528dec35-c409-4bc1-8267-38c299623f33",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754fab3f-6c94-4ec4-944f-9071c7c18248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30baed2-4435-4871-9c24-40528f0d025e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae940e0b-501b-4110-b2bd-449536f67a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ade40d-a0c5-4efe-a8cc-6f8e080ab160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd37723-3a26-4c6c-b6b8-9cd9d88bb982",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f2d3e9-629b-4da3-a6ab-695ae4826d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b106930-d066-438b-8834-603daf78ac15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00a98c0-aa8b-4c87-8d33-e1e4329c1039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80349516-03a9-47c2-bb8e-3b38921481bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68cec5f-9508-47a2-a388-cf8a737747df",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3447476b-dd50-41eb-b6e1-ba83ee07e5b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eee45014-9432-496e-9307-132acda999d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "560e3db8-05c2-412e-bc8d-af0ae9d80ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20b1ba7-c6ae-4043-a1ef-b7f54cc76908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e041b96a-664a-426f-a9fa-c4110863a3d9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e342a2-0079-41dc-aeab-a8e2c2027faf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d6f6b4c-6423-4fec-ab5b-0e88afb223a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb97ee14-6bbf-48ce-90c1-c68490a69e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4892fc-fb00-4d57-92f5-9f0e01f67a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ce66b5-417d-4ed2-a75c-73cf87a0d1a3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35311b15-f703-42e0-8966-156c0b13d20a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "171a5182-8f11-44cb-937e-f4bdba6cf7d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b08c6c-3bbe-4162-b72c-b73c8122e0e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552077ce-58c3-4d24-97e7-6bc5dfc451d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8abf82-622f-4379-a12f-e47855059204",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad212027-b332-4768-8514-3416609af4a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34650b8f-236f-45e0-b9cc-7324a3d756ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42a13d8-0cb2-427e-a6a0-e1836a9e6f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3848d7f3-d8d7-4dcc-b673-c1021c4a3ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41696580-4cbc-44ff-8df4-8ecfabae7119",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af630d2c-a57b-4db5-ad65-907b13d3b231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9417a874-1f7e-465e-8516-962bdf82f1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f90af10-657a-4ae5-82b1-83f1f52d4488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61439fe4-27a2-4ad1-a77f-9c6af221f10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04897838-266a-49cd-804c-90e8feaeaff0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca7b6bb-0898-408e-9fd4-bc41766694c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bd48f04-07e8-4861-9f56-39a4f3177cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abacbe7-1382-4940-9612-6eb63d49d85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f6ec7c-f403-4744-b425-6b02dc7e3c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06794c36-952f-444f-a2e1-8bff6718be22",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa3df6e-23cc-45f9-a160-e2debc05e202",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3894825c-cca6-498a-b5a4-3eb22fc09a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408c350d-7a43-4e93-9b67-f2c94a56afc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b5dcfc-c7e0-4664-9a6b-e310d7ae79b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b34a0f-43bb-4ce5-a347-42ef9bd7a81c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ef6056-7f7e-4f8a-816e-7b75085d780d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e52ad432-4903-497e-a34a-ab99cc942a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4aa3e39-b830-4de4-bc94-69de798223ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02244545-d702-4b29-8340-5916201b404b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8129ac51-2c59-4496-9b6a-4e7ebe3d65b0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e0fee1-6b2c-47ac-bc28-44c10dfbc292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb91dea1-106b-489e-8883-829e755f01c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d9fc62-0b65-413b-9be7-354c745b0b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f99710-4fd0-4c34-8e7a-313797d7d07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7502b1-ca0a-4ef0-b150-038e8504efff",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc47a4a6-eb1b-449c-a53b-7ac125cdece4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5758fb2-1cd6-42b4-b9a4-7e50fd8c14bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84eed7fe-29fc-4148-a82f-b2181d5351e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c00a9b-d508-4918-8b6c-2025f8e994a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712340ce-663c-4419-ba5e-8e87738b5536",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1fc0de-e7dd-4de8-bb83-cbc19d7d4dd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b9d4097-d605-4f9a-b604-1c50f326b002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5e803a-b043-4c37-8120-20c3243c3159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f1ebeb-e143-4e90-8850-7bbfbc08f490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa54ecbc-1de8-445a-ae4b-a55979155148",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55da28b-497b-4d7c-a926-5f0c56b6c6f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d74c33e-7222-43f2-a716-693065355773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e0aa3a-f2fe-45d5-8def-5378000bd439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433084c4-af8f-4b3a-ac71-14a3fa908bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406b70a1-02f3-4602-8186-d04c6d2c0611",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42b5756-f6ba-49f8-baa3-07c1a7bf24bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bb923c9-a675-4120-a18f-9155580c3fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "907cf131-451f-4618-92d4-6f7eafaf1048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2726a3f-7875-4a6c-ab8c-92a67e5d6811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b50c25c-3fb5-4516-9010-b46a8c8d8c53",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503f9fbc-399c-48b8-afd6-81fb65f8d490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7753a2bc-70b8-4b63-825e-045d9b5c3074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57036fd-e7d8-4b3b-b592-f56227404301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82499405-3760-4314-a06f-de71150988aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ea1000-6c8f-4a27-9c66-d6f2c97aac0f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c237b1f-d664-4786-ad04-88678baaafca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3c33abe-6b13-434d-b032-f732500050fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6822957-a0ec-4a31-a025-530f01b3700b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843a2b02-6ca5-4fb6-8025-3212933c0979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510ad003-73c7-431e-bbde-fad67ddd1d20",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e984472f-0fcc-48bb-a900-d7a1e5f9078f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23d5bcb7-458f-4067-9cd5-ae2874c373b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd29eef2-abb0-4e4c-bef7-829ea620d74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864f2dcf-34f2-4a06-8e40-451257dc03c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2a0e4b-abf5-4912-85ba-9d528400b899",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae69874-8f3f-4f66-a064-c9b7ddd87ad6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa316633-f0ed-46e0-aba0-4cee3072485e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f7e398-ba8e-4cfb-84d8-50552cbbb9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8401b4-df23-4c07-b25e-59ea20861756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3794b13-7d92-418b-a86f-2d1d9750dcf3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0df2fb-259b-4aca-b542-1b60369a61ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3308a6be-6f4d-4ad8-b8bb-51073214c644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80737196-976e-448a-9fd0-0f4f1b3d76f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ff3138-d642-4a82-ba2c-9986eb742d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf02cbc3-4842-495b-b09d-6226672c9099",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9144593e-bc60-499c-815e-dfce9a9e21aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0577251a-20d2-4656-804a-c6c6cf3ea1db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd86fb28-6481-4ab5-a454-826e4c240dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8845e470-364e-43ba-9f59-54bd85c93862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ac5873-2a1e-4841-829b-ce404b85b6b3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c596952-6834-4d01-a772-2d830d1f2f9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eab1fd2-eef6-4e95-9823-dae72486baf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5570e5eb-6f8e-4aef-8c47-7d8573c40554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e06ed4-834b-4f02-87a6-916f7a1e254f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17edab39-3e41-40a9-a5e9-ca241160382c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b717f66-2a27-48a3-be1d-c45877c3c904",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a4e5d70-f82a-4003-b3e1-45dad21e842d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc5a4bb-1f6e-4da8-b934-3a9fc46c672c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5dcb5bb-e82e-47ef-aa45-e9e56329904f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd9947f-9c4d-4c53-89dc-6112b2b7a400",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e2dc91-e3ce-454b-85ea-d471a27d5a4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef6b7e05-1ee4-4507-8c7e-75ea081c6bd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88cc4a2-de8d-4b52-9811-f40922b0b211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ff0fde-7cd5-4e28-bbb9-bdcda0a98fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc40363-a5f4-4838-b9bd-7faa6eff234e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beceaece-da6e-4097-b229-f705141b16d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f51590fb-55cc-4802-979e-c7a91a6c69a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a97e19d-2dfb-4c9f-a467-24ca7c05faf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00cf3c9d-f0bc-4617-aac1-a2f99f2bbe1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7b7d15-cdca-41c2-af80-c0cb0dabb224",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe4be0c-9637-46e0-8f90-b3049d343d8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6439722-4cf0-4f1d-a3f6-c054d4cb3e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0993cb70-eb99-459d-9787-7fddcbf3a66d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d71a384-d0ef-4aac-87c1-57d7761be6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df451be-f7ce-4b90-a687-b8d8c5b19c2d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b2c0a7-2d34-4492-9707-50814aca73a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "578232c1-bcd4-496a-850e-154c1782a336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104a5b2c-8049-46d3-ada9-79a84741b019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f58f92-4cd6-4c09-b683-584c9eb660f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a6d420-23c3-4ed8-be29-cf2cf7efae5b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e145f9-1698-4e8b-9d19-d062cc86440b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c5efc92-7019-4960-82ce-536c7115e0ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9498bb-2c62-416b-b4b9-b5488dd93a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c550f4-4ef4-4ffd-894f-a3b15afd7bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb12ff7f-422d-450e-b4a9-a2e1b6388e9f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01e8c33-1296-4a09-8897-551df9e22983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9244e477-594d-4063-ade7-55b0ba010b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5510cea6-9aba-48aa-9eb2-2114844ac21a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8365c799-18fa-4eb9-bffa-d99e53c2783b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8870a8-5d53-46fa-92e5-aff72fa53727",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a9da05-fcf7-4977-9a35-72823b316bc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4787748-2ec3-489f-a119-6b48b4ef9128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af850037-213a-49a0-9d13-2dc7e2a0e931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87d37cb-448e-4784-baf5-f9ebecf69945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14dd518-4f2a-41c5-8223-d447e77ac07e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d59198-6b23-4faf-b2ba-e45009b6d455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0519e99-0d22-4526-9793-7bce7975f2f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7196db-5e4e-4fac-a45f-6d3df5465444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644494b0-96e3-4e70-acf0-6aa0adade278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e1cce7-aa57-441c-b8f8-aa70ecf1ef41",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373f29ed-27aa-443d-9070-3d797e161e85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "699068b3-8a2d-40c7-a189-2e3252d30788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b2e909-e56e-40f1-9bc9-9e39721bf2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee0a144-d818-4021-8bc9-730066f38b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d21572e-484d-4129-81d7-66a0dd1f37ce",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630eb4a5-86bb-40cb-9165-0cdd17d84b3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "496bd660-67bc-476e-895c-884e0ac20c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d38075a-c1b8-45cb-ac94-c8c2d5c974fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35722f04-f8e0-484b-97b9-1dd2ccc5f972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa77ab4f-8065-4112-b076-0f0f6d83309c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d51b90-c506-48b0-9bfa-07562c37813d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4ac3349-b280-49c2-a131-cd41f17a15dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b396e23e-ca51-42c4-8486-153d19861c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d80e9d6-a181-430b-874c-04c99fbc9ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967e9e92-11c1-427d-b5ca-14fd618d64f3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66858b6a-fc47-492f-9c81-267046db38f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82e4405f-ac8d-47fb-97e5-69ca676f9e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eaa8985-3532-449c-a016-12d1f51b3ef7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18fe66f-49bf-493d-baa6-d5b39eaeda79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b4a796-1419-4412-88be-9b142daa25cc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243fae2b-f025-4530-8dca-2b4abb5a9672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5def3c95-74a0-48ab-82bc-09eb344380c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c57aed8-3cf0-4108-b708-71820e749efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cad322d-363d-4588-acfc-33f99ad97ebc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8791893-562e-4fdd-bb89-ca000692f026",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "475a133d-bdfa-492a-9fb6-f58406749b30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65d5df72-fdc8-4c6e-8540-9cc7a857d5ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5fb6bc87-b537-4e97-8570-80b3a5c0dfbb"
                    }
                  }
                ]
              },
              {
                "id": "1f2414b2-f172-4151-a342-570551b77e8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5186bc6d-f939-4c8a-a268-4a1b7c4dcdbc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d4a932-2eb5-4775-a080-828bcf6241b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cc4fa64a-1572-494f-98a8-a01e8e3d54e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23511345-a9d1-46c4-944b-24bff037c291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ce4cbb5-f545-4314-b32e-1ff3d77255a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c071fa-6232-4d2b-8ffc-186dfbfab784",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c233c3cf-3473-41fc-bfdc-caf0e7ef778f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8cc808b9-5e07-4abc-a6c7-0168cb776226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e601fd-f0f3-4066-8729-66fe1723d120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cae223f1-f7aa-400f-ae92-1e58d180dc1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ed8b0e1-964a-4198-97cd-15905b0b5746",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c41cf467-eebb-4d13-b5da-7b898adf4194"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "731d8ab4-7e3e-4d9b-ac3c-cc969a7c0e9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "329d943d-ad8e-466b-a12d-5de72c72d3cf"
                    }
                  }
                ]
              },
              {
                "id": "232c2265-c122-4460-aa9f-6bf766d1523b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "18325a50-4394-4ed7-9f5a-45da67607133",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bd2d90-8349-43cf-a2b0-290592883401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6128ec1a-514e-4e45-92a4-cad4c3c25cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6677c111-cfa5-4d22-addd-0ad46a47152c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0ee47a-9071-45c4-aec7-2cbdfd9667a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "75821d53-7461-4424-9b16-825b71ec17f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "058320da-35bb-4c55-a151-df3b492611c1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "603eef00-5be7-4bc5-adbc-800efa8a5239",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "30b505e7-89a7-45d5-886b-de2bfa7dfa1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cce59f60-0c49-468d-8d07-a376b594a9e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f8057c8-e31c-4be2-8063-e8e6bae01ff8"
                    }
                  }
                ]
              },
              {
                "id": "0bb0946a-2ded-41fd-993c-8b3b98ba0cb1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e86038e-d58b-4836-a482-54c0d84f498f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "459c7d13-80ab-4e1b-9e9f-f9052d0a573e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b43c989f-baa2-4ef6-a8b4-a87e4f9e14df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a58a9edf-e5dd-4891-82ec-6e770c0f393f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b49936df-b340-4e2a-8554-d435cea66bfa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4c1b2680-5d78-4f89-9860-2940c831697f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3044cce9-f0f6-4ef1-89c0-e6acad9735be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96cbe060-74ef-4984-962e-a768192994db"
            }
          }
        ]
      },
      {
        "id": "80922433-0a03-4efb-92cf-f43c7cde3026",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dfc36a6b-038b-4ce7-bff3-648ea25c247f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76784b0f-fc87-4e3e-8a8e-fa8422110c56",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc06fc2b-873c-472d-bfd1-2f04e92f0737",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2525b5aa-b425-482c-9bcf-1d3a894b609a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "78da9ead-5706-4e04-86ff-7cd9e2666ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbb0daa-c602-4493-87df-d99ca97c0e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3da471d-9fee-401d-af00-0d14e9c509a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0484d85e-141b-4226-b447-5919758e0b8a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103c8fd5-bd5d-4802-8bcd-8784f4234f8e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2c624a49-2bf9-42ab-8ed3-08d3c02d0462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f88f11c-f0e6-46ed-ad5b-c9236a75ce9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80182abd-dff3-4745-aa1a-4a7c9942629e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "288931de-2a9c-4064-b9b9-e52f98915097",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d387c7a-29bb-4f39-b652-5be11c62df01"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "245ed002-aabc-4a0b-8dda-6cfdfcb2d048",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41771a63-13db-4137-ad21-19d5c33bb1d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84f83b66-c87f-4eab-942c-727edf7703d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "37171c8c-8358-4c8b-a266-94e70c77af48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "540574d3-d7c2-47bf-bb54-dcc40fbb8936",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9868f195-5482-4b87-8336-28f999eae227"
            }
          }
        ]
      },
      {
        "id": "5a414b0a-ef03-41db-99d7-d1cd78528643",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "babfd05f-7684-4dc9-9304-d8bdd596efa4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b600d25a-6b6f-494e-9203-9e4674510926",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b911cbeb-9873-4318-880b-ccd6f98484d7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78dd39aa-ed0c-40f4-bdd5-cd03c9e2bf94",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a79ba91a-5f3e-4d26-af25-9b9ce4262fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd310ef-b046-4488-851b-f46af88e2eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3518fce6-6a6f-4351-a5a7-4725f956747f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a8afa9-b4c4-4f83-b604-5ec372b9acaf",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364dc126-2eb8-407b-a4dc-8b5fa1934918",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6d7ec0-f1ee-4d89-89d3-28bddcffccf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b36a9b-794a-448a-a7d3-7339b6d35742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea6c6924-ab21-473b-868e-1794900cee52"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bc2b2e3-7509-4e5d-a30e-2874e045f338",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29a1a61c-ffba-42a5-8ca3-7cf2dee1eb4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58756bdc-73f6-4b20-8d0f-43e537e8468a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a767169-c3e0-4023-97f9-3bac3a9cde96"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07149b46-518c-47c2-a98b-b481eafa13b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b24e69f1-9ac1-4cc5-83e7-204e2b32b58b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2573be00-812f-4c9e-9021-4d36fa1cf981",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cfceff35-4c08-494e-9818-8ce93094122e"
            }
          }
        ]
      },
      {
        "id": "c73aa301-6322-4350-902a-bdc63b672d94",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "57353537-04aa-430f-bc89-17295001e79f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f807cf0e-442a-4b38-b0aa-476e460cae1c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ca72193-23cb-4e3e-b666-35bd46403829",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28c7f96-3462-4504-976d-384a0b84fcd8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b7faead-dfb8-4029-895b-415db8be3de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b90847-5d03-46ff-9bcc-ae27f2f2252a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e82500e2-01c0-4f1f-b26d-fd53321c70cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa86dc29-2424-4643-9108-7c53486be126",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee885ae-6377-4225-ad3c-36e74518e55c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b5b651-1ada-439c-86d1-306155483012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fd684d-7c23-40d6-bbde-9f321df37dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "363ce020-b8fb-40af-9707-3ce5751146a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60ef0462-45b8-4357-90b8-1a177d3d428d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9351f65f-680c-4b46-b440-2cc9d12046f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0641b3f1-e75c-43e7-a7a5-ed4a3c612023",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc713d9e-5166-427e-85ae-592ed834b7f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c18413c-a37a-4a7f-9c59-acec08863709",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3442ff8d-03d6-4789-a6b9-6b5c854f396c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2382111a-3417-4543-913e-d09701457fe5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e898e7b8-9552-420a-a0ee-e8020b3bec71"
            }
          }
        ]
      },
      {
        "id": "e7b656c9-60f2-449f-a8d7-4c95e59cf25e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08ab9e94-f5bc-40bd-923b-6b9a80d41b8f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c92edae-a720-45a9-bfb9-70458abd3e72",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c78ac2f7-3e7c-44f9-b68e-80acc2be091d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a532bf8-01c1-4614-90e5-8866e6572c8c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e8f1e38-d213-43a4-9070-170c42ef69f3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 44.07307692307692,
      "responseMin": 15,
      "responseMax": 506,
      "responseSd": 51.65840506257877,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684111082374,
      "completed": 1684111107015
    },
    "executions": [
      {
        "id": "dc69e6a8-25cd-46f6-a85e-86a1aa7138c0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7662e3a7-36c4-4f35-9aa8-62e914d900ab",
          "httpRequestId": "d8b93e87-48d3-4362-968d-d930c0b67903"
        },
        "item": {
          "id": "dc69e6a8-25cd-46f6-a85e-86a1aa7138c0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f031e136-644a-4b1b-a78e-2e9f87e137ab",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 0
        }
      },
      {
        "id": "8c4dc182-07c2-4f02-89e8-a1169f583f66",
        "cursor": {
          "ref": "d0337e6b-1bf2-4bd8-8fbc-8b271d4d15df",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "59ccd9aa-1598-431f-ac3a-1c1f5a7a97d0"
        },
        "item": {
          "id": "8c4dc182-07c2-4f02-89e8-a1169f583f66",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c68ab916-2863-4e33-9ce0-07ad4b538b64",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "ef7ee0e0-af10-479d-8015-9b9125f8e01b",
        "cursor": {
          "ref": "1865ac15-1980-47ef-8a43-a54355189e21",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "48844021-8e6e-4066-9ab0-1c03554c4273"
        },
        "item": {
          "id": "ef7ee0e0-af10-479d-8015-9b9125f8e01b",
          "name": "did_json"
        },
        "response": {
          "id": "c056a930-c842-459c-8b82-95afbbbaa5bf",
          "status": "OK",
          "code": 200,
          "responseTime": 134,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2209765e-657d-4332-af5e-4b60afa9ea10",
        "cursor": {
          "ref": "4f01c122-9696-47a4-91c7-bfcd47f0f85e",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d4f4e1de-5dcc-4cbd-92f9-39cc8d7c1007"
        },
        "item": {
          "id": "2209765e-657d-4332-af5e-4b60afa9ea10",
          "name": "did:invalid"
        },
        "response": {
          "id": "0b0bc9ca-84b6-4148-bdb8-75e6632ebe9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2209765e-657d-4332-af5e-4b60afa9ea10",
        "cursor": {
          "ref": "4f01c122-9696-47a4-91c7-bfcd47f0f85e",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d4f4e1de-5dcc-4cbd-92f9-39cc8d7c1007"
        },
        "item": {
          "id": "2209765e-657d-4332-af5e-4b60afa9ea10",
          "name": "did:invalid"
        },
        "response": {
          "id": "0b0bc9ca-84b6-4148-bdb8-75e6632ebe9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d765337-4e29-48c0-b6dd-f79ec103e92a",
        "cursor": {
          "ref": "88935445-36f5-4f42-b378-75468235cdb5",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "05977f52-4b8d-4bd8-9564-0d3c6024878b"
        },
        "item": {
          "id": "7d765337-4e29-48c0-b6dd-f79ec103e92a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6d17bc8d-5cfd-4e00-b635-886d737cba49",
          "status": "Not Found",
          "code": 404,
          "responseTime": 130,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da86dc7-742c-4cc5-99a9-83f0d954cb44",
        "cursor": {
          "ref": "76c6142c-77b0-4327-8d6e-98d6179212fd",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6e6100d0-4eb1-4508-a884-6760da330823"
        },
        "item": {
          "id": "4da86dc7-742c-4cc5-99a9-83f0d954cb44",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "df18687a-9dc3-44e7-a7de-3e689b1e3eae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547ff94c-7be5-473a-8d44-55996d921cc5",
        "cursor": {
          "ref": "87c37918-ccf0-4107-83bf-b48323bbfb09",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f82bea9e-b4d2-410a-95ea-55e2386645d6"
        },
        "item": {
          "id": "547ff94c-7be5-473a-8d44-55996d921cc5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8d5491e6-fca2-4336-bef7-a72111a629c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0c4b19-8adc-4700-a1a2-1c24e00954a7",
        "cursor": {
          "ref": "b7abb72b-7779-4e02-9cc1-8f2087bda713",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8d9681e5-3319-4da2-99c4-165414f16a8b"
        },
        "item": {
          "id": "df0c4b19-8adc-4700-a1a2-1c24e00954a7",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2c2c6642-b374-4f7a-86d0-b10c7c8d7f6f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0c4b19-8adc-4700-a1a2-1c24e00954a7",
        "cursor": {
          "ref": "b7abb72b-7779-4e02-9cc1-8f2087bda713",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8d9681e5-3319-4da2-99c4-165414f16a8b"
        },
        "item": {
          "id": "df0c4b19-8adc-4700-a1a2-1c24e00954a7",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2c2c6642-b374-4f7a-86d0-b10c7c8d7f6f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e78c9cd-8a31-44b1-af9d-70346f4d220e",
        "cursor": {
          "ref": "6215104c-8f29-4051-adff-fbe2b862c1bb",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "57bc2caf-844e-4bb0-af44-34d75d83b43d"
        },
        "item": {
          "id": "1e78c9cd-8a31-44b1-af9d-70346f4d220e",
          "name": "identifiers"
        },
        "response": {
          "id": "07e87eda-babb-4e90-a79c-115bfd71dc28",
          "status": "OK",
          "code": 200,
          "responseTime": 179,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ea631a-dacf-4a61-bc4b-b167a517d306",
        "cursor": {
          "ref": "4e25011b-61de-418d-b64f-b5a4a6c254a2",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4bef4001-84bd-4612-9b58-08efbd0df59d"
        },
        "item": {
          "id": "27ea631a-dacf-4a61-bc4b-b167a517d306",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d315ff27-bf68-4215-9e06-3fea6006d82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ea631a-dacf-4a61-bc4b-b167a517d306",
        "cursor": {
          "ref": "4e25011b-61de-418d-b64f-b5a4a6c254a2",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4bef4001-84bd-4612-9b58-08efbd0df59d"
        },
        "item": {
          "id": "27ea631a-dacf-4a61-bc4b-b167a517d306",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d315ff27-bf68-4215-9e06-3fea6006d82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f96b14-a9f2-4fd8-a87c-f89d18fcafc4",
        "cursor": {
          "ref": "c4803ab3-438d-4ccd-8cf5-c3a9fc9cf6b1",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c75a7c97-7cb5-4576-8ea1-35ab91a446a4"
        },
        "item": {
          "id": "a5f96b14-a9f2-4fd8-a87c-f89d18fcafc4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8b2bef47-b409-4cf5-8786-d28008621e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060f6d76-cadb-41a2-a6ce-0100d2ab9ba9",
        "cursor": {
          "ref": "47795826-b0ae-4f95-a06d-3919eff2aa70",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0a316514-9626-4b3a-82d8-29afd1a5f2c2"
        },
        "item": {
          "id": "060f6d76-cadb-41a2-a6ce-0100d2ab9ba9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4731c74c-2bcd-4b51-8bc7-4f2fe2bae951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed1b3d0-49a4-4759-8e29-c5a8cf733540",
        "cursor": {
          "ref": "60f063c7-cc90-4a56-972c-a7531562d446",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cc686bb0-f75e-4e11-bd3c-225514248422"
        },
        "item": {
          "id": "7ed1b3d0-49a4-4759-8e29-c5a8cf733540",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "61d1b57f-af90-404a-af8e-fe4588376002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c23908-329b-4d01-b6ca-e94cbb8da571",
        "cursor": {
          "ref": "a8ff51d4-eee8-47b9-b486-c082095093c0",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3b92cf8a-7a32-4ed6-b7cc-c2c75d32ee70"
        },
        "item": {
          "id": "89c23908-329b-4d01-b6ca-e94cbb8da571",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "57cadf25-6def-4e67-aa0c-c2af93428921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34b9562-a380-4fc1-9bf4-212f10f502a0",
        "cursor": {
          "ref": "09ed541f-fa74-4983-8ae6-ca95ad8950ad",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1956d842-dd74-4a80-998a-edabe18ed7fd"
        },
        "item": {
          "id": "c34b9562-a380-4fc1-9bf4-212f10f502a0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "efa38b1c-6454-4119-a028-00808fd84271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70da18de-9e80-42ca-8454-7d1ea4b63c60",
        "cursor": {
          "ref": "695c8496-b415-4109-a38b-4cc3166135b5",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7f2cfc6f-1f4b-4776-9302-7696a84022f1"
        },
        "item": {
          "id": "70da18de-9e80-42ca-8454-7d1ea4b63c60",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "92cd0f46-cf5c-4cc8-8541-510f5454495f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36caf29c-eb93-49ad-b55b-e9c4f60d9ec3",
        "cursor": {
          "ref": "369e0e66-5668-4e5c-a695-2968393f5d0a",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "542d0777-ae6e-4ee2-ad4d-03bdfca2b58c"
        },
        "item": {
          "id": "36caf29c-eb93-49ad-b55b-e9c4f60d9ec3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "da48a583-8330-4100-8972-90d0d6948d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa00f1c3-ab9e-4ae6-b600-2f1debc9ca1d",
        "cursor": {
          "ref": "e7b51c4d-a688-467b-92f5-a94c0f34d351",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f55ccdde-4603-45e1-aa2b-02ec640e0207"
        },
        "item": {
          "id": "aa00f1c3-ab9e-4ae6-b600-2f1debc9ca1d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f9919a33-5b31-465c-9730-cc6516030681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6f8afb-4762-4c7a-8b2a-a514dd69339b",
        "cursor": {
          "ref": "fb971502-26a8-49bd-bd14-84f787e21cea",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b9ead634-3f06-43f4-b4d5-3938163a9344"
        },
        "item": {
          "id": "8e6f8afb-4762-4c7a-8b2a-a514dd69339b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "042704d2-f7f7-4399-8744-078d5a475474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404b8ec6-c20a-4de7-b764-5be3672d3346",
        "cursor": {
          "ref": "77a4e592-0798-4ed9-9095-a8866efd1d00",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "28d7d9c0-7a6c-40b8-a4f9-e9f7a1b4a7f5"
        },
        "item": {
          "id": "404b8ec6-c20a-4de7-b764-5be3672d3346",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "803b3e11-b392-4ba8-bde3-c6b59ee5512d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cc47ac-21f8-42e1-866f-1dda112e6228",
        "cursor": {
          "ref": "313e3752-329a-45a4-ac62-9227d67e159c",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5de8bf71-2ef1-413a-a311-9b52bf5ec9b5"
        },
        "item": {
          "id": "42cc47ac-21f8-42e1-866f-1dda112e6228",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9f090747-f6ef-42c9-b734-a0710b378cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dee98e1-3dec-4ee2-81c4-2d80cde8f098",
        "cursor": {
          "ref": "5f1c5914-d68a-403d-a7d9-3aa19e1e8d98",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "79ea00c8-0f94-4548-9c26-3a461fa434dd"
        },
        "item": {
          "id": "1dee98e1-3dec-4ee2-81c4-2d80cde8f098",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b3ae45e7-0154-476b-80d9-3c344f11e882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836163c4-dcd5-4f68-b5f0-f97ede21135b",
        "cursor": {
          "ref": "cdb492fc-f907-4bf2-bb3a-1f987b01922e",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6f2f200b-d052-4e59-979e-6ca2228b5a18"
        },
        "item": {
          "id": "836163c4-dcd5-4f68-b5f0-f97ede21135b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "05a82a97-68c1-4329-b851-c6ab61d938de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da647a2-d69c-4583-86a5-ffd984c23721",
        "cursor": {
          "ref": "34c6476f-dd3e-492c-96dc-6ba98d57efa9",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ca580422-adcf-4cb6-804a-11b0f3e32d6b"
        },
        "item": {
          "id": "7da647a2-d69c-4583-86a5-ffd984c23721",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "73217c21-14a5-4bde-a8ff-4d2ef9a08d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c97ce92-8206-42cd-8e8f-f9cc7f01e5b2",
        "cursor": {
          "ref": "f90b7956-dc28-4659-91bf-f765ba118631",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4dff4779-9bf7-41c9-894a-835f53e60204"
        },
        "item": {
          "id": "6c97ce92-8206-42cd-8e8f-f9cc7f01e5b2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "41f237f1-c98d-4bf8-a7c3-e48f1a8ea858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ac2bdf-277d-4f54-8622-1076f290b249",
        "cursor": {
          "ref": "00fe9ca8-20bd-403f-b0bc-841d863b84c7",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "de3f6281-8af9-443b-99b6-ce0230d7262d"
        },
        "item": {
          "id": "a4ac2bdf-277d-4f54-8622-1076f290b249",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a8a48b26-011f-4f4b-8f9f-226a0ee3ebd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4767c081-15ed-478c-bbdb-7bc7fb31eb16",
        "cursor": {
          "ref": "c6da91ed-69ef-4318-9412-1885900edd70",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ecf25ce3-ba48-438d-8834-9b10d409b1f0"
        },
        "item": {
          "id": "4767c081-15ed-478c-bbdb-7bc7fb31eb16",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3598358f-c0d1-4fa0-8104-4da5719e6e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62fa401-a17a-4b3b-8302-44758e060f6b",
        "cursor": {
          "ref": "a47960c8-fb1d-4f6d-bb39-bda7af29f66b",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c8ddf640-8acb-48a3-af51-185dfcfd16e7"
        },
        "item": {
          "id": "c62fa401-a17a-4b3b-8302-44758e060f6b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a1a42f39-aa71-4a99-adff-d0f9e43f2e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371e3291-d8a3-4cf4-9be1-764cdcd58728",
        "cursor": {
          "ref": "9298bcd9-8258-4e8d-aca9-32bee8820d34",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "21dbb350-c3b9-4107-89d8-44bd1f5da97f"
        },
        "item": {
          "id": "371e3291-d8a3-4cf4-9be1-764cdcd58728",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8598d686-d9d1-4c7e-b865-6c36ddd1dd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea56aa7-68b2-4c0b-9967-5380a5d67313",
        "cursor": {
          "ref": "7b818511-3c1d-4f0b-a440-0446e0025d6e",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8b5aec28-d726-4de0-bc76-78ffcbec8777"
        },
        "item": {
          "id": "bea56aa7-68b2-4c0b-9967-5380a5d67313",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c9a61878-31a7-444f-a958-92166ad27bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e79c57-a56f-4847-acf7-2b66a6c87f70",
        "cursor": {
          "ref": "2567224e-6b56-4c94-8993-d32089bd0414",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0f5ea39d-42f7-4222-bc5f-e9ec3e0afebf"
        },
        "item": {
          "id": "55e79c57-a56f-4847-acf7-2b66a6c87f70",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "761c37db-5804-4cb7-b0cd-95f447675720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cfebf5-bf81-41ac-958a-72f687d2d253",
        "cursor": {
          "ref": "c1a387ef-4c52-407a-a4cc-ad4b230ee9ed",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5c9f78af-482f-4332-ba70-973b7a4079a2"
        },
        "item": {
          "id": "c4cfebf5-bf81-41ac-958a-72f687d2d253",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "64f34ac0-a651-4cd3-b7a8-f8435399464e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3d528c-c469-4454-a3db-5821d7b16d30",
        "cursor": {
          "ref": "57626316-5ff0-4078-a0f0-8b91cd49c223",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2d2901d9-f559-4eca-b65d-bd75112c60f7"
        },
        "item": {
          "id": "2b3d528c-c469-4454-a3db-5821d7b16d30",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "730f2eb2-27e2-47f8-b193-3fcbbcfddcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2051d06f-dafa-4296-bfb2-ac0705511496",
        "cursor": {
          "ref": "57654c83-7f68-4b65-9e01-165fbeb7a313",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1c9a4684-8973-4afd-9c2b-2c4eb051c485"
        },
        "item": {
          "id": "2051d06f-dafa-4296-bfb2-ac0705511496",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "affc38a6-4de6-4386-a3aa-c1a27d482b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce33a0b-8560-4136-ae17-57520fad0f1b",
        "cursor": {
          "ref": "b5384458-7e46-4b61-8ce3-fbad09f07ef0",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cb7246d8-aedc-41b6-bbeb-f2c080cdec8a"
        },
        "item": {
          "id": "fce33a0b-8560-4136-ae17-57520fad0f1b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f1a7c0bc-22b5-4db3-88e1-b72775f252aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc15908-ea77-4dea-ac89-777b35c8d75e",
        "cursor": {
          "ref": "8216cf32-7f78-409a-8ad3-899f95fa8016",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "18d4b0cb-790c-4d54-862a-bf670b199ef8"
        },
        "item": {
          "id": "2cc15908-ea77-4dea-ac89-777b35c8d75e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7f4c59c2-db70-45fe-804e-a1975cd9f269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebe6f5e-14b4-40a5-84c3-2c5a38b20ba9",
        "cursor": {
          "ref": "0f3a6f00-a5c8-479e-805d-1f04d8940d5f",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9201a842-af34-491a-8e71-574c9cb3c92b"
        },
        "item": {
          "id": "7ebe6f5e-14b4-40a5-84c3-2c5a38b20ba9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4439a670-8fdf-4ea0-a4ec-b2bb03e9779c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7d735e-2d7b-4f47-b282-98f0cae54e85",
        "cursor": {
          "ref": "292cbb0a-4a21-46e3-92f1-9cb093dbe208",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2296cc47-488a-4b55-b940-9e915d1c4a71"
        },
        "item": {
          "id": "8d7d735e-2d7b-4f47-b282-98f0cae54e85",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ec174b86-d8e7-4ed6-9e6a-674010991151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19952bf8-2501-4d0e-8440-8b72e1d99338",
        "cursor": {
          "ref": "fe0e1664-b35c-4e3b-894d-159053e8c734",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fa70d7e7-d625-4853-9b0d-fcb4cbf05cc6"
        },
        "item": {
          "id": "19952bf8-2501-4d0e-8440-8b72e1d99338",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "eb236c65-8be5-4ade-92ab-99288df31810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784096b4-15b1-447d-a8be-29cb78c559c0",
        "cursor": {
          "ref": "2218b805-f556-4e9a-9c41-47974325dd64",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6563f882-9481-4dc1-90ce-eda668606778"
        },
        "item": {
          "id": "784096b4-15b1-447d-a8be-29cb78c559c0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "25f99ae7-c25d-47b6-844d-da45eee6a151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c507cbc-3a4b-408c-abb3-a37a6fd21250",
        "cursor": {
          "ref": "8d0843c0-06a6-4c73-b8a1-4f9da537e883",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1bb29bf0-5d0f-465a-977b-898add7a836c"
        },
        "item": {
          "id": "0c507cbc-3a4b-408c-abb3-a37a6fd21250",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cd07b87d-f101-4038-932b-9e0ee8378097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1d377b-5d4f-451a-ae5f-0fcfda087696",
        "cursor": {
          "ref": "f5cdfdde-913a-46c7-a507-f53f8b638349",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bc959684-fe6f-4672-9443-6677ec9ab045"
        },
        "item": {
          "id": "fa1d377b-5d4f-451a-ae5f-0fcfda087696",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "739a1b59-671a-4804-95d9-a57f30c20725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f5528f-e313-4ec7-b2e9-83e5f2d66693",
        "cursor": {
          "ref": "50b10eee-88a2-43ee-a734-532c33fd5007",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "082cbce4-dfcb-4361-9782-d8a0b42ccc8f"
        },
        "item": {
          "id": "38f5528f-e313-4ec7-b2e9-83e5f2d66693",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c138a28c-9e84-457f-86ac-d01bfb20832a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88de4761-7e39-4e37-af4e-87b4c872c405",
        "cursor": {
          "ref": "d611e1b7-815c-4102-8176-d9d93c29b527",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "87ee6fa0-be3f-4232-ba00-2329b8e2c3e2"
        },
        "item": {
          "id": "88de4761-7e39-4e37-af4e-87b4c872c405",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "47230324-b64e-440a-8d78-9b4394378bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a9f4e1-4644-4ce5-b4ee-32c83d99eb9f",
        "cursor": {
          "ref": "7b4ab17e-629a-4a2a-9336-981d2b17a0ed",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4a573cb9-6e32-42cd-ba80-b6762c4b6349"
        },
        "item": {
          "id": "36a9f4e1-4644-4ce5-b4ee-32c83d99eb9f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "742d0284-74f6-4a50-86d9-f6b4ede902e9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 44,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d9f699-96a9-4583-a844-def2658fe9d3",
        "cursor": {
          "ref": "9d433f7d-8189-4a99-b07d-32c9897e20f1",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "540c21f9-ca65-406e-ba5f-a6662637fe9a"
        },
        "item": {
          "id": "67d9f699-96a9-4583-a844-def2658fe9d3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "17639c74-353b-4327-be4d-641aeebaa691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628c7e9e-5d97-4cd0-852a-c58a28e2d7cd",
        "cursor": {
          "ref": "07f72e10-8f26-4e82-a013-250493ff0adb",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "570593af-2169-4534-9d39-9382b83b3ae9"
        },
        "item": {
          "id": "628c7e9e-5d97-4cd0-852a-c58a28e2d7cd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9715ec53-f109-4d89-9fec-0504b68054d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d8de45-86ea-4e42-aafa-7be263634a3f",
        "cursor": {
          "ref": "50acdfd3-737c-40d1-ba72-6962f522eac4",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "38f7be17-72b6-4ba2-ac31-39e94a523d67"
        },
        "item": {
          "id": "93d8de45-86ea-4e42-aafa-7be263634a3f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "86bcffa4-fa24-44be-aba3-fc5bc426642a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4466ec-235c-43cb-b7bb-17e1fbfb5b1e",
        "cursor": {
          "ref": "bb20f379-fc2a-41b0-93ea-0674148fdbfa",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dfe836af-7df4-4e81-9fd2-55f7909ae63c"
        },
        "item": {
          "id": "0b4466ec-235c-43cb-b7bb-17e1fbfb5b1e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3954a6da-d03e-46ae-9179-a061a7092ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d43c78-55e1-4703-baf6-72ef54a11637",
        "cursor": {
          "ref": "c91a9129-bc98-4cf4-abb2-f23b95793078",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a5c87b4d-69d8-471c-8a3d-1cdb00e46e1b"
        },
        "item": {
          "id": "83d43c78-55e1-4703-baf6-72ef54a11637",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e66ca143-b355-4b6c-92c0-9d05cfd8a859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e171ff-facd-4532-a7c2-f569abc66e9c",
        "cursor": {
          "ref": "a8a2037c-4091-4ff3-9c14-f2107da201a3",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b6e79f73-bea4-4057-a8f0-7d606e67589d"
        },
        "item": {
          "id": "28e171ff-facd-4532-a7c2-f569abc66e9c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b5c77b25-a58b-40b9-9fab-ce532669f616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a0c658-b3e0-46f0-8e0e-2300e15f682c",
        "cursor": {
          "ref": "46f01029-7051-4e7d-a3a0-9f0f5486a1ef",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "68e10695-57b9-4419-b84c-77a158b060ff"
        },
        "item": {
          "id": "49a0c658-b3e0-46f0-8e0e-2300e15f682c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e684add7-bf4b-481d-8815-0744f9484e61",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b41f76-198e-48ad-9faf-40ae64f6c00f",
        "cursor": {
          "ref": "dfde4697-efa4-4292-aa8c-a0e2cb379b8e",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ce72a909-8da0-4e20-a828-e722dd0820c4"
        },
        "item": {
          "id": "a4b41f76-198e-48ad-9faf-40ae64f6c00f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "82a517e9-cf7d-416e-a253-fb9a342eaa3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71c2b8d-4b58-4029-8760-a88a67b576a7",
        "cursor": {
          "ref": "33130f8e-cfc2-4a78-bf20-27d575bb2ad5",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f367a678-7337-472d-8bee-2abbc70e7235"
        },
        "item": {
          "id": "a71c2b8d-4b58-4029-8760-a88a67b576a7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "477e6d91-aa55-4dc9-894b-2ad8a038ba61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ae4cd5-5e27-4db5-ba6e-20f960a61dd6",
        "cursor": {
          "ref": "f057be4e-5030-4642-ad7d-895330c230f4",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0f9725db-ccdd-4fc4-b5e8-1900c6009e0a"
        },
        "item": {
          "id": "b6ae4cd5-5e27-4db5-ba6e-20f960a61dd6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d7b339cd-74de-423e-aca5-df8e1425940d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f538c691-7abf-4195-b41a-2744e85bc1e0",
        "cursor": {
          "ref": "5514a8ed-d47a-46c9-8be4-936f85da4a9a",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f8cab635-c32d-4c4d-bdf4-988cc5d856b6"
        },
        "item": {
          "id": "f538c691-7abf-4195-b41a-2744e85bc1e0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a0d57578-a9ae-4816-91b4-cb9f826f84c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17acb44a-a6ea-4e91-bfba-f9cf05e605b5",
        "cursor": {
          "ref": "94eeef1c-0113-40b9-a0ba-c6193a8c29fc",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "31897112-cb05-499a-95ff-e660512a31d2"
        },
        "item": {
          "id": "17acb44a-a6ea-4e91-bfba-f9cf05e605b5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8f74ac17-7349-4da8-9d36-88b3029a4c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbc0c40-c014-4f8d-b469-ff33591ecb41",
        "cursor": {
          "ref": "d53cf3a4-90a6-44e4-a68c-af0330e2746e",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "db0762aa-59c8-429c-b1b9-9a1ffa6a43ff"
        },
        "item": {
          "id": "5cbc0c40-c014-4f8d-b469-ff33591ecb41",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "adf78800-726e-43d3-b650-b325ebcca2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc50f61-feba-4b4f-97ff-e3daf8f832cc",
        "cursor": {
          "ref": "a25d8823-eebb-49a8-888a-03908b13d779",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d7727add-e8cc-4cf1-b15e-ce21fd605a22"
        },
        "item": {
          "id": "8dc50f61-feba-4b4f-97ff-e3daf8f832cc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5cdb2854-c5a3-4afe-a17f-eca490d75ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcbd2cc-20ce-43d4-b4b4-bb6198491d0c",
        "cursor": {
          "ref": "008ddf45-f30e-4c45-94b0-de0f51f0f76c",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4a060cf9-c8ed-4871-8911-787720b2467b"
        },
        "item": {
          "id": "0fcbd2cc-20ce-43d4-b4b4-bb6198491d0c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "36b2e1fe-4098-4c10-959e-c0506a6d938f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bad712-9528-4693-b2a9-3acadf9667c3",
        "cursor": {
          "ref": "1cc2fa8a-e107-405f-90b9-746c5c616c8b",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "db5dc8ce-967e-45d6-a96b-230aef364c08"
        },
        "item": {
          "id": "69bad712-9528-4693-b2a9-3acadf9667c3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a2fe362a-77cf-4703-816e-6f8a3fccc1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce70e67-feda-4e6a-9cf8-e06ebedb6ec8",
        "cursor": {
          "ref": "b269dea1-2bce-4a43-9241-3d16f5a8f441",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b960907c-05d6-4a22-8ade-d6c957fdbd55"
        },
        "item": {
          "id": "cce70e67-feda-4e6a-9cf8-e06ebedb6ec8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "350b09ad-d469-4d9c-8071-8da22bbfa688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eebe31c-3c0b-4a3f-9e8a-a8197fa0fd98",
        "cursor": {
          "ref": "9d38bf84-1b1d-45d2-bb2d-e6d0bed3be94",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "52702a02-b69e-4d2a-9dbd-5a70c3b92e78"
        },
        "item": {
          "id": "1eebe31c-3c0b-4a3f-9e8a-a8197fa0fd98",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b051ed14-adc4-4b08-b007-9c1245d6ec47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85656e5-93f3-4dc9-b8b1-87ab29000e7e",
        "cursor": {
          "ref": "c7442a9c-8140-4fe2-936d-87693ad8f132",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5e682557-2873-425d-8ab8-aab3d7c62f05"
        },
        "item": {
          "id": "a85656e5-93f3-4dc9-b8b1-87ab29000e7e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f9839267-e0d7-48a4-83ab-823295cc6216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f7ddda-18b4-4514-b3bd-7a1ea77a15c4",
        "cursor": {
          "ref": "29347d27-e4ae-487d-85ea-fd5e974ef472",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d39e21fc-d582-44ff-93e7-060cc2ab7ef8"
        },
        "item": {
          "id": "46f7ddda-18b4-4514-b3bd-7a1ea77a15c4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "996f52e1-4bf7-47ea-9040-b0918be674cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba57784-a25f-4a0e-bba0-da1980500570",
        "cursor": {
          "ref": "72af2410-2cd3-4005-9ff5-8021b3e5dd25",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "23d86a34-fcd6-4884-bc30-057a3d9e3680"
        },
        "item": {
          "id": "eba57784-a25f-4a0e-bba0-da1980500570",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e2e98102-1f77-4f9b-828e-0bc6d61b21f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6aca90-9378-4068-abad-6ced9d26ee6b",
        "cursor": {
          "ref": "a4b6116b-aea4-4fe6-8f50-91157d8d4736",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "73a08ca5-7b7b-489f-adb9-6eb6d837eecd"
        },
        "item": {
          "id": "0c6aca90-9378-4068-abad-6ced9d26ee6b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c5c343bd-c1c3-4767-951a-c8bdf2f95db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a7223f-cf96-4348-98c0-e5e3cc69b861",
        "cursor": {
          "ref": "e05d0017-8425-4399-8911-e515bffd2580",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "57c259e0-6ab1-442d-b2a7-8b68e790adc6"
        },
        "item": {
          "id": "63a7223f-cf96-4348-98c0-e5e3cc69b861",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1375d337-a17c-41b3-b6cf-edba31a8fa6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3025876-18c1-4ee3-935e-3e8d587aa07c",
        "cursor": {
          "ref": "a000dcc7-8a6a-4eb7-9fd8-d8d8e65a1670",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "28320129-afee-4a04-9dca-20e38d7f7cee"
        },
        "item": {
          "id": "b3025876-18c1-4ee3-935e-3e8d587aa07c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "05792941-b216-4225-af79-0b08c90fd8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fe323b-54e8-47f2-bf11-7865c4e24b8f",
        "cursor": {
          "ref": "1281ccc6-0e92-4307-8acc-7f70d753199f",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6ace3c2d-2c19-49b6-b0ba-3efc74fe8d6c"
        },
        "item": {
          "id": "50fe323b-54e8-47f2-bf11-7865c4e24b8f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9c85d409-d162-4030-855b-8e3741066bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd76805-6300-452d-b8ad-973d324a8456",
        "cursor": {
          "ref": "1d7462cd-7b43-412a-8bf6-af5255c7fde2",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "643c1988-6d94-46bb-b1a2-af5d389ef0b5"
        },
        "item": {
          "id": "0fd76805-6300-452d-b8ad-973d324a8456",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0acb21c9-011d-4249-ba55-2abb54f544aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc04d2e-8c8d-426e-a054-5b2e97268591",
        "cursor": {
          "ref": "005899f5-d94d-499b-b865-4731564b757b",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e09d2d2c-1f15-42cd-8ecb-bdb075328e41"
        },
        "item": {
          "id": "4bc04d2e-8c8d-426e-a054-5b2e97268591",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5e213201-cb8e-41ef-ab47-1e594e583df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229c83f2-8a4e-4e90-a015-053933bc82c2",
        "cursor": {
          "ref": "10cdf13b-8bb1-4fb5-b99c-a46d64712c09",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8a2b50d7-b8ab-445c-a6f9-359583dcc11b"
        },
        "item": {
          "id": "229c83f2-8a4e-4e90-a015-053933bc82c2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9caa65af-e321-42c0-98ec-9c007a9ce8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee650839-24e2-4cb8-9be3-5333702f4d23",
        "cursor": {
          "ref": "075333e5-7df8-42c5-964e-a70b8ad76804",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4a53691a-a452-4920-9dc0-c67b5917765e"
        },
        "item": {
          "id": "ee650839-24e2-4cb8-9be3-5333702f4d23",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7e3529af-2436-4993-82f7-018eb72c64df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e05ebf-1356-46cb-9439-1b6e7b3b88bf",
        "cursor": {
          "ref": "c8f71a4e-d24b-4c75-8f58-3235153ca94c",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5e014890-f0a7-4fd6-a128-adfc13b70e9d"
        },
        "item": {
          "id": "77e05ebf-1356-46cb-9439-1b6e7b3b88bf",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "81fab742-8edb-44bf-9a7d-7fac0389f801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3cddbd-d1b6-4aa3-92d4-f3ba083a5544",
        "cursor": {
          "ref": "b37086a5-d330-46f8-9a1b-bd75ef750b1b",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b0eb7048-f025-4d3d-8a4c-ffc129d20cac"
        },
        "item": {
          "id": "9f3cddbd-d1b6-4aa3-92d4-f3ba083a5544",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8125bb22-e7d3-42f2-bc46-8173f705415d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0aee779-ecd5-462d-ba99-a15137b9dc84",
        "cursor": {
          "ref": "81b0521f-ac26-4726-8fb6-2e71cc2f3d47",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3fe794a2-fff7-4595-a044-09796c8c08f4"
        },
        "item": {
          "id": "b0aee779-ecd5-462d-ba99-a15137b9dc84",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3ed926e4-7a51-4324-bb7f-1b3b2246d1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b93ffb-38cc-4ea1-992d-4453704cd722",
        "cursor": {
          "ref": "14273f7c-f8cf-4299-98c5-56aac39c1855",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7178c4c6-229b-4895-9d7a-417cdbabb636"
        },
        "item": {
          "id": "65b93ffb-38cc-4ea1-992d-4453704cd722",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "334031bc-18e3-4a3e-8e4b-57e7a2378039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35aa265c-4546-4aca-a776-7c1caf2ce548",
        "cursor": {
          "ref": "c002c386-abb1-4e1a-84c5-75ed75b4bce0",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c475feb3-4ad5-46c0-bad2-70a27c17a148"
        },
        "item": {
          "id": "35aa265c-4546-4aca-a776-7c1caf2ce548",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9fc74006-5bef-4b3d-808a-1fbbba49f9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db727177-83ed-4691-b60a-a004782e9cc0",
        "cursor": {
          "ref": "27277cf2-cefe-4d00-8b51-44b7613493ec",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "729c5c55-dbc0-466b-8dd9-e65818109f31"
        },
        "item": {
          "id": "db727177-83ed-4691-b60a-a004782e9cc0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a7ea8a11-c5f3-45ce-8c48-c0e38c9a936a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd76e5d-e1e8-4d97-8dc2-d45257cad25a",
        "cursor": {
          "ref": "c610313f-fe8a-46bf-a2fb-d44686512fc9",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bc7690bc-f2e0-4926-928b-fc8936a91de8"
        },
        "item": {
          "id": "8dd76e5d-e1e8-4d97-8dc2-d45257cad25a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "45d3171a-f74c-42aa-b965-7fabd79542e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc63a1c-5c0b-4daa-a71e-644eb07081ce",
        "cursor": {
          "ref": "eeadc11c-debe-46f9-ba5f-0ca5f5d77b31",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d6c19976-1f7d-4251-8164-be65d3eefdf1"
        },
        "item": {
          "id": "2cc63a1c-5c0b-4daa-a71e-644eb07081ce",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d6a312e6-3f5a-4993-99b1-549d0f50b948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e023ee-931e-45bf-8568-5df7197740cb",
        "cursor": {
          "ref": "c7b9a632-1e55-4583-b50c-048bca8ad9bc",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8fc0d89f-8fab-4c03-971a-62e6a3eec03b"
        },
        "item": {
          "id": "f0e023ee-931e-45bf-8568-5df7197740cb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "707e5239-d80c-45da-a73b-3e076513e479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec47a0c-c0bf-4b46-a926-2f0aa4e1e3ee",
        "cursor": {
          "ref": "8cee0f45-616d-4170-bacc-8f57f50da548",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9047d989-a754-48d4-91c0-1172ba0a9566"
        },
        "item": {
          "id": "dec47a0c-c0bf-4b46-a926-2f0aa4e1e3ee",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f5f897c0-129f-47e2-aa86-f64f24e504c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d250d5ac-b3e1-4e0d-9ab6-5986ec326101",
        "cursor": {
          "ref": "5a20a5da-b5c7-43b7-b9c2-229a054b9316",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7f54e72b-cb64-462f-a1e3-fb2f0c05397d"
        },
        "item": {
          "id": "d250d5ac-b3e1-4e0d-9ab6-5986ec326101",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7677c8c2-9bd0-41ba-8a58-c6d9bf6d4787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b917e6-43f6-4b7d-9e5c-119add95456b",
        "cursor": {
          "ref": "7ea8764b-e9af-43b6-a902-52062aca664f",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c23b3ee1-e29d-473c-8d72-a97b2892e403"
        },
        "item": {
          "id": "51b917e6-43f6-4b7d-9e5c-119add95456b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "58526fec-1cab-46ff-b8e9-df4923a6415d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f73b49-fbae-4d7b-9a17-97ae7587d5db",
        "cursor": {
          "ref": "a4bb32dd-b04f-4f0d-a102-799f0df0b26e",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dead90a5-5af9-4264-9814-911f5db2fbb4"
        },
        "item": {
          "id": "14f73b49-fbae-4d7b-9a17-97ae7587d5db",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "00b386a9-52fa-4494-a7fc-9bb1a5c1b153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7455121f-9767-45c0-ac27-dbc672ad1c13",
        "cursor": {
          "ref": "2fb84c11-c980-4cb0-ba74-9b2d15f78eaa",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cdd17e0d-e68b-456b-9b09-abd97ff75f88"
        },
        "item": {
          "id": "7455121f-9767-45c0-ac27-dbc672ad1c13",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "120141df-555f-4f7c-a3fc-50ef52238491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915909c7-b15f-4545-8270-3d73c1d325d6",
        "cursor": {
          "ref": "efc66ac6-d1d5-4c0d-ad45-c2a52c09151f",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f6baa35f-7e7a-40f9-97e0-a59282bf498e"
        },
        "item": {
          "id": "915909c7-b15f-4545-8270-3d73c1d325d6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a2622ff1-6d26-4425-a64f-ef04a7f7eff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be11428-cd5c-419b-8971-a8adcd76ba49",
        "cursor": {
          "ref": "b94ea2b4-bc51-4b1b-bc0e-f2c1f175a9ad",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0a09e94c-9f77-4fa4-8572-a4b3b24f17d7"
        },
        "item": {
          "id": "0be11428-cd5c-419b-8971-a8adcd76ba49",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b6c70fba-539e-4c95-8065-7d77622423ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d476ff-9128-421a-aeac-6ce9fa35826b",
        "cursor": {
          "ref": "47ae226f-1540-4d94-8fba-0bd699271ec8",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f9283fd6-a56f-403f-be00-a9044a21f635"
        },
        "item": {
          "id": "f7d476ff-9128-421a-aeac-6ce9fa35826b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "75517efe-20f0-4c7c-9cc6-df38f50d5259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049c2a82-3bf9-4aef-a707-b2a1302f8bc0",
        "cursor": {
          "ref": "37b2e312-5084-42a0-ae8e-57a3811ba4b1",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "cb9331d5-ac1d-405b-bd84-6a83b6b3e150"
        },
        "item": {
          "id": "049c2a82-3bf9-4aef-a707-b2a1302f8bc0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "abadd1ce-00d1-4a2f-bb86-03ad2119c29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a94bca-4c28-4697-a847-73f7de2410cb",
        "cursor": {
          "ref": "00cf0d17-47d1-4c22-871c-053af5c5fe98",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7574b901-0ef6-4fca-a380-b4fe2e5d77e3"
        },
        "item": {
          "id": "42a94bca-4c28-4697-a847-73f7de2410cb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "46331af0-f55d-4510-b874-3546dc578c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32a9918-09cf-4d02-96d8-9accee6f4861",
        "cursor": {
          "ref": "32c6d2d1-db71-4331-af16-b0aaaf2cd84d",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5efef634-81a3-4e39-90ae-55636b8478e4"
        },
        "item": {
          "id": "f32a9918-09cf-4d02-96d8-9accee6f4861",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "35b30ec1-9c5a-4317-af79-b50612d3b2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82545da-4a95-4016-88e7-8b5638d84e4f",
        "cursor": {
          "ref": "994e72a6-23bc-4f15-bd9f-b02d614a3662",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "beaeb637-9147-450a-8aa0-0d6770568cce"
        },
        "item": {
          "id": "b82545da-4a95-4016-88e7-8b5638d84e4f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "abd9f43a-c7f2-4b69-8277-5546bf135969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72506aa-8823-41d3-a9aa-6e733b964b2b",
        "cursor": {
          "ref": "2b86ed91-de33-45d3-bf69-17b400fc497d",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5e190ec0-0f6e-4bec-a598-66f75c2b4a0c"
        },
        "item": {
          "id": "b72506aa-8823-41d3-a9aa-6e733b964b2b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "09d6eced-b765-4179-b4d4-c987f5dbd6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051f086d-6f2b-4412-bf7f-a830a3e538e4",
        "cursor": {
          "ref": "2ab018bb-45c7-4a82-9570-978d435d1f4d",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e417583f-0127-4193-a965-ff7db7e36ead"
        },
        "item": {
          "id": "051f086d-6f2b-4412-bf7f-a830a3e538e4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "24b005c4-54d2-4416-9928-329ee53234af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fc8e57-b450-475f-b523-b2c55f7f9572",
        "cursor": {
          "ref": "edffff7c-0e38-493e-b0cb-8646f15d1605",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7a486a42-03c9-491c-8da9-35a07d0e2964"
        },
        "item": {
          "id": "31fc8e57-b450-475f-b523-b2c55f7f9572",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "359ec164-0b6d-4fa9-9540-465e154250e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9698484-9efd-40e2-a41b-360ac1935b2c",
        "cursor": {
          "ref": "548ca160-d914-42da-a88c-832b54a19af3",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c420945b-5192-4978-8302-55def2dbd36a"
        },
        "item": {
          "id": "e9698484-9efd-40e2-a41b-360ac1935b2c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6064a427-62ac-4948-92aa-73aab566d6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa6ba96-e777-4e43-badf-5b322259d7f6",
        "cursor": {
          "ref": "679d9612-778c-485f-93d7-c35930676552",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "30f83f47-aeaa-4772-86d0-1f535aab769a"
        },
        "item": {
          "id": "baa6ba96-e777-4e43-badf-5b322259d7f6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fc5b21eb-df20-4628-8eea-05702c18a6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdeadff4-e38b-4a8a-9ed6-7cac0139d907",
        "cursor": {
          "ref": "bf558de6-bcb7-4724-aa2f-ce335ce47e3e",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6322218b-e734-41af-8057-b4abedbcfea7"
        },
        "item": {
          "id": "fdeadff4-e38b-4a8a-9ed6-7cac0139d907",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a6ded120-cb1f-45a9-a020-114f341c1846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6fac04-a3d2-4e2d-9bc5-c4c507e65aaa",
        "cursor": {
          "ref": "cbda717f-f4ba-4234-a730-be3d1368668d",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3a2ee336-362b-41d4-88b2-372e81230a8e"
        },
        "item": {
          "id": "ce6fac04-a3d2-4e2d-9bc5-c4c507e65aaa",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ba7315d3-277c-453f-8fc7-be19f64ee628",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049072f9-1270-4235-979f-88c934ed3f6c",
        "cursor": {
          "ref": "9ac94d50-4aea-4855-8403-d9c306cb3df3",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "54c0539d-2add-47a5-b77c-1dbf91757f98"
        },
        "item": {
          "id": "049072f9-1270-4235-979f-88c934ed3f6c",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "70e3b642-a820-44ba-acad-2a1a4186d929",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 144,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8376738-df50-4d22-8623-aa6939b3c671",
        "cursor": {
          "ref": "c589556b-c8ac-4c77-bcea-09a66e76600c",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "dbb1e0ce-5faa-4eb1-84f5-2459bbe483e4"
        },
        "item": {
          "id": "e8376738-df50-4d22-8623-aa6939b3c671",
          "name": "credentials_issue"
        },
        "response": {
          "id": "03520f86-8aff-4f7f-a040-0dd221665bac",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdb1320-0605-4e60-9b3d-956ed44701f2",
        "cursor": {
          "ref": "54340a3b-5afd-4297-8c82-2a546b17872a",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "12b9ee5f-043c-4d3d-ac31-1ed2b7980fc2"
        },
        "item": {
          "id": "abdb1320-0605-4e60-9b3d-956ed44701f2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c9915e86-dd64-4f7d-8407-c01eafe0f480",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "104105f5-f112-4b91-b259-722147bba839",
        "cursor": {
          "ref": "96eca705-f53c-4ba3-9280-332d6faac044",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "721ccf15-1fe6-4786-87e0-8356501d58cc"
        },
        "item": {
          "id": "104105f5-f112-4b91-b259-722147bba839",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3b427c54-c83b-4813-82ae-8d8daf03cfd2",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "baafc7b8-dba6-4953-95d7-f473e4bb1a1e",
        "cursor": {
          "ref": "6c0e5d99-3f63-4d06-98df-7d5dd979fa39",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bd6faaaf-06d1-4295-950f-812c22ef1915"
        },
        "item": {
          "id": "baafc7b8-dba6-4953-95d7-f473e4bb1a1e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0d5e9a06-2b91-47f6-b9f9-766181cbedba",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be221e5-eea1-4a31-a6f3-79b262f420d2",
        "cursor": {
          "ref": "f11a994a-9f38-417c-9527-73ef597795fd",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9acc03d8-a1c2-4942-9355-6c905ad9018e"
        },
        "item": {
          "id": "4be221e5-eea1-4a31-a6f3-79b262f420d2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3a61c4e0-c5d0-463e-8a0d-49b27ba71d5f",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29d7dbc-24c8-4e30-8ec0-8ef063432601",
        "cursor": {
          "ref": "f1fb9220-bcbb-4179-a03b-8b56854025e7",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ba5047f4-839d-4069-8f07-653280646784"
        },
        "item": {
          "id": "d29d7dbc-24c8-4e30-8ec0-8ef063432601",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0501387e-b24b-4c60-8451-3a18a4c9b851",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bc54f8-f4f8-49a6-9b7d-1560df99f961",
        "cursor": {
          "ref": "b4c2328b-9844-4f07-96a7-26f9069ccc28",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b4fd9b42-557a-4f1f-b157-2a1b1763fbf2"
        },
        "item": {
          "id": "03bc54f8-f4f8-49a6-9b7d-1560df99f961",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b55ff060-d87a-458a-afbf-7e64b3f8cb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bc54f8-f4f8-49a6-9b7d-1560df99f961",
        "cursor": {
          "ref": "b4c2328b-9844-4f07-96a7-26f9069ccc28",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b4fd9b42-557a-4f1f-b157-2a1b1763fbf2"
        },
        "item": {
          "id": "03bc54f8-f4f8-49a6-9b7d-1560df99f961",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b55ff060-d87a-458a-afbf-7e64b3f8cb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1765b233-f012-40b0-b861-4178edd11238",
        "cursor": {
          "ref": "0c169990-4ae4-46d1-a708-73864d1eff25",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5e964d73-754b-4535-87c0-1e955dfe0036"
        },
        "item": {
          "id": "1765b233-f012-40b0-b861-4178edd11238",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "57a23abf-ebef-4a5f-a407-1693902762b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35877f0f-1f2b-4149-a151-0cb735b23acf",
        "cursor": {
          "ref": "424421dc-fcd2-43af-9de6-98b0367a66d8",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "126ea287-96be-4010-b671-059aabd63c25"
        },
        "item": {
          "id": "35877f0f-1f2b-4149-a151-0cb735b23acf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0ca09193-5224-49be-8b32-dc6f85e602f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea2c144-b57d-481c-b13b-928c6d4652ce",
        "cursor": {
          "ref": "1080346f-4d15-484e-88c5-64e3651638f1",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "18077912-46b4-403c-8e93-2f9a49471ef9"
        },
        "item": {
          "id": "bea2c144-b57d-481c-b13b-928c6d4652ce",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0e5bf2fc-5e85-4275-ab74-77b5e62ba6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a56d767-e5e3-491a-88a8-1f8b8e0d18b2",
        "cursor": {
          "ref": "1f0b0d68-a7e5-4f84-98a8-5e317cefd189",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d0cbb359-ea5c-43e7-8fd5-d3b475aea9a6"
        },
        "item": {
          "id": "0a56d767-e5e3-491a-88a8-1f8b8e0d18b2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "40a35eb0-e937-4f6d-b4ae-3b390607df3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d791a8-84fd-4336-883e-920d55c1fe47",
        "cursor": {
          "ref": "122a2842-8645-4293-9c0f-6197745cf07c",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0d4bd0a0-5f38-4280-8572-3c28dca577b9"
        },
        "item": {
          "id": "b1d791a8-84fd-4336-883e-920d55c1fe47",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2958ec22-5548-4418-b293-6a4441709e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96362834-87ba-4b98-89e4-b693e129cbc3",
        "cursor": {
          "ref": "83a2310b-0cd7-48b4-8eea-6d6689834ed8",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ea69b29e-cfa9-4692-b8fa-234326a14d48"
        },
        "item": {
          "id": "96362834-87ba-4b98-89e4-b693e129cbc3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3e6c9b94-f538-4c67-ba98-c5674697a025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551a51f2-6cad-426d-b252-98177318d119",
        "cursor": {
          "ref": "f2e46db9-1961-4f71-8278-0ad63bf1b92c",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "656d9e7d-df04-4ed0-b279-07d772f6471a"
        },
        "item": {
          "id": "551a51f2-6cad-426d-b252-98177318d119",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cb3e0d2a-3817-4cfe-ab87-3c7941362fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e404fd14-1a65-4ad9-8374-582c26ea7497",
        "cursor": {
          "ref": "2d5e6cd7-197d-4a1c-95f2-39deb98bf56e",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5d32ef55-f2ea-491f-8b7e-69fb22482ee8"
        },
        "item": {
          "id": "e404fd14-1a65-4ad9-8374-582c26ea7497",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "84e0e19c-d314-45f9-93a6-e0742496c6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60e5260-3f74-46c7-b75b-34f73a4e7843",
        "cursor": {
          "ref": "53463152-fb5a-4e10-8f70-18d130352da7",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "964afa4a-c221-4361-a9b0-733f1eaa3765"
        },
        "item": {
          "id": "b60e5260-3f74-46c7-b75b-34f73a4e7843",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "eed62028-03e5-4e50-bb6b-19e017e5bbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6ad465-0102-468c-a97d-2968dfc0048b",
        "cursor": {
          "ref": "952cd99d-a5db-457d-bc49-010335cdb244",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9e567900-bf40-440b-8223-5fe8e293e3c2"
        },
        "item": {
          "id": "6c6ad465-0102-468c-a97d-2968dfc0048b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2e04b99f-a6cf-4870-88dc-a08d98726906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4e85ea-a98c-4896-9765-b9dc32a529eb",
        "cursor": {
          "ref": "0703b644-0f12-492a-bfe2-51e2dff5c71f",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9d2c7f20-fabc-4416-8d2c-43583ba5120d"
        },
        "item": {
          "id": "0b4e85ea-a98c-4896-9765-b9dc32a529eb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c5865f18-74d1-45f6-b166-ebb5b6c9ce26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb41e1d-6970-4cb0-bd25-d817526d85c3",
        "cursor": {
          "ref": "9b167d96-f0eb-4e28-b0c1-3d531ede934a",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4e4c4cfa-d4f9-4e24-bdca-36ebf77ce059"
        },
        "item": {
          "id": "2bb41e1d-6970-4cb0-bd25-d817526d85c3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "38769c88-2381-4f86-a034-2183e2c119ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa590ea-9dab-474a-bf34-894d6c64706b",
        "cursor": {
          "ref": "5bf970e9-d61c-4002-8ca1-8f2717b9a67a",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e2a5670c-2b2f-4d88-b80c-1b58f27977c8"
        },
        "item": {
          "id": "8fa590ea-9dab-474a-bf34-894d6c64706b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8c04253a-60de-44f9-8661-5c5ebf988e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63ab201-16fa-43df-b7e3-35195de8325e",
        "cursor": {
          "ref": "77494099-e6d9-490f-bcc7-a2fcf2cd0c59",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c269e6db-c45d-442e-8872-0d9f845c540a"
        },
        "item": {
          "id": "b63ab201-16fa-43df-b7e3-35195de8325e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9d2115ba-7ad8-4652-a737-dc9e39d56b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8fbf65-439c-4481-8a00-76b1d2176f4c",
        "cursor": {
          "ref": "e09232b3-4ae0-4c3a-b9d2-3a14c26a0b4b",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "12ea3374-5adf-4819-836d-05c627e06263"
        },
        "item": {
          "id": "6a8fbf65-439c-4481-8a00-76b1d2176f4c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ef778a54-a30e-4870-9404-b4482ef1f3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a710fae-2399-4696-a106-ae0c5832aedf",
        "cursor": {
          "ref": "e5862b0b-d879-4f97-93b0-3f3fad3b080b",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7d20f8ff-4b2a-42ca-9ece-cabed2767dda"
        },
        "item": {
          "id": "6a710fae-2399-4696-a106-ae0c5832aedf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ce8266e4-33eb-4cfa-9f10-b8aa58ffc575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b907ed-1425-4a0d-9fb2-76de09cc9dea",
        "cursor": {
          "ref": "cf0c2d5c-5372-44be-866b-666ff037fdb8",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dfe55a3b-57d8-4827-8d90-56915d38a6cd"
        },
        "item": {
          "id": "58b907ed-1425-4a0d-9fb2-76de09cc9dea",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6e4e21f1-9799-47e5-ac13-00c1b7ad76b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a2cb7a-ad7c-477b-a994-054105219a27",
        "cursor": {
          "ref": "e701e6e1-493a-4b68-962b-8c445da945ee",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bafcffbf-3086-4c67-8cdf-139f1244e7d3"
        },
        "item": {
          "id": "b6a2cb7a-ad7c-477b-a994-054105219a27",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5c7a41b4-84db-40ff-bc65-a0d0127ca8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2714ed4b-4282-4710-93be-b74224b88096",
        "cursor": {
          "ref": "0eb02499-155e-4dc5-a322-1bef73f01092",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4c365742-847e-4947-8c70-e35cf9bbd3c8"
        },
        "item": {
          "id": "2714ed4b-4282-4710-93be-b74224b88096",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "90027862-aa21-46e6-8fde-9412de57af5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9e7385-8c18-48ab-b5c0-d3f07f7aa4f5",
        "cursor": {
          "ref": "8b040367-e30b-4de8-b04a-8b934ef06082",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fdc1d75d-f38a-47ac-af89-02966415e69c"
        },
        "item": {
          "id": "4c9e7385-8c18-48ab-b5c0-d3f07f7aa4f5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d41a9f12-ba85-4a44-83c7-ec4e2a4a3cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c09358a-762c-47d0-846a-d0ed3ba388cb",
        "cursor": {
          "ref": "3632ace8-7c2f-4fd6-a205-88117f02b6d2",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e4d401e4-9d59-47d5-a07d-253a3a659684"
        },
        "item": {
          "id": "6c09358a-762c-47d0-846a-d0ed3ba388cb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "212f6f9b-0cc1-476f-a83b-179630134f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1a0f53-5c58-4f5c-a673-ef73a9d6274b",
        "cursor": {
          "ref": "aae9aed2-31c8-4812-a7b4-375b243e215e",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f26af930-f311-4fbc-9c80-eeecc1661262"
        },
        "item": {
          "id": "5f1a0f53-5c58-4f5c-a673-ef73a9d6274b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "27942f6a-7d25-4dd0-ab3f-863296d06fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638ffa16-d159-41b1-8dff-082b67685813",
        "cursor": {
          "ref": "f27ff181-133d-40af-8d32-eb8257f2fd62",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cd41efc9-8f2e-4937-adfc-418920a8400d"
        },
        "item": {
          "id": "638ffa16-d159-41b1-8dff-082b67685813",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "24cff176-20b4-407a-af3b-270f27768cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8022e40e-185b-42b1-9f04-1c32cc938ed0",
        "cursor": {
          "ref": "bb9714f5-4e82-4578-801a-fca1f5df784c",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c82dffba-f228-453a-a940-2e67df7aef82"
        },
        "item": {
          "id": "8022e40e-185b-42b1-9f04-1c32cc938ed0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ac8cb5b5-f57e-4292-bab7-110f017dd512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4874f9-1aa3-46de-b5d7-d8ca9c551231",
        "cursor": {
          "ref": "41f96c2a-632a-4469-ba48-8ce1cbe4e4a6",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e5291855-274b-42f6-a7dc-ccd1d38d63ba"
        },
        "item": {
          "id": "cd4874f9-1aa3-46de-b5d7-d8ca9c551231",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3896e745-550e-4718-b151-d8ec6248bc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c74597d-402f-4a95-8f93-fbfe1f8cf955",
        "cursor": {
          "ref": "182b99fa-d096-4b00-b06f-f61e904494be",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3e3ca313-f86c-4819-864b-25616e5c5047"
        },
        "item": {
          "id": "0c74597d-402f-4a95-8f93-fbfe1f8cf955",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b3840853-ef5d-4e55-8959-151b11704c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc92c3a-e549-42e9-af22-1ed21df01b81",
        "cursor": {
          "ref": "86c9de70-5c98-4cca-a318-6a8a672c334f",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "78082b21-d7e3-4290-9200-de38c9c0783f"
        },
        "item": {
          "id": "ecc92c3a-e549-42e9-af22-1ed21df01b81",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e6aa4400-c27f-40f3-a721-93a82175843a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ed88a5-4c0b-4c3c-8149-04bfa07de9a8",
        "cursor": {
          "ref": "74e29679-4f41-42d6-a7c1-864770679770",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bcb88dc3-381e-4ee0-bba9-f02be67e3c9e"
        },
        "item": {
          "id": "f0ed88a5-4c0b-4c3c-8149-04bfa07de9a8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3e8a57e2-20b2-4bed-a6fe-40924e7f4e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062c460b-8023-49da-94b0-3f8ded01cc81",
        "cursor": {
          "ref": "ad59a827-56ca-4f00-acd2-1be0265aee42",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "aadb6ca8-77d1-4004-af2e-199543de91c8"
        },
        "item": {
          "id": "062c460b-8023-49da-94b0-3f8ded01cc81",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2b372c49-9b04-4b59-ae49-e773173ba092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac25fb8-f854-4fa3-b198-cb76a3a8f90c",
        "cursor": {
          "ref": "ed556d85-7d6e-46cf-acd8-029f2332d99f",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "eb977135-5655-415b-8554-58c1654e7394"
        },
        "item": {
          "id": "8ac25fb8-f854-4fa3-b198-cb76a3a8f90c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7ab783d4-95a9-4145-8c9f-8bb27a782ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8acce9a-1feb-49fb-997b-76202b3a9a6f",
        "cursor": {
          "ref": "472f4895-d415-474c-aafe-0f5daa4d44c4",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "079fcd03-d9fc-4d43-bed0-4c6db8943a00"
        },
        "item": {
          "id": "c8acce9a-1feb-49fb-997b-76202b3a9a6f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b755d8fe-5b5b-403d-85d6-ec124820d668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c36ed4-2c1c-4d75-b71b-e298563e19f5",
        "cursor": {
          "ref": "f45700a9-606a-4f51-a7ce-76588556fb1d",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c31e095e-f6c3-45fa-8ade-d0e676b6c86b"
        },
        "item": {
          "id": "42c36ed4-2c1c-4d75-b71b-e298563e19f5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "be8ef2ee-b901-4ee0-8a0a-a866db4a7c32",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23414a9-dfe2-4458-9be3-bf5db532feec",
        "cursor": {
          "ref": "bf19f4fa-43d7-4836-b34d-189f0a339fdc",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "47b53aae-5fcf-4d91-bf96-3f2a204120eb"
        },
        "item": {
          "id": "c23414a9-dfe2-4458-9be3-bf5db532feec",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "c795efd8-dfa0-43fb-81eb-bc0484285380",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ef2b08-7f8f-4895-8e7d-9aba68fb31e8",
        "cursor": {
          "ref": "b9324bdb-4e6e-4065-aef5-5027c179f3f1",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9d53ed18-dd0d-4dfa-a795-85826f6543cc"
        },
        "item": {
          "id": "55ef2b08-7f8f-4895-8e7d-9aba68fb31e8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2e777a14-3ad2-4faf-804c-d23820c8f9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ef2b08-7f8f-4895-8e7d-9aba68fb31e8",
        "cursor": {
          "ref": "b9324bdb-4e6e-4065-aef5-5027c179f3f1",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9d53ed18-dd0d-4dfa-a795-85826f6543cc"
        },
        "item": {
          "id": "55ef2b08-7f8f-4895-8e7d-9aba68fb31e8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2e777a14-3ad2-4faf-804c-d23820c8f9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11f3a18-5e43-4b4d-8ce9-f1ae0835b57a",
        "cursor": {
          "ref": "3ec030f0-fe39-4297-b10b-fec9d5e5d3bf",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "46c0b003-bc09-4f1a-a6c8-9c75e93533e8"
        },
        "item": {
          "id": "c11f3a18-5e43-4b4d-8ce9-f1ae0835b57a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5b063e43-b098-4a19-962c-1f481463be99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3766a209-10af-49cd-b567-2c574a490e73",
        "cursor": {
          "ref": "43ed8077-d4ab-4819-bb2d-833d5e31d854",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d9711e04-eaf3-4864-8cae-d798f770e9b4"
        },
        "item": {
          "id": "3766a209-10af-49cd-b567-2c574a490e73",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e62f89ed-7d68-4980-8451-6a6e71e35704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd380d44-ffa0-4a6d-8979-bf16ccda0774",
        "cursor": {
          "ref": "f7166a63-37c5-4778-a48a-6ba7e612c62b",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "792560e5-1db7-475f-83d4-b188baa7505d"
        },
        "item": {
          "id": "dd380d44-ffa0-4a6d-8979-bf16ccda0774",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7bbfd9b2-9f82-4689-8795-2b98fe170a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ac41c4-d889-41f5-924c-7d86c232f409",
        "cursor": {
          "ref": "6ec33c44-1299-43a0-b71e-284a9a0c5da0",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5ca2143f-f8ce-4e09-802c-06b5d3e50fba"
        },
        "item": {
          "id": "a1ac41c4-d889-41f5-924c-7d86c232f409",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "306b927b-b821-4c89-8372-665984621c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418456cc-79db-4693-bbc7-a26b01800f7c",
        "cursor": {
          "ref": "0017fb0c-a602-4bbb-9ffa-03e8b931fcf8",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "dd1de0a6-296c-4eb5-a700-246d1593a1e9"
        },
        "item": {
          "id": "418456cc-79db-4693-bbc7-a26b01800f7c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c5a2eaf6-f00f-4aa8-b951-5f5fda41d46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f63035-c85e-4f6a-afb7-2d83812361aa",
        "cursor": {
          "ref": "a2784dd2-79da-4cd3-a479-dedf70a5bc4b",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f7fd5141-c619-4e01-b376-a097642d45e7"
        },
        "item": {
          "id": "c1f63035-c85e-4f6a-afb7-2d83812361aa",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ec0ade3e-976d-4b12-b483-16af78b8f037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7313c7-a8bc-4c9b-af46-f2b570cebf45",
        "cursor": {
          "ref": "1bd51cbe-f71c-4bc6-bb18-16ba750540d6",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8f8c11f5-9ed5-4d18-aa04-a0abdad020f7"
        },
        "item": {
          "id": "3e7313c7-a8bc-4c9b-af46-f2b570cebf45",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d1efed76-2b26-4600-877c-d62371af62fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a66b6d7-958c-456a-bd4f-cb21154eb059",
        "cursor": {
          "ref": "7f8ee97c-51c5-44cd-b7ca-d80c48d05187",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "594fff0d-304f-479a-a64d-8e4ca7dd355d"
        },
        "item": {
          "id": "8a66b6d7-958c-456a-bd4f-cb21154eb059",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e07cb0b0-b354-4cc8-82d4-d8073bf8b6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f26b62-d187-4a73-9797-cc9a027867cf",
        "cursor": {
          "ref": "dd307ccb-cad4-4ad3-ad41-143ec441fdf3",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "68367038-b7ff-4108-9b16-295758b2e2c8"
        },
        "item": {
          "id": "09f26b62-d187-4a73-9797-cc9a027867cf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ebb25d9e-7a19-4455-9f10-2964a5284b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ee6713-ba9f-40b8-9d93-14f89f44b3bc",
        "cursor": {
          "ref": "a31aae76-179d-4d6d-a852-089c913016ce",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e764feb3-4b68-463a-9998-ead1546ed05a"
        },
        "item": {
          "id": "c2ee6713-ba9f-40b8-9d93-14f89f44b3bc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "13fa73ff-028e-4e07-8c1a-ea37fd7f2b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02c0193-9d2a-4052-a9dd-cd344e469aec",
        "cursor": {
          "ref": "e5514733-0adc-415c-b6fe-516aa22a005c",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f554d367-f9b5-4338-8935-a42ea6e03d2c"
        },
        "item": {
          "id": "d02c0193-9d2a-4052-a9dd-cd344e469aec",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "328f85e0-6c25-49c4-a17a-137b33486c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ade51e8-2a0e-4c9b-b53e-d2d82cf48661",
        "cursor": {
          "ref": "8fa5b150-b47f-4d8c-81a6-9db61b7dbbfc",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "62aeaaa4-4135-45c7-8b6e-c436dafa717a"
        },
        "item": {
          "id": "9ade51e8-2a0e-4c9b-b53e-d2d82cf48661",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "731ee7d6-48ec-4d0c-8f6e-0d588ecb10d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689beeeb-3dc3-43c1-aa1b-d7dcd69ee645",
        "cursor": {
          "ref": "285c8da8-3973-4180-9e63-dd340fc2ca04",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "df15f25c-9664-4751-91c3-bcdd67b48d04"
        },
        "item": {
          "id": "689beeeb-3dc3-43c1-aa1b-d7dcd69ee645",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0a4d2e4e-cbc1-4626-aaca-4734f7c5a924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbcb29b-538f-49f5-93b2-9ae1e2c4cafc",
        "cursor": {
          "ref": "f74e84e4-80be-400c-884c-14d55d5c1a82",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2e4205df-1df0-4dad-a95f-4c3d6181fc4c"
        },
        "item": {
          "id": "4fbcb29b-538f-49f5-93b2-9ae1e2c4cafc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bd338003-fb9c-44eb-b762-2a53f1dc8975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af695ee-7cf0-4be1-866b-98fbdb612266",
        "cursor": {
          "ref": "5893b942-66cf-4b3b-a9c9-f577888781a1",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "088e8f12-2bc7-4a45-a493-625980a05ffe"
        },
        "item": {
          "id": "4af695ee-7cf0-4be1-866b-98fbdb612266",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "87893e79-3f8c-4b04-8a38-7055ad9188f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3c17e3-2866-4da2-9dca-f7df0a59a7f3",
        "cursor": {
          "ref": "d43dfc35-4d7b-438e-bc66-e0c8e580cbe0",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "db9be848-354b-4c7e-8a5c-2ce3750029de"
        },
        "item": {
          "id": "2f3c17e3-2866-4da2-9dca-f7df0a59a7f3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7882ad55-ffb9-47b7-98d6-a94971c45639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e0b68e-abd6-4c14-beda-75f86477483b",
        "cursor": {
          "ref": "632835ab-4571-4fc5-bec5-049a20052b78",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e604e06f-b947-41a3-9014-7265213283da"
        },
        "item": {
          "id": "d8e0b68e-abd6-4c14-beda-75f86477483b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "370b3cb8-29ab-4184-a0ca-8c2ce22a50ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf098f2-7c46-425f-b7ce-d4eef0a2d115",
        "cursor": {
          "ref": "71a0163f-2d65-41ae-8b43-53dbe9d80bd2",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d46ecbfd-f4ab-4e2b-a455-5f96523a9147"
        },
        "item": {
          "id": "2bf098f2-7c46-425f-b7ce-d4eef0a2d115",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0c4827bd-f3b6-4025-b45b-cf222d0ccbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbd7182-a945-46b3-a597-beeb7f929613",
        "cursor": {
          "ref": "12472616-a68d-47d9-a6bc-3598033a2443",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "882c856f-89d3-47ed-a096-c6719f56d51d"
        },
        "item": {
          "id": "0cbd7182-a945-46b3-a597-beeb7f929613",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a66ddc00-c2c7-4b6a-a39e-364141dfa802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d268627f-e00e-4f99-8f66-81af14ec9ee9",
        "cursor": {
          "ref": "491e1482-5359-4530-95e1-d7208a4b0d90",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5544ae51-fa32-405a-a6ee-a533bcd6da47"
        },
        "item": {
          "id": "d268627f-e00e-4f99-8f66-81af14ec9ee9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f0c83b88-a5e7-4001-b8c7-bb8fa09a29b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a19a47-7153-40d3-aab4-cca115ade416",
        "cursor": {
          "ref": "161bff0b-e4c0-4771-b8e2-2f77dcecc9d9",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "754fce6d-a1c3-4592-b5c9-60c3d503fc27"
        },
        "item": {
          "id": "d3a19a47-7153-40d3-aab4-cca115ade416",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4ec2f147-901f-4378-b12c-db7dcb3a2904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478f3a47-e41e-43e2-aa41-81346c041ac5",
        "cursor": {
          "ref": "3b43c5b0-ecfe-4db3-9341-7731835d1797",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fb39a86f-7e6b-4516-b58f-fb0c6536267c"
        },
        "item": {
          "id": "478f3a47-e41e-43e2-aa41-81346c041ac5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "81414e69-57ed-4984-a761-dd7ff53663f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2cdf1f-2d0c-4169-b36b-0f437dfc16b1",
        "cursor": {
          "ref": "84393d17-d9cc-4f1b-b136-4653c9fdb1c6",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "31f4a881-bb90-4f08-aae0-5dfd4c1a9baa"
        },
        "item": {
          "id": "8c2cdf1f-2d0c-4169-b36b-0f437dfc16b1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8f4f0882-90b7-4e9d-8b1a-d19584c752a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a214df-6c3c-4664-8e6c-9c5e5c322248",
        "cursor": {
          "ref": "680423a9-2791-4051-bdf4-747876c900dd",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "322ac6cd-24be-497d-90df-0645fb66fc7d"
        },
        "item": {
          "id": "23a214df-6c3c-4664-8e6c-9c5e5c322248",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3c8c4152-72b1-47d9-94d9-11fe63344a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b76cf84-910b-4610-bb4f-a95569a5f03f",
        "cursor": {
          "ref": "73aee430-7979-4bf8-853b-fbb69492a16b",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c7816f8b-ddf1-4a42-bc90-b2b7a609639e"
        },
        "item": {
          "id": "4b76cf84-910b-4610-bb4f-a95569a5f03f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7a815479-0cf3-482b-ae51-6725554037d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa61426-4548-40ef-bac3-c22488ed4f17",
        "cursor": {
          "ref": "1e59937e-5f6f-4eae-880d-116b2c09da41",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "42f5913c-dbe1-42eb-8b3f-3ddc21c994a6"
        },
        "item": {
          "id": "1fa61426-4548-40ef-bac3-c22488ed4f17",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8e5f170e-995b-4ab8-96be-f400ee486c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cde848e-8981-47e8-ad20-8f175c72394c",
        "cursor": {
          "ref": "64857b2c-45fa-4a18-b8c1-d432f05aea9e",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "78e923eb-e259-46c1-af43-f64e3e95caa5"
        },
        "item": {
          "id": "9cde848e-8981-47e8-ad20-8f175c72394c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d8b2e465-7bb4-48c3-9f52-e27130172f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32408cae-c088-4bd3-8807-676d2994b5e5",
        "cursor": {
          "ref": "e47dddc0-89c6-47ff-baa6-1c82f415cd3f",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "09d1867e-fec0-461f-a879-5ccbb293c0bd"
        },
        "item": {
          "id": "32408cae-c088-4bd3-8807-676d2994b5e5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "720eea2d-480f-41b7-a5cb-ffb2d7f7967b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d951fd0-e744-4eb9-8328-25d653416ce2",
        "cursor": {
          "ref": "71d3ae7a-9aaa-42ab-8a11-029be288190e",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "24c4447c-60a9-4323-b226-738e48ad802a"
        },
        "item": {
          "id": "4d951fd0-e744-4eb9-8328-25d653416ce2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9c17a1c0-a9a0-47bf-8090-f22a520b0c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0b883e-ed96-4516-8456-78264f4baf22",
        "cursor": {
          "ref": "ffd0c8e1-fa11-4fef-ab62-74355239013e",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1b0f35ff-ffe3-4e58-9765-dc74475daf95"
        },
        "item": {
          "id": "ae0b883e-ed96-4516-8456-78264f4baf22",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "112d0ca6-861c-47c6-b8fc-aaf15064ad94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0b2544-64cd-48d6-853b-47eec9101d2f",
        "cursor": {
          "ref": "231b3506-cd70-47cf-88b5-dbbd3c29b25f",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "15a97ff6-8416-4b8e-99e4-87fd75b6a217"
        },
        "item": {
          "id": "cc0b2544-64cd-48d6-853b-47eec9101d2f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "27bd977a-4457-4745-a9d7-40c4c4816f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f1faaa-a4b4-4edb-afef-3c7e317be6bf",
        "cursor": {
          "ref": "786d907d-abef-4e35-b5a3-27b8e122eca5",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "318b9ea6-aad1-4381-9728-e6569da06f0f"
        },
        "item": {
          "id": "65f1faaa-a4b4-4edb-afef-3c7e317be6bf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "03b38ce7-00c2-4d58-b6d3-e47d1981bcc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdfba53-5b49-46ea-8fe6-0d038764270b",
        "cursor": {
          "ref": "4f51b4ca-60ca-4369-a826-de85edd415f5",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d30b4ebd-a14c-4319-b333-b85fdd0d0ea3"
        },
        "item": {
          "id": "dfdfba53-5b49-46ea-8fe6-0d038764270b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a47b4271-b306-4fb9-badf-356e8061006e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6283d2d9-8f81-4c66-b18e-9d2fe904660f",
        "cursor": {
          "ref": "2286b263-7fd5-4a6d-adeb-d1a7058405ea",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3d0c3e40-353e-419c-a928-52704c6fb0f5"
        },
        "item": {
          "id": "6283d2d9-8f81-4c66-b18e-9d2fe904660f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6006a08d-7d6f-49fd-a113-31ae5793d9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fadaef-f019-44d3-a458-e9d120d690ea",
        "cursor": {
          "ref": "d691cc9d-f209-4c1f-887b-46764284c120",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fa3b6a5f-c7e7-40a7-b02b-70c8be9df869"
        },
        "item": {
          "id": "d1fadaef-f019-44d3-a458-e9d120d690ea",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bd1c7349-d035-4fe6-8271-b16d84189358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d236a42e-43c5-4f0f-8496-6fe91758b5d5",
        "cursor": {
          "ref": "bb7a3bd9-0ee0-46e8-8ea9-346b7bed9fe5",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9e587e31-6af4-4e0a-af62-f9ca90c5ff2a"
        },
        "item": {
          "id": "d236a42e-43c5-4f0f-8496-6fe91758b5d5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1d61ccbb-1c25-4c1e-a6b8-256a6dc77e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67c07aa-547c-4a3e-ab36-51c5dce56d8a",
        "cursor": {
          "ref": "c101817a-c2a4-4780-849d-56d2f2059210",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f99a1e43-84da-4199-8eae-6092e17cb94d"
        },
        "item": {
          "id": "c67c07aa-547c-4a3e-ab36-51c5dce56d8a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2d9229f2-4dd5-4072-b9a7-6706589bc43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dbc512-ce62-4774-b842-01f1cf6b7726",
        "cursor": {
          "ref": "72872c70-5731-412b-a43f-6b4da4f3f44d",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e0582370-fa43-43f3-9b26-5cd31280b962"
        },
        "item": {
          "id": "38dbc512-ce62-4774-b842-01f1cf6b7726",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "80f96820-4da7-42e0-92cf-7b19b4a154c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2251e795-2203-4bba-b249-4692297042dc",
        "cursor": {
          "ref": "84fcb3f3-40f1-4e18-be80-0c686b969f5f",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3f750674-f3a6-48ae-a829-6154af8e35bd"
        },
        "item": {
          "id": "2251e795-2203-4bba-b249-4692297042dc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "52eb2151-ddd5-4b42-a33f-06d8e5dc7b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1d8a9e-e4aa-40a0-ac32-de37227d58c3",
        "cursor": {
          "ref": "5ae69f5c-c8a8-4b33-8d94-a09770e655a5",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4384517b-40e8-4850-91a0-b9d09d929cf7"
        },
        "item": {
          "id": "4c1d8a9e-e4aa-40a0-ac32-de37227d58c3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ebf437c8-1185-44b7-9c24-3f9099d9d80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc473628-f0bc-4459-bf48-0da3007656ba",
        "cursor": {
          "ref": "d705f0d0-1b03-4122-8cf8-c1d4412a4b42",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b4185ce1-795d-453d-9fd4-99705afbb2b4"
        },
        "item": {
          "id": "bc473628-f0bc-4459-bf48-0da3007656ba",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2a1a5d60-e069-434f-a7e3-a43807b119ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8676a5b1-ee7c-49ba-8507-03d821362625",
        "cursor": {
          "ref": "8fcd97de-5e02-4b7e-b439-12216a402ec2",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "810cfc41-30a3-47e3-8e7c-b117e58863ad"
        },
        "item": {
          "id": "8676a5b1-ee7c-49ba-8507-03d821362625",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "064e7ea1-07a4-459b-8787-950ab88576d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15434c1d-bf29-4885-927f-44928719b0db",
        "cursor": {
          "ref": "72c55d3f-8d95-4b2e-a334-1eff2ac73d0f",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fd1632a2-5211-4d2c-bde5-3e8164b442a2"
        },
        "item": {
          "id": "15434c1d-bf29-4885-927f-44928719b0db",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3ed5b38a-d688-4d4f-9007-02e677fa6dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533883f3-0e62-4499-bf12-73564a448b2d",
        "cursor": {
          "ref": "a40caf5d-c8db-446c-b7b8-57d4d29b11cb",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e0e05d3e-6206-4c4c-96c5-39800dddf8e6"
        },
        "item": {
          "id": "533883f3-0e62-4499-bf12-73564a448b2d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "473c7330-28dc-4695-911c-9d1f4ac1643e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ea02aa-ca30-40b2-adfd-840981cfbaf8",
        "cursor": {
          "ref": "15e0170c-5063-4ff1-944a-0381c062f6be",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4381099e-faf5-4c9a-b8a2-091327b33341"
        },
        "item": {
          "id": "38ea02aa-ca30-40b2-adfd-840981cfbaf8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4567338f-4d46-4362-99ee-9cac686d2e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9a4ba5-90d6-45f1-9c18-dff7be55f099",
        "cursor": {
          "ref": "7865f07b-0953-4c67-ad59-504716966deb",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "52d9386c-b854-4217-b060-617a1d03d156"
        },
        "item": {
          "id": "0e9a4ba5-90d6-45f1-9c18-dff7be55f099",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1c992226-4681-4de2-8517-be10c8c06fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f975bc-31b8-47fc-bcab-6f59024f61d6",
        "cursor": {
          "ref": "ede3bffe-0fa2-44d2-bd2f-77b91ff13d42",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7aa15738-3573-4fa1-853b-0f618320d7e9"
        },
        "item": {
          "id": "f7f975bc-31b8-47fc-bcab-6f59024f61d6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "48446b22-db81-403e-b63a-e944d6b3e64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c63977c-6f20-4fd6-b820-cc023751e32c",
        "cursor": {
          "ref": "bd5b24f1-4c5d-4178-9681-d8879098f39e",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "608d9e92-bf89-449f-8bf7-e60d1c95b30c"
        },
        "item": {
          "id": "8c63977c-6f20-4fd6-b820-cc023751e32c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "087398fc-6d29-4b48-8f01-7facf8c99ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f75930a-b646-4124-bac2-56ab87c59afd",
        "cursor": {
          "ref": "7fe8bbf8-18ac-4873-b38e-91a6b2545be8",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "224a0fcb-602a-434f-8e1b-90c493e3d6eb"
        },
        "item": {
          "id": "1f75930a-b646-4124-bac2-56ab87c59afd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "549d3582-a132-428f-9e60-78bfb85fa316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279fadd1-3f86-422b-b011-70d58590981d",
        "cursor": {
          "ref": "9deed61a-5d6e-4a28-85c8-4364f2096f7a",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c50160f1-a9c6-4e38-90fc-760f042f4ea9"
        },
        "item": {
          "id": "279fadd1-3f86-422b-b011-70d58590981d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "03bebdf1-222f-42a1-a8e7-a198b94b8627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03ceeaa-6f9f-46bb-9cfa-e97e99a37c50",
        "cursor": {
          "ref": "92f44651-6ba2-46f6-b6ca-d669f529e75f",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fb132e8f-4162-4024-88ef-5aa839d710e7"
        },
        "item": {
          "id": "c03ceeaa-6f9f-46bb-9cfa-e97e99a37c50",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e0f08e6a-bccd-455b-8e9f-eb4a8c445fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6130f02-8c74-41ad-85b7-1871631d67ac",
        "cursor": {
          "ref": "7a4121cc-e852-49bd-a132-8c5b6ed0fb47",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "69a31145-ddd2-4f47-bf34-e1056f36b02e"
        },
        "item": {
          "id": "c6130f02-8c74-41ad-85b7-1871631d67ac",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c59d7ab8-e402-47f9-be04-46bd169bb90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf8b1fa-7fe5-4f3c-8e71-5479a8569849",
        "cursor": {
          "ref": "062b2810-0ff0-47f2-9eb4-63e76ee11a2e",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "df5c0ba4-1bfc-42fc-be56-4060e85a5f94"
        },
        "item": {
          "id": "fcf8b1fa-7fe5-4f3c-8e71-5479a8569849",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b88dc83f-b6f2-418e-b805-859968feb9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21768787-ef96-49dd-8925-94b2d4e989c4",
        "cursor": {
          "ref": "96c776ea-f6ce-4679-a4cf-9c05cba8b8c1",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a38dddea-3548-4db3-a4fd-3b1e2bab66a8"
        },
        "item": {
          "id": "21768787-ef96-49dd-8925-94b2d4e989c4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "33cc6e6f-d872-4077-987a-798635654798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c0ecf5-e38f-408a-a1f4-880376e85a08",
        "cursor": {
          "ref": "02bcffe9-2791-4578-b284-994db9ce5fa0",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "65a993ba-eb25-448c-8250-79357725adf0"
        },
        "item": {
          "id": "b7c0ecf5-e38f-408a-a1f4-880376e85a08",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cd329df5-3904-4364-82b9-2a805c27eb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4361746b-1220-4c63-a1f3-7bd1553de961",
        "cursor": {
          "ref": "e79423cc-1417-4391-896e-c0944be090b1",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "25320a17-abea-476a-88e2-b91b6db4f8c5"
        },
        "item": {
          "id": "4361746b-1220-4c63-a1f3-7bd1553de961",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5343f052-f257-45d9-ad43-b1748eec153a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a559c1-afa8-4825-8c72-91040d75b751",
        "cursor": {
          "ref": "21ced281-d809-44d0-a73c-73730a932f49",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b82e6191-53fe-43db-9e31-b51eeac8d3cd"
        },
        "item": {
          "id": "13a559c1-afa8-4825-8c72-91040d75b751",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "129725cf-3113-4d98-9cab-7c63f9551015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9d94b4-8043-4776-a9ea-3229dd73ec67",
        "cursor": {
          "ref": "1430484b-6da6-40a7-9c9d-08dcda69e948",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bf0eca86-e1a9-4bf6-ac98-513dfec56f0d"
        },
        "item": {
          "id": "8a9d94b4-8043-4776-a9ea-3229dd73ec67",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f7c42c3f-e233-45ef-9831-dd91ec36dc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6133e5e8-edd4-42a4-9f91-4aa8764982d3",
        "cursor": {
          "ref": "395e8e4b-da6f-4b19-a05f-812b01eeb6ef",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1de6351a-c2d3-4142-ab11-b746a8b31214"
        },
        "item": {
          "id": "6133e5e8-edd4-42a4-9f91-4aa8764982d3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9bea9ec9-6682-491e-b8d1-d0babac19ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe01b0fd-b9e3-40ca-bcf3-1439a345d0c4",
        "cursor": {
          "ref": "49c0aff4-abe1-41c3-ac69-f9103eafefee",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4701ade7-2b2a-4b1c-9d6a-a498f6526bd7"
        },
        "item": {
          "id": "fe01b0fd-b9e3-40ca-bcf3-1439a345d0c4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "25bddf0f-a4ce-4f0d-b0f5-f313cc0b50ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528dec35-c409-4bc1-8267-38c299623f33",
        "cursor": {
          "ref": "8d350498-1139-4f1b-99ef-d89f622ad2c6",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "898f6116-bad3-455e-a0fd-79d017d02dfa"
        },
        "item": {
          "id": "528dec35-c409-4bc1-8267-38c299623f33",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6f21dc05-0209-416a-b01a-ed4fa8eef02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd37723-3a26-4c6c-b6b8-9cd9d88bb982",
        "cursor": {
          "ref": "da8efd65-3c58-4e91-adb3-902fe7cd34de",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6a68420c-ab56-4d1b-b59a-09ddf70d7018"
        },
        "item": {
          "id": "0dd37723-3a26-4c6c-b6b8-9cd9d88bb982",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4e8ca8b5-faf6-46bb-bd1a-a686fa3f4b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68cec5f-9508-47a2-a388-cf8a737747df",
        "cursor": {
          "ref": "02c6a09f-46dc-4dea-8aa7-411156d7630d",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0c702ae4-e142-4a74-b429-dc196432a2cb"
        },
        "item": {
          "id": "d68cec5f-9508-47a2-a388-cf8a737747df",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "13c2c13e-f01f-46b1-96b8-c4b1b32d71bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e041b96a-664a-426f-a9fa-c4110863a3d9",
        "cursor": {
          "ref": "37925c31-6642-42c4-a6ba-a7535a362258",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7ae6a3dd-6ac9-4c01-b715-58f5f69a5420"
        },
        "item": {
          "id": "e041b96a-664a-426f-a9fa-c4110863a3d9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "545c9cef-c8ad-4a2c-9cf2-3f754dad3045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ce66b5-417d-4ed2-a75c-73cf87a0d1a3",
        "cursor": {
          "ref": "05d7847f-2223-4174-8432-d7c90a46f94e",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "317acaed-00c5-499c-81e0-cac68a725c07"
        },
        "item": {
          "id": "90ce66b5-417d-4ed2-a75c-73cf87a0d1a3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a8c5a4ee-919e-4316-9cc6-140cb4ad17e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8abf82-622f-4379-a12f-e47855059204",
        "cursor": {
          "ref": "a2bfeedb-4a47-4cab-a98b-f588b7a9b64e",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "20441130-58d8-41a7-bc75-b6e9995d134e"
        },
        "item": {
          "id": "8d8abf82-622f-4379-a12f-e47855059204",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f929c439-f97a-4857-8348-0873eb7c7ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41696580-4cbc-44ff-8df4-8ecfabae7119",
        "cursor": {
          "ref": "bae5e203-4c9f-47d1-8017-6b44e74cac15",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d7c68025-ee15-4c94-acf0-71447dbe7d56"
        },
        "item": {
          "id": "41696580-4cbc-44ff-8df4-8ecfabae7119",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "13149687-dbeb-4ca8-9747-499258d3f84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04897838-266a-49cd-804c-90e8feaeaff0",
        "cursor": {
          "ref": "6e9cfb00-71ff-4c2a-92ed-0db13dc78d2b",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3244c1e2-82ee-4134-80af-400b6c6ae610"
        },
        "item": {
          "id": "04897838-266a-49cd-804c-90e8feaeaff0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cc839a8c-02f7-482d-b312-0a23cef12475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06794c36-952f-444f-a2e1-8bff6718be22",
        "cursor": {
          "ref": "88396811-4abe-450b-a059-d25746721f7e",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2814ab9b-7123-4743-8281-f03040ea5795"
        },
        "item": {
          "id": "06794c36-952f-444f-a2e1-8bff6718be22",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ae0f29da-d3ef-47b5-bc15-c2eadbd64ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b34a0f-43bb-4ce5-a347-42ef9bd7a81c",
        "cursor": {
          "ref": "d22218bc-d5ca-41ad-946b-b841c082e5db",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2a043f04-27b2-49ea-b746-c2f1d3abefdf"
        },
        "item": {
          "id": "52b34a0f-43bb-4ce5-a347-42ef9bd7a81c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9a5f1347-fb60-444e-a483-73d50fa6d15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8129ac51-2c59-4496-9b6a-4e7ebe3d65b0",
        "cursor": {
          "ref": "b33ea4e5-c333-4ffc-8ef0-2f4b87d11298",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "caaf3caf-38e3-4a68-bd2b-25d4ec6962a9"
        },
        "item": {
          "id": "8129ac51-2c59-4496-9b6a-4e7ebe3d65b0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "91704894-29b6-413b-8112-89c9cc4fd561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7502b1-ca0a-4ef0-b150-038e8504efff",
        "cursor": {
          "ref": "d6e1e512-7167-41b9-8728-fdb49eb043a1",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "847c0699-6e67-4395-ab31-45b5d84a68fd"
        },
        "item": {
          "id": "9c7502b1-ca0a-4ef0-b150-038e8504efff",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6735b946-7ae3-4d6b-9465-71ab0e134137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712340ce-663c-4419-ba5e-8e87738b5536",
        "cursor": {
          "ref": "529515fd-7281-4fb2-aca3-6391d52279aa",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7ebe528f-04b6-44fd-882a-b1b513dad7b7"
        },
        "item": {
          "id": "712340ce-663c-4419-ba5e-8e87738b5536",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "86fe4644-3f20-46fd-9336-7d2196b593cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa54ecbc-1de8-445a-ae4b-a55979155148",
        "cursor": {
          "ref": "919a9be7-7b62-4d0a-929c-cb8c8751c596",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "680ddac1-4c15-4d7e-8813-de8d4736e3ab"
        },
        "item": {
          "id": "fa54ecbc-1de8-445a-ae4b-a55979155148",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3b7d1356-7b61-4143-a576-bff7355bf41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406b70a1-02f3-4602-8186-d04c6d2c0611",
        "cursor": {
          "ref": "dbf4fa59-705e-4017-ae33-71dcb537280a",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5d39504a-22ee-4d14-8237-da6382986efe"
        },
        "item": {
          "id": "406b70a1-02f3-4602-8186-d04c6d2c0611",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9b13a2e3-46e6-4279-ae94-eb2bee5c7aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b50c25c-3fb5-4516-9010-b46a8c8d8c53",
        "cursor": {
          "ref": "c2ffb909-1005-461b-b194-7fb9e1f9d8e0",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1a66b3b7-2651-48da-a585-cfe5ca286aba"
        },
        "item": {
          "id": "1b50c25c-3fb5-4516-9010-b46a8c8d8c53",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e5de680b-1792-4e29-924f-2df648f406de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ea1000-6c8f-4a27-9c66-d6f2c97aac0f",
        "cursor": {
          "ref": "baccb09f-f93d-4656-bf05-af0e008e86ae",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bfbc3514-906c-4492-b185-ca0ccb7055ea"
        },
        "item": {
          "id": "b5ea1000-6c8f-4a27-9c66-d6f2c97aac0f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "471e96ea-1a21-4db5-b6bf-1271a01a7edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510ad003-73c7-431e-bbde-fad67ddd1d20",
        "cursor": {
          "ref": "876a10f5-0b0f-4ca1-bfb8-c18dc023ca2b",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "40341ec6-936a-431e-b25f-138e757ee2ca"
        },
        "item": {
          "id": "510ad003-73c7-431e-bbde-fad67ddd1d20",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6c87a9e3-669f-4d41-8c0c-935c6a1f12bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2a0e4b-abf5-4912-85ba-9d528400b899",
        "cursor": {
          "ref": "ee44ca68-e0d3-4fc7-882c-1c0caba6711b",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "62d9ad0c-9ec3-4db6-836c-5972da68a89a"
        },
        "item": {
          "id": "4b2a0e4b-abf5-4912-85ba-9d528400b899",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4921bec8-dce2-4631-bae5-9b917f929aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3794b13-7d92-418b-a86f-2d1d9750dcf3",
        "cursor": {
          "ref": "95abed57-3ffb-44b6-b6c6-32aff65851e4",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "281d2848-d11a-4403-9a82-f76c8e784524"
        },
        "item": {
          "id": "d3794b13-7d92-418b-a86f-2d1d9750dcf3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "766c5d53-7420-405e-add2-21a708aac058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf02cbc3-4842-495b-b09d-6226672c9099",
        "cursor": {
          "ref": "6fac2095-5d04-417f-a063-fb8492f81ee3",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1d9ebad4-1b9a-4e82-9793-6915e3853e44"
        },
        "item": {
          "id": "bf02cbc3-4842-495b-b09d-6226672c9099",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8998c8d7-2e89-40d2-911a-83c95115c920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ac5873-2a1e-4841-829b-ce404b85b6b3",
        "cursor": {
          "ref": "53fa7d20-c479-4786-bd79-67661b5474cf",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0e33534f-5b29-49b1-8a0c-f8c603387b09"
        },
        "item": {
          "id": "b9ac5873-2a1e-4841-829b-ce404b85b6b3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5b11c023-a06f-4e82-ad26-edda129553df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17edab39-3e41-40a9-a5e9-ca241160382c",
        "cursor": {
          "ref": "0027ca02-80e6-4323-aa01-29bb7de6ffd8",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cf8ff4ea-4692-44d5-9e6c-932c328ca493"
        },
        "item": {
          "id": "17edab39-3e41-40a9-a5e9-ca241160382c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cf5175d3-09a8-4830-bc46-99aa9a51501f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd9947f-9c4d-4c53-89dc-6112b2b7a400",
        "cursor": {
          "ref": "587fb2e6-8a10-4b1c-9857-f6913382f549",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6567c8cd-537c-47c1-b296-a091fe4fd5a1"
        },
        "item": {
          "id": "0bd9947f-9c4d-4c53-89dc-6112b2b7a400",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6a4aeed1-a703-49ac-b5f4-a3de7922876e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc40363-a5f4-4838-b9bd-7faa6eff234e",
        "cursor": {
          "ref": "4aa2fe83-6767-46e8-839e-770c71f1ea04",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "066a32d4-8b65-4ed3-8090-8ceae0daa34e"
        },
        "item": {
          "id": "8fc40363-a5f4-4838-b9bd-7faa6eff234e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "95eb81c9-120c-4d87-a6fc-09d1fc7451c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7b7d15-cdca-41c2-af80-c0cb0dabb224",
        "cursor": {
          "ref": "2a10f94b-bd33-4b03-97ad-24ba38752788",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2b88aa2e-270b-474c-ab74-9b0f1b629c49"
        },
        "item": {
          "id": "1a7b7d15-cdca-41c2-af80-c0cb0dabb224",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e8116894-af11-44f6-a156-ba83b4d38d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df451be-f7ce-4b90-a687-b8d8c5b19c2d",
        "cursor": {
          "ref": "e11ec1c3-1b98-4492-a766-6cbfba9f133d",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c00d4230-cd76-4a33-8bfb-be2393283e0a"
        },
        "item": {
          "id": "9df451be-f7ce-4b90-a687-b8d8c5b19c2d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "994ec1a5-f11c-42f1-a890-ad650e7bc041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a6d420-23c3-4ed8-be29-cf2cf7efae5b",
        "cursor": {
          "ref": "ec9a6e2c-edee-4afa-b8c0-070dd770ce4b",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f2d9face-e0a7-4978-825f-f8b89172d425"
        },
        "item": {
          "id": "05a6d420-23c3-4ed8-be29-cf2cf7efae5b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6bdf0e7e-8fad-4712-8e06-b84a95184c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb12ff7f-422d-450e-b4a9-a2e1b6388e9f",
        "cursor": {
          "ref": "5a1c6278-29f4-488d-9fb2-546675c36694",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b4d1635b-e73f-4587-99e8-c16fcaf31762"
        },
        "item": {
          "id": "cb12ff7f-422d-450e-b4a9-a2e1b6388e9f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3b2d8620-d3b4-4fe4-ba5c-d4faab1bede1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8870a8-5d53-46fa-92e5-aff72fa53727",
        "cursor": {
          "ref": "c616595d-8bde-4ffe-9d0b-5ce731ee43f9",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "20a68781-b2c8-47c5-98fb-3424bb6e7028"
        },
        "item": {
          "id": "4c8870a8-5d53-46fa-92e5-aff72fa53727",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ed0432aa-c0a9-4826-a042-a413285189e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14dd518-4f2a-41c5-8223-d447e77ac07e",
        "cursor": {
          "ref": "d00bc67c-76e5-4b99-b149-a910879759e8",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3fc4a661-d763-4e7f-a038-1badb78ab7a0"
        },
        "item": {
          "id": "b14dd518-4f2a-41c5-8223-d447e77ac07e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bcae54e9-0201-47a5-9bae-ed7ba6726af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e1cce7-aa57-441c-b8f8-aa70ecf1ef41",
        "cursor": {
          "ref": "8d2f0c9e-f38a-4cf6-a2d9-ee380436365b",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d646e1a5-05b0-4c55-9b2f-24a9e1519b44"
        },
        "item": {
          "id": "61e1cce7-aa57-441c-b8f8-aa70ecf1ef41",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7bc620b7-be81-4457-b920-1a6cce5fd689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d21572e-484d-4129-81d7-66a0dd1f37ce",
        "cursor": {
          "ref": "1be65a6d-14fe-420b-8ad7-5e80a673812f",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "66a59762-1b0c-4057-ad98-a68b167b4f47"
        },
        "item": {
          "id": "4d21572e-484d-4129-81d7-66a0dd1f37ce",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ef8e46d2-f183-4ba5-b625-5323983fafc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa77ab4f-8065-4112-b076-0f0f6d83309c",
        "cursor": {
          "ref": "76d11b67-cec8-424d-9484-1348c8544757",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "20ea827d-1fca-43cc-9ad6-0ea3a5ae5290"
        },
        "item": {
          "id": "fa77ab4f-8065-4112-b076-0f0f6d83309c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "95958b2b-ed84-48c3-8360-02d27a36e8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967e9e92-11c1-427d-b5ca-14fd618d64f3",
        "cursor": {
          "ref": "66a94630-317a-4416-adfa-8ed6c3729245",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f80b711e-fe70-4d5d-9fa7-490efa565312"
        },
        "item": {
          "id": "967e9e92-11c1-427d-b5ca-14fd618d64f3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c19c68cb-8e49-4b03-88cf-b61ee3ca104a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b4a796-1419-4412-88be-9b142daa25cc",
        "cursor": {
          "ref": "6cc32009-64f0-4fe3-8a6c-820f537764e5",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3adb74e3-c134-4ffe-ae42-5f5435bfe813"
        },
        "item": {
          "id": "77b4a796-1419-4412-88be-9b142daa25cc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a9e52cac-948c-42d8-87cb-02c70769355a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5186bc6d-f939-4c8a-a268-4a1b7c4dcdbc",
        "cursor": {
          "ref": "1e830d3d-c31a-4eeb-ad36-b8ee0e7e7b42",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9df742b3-903e-4978-b922-94eeee7da90a"
        },
        "item": {
          "id": "5186bc6d-f939-4c8a-a268-4a1b7c4dcdbc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "23029c2f-1458-45a3-8afb-0f758b6f2041",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c071fa-6232-4d2b-8ffc-186dfbfab784",
        "cursor": {
          "ref": "6d9b9fea-6360-449a-b592-d3cfc9728c4d",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "79f51236-1270-4681-8956-3fdb05770862"
        },
        "item": {
          "id": "12c071fa-6232-4d2b-8ffc-186dfbfab784",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "84853184-d6d8-40ed-9c37-6b050344d562",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18325a50-4394-4ed7-9f5a-45da67607133",
        "cursor": {
          "ref": "3f45c219-7e05-4989-b1e8-eb0b2bdd0c9b",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bb246d81-5600-4f58-b6b7-8f876c6387f9"
        },
        "item": {
          "id": "18325a50-4394-4ed7-9f5a-45da67607133",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ef0c869d-9547-406e-9971-fe86e8b99c9f",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "058320da-35bb-4c55-a151-df3b492611c1",
        "cursor": {
          "ref": "7cb02c01-f613-4515-8e6b-bc19a490e383",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a45df25a-cd7f-4d54-ab95-f8bb1adf19cb"
        },
        "item": {
          "id": "058320da-35bb-4c55-a151-df3b492611c1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ce6ff37c-70db-466a-92c8-9004a5fdbc40",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb0946a-2ded-41fd-993c-8b3b98ba0cb1",
        "cursor": {
          "ref": "783071f1-1fd0-4d46-9a9f-47ec6d09702d",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1d757d8f-23db-437d-9b36-34e68ee61d52"
        },
        "item": {
          "id": "0bb0946a-2ded-41fd-993c-8b3b98ba0cb1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "14fda87a-74f1-42b7-88c6-340d35c16aa1",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc06fc2b-873c-472d-bfd1-2f04e92f0737",
        "cursor": {
          "ref": "9b3566a3-8724-4c38-b164-802df3f65858",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "78083eef-9d7d-4221-b560-f8c480a4a95b"
        },
        "item": {
          "id": "fc06fc2b-873c-472d-bfd1-2f04e92f0737",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b294f522-32d4-4b91-a273-32b979ed9763",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc06fc2b-873c-472d-bfd1-2f04e92f0737",
        "cursor": {
          "ref": "9b3566a3-8724-4c38-b164-802df3f65858",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "78083eef-9d7d-4221-b560-f8c480a4a95b"
        },
        "item": {
          "id": "fc06fc2b-873c-472d-bfd1-2f04e92f0737",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b294f522-32d4-4b91-a273-32b979ed9763",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc06fc2b-873c-472d-bfd1-2f04e92f0737",
        "cursor": {
          "ref": "9b3566a3-8724-4c38-b164-802df3f65858",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "78083eef-9d7d-4221-b560-f8c480a4a95b"
        },
        "item": {
          "id": "fc06fc2b-873c-472d-bfd1-2f04e92f0737",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b294f522-32d4-4b91-a273-32b979ed9763",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0484d85e-141b-4226-b447-5919758e0b8a",
        "cursor": {
          "ref": "4a0a2331-d569-4f61-b86e-1fe41cc1fd95",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "916b37c5-13ce-4193-bb32-2d4e67e9a744"
        },
        "item": {
          "id": "0484d85e-141b-4226-b447-5919758e0b8a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3041e8e6-7727-4216-b241-e2bb7d479b51",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b911cbeb-9873-4318-880b-ccd6f98484d7",
        "cursor": {
          "ref": "e1025b36-3226-47ea-9daa-8c32df9851a0",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "45b5a03d-792a-4861-bb25-f9c21460ea84"
        },
        "item": {
          "id": "b911cbeb-9873-4318-880b-ccd6f98484d7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cfc03d49-7382-4377-81d4-b57b700f68d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b911cbeb-9873-4318-880b-ccd6f98484d7",
        "cursor": {
          "ref": "e1025b36-3226-47ea-9daa-8c32df9851a0",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "45b5a03d-792a-4861-bb25-f9c21460ea84"
        },
        "item": {
          "id": "b911cbeb-9873-4318-880b-ccd6f98484d7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cfc03d49-7382-4377-81d4-b57b700f68d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a8afa9-b4c4-4f83-b604-5ec372b9acaf",
        "cursor": {
          "ref": "d6a41a73-95de-437b-ae72-fe64ba0eeae7",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e48f6d62-a282-4d33-907f-c420d453f8b1"
        },
        "item": {
          "id": "97a8afa9-b4c4-4f83-b604-5ec372b9acaf",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "d2bb3141-d28d-4037-885b-496b07de3f5a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca72193-23cb-4e3e-b666-35bd46403829",
        "cursor": {
          "ref": "557d0890-9043-4ce0-9e56-be55cdad574c",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9d4eb7e6-47df-4c17-ad24-bfa2ad20be7e"
        },
        "item": {
          "id": "0ca72193-23cb-4e3e-b666-35bd46403829",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5e9c66f5-067d-4359-8560-affd39c3421b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca72193-23cb-4e3e-b666-35bd46403829",
        "cursor": {
          "ref": "557d0890-9043-4ce0-9e56-be55cdad574c",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9d4eb7e6-47df-4c17-ad24-bfa2ad20be7e"
        },
        "item": {
          "id": "0ca72193-23cb-4e3e-b666-35bd46403829",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5e9c66f5-067d-4359-8560-affd39c3421b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa86dc29-2424-4643-9108-7c53486be126",
        "cursor": {
          "ref": "188c4f38-9b79-489c-a746-8bdb85b94cb0",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8a716349-7445-4a39-8ea0-e614e6f213c2"
        },
        "item": {
          "id": "fa86dc29-2424-4643-9108-7c53486be126",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "deade96e-986c-450e-94d0-b6d8dd7c8166",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}