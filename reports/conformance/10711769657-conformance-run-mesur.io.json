{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f1edf56b-a68f-48d4-88f0-58a1440162f4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3e0419f2-7df8-462b-8811-060a888631c9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb3367a9-89fc-4b20-9dd7-311b0f6f9e1c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4dbb6395-0148-4b66-9d81-2a26565273e5"
                }
              }
            ]
          },
          {
            "id": "2206b481-2760-41b6-8a36-61c746c5a155",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1943066c-1167-4db1-b38f-9194bb2fa6e1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "309776d1-5273-45e8-b718-019bdef92db7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f5e951da-5b18-494b-a91c-8072220d9e9b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "724e5d8a-cebc-4c38-9245-5fd4c196472b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "db1198cf-ca19-4d64-ad09-44bbc2a05201",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae7e20c2-9e52-4ae2-bf30-15662e6b63ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd74a464-e77a-4b92-be85-bdf3ab8aac51"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "95fea4bf-aad5-4c21-9ff5-61bf9666640b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b524463a-fec7-4d85-ba3d-9d13254001db"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "13584c35-8dea-43e7-ab69-c4d54fbe7d3f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d96aa85-02d8-4289-b4f4-dc310878a982"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff6244b2-1fc2-49e7-92ef-943e052f95b0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "22d19b16-b0dd-4ec9-b545-2eb23411a71a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42c65824-4602-4a1a-b7a7-cc288c9e8375",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "663ac48a-1933-4359-9172-af48bb333c09"
            }
          }
        ]
      },
      {
        "id": "e71dd77e-f089-4663-bb27-b2d9d39c4c0f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "faba0844-c433-4c38-9fa9-b392cbcb7ade",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b01b7ff1-ea2a-4f98-ac2f-84d9b1efb9e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "40c8c5e4-a537-4f06-a343-7857ecdc50c4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f004788d-986d-4100-821f-f6d21fe436d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09c7ce6d-84b4-4382-93a5-bd7ddaffc53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271cd9ce-f5e0-4bbb-950a-0ac08ca1c9cc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799d9f7c-69d2-4a1f-b3e1-3cdcdaa70410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41da7762-f3d7-47b8-a58c-94a1f41d9b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7399093c-2be5-4be9-8090-50776e542a61",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebe7075-ec88-4593-8f66-0476509332ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59da0a13-b768-45d2-bf19-6034c38f3941"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eb0d390a-e06b-4f72-8485-36336c0bd9a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e7c478a-c0d2-4a13-a919-6f54052e7b0e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1451e93-3db4-41fe-908c-60d2430dec28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdc8ebc4-a1e1-4a25-aeae-d2e5ea168fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3554e465-6be4-4336-9cb3-0d18837ef007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d166ede-79a4-4df0-a337-417075366ccc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4c425cf0-1d47-42b7-af42-65bee0d46291",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e8d855b-0f1e-48cd-8241-ddd9fbe9d15a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fba0a57-355b-4155-bfad-eafd9ebdedaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "16ef2c5f-69c1-4508-a3a9-3c5910da2c03"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fdee6900-46f8-4546-94ec-b817a062ce94",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "615c9103-7f19-43bb-b93e-deea99fbe250"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4cad322-0b29-4fde-9a71-53abfd5a73f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0c75d6b-c2fd-4ea2-add8-31982807d32f"
            }
          }
        ]
      },
      {
        "id": "07dbeead-5887-490e-b677-449f2fb68fc5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4bf40176-aaf1-4785-aeeb-3225b91916c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "adba57ee-6e1b-4eca-88c1-9a8e4a1890a5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d3430188-2bf6-49c2-ba1f-a001768e2b4b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be37b5ff-e95a-412b-a75a-66c689c7b538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d775a53-c945-40fa-95e7-3ec11480d45e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce70706-797e-461e-9e9a-49147a0345b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "809d2246-f139-42be-bc47-d1f0eee8b012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd33416-7f89-40f7-8d3c-7300d8dd2dd4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df171c31-9ac4-4708-9464-521d20507a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9848c793-d758-45a6-804e-4d502c04b503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1689d871-a3df-4bc4-a9af-74fda18d1164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a76e5a8-6655-4f39-a3b8-665c6e757117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9427c3cb-8569-4e11-a34a-30e7bbef948f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d2565a-2923-4744-bdc2-613158178a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be56d369-e97f-4fb0-a45c-5fcba8390f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df524bc-8416-4ac4-957b-0fc03c8f05a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aefbb666-24b0-4724-952f-eb9fed831e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa06f59-fbfa-46da-9386-47a6aba54344",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3439a51-cea7-4299-b73c-6153bbda24c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e744943f-7f52-4a37-b761-a1b6267005a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947453d3-b859-4f7e-a2cf-a4c497d2f4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "795cc6e4-1f27-4429-819e-05709c8c736b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc24109a-940d-4464-9e2f-8b8cf42e4bc8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c64d01-4703-4e32-af28-2fb5bc5a0b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02f3ed9-f775-4709-9f00-79ade60fa20b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae44a73f-3ae3-43ca-be34-f81ae51b8d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84cad23b-15a2-46f6-ac97-099de4a8bcac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb36f32-02e6-43ad-82bc-e8c38a0a04f9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebf5de7-9eb9-4296-bd43-a791c9324a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db85d6c0-6e54-4140-aad1-a617772fb536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139cfc56-817d-4bd0-8c6a-b002ec1f11f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c85564b-b0b4-4d3e-ae28-d12fbfaf5cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4090d1e0-378a-4085-a9bb-dc5d60cd282c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7ca942-dee9-47f8-b946-7c60ae03786b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3197b310-0dd9-421b-81ff-5907fdd5bed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bbf516-333d-41e2-ad1a-587ef6e32c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cce7403b-5cd4-42c9-a730-db4d1d7b7da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4981fcb-27ed-4ead-b3df-584dd2e066f3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16dc091-d30f-4c57-af9f-b8589497dd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9b2662-e785-4231-8ab6-2b654d11ff9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d68811e-3f52-4846-ab7c-1214c837d11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b8a8b22-cd91-40a9-9222-a067c396bf2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0640ab-ff89-48af-ac28-747555e93632",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f426b00-269e-4661-a987-9f7621c3e94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7c8314-ab23-453c-9ae4-4665a2434e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4cc949-096b-46d9-a248-bc2b50866a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c8eea7d-9d0a-4b6f-a7b2-f9bd4b42ff56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32089e6-80fe-4c54-bf35-3ca8f2bffd35",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438a2136-8e31-4e7b-a362-5d2d1c409c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cbf79d-4c76-4dae-b335-1559de7a126c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e0a7cc-c0c1-4cbf-b339-c937133d4628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae8115c6-b53c-44de-9b4d-6db15ba50832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b0ecbf-36f5-47c6-9585-ea2587cae177",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f777145c-a297-4954-bd90-570b3e5ad040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86896f08-450c-45bf-9e6a-5ba2091ae2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30edc370-410c-4c51-90e5-8c81cf07b8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4746874e-b072-4b75-8873-7846aaa2580c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9597eb3d-1aa1-42b8-b1f3-62eaf7840dba",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda80cfc-665a-49cf-bd9b-ea1adea231fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bedbed70-16e3-4e3d-9ee6-b22bf1d18f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6085ca52-976e-45ef-95ee-6a4ac85788af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99cc129b-a753-4695-8853-eaa0bca107bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b326e702-6020-43f1-a53a-e244777b673f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e3fcb6-0357-4de1-b4c2-8306d9dd5b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a71c628-a0b7-41b3-a029-e7abf44ea87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2fce98-18f0-4136-ab04-74adbf667b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adb87e9e-f288-4d72-91ba-05240f0b3bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f376a1-93b3-4176-b535-325731171ab5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cd4145-8228-49fb-bc2a-d8d3f6fc2891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b7316d-e8d1-416e-b707-d202aaf3f1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897aec6c-75dc-420f-9437-656404efb3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8171e5a4-78d8-4edb-9ac1-72fc8e104d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbaf538-6fad-4e29-bd9c-74a2ace0d69a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257df8c9-6eb1-48c1-9a3c-b00f5721b6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c254ec2-0eb9-404e-ba78-025f4b6978c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f0a203-d500-4042-ac81-c31893546e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e8fb661-c27a-4ccd-90ca-f2f8b7447d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da589f69-4349-4067-bb64-227bbbf2ef9f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1d6acd-4d40-48bb-ae80-c574cb6f693d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e1a99b-ed37-4745-9125-d3be49d5829a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16066421-e4da-419a-a808-1c2936e01f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9674a623-a4a6-46a9-bdde-dab1bbfe4c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f8a33e-1680-411b-a61e-c453ff0bb742",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd31064-1856-49f0-ae5b-963a78d72811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbba43b-ba2e-4d08-9387-2e725ba08795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7be7c6f-74a4-4382-8a68-e2f86c490278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33845efe-9960-4058-9096-3a01f1ca1cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe059092-ab5e-4621-8baa-2f731fc1086e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b7aa9e-1390-43dd-98cf-3588828dbf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702ce968-1ed1-495a-abb3-22cb1909c96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be73735d-1086-4ca0-9116-91a00d363f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb5b43c-891a-40d8-86f2-13cd5840b8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da1d7f2-4fc6-4fe2-9e24-1f09b6bfe7d2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528df956-07a0-46a2-94bd-f431236b9fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6305789-a2c1-42f5-becd-ce0a43e268c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b75dbe-c527-4580-947c-b218da1469c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c01bfa0-69d2-4bac-b4a8-8f4b3a6b38be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cf217a-fc8f-4d86-88f3-e08d401c727f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66d0693-6b68-426c-9cc8-9c34028b085b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70618328-663c-4bb9-8270-a2ca382f6481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fca541-8687-42d6-a611-71ac49ec37f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8646fd1-490e-4245-b11a-2908884dc491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a3b1b6-41b7-4cc0-a108-ed9108a8623e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e221925-00b3-424c-9b94-3b25bd7c4996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f455ac1b-a367-49d2-bcc8-24f42fc480c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde3041d-737c-4709-b0fa-df2f1b799a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd268626-dca9-4b26-9775-181b0c51385e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd997f4-9380-4622-a840-ab4dc554731e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74917411-6c4d-49b3-9387-0ac8f4d63524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece62abd-5fd2-431f-8d5f-fb217a47cbb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90410aa7-c01d-4bfa-ad4d-6468cf493bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "557a9936-16a6-4589-9f63-555f1309e27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9ad697-73b6-4392-8984-a66ce3ce43ef",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e39f52-3778-4496-9af7-52db8b7a98d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886ee8ca-7b26-496f-a9ef-d34d47ac3b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d04abfe-44e8-4773-91c7-612cd5b146c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d27a24-b895-4a3f-9132-7db02a90456d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ffbd57-d4b6-48f6-912b-7bb519a1b0bc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1894c82d-16b9-401a-b744-1615191d260e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4a10dd-120b-4c71-a65c-845660346154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bf62c2-901a-486c-af14-ca0889a8147c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c4dee8-8ce2-4d7c-9fee-d2bebb1957b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b8492b-ce80-4e44-b98d-6d33bceb400c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0f7a40-7ce9-45d2-ac45-c677bf61e153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19128df8-a1d1-453b-9c94-fdc37ab867c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcf08e7-b430-4256-9c89-2d3c26a0ed6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b34e35bb-4cef-4d56-9471-87c8a6ac548e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc8da67-6f4b-4a76-824c-e07d97fe600d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56efc627-1cdb-421c-b41c-669c020d4e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6167957-6fce-4d65-9a20-ed5eac82cd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3282ca10-9e9d-45bd-a6bb-af100a3545e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe5b2bd-867a-4c23-aa94-e5d73b9bfa8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f40904e-ac23-450c-8fbc-718f6709df83",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ecbe71-ce7f-4e61-8ea7-90f6bb0ff713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b468d8-4f3d-45c7-a588-a8cfb61c0a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508f5f48-c8bd-4634-94f6-75a64f3ed1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6107f345-a521-40c5-b2d8-e6858b5c8c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ce0bfc-709e-4d57-89e6-0283ccc168aa",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f994ff09-678b-4407-bfe2-06ebf2007b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a58a3f3-d928-4ca0-aa8a-ba882a2af93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3b2f77-9390-4bfc-917d-62a671686b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a23d3ed2-6474-437a-a848-793f321420cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765c6519-bac1-4a2f-91ef-de17aa4476cb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb82b28-9618-4e2e-9011-3f5a64c68f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e145229-1831-4838-8a3c-7929566bec5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa570e7-6163-4bc6-8380-a4534bc7c5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb6effb-e28a-4585-b0f1-9d17f509f143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47980b12-f389-4cea-9940-8fae2b0e9611",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665a93c8-11b4-48cf-a840-a2607aaf4156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9849343-75d4-4b1d-ae0f-db7b3252ca95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e7cacd-a26c-44d3-8c0d-440b4dad4cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6205a844-ce90-4cac-9479-778c7eb50bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7ebbc3-6d94-4152-91cd-92e7d289f5c9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1efd52f-f44e-424e-aa2e-663d50e8e740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb297f6-0063-4a94-8fad-15ff661fcb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091aa06d-dfe4-45ad-8fb9-9d206c559cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8791e5-2e23-4f96-b49a-083440ff19ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f301c37-a6da-458a-9e8c-c3e842ec7fa9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c760909e-7a2f-4975-a288-aa860ab1bfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94866325-8c7d-44b8-891e-a7d40e951379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71d4d5d-8de3-48e1-a9c5-331465b4a9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ba10f1-8e34-46e6-bd51-6432e5261cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d42d15f-241e-47b3-9a9b-d01297a29f8a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb023b34-7701-44c0-8c11-d6462220581f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5109fc0-d615-446c-9a33-8993f9b63a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbd7905-cb5a-4457-8503-c974c9cb477f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2dbfac0-f1fa-4674-b579-e3adef832290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e4f36c-a07b-40ac-816d-17f192cf04af",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827892b9-b120-4ac2-9066-1b80241607f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc04203-696a-4dae-a4d1-2bfc5f859531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228fb965-b654-4ccf-9a25-228b70c04c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06cb56c8-9c0e-4550-a2d1-3efea44defc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8865641b-938a-4525-8ce5-02ffd688b74b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61dec47-afdb-4c80-91f6-0cba6d38e9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064689ed-ba2f-4955-9baf-8d6cf6adf6a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c735464d-c07f-46bc-a103-6e3276323d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "52fa0b22-7424-47e4-9dc7-b5219f5085d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ff6a74-9848-4a63-bfbf-eee259fca055",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7d63b0-254f-4385-9e84-278bd918666e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c8aa9a3-2bf7-4900-9599-e945a8fc1343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6226e874-db7a-407e-835c-0129446ce244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d1ea71-57e8-43b7-8714-46d64fa95746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a17e8c6-8cfa-4b40-949c-b625c7a36613",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4fac1a-5ac2-4de6-a149-1fd14c75e76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a2c392-3397-4f3b-aa01-c6cbf5b08c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78934f8b-205f-4923-98f3-4e579d15d160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5814bf-94c7-40ec-ad8d-37659d19ff91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ad7ab5-3714-407f-ab46-e6198c365c09",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18dad4c2-52c6-4a02-b8c6-5e65abecbea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23752f53-4d78-46b4-bf55-eb37f3197e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8685e2e-f067-4bfa-8aee-573f92ff6c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1d189b-ddf3-4593-9ae2-202cb26e95db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea748b91-f7ec-45ea-abea-deecfc3bf3dc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d83d18e-863f-448b-83d1-4aae093fadd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402cfae1-4413-45fe-b1d6-9d19a307c8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c36c0b7-4896-47ee-b6ef-dfe411d89cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "595fe7e7-00f7-4089-a01d-7616678d9e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8cd0ec-0a3a-43b5-b408-69b4ff40fefc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff03f250-f0e7-4d48-a632-abae1ae5f88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d453ff73-87c6-4675-ae91-27b71e11061c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fd73ac-fdb0-496f-8ae1-aa00ee5d33ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c99f34ca-9b18-459c-9428-04db6fae9379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d4b7ca-ec91-4d4c-9a66-642169308295",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73877d8-9e7f-4fee-a7e2-393644cb7135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1242fc83-63e2-48a9-80f5-cf8e45ecf37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d864508d-0753-4b8d-927b-951656221204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f14bf75-a37f-45a1-bbcf-84182e45e0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a164715-260b-4f66-8ffc-ab1864929614",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93dd7cf-5094-4202-9d90-112377135ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da13735-ef01-4159-8321-1e62a500355b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b1b712-4b68-46a6-8fad-6d5329810b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "32251e66-9e4f-4144-9aa9-26627c3531cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81505b1b-c90a-4b42-999d-8015a1883d5e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd437b2-a473-4cc1-87bb-11e5625492c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64be212b-5a97-48f3-aff9-711c665801c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c94e2e-f058-4368-ab7e-c2126762addf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce30247-e843-4ab9-af23-29e0f8ad6b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df1ba83-e5ee-4655-86f2-6b7356f006f0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721c8002-fb55-47c7-ab7e-5e655f05d33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00fb2d2-9d94-42df-8466-4c9e6d990946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616e9e1a-510e-4704-adca-56e93bbf21a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7909e53-6ed1-4ce2-a99d-71abf4445701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2c5766-ee87-4b0f-9328-13f0d70e1873",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446ded34-a487-4a01-9327-3b55b7057d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c039899a-ee07-4145-9527-577eddb1f5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c60501-d00c-449f-998f-8807c5ce2eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6afe63d8-528f-4162-a015-a22010c4637a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbf0cab-6e40-4680-8b77-b6fefc39cf6b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ff8072-3bd2-4ca4-bd81-976d304591fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5977aab-a5a6-44f7-a5a7-7ee951e84149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959dc42a-d830-4b0f-a48c-ef93b006b872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e88c4a7-be4a-4716-b677-700ee6c00be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d92e12-ebcf-4aef-9b02-cf692376b3e5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f115e6-eefe-4340-baf9-a649657af01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c33055-5cfa-402d-9ea7-648f9183ba40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4be701-7c6f-4953-b66c-4b877816cb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52d6d7a2-ab7c-4e99-a6f5-7af4048c4bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8efdba-ef30-4cf5-8b78-e817e40dd6bf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b81023f-bba6-42d0-b23e-4f926817fb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9207cd4-5a2f-499f-9c15-dfd6f27a2efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ef01fb-b79a-4525-9f32-8549ccde85a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d6c0de-ba45-4fa5-8445-e70415a80f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64482e1-3d01-4c42-bbef-ece571068b49",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b529451-9f0c-4ab0-8ac5-e4bb29f896cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59ad68d-3717-44de-a7c8-315ea9940cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc191b2a-5816-4a28-abb8-866fda0dcd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc240be-bc34-4bd7-84e3-971421cfb78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8609d9bd-4197-40df-85fa-fabca8253865",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564ca499-2490-4ca5-a1cc-521c4574b7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb9289f-9bc1-49d6-8751-d580cbb6def4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb637546-ee89-48c3-8c00-f7878c725169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f579454-8b09-479d-ad00-483c5c7c78ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcc5f80-9fbe-4d4e-b5d7-4664b733c60c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469a5004-c6da-4f70-bc84-e1fd3fb3458c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbcc8bc-2cf6-4240-af59-e49b8039948e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95038f2-7e5e-414e-973c-ea42186a17d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad969537-459c-4c1f-9bb4-610cfffa316b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8751a858-4148-4053-b5ff-f239ac21eab8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208c96a0-e053-4e21-9c1d-93ef42b71f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1fbbbd-ba48-4aaf-87b6-fcfc7853ad46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa21e4aa-0b92-43ed-94b1-591fecde7b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9bd59b-24dc-4f81-91ce-ba8b48067d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11491cb8-1ce0-45b6-9eb0-3264fa78f948",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07dc07a-5e2c-4dd3-a1f4-1fda08b7e7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92952e3-369b-4912-818a-05c24f5dc140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bac3a4-aa9f-48f7-becd-97d14f543b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9922a5d8-c5d4-401d-bd0f-828adabf02f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe341628-e15b-4bef-b29e-6f0ee9e8108f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0898e7d4-3498-470e-8c7f-140038d0d6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43868aab-1711-4341-941f-18394142f7bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4148ec2-5483-4520-b30e-33d93eacf7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e95a4020-6719-40f2-872b-da17ed821bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d356a448-a43b-4cb3-b2b7-729951498b29",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bf15a3-794d-4955-a895-d84ada9e7953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277d603d-c655-4bb7-83ea-c089256d43f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0c103d-5844-4976-9796-2f118811da85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b566e55-7ee9-4ca4-b883-8d1799cc9584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c725dc0-5be0-4209-8189-088abcc55a85",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c571a22-ebba-48f4-987d-964f904cb813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c90c8f-0ac9-440a-b6b1-5aed8775c77e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4be9c07-cf0d-47e9-ac79-b792d49b237e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "47147231-cee1-44e3-bdf3-e8f83ca61fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b70e56-56a7-4173-b075-40c3a4a1f7ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c14d4a-2dad-438e-86b8-d67605d53048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e879dd1-2772-41d5-ba5c-11d28f316561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e78e6a4-fc51-46bb-8c2a-814aa19e007d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1359c41-7572-4294-9ea5-0f6f8429df78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4ba06a-3e2f-49f4-b88f-1169700e20f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9946e14f-b93c-482a-9491-547229a608fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cfd030-43c0-435b-9b6f-e4607283c9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdac5516-68bd-42c6-91d6-a933a74906a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b09398ad-2ac7-44bd-965a-583ec3376f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bb1cda-96f3-48d4-b052-f2b03ad2b385",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c96224-0e84-45ee-8f20-6efc3015ce50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0bf977-c4c2-4f86-ad84-bff20ecf7c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a955582d-fb1b-4fb9-8ba7-7501cf019be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f86638a-ba10-4e03-9ded-7780ef330389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ac769a-9173-4162-a767-bb93df78759f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdd40c0-7bf5-4b59-bda2-1c3dab9879c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a752e0e-4f97-4d25-9fee-65f47bc596e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83028de-4018-4d45-b568-699ee7713707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd5af37-0e86-49df-9cbd-bb3167e08540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09f9814-2e9b-4df5-9a72-1a02f4336e44",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8538cb8-da56-452c-94dc-33f0c6e29417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78047151-62d2-4860-9a10-5a708704a72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7066bdeb-7a66-4909-a4af-95949cdbaffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "afd7f419-d86c-40f6-83fd-0e73955530a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa2112b-b67a-4f44-8623-49a46b821520",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85aa2f1-2844-457d-b2cc-bda5e79c75ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87a5998-9ee4-486b-899e-3bbad441bd23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ab95ab-4c2e-4709-a208-b66ce1addf05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "612e3720-5e4a-4c60-bf1f-62a072eaf8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed22b4c3-cd6f-4567-8366-1f3dde8ef167",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b61942-7c78-49b8-aa44-81f2ada4cc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6dc928-0efd-4921-ae64-bbcdc0df7fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2307fd59-382b-4a6f-bd19-99bde0c65860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd343974-1289-4b3c-a72d-7a9ba8f57a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9846300c-e7f1-4611-ad04-9ccb5d4f62dc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b70f54-af29-4626-960a-ce28e4767bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a346a83-c247-4e4a-9d7b-6e0f963de4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777338b3-0c3d-4041-9ddd-367c5963cc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bddfdf6f-70d9-498f-abed-b810f9b323ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bce4919-7e19-4ec7-8397-baaabb2149da",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a5db81-ea34-4857-be5c-da628f31d11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21f7f85-7da3-49b4-bf9a-4e6d9eab7da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14d0b74-0302-48b6-af7c-861f55ac08c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4a4330-91ed-4f40-a5f3-7a9cbc30b2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34b0270-d571-405f-a674-b67af02a889d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f5af79-ad8f-40a7-bd69-091ccbc106cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e17c79-5e80-414a-8f5a-6a1fb57efce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2b4650-e7d5-42f2-8cdc-123b9aabcc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd58ce4e-c5c3-43c1-9fcb-a03a04709871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5c1aaf-03d4-4dc2-931d-a1940cdc934e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb26bc3-83a2-496d-b8f2-6eb2262d7070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5831c004-82cf-46cd-834e-e7103ed6c248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5421d646-a8ab-4b25-9032-52a2b05a9a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40c0bad4-d9c0-4098-be12-873157493fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc83ec97-4283-4003-b91e-48afa2e799e9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b94036d-10af-4c7c-bb10-b72c2f26d6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e9b846-587b-4cf2-95d0-f46f9b3f71ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1820ea50-f751-4b49-aee8-db2a7144660f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7180bb44-05a4-4927-9253-42523eb5d833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937b61a0-80b6-49ef-a069-5a691aa7bb78",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07b6097-0e63-46da-bf34-a2105ad19d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be33a51-b632-4984-aa1a-e478aacf8d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3131eb0f-64d0-48d4-820e-0681be9b711f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e56be32-d685-4217-9801-abd3d8ee577a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41cbbaf-4c1d-4e90-8ef7-9b7930794881",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead499ee-2d00-4fff-a3b2-bf12ce635b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95c8d6e-8ee5-462f-b8ad-d62b2daa3ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcb46ce-74e5-4921-b1dd-1e3895d04788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4646b0f-c200-417e-b7ea-93815dd342f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a10d0c-d60c-4ad3-9b59-12b0c116db06",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d581a8c8-c5c5-49a3-9226-d76d46f51a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6495915-dc13-4ce0-a7d8-aa4fcb7010f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc8c8bd-64c5-4f07-9345-2a9335895922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a192226e-58b0-43a6-8293-867fad5f5e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30834a0a-1e50-4934-bcab-98abd2c9b9cd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751477c8-fa08-41e8-80dc-bebbee03ffaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef924d31-0ba9-4c09-be2f-7c732b482fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b67c10-c379-4b35-9fae-558eeb48cb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac2f0e7c-97af-41da-9785-71c39c88d627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996c2ce3-4550-4110-9d17-e66e926bda3b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc594450-16cb-44ec-9a59-1980e91f507f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa1c542-ea91-46b5-869f-25c358c48079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e3aec5-2e91-4281-8152-028c0a85d211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68f07019-7dc6-4325-8e8c-3a1c2defe2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d71b2b-0654-4b06-b42d-9c789d439237",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892f389c-1b5a-4001-ad0c-5a6114419394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d346a547-264f-4a53-afd3-ced91497f40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd15a2bc-a6cf-4d9d-9322-826ffafdc024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a04d29d-af5e-469b-9bd1-471e58e7dd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3131bdf4-2738-41c7-92c7-8172ffe83fce",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd3e706-ea2f-4afe-b39a-5d7e778f0ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff7623b9-593c-4bbc-a1ba-bcb3faa20e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340b7f28-56eb-4d26-94ff-2f9975b50257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8801db-f288-4333-b36e-2ba767d60ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931adc36-679d-4c59-93f8-8738b7200991",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e3927c-eb44-4234-96fd-658d158650ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1092b299-0372-4193-be24-23ae4de9e110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e71b53-92a9-4530-bb95-76133977f677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc44c424-f419-49ef-9bdf-dc901b0ac8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1335a2d-ef81-43a0-a743-0b1f8785733d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2c04a4-fbc9-46a3-b3a4-f1659b60d298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1e57e5-6897-4cfb-bc0f-6f16c2c0d152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a78386d-c352-4859-9817-584dd88ddb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "194e61e3-7291-4a6a-bec5-d42983a1f0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d265f467-c00d-42cb-be43-4970f72c940e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762afd5c-88b1-42a6-8226-4e40c8100050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62d0931-1a09-4c78-af87-55e144699502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a299dd73-cab7-4155-ab0c-5716374ad527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5b11a4-fcb9-458d-940b-d910fbba32c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90029247-e709-4db7-826b-3f5493b7c79c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddc1eb6-4994-4a53-9273-6b5e2aa6d794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68613a45-a3cd-4eee-b6b9-dce9764f09ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0284ebea-1d6f-4839-8df8-2f232e60ecca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2f8e9d-3d01-40d0-89d5-5b009d341761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b150399a-ace8-475b-a3ff-e68f776d9789",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be17700b-43b1-4f92-b0d5-486f83dc400d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6ef48d-b626-4122-a1ad-6e49cedacfad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a44141-3fbe-49ef-a889-9148af46a316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f69d20d9-acdb-419e-8827-2764cbe3b680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9617d3bb-098b-4c82-96e8-f7a0ad007a93",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edaa63f5-e320-4809-8c43-1349f409957f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e74906-7390-42d7-a6c6-5c120c2d1c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29543e41-8ffd-44af-8479-226c3e1c54f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "92e178f8-f965-4a60-a669-9fe26aad5dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868a2230-153c-4a15-9007-c883b60236e2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bd9e5c-59f3-41b1-bf5c-876473003a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7825b6c7-e5b1-406e-8ef2-345231cd696d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee23c772-5dfb-479e-8cf7-23ce809e9e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f612a6c-a45f-4efc-a7f5-88e18e349f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35be571b-7145-4a92-b5c2-d27783491ccc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b335e20-4d68-4770-be17-18a848905990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99bfd0a4-3186-403e-ad4e-b2b2324fe7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5bb609-a76a-4c59-832e-20d5854c4dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eed6fd24-e713-4fc2-8bf5-fada327a1d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5934746b-e82d-4cb5-9252-a098712fabd7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e29e27-9b41-418b-a439-5d875c3e4aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2cc603e-6dc2-4128-ba7f-ba1c2f26e45a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f320463-eaa8-4dfc-84e6-83128bda32af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20faaec5-969a-4731-a895-87bfb39747bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407a588b-c2fe-483a-a7e2-ac39615d027e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64901965-ab74-4530-a540-d1005c11ecd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd76e56-83fc-4c3b-acb1-e1c8a0f2cc83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8417e8-258e-4d8a-9363-7be06900cde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f00e1aba-7193-48ed-b91f-e8cf8a5f1296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f290bc9-29b6-4396-8634-c9d483ecae18",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13246b5b-205d-4109-91f2-45c35275e76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5c5b80-9367-494b-90da-9168c7dc0b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c664741a-fa7d-4d29-9402-fe78dd2e8e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0117e9-2e68-4845-b0cf-b3d905c45519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92cfada-e13a-4e61-b088-f9cd779379ef",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cf8b14-ad10-412e-a0c0-829dad55e502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b15fe0d-f52c-4c44-a8ed-b531374dd33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a19953-1618-4e5c-9666-f72582891ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3c6680-25af-4104-977b-539f509ed06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4ef437-d8fa-402d-81c6-520f45252acf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0cef69-f3dd-4f79-8ed1-4deb40b044ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4e3fa1-f11b-42d1-bcd8-5bb108bee49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c809c8-21df-4522-af70-9c7efa6df127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2651de50-eaf0-44b8-86ee-51b990c98c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af0c031-1f75-43de-b210-e9eb1dd6e7df",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1b2cb8-3bb0-4686-bcbb-5812051ab664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740cb956-2059-4994-a470-6eb82111a2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6e5d69-05ee-4193-af04-5dbdfe84d9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0707e292-edc6-4af6-8e4a-f1077e5484f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f02cb7-c5bf-4186-86f3-48811dd17c0f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a499b18-0c95-4fd7-b9cc-b7ea6bb1e2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13b2b6b-37ab-467e-a531-f727ed92a5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166eff0d-970f-4ae5-aa83-ae29aa101710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "66924497-06c6-4ac5-86c4-5c94d6afbddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b4565e-6e56-4f83-84c0-8e9dec76b9c3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d60a43-7988-4893-81ae-87a80ad0fea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d084055b-fffa-405c-8e51-0df3ef3fafe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7d2738-b97a-47b7-b24d-a6f89612c237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "93e2bad9-ed89-4aec-9f11-29bdc49bffca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59819ef2-95df-4c50-ba76-385245fb4824",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12ac3f7-11c7-4681-aa81-459617c2f75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e46143a6-c85e-4d86-8364-449a1697c6aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c030b5f-62b6-4606-bba7-2f3a1fc33a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "59ec0c0f-5675-437f-b5a3-0bb2970d0528"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4679f06d-cfc8-48df-b9bd-79963166b344",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "264cf62c-449a-4183-b441-f5c0abb470f7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b534659-be39-475c-8a72-b695fd81341e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c516885e-0796-400e-bea1-8d5aa8d27b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea38f30-e1b0-4a14-a29a-a0f41ab33ea7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d11c0405-f600-4af0-942a-236e7968ca1c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab9407b0-7226-4cce-9bfe-39d625c4a694",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c1da25a-bba5-465c-bcf2-0749da4f9504"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ad0f77a-8e76-4bd6-855b-3f114e43cd18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44cb132e-9acd-4684-841b-91b91213ab7b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e0a97c3b-df23-4b78-a775-d07f86a14b03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b98cab43-347e-4840-9433-9c710cf43328"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d5110831-df6c-4713-a1e7-ea632e5921f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ce5c3bc-04e8-42c3-9006-a50785819828"
                }
              }
            ]
          },
          {
            "id": "fec870f8-c3af-4256-9e11-4112eeac4a98",
            "name": "Positive Testing",
            "item": [
              {
                "id": "76d75c34-fca7-460a-a331-95e0434a5340",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "beedc3a3-b8f8-41be-ab1d-9e6eb03405cc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff1acbf-bb34-4c39-938b-db0414cb8718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ca71b9f0-d904-4a94-bd53-44b3f1608406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38086ba0-e7bf-487e-8d5e-4e0f38f42eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052bbce0-9721-4528-ba9d-1bcf95b8ae6d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e73d3252-e865-4a87-bdff-6f8fae950a42",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9805e8c5-76ad-4488-8a11-846f68e27aa2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff7de03f-2635-4c3c-94bf-7b7c4d706993"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72a2acd4-70df-4807-88bd-21f385c5c5f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8101c50d-8c2f-473d-9a7d-9eebca444232"
                    }
                  }
                ]
              },
              {
                "id": "eb1a73d0-8f2c-40e8-83f5-1f02c89f7c5a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79fbae15-9ce9-42de-b7aa-87b916dc8b06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd51f268-90b2-4058-9c70-295e0ac248b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7527595-a61e-4218-ac88-dc065954ee72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85ed20bd-d1c3-4aeb-b742-dd66dc36c46d"
                    }
                  }
                ]
              },
              {
                "id": "7ae28e09-a97b-410e-a909-bdc07d38e3a9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34f1e39c-2c8d-4026-8982-1ba80bf9b4af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4da7fae6-2f6f-494c-8081-2dc066c738c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5233e91a-d23a-4d62-b0c3-582a6104e540",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d4eb0e33-b2fb-41fe-90ce-dabc38bf79dd"
                    }
                  }
                ]
              },
              {
                "id": "8a2a18ed-d219-4863-8821-27ce0d89b1bd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1c6a959-c3b7-47aa-b669-b37cd46e3bf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "315e9ca0-6e8f-4ae8-b4fb-a14661485f66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5ba468f-f4f7-4b26-bfd9-58385cb51cab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2307ffb7-bda9-41b7-bddb-4892bc14aac9"
                    }
                  }
                ]
              },
              {
                "id": "abadf621-db87-4f77-ad7c-81afc5065486",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "deebcbdb-3457-4608-8d6d-09d3f2b0c5ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4988d85-7e79-4c68-a117-06e86dc395a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08cef29d-7fd7-46f5-b228-0ca40a1e2e38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0cf6f124-0363-42ba-8e9c-e7d91556f3cb"
                    }
                  }
                ]
              },
              {
                "id": "b04d3931-1d6f-4003-8ff7-310af72edefd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74f2ad1e-c100-4210-8ff5-e76af15282e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c7daa20-fa82-4dd1-81c0-de63f3efb320"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f54951a6-0ec8-4c78-a64a-547b70023c61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "58d70038-8c07-40de-822e-2af359e29bd1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "541cabda-44cc-4840-a5d0-e72f7a7b140c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "196017c3-32b4-405d-b8f3-5c9839ab394d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "40e012b2-755f-4b31-b96e-1c6ee9c85455",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a135be27-7cb7-4342-9820-c8ff45aecf2e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "531adb4e-3e2e-4858-9331-3abd5e86d9ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3c524f33-234b-4947-9049-26d8637e430d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a1f54a9-5d0e-4b7d-9b31-6f552a27a069",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21c2b342-fb5f-4d0d-9749-3b617cc0fd24"
            }
          }
        ]
      },
      {
        "id": "e2237faf-2786-497e-9c49-d159658f4008",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "dfa5ce94-e3af-45d7-9995-08e86c9f7abf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8bded5b6-20c3-426f-9d6a-56582ed0fe5d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "815644ca-7640-4dce-a470-9c5d0583e42a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5208fdaf-e23c-4be9-a472-adfbb1f0df7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1f47be-9179-42dd-b639-4808438611b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879276d9-2a4a-4d52-afd6-9e32f15123b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5982b80e-0362-4b5c-9207-8179543b3204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d32e23-20af-4c0c-a69f-daa7bc7c707f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f92b366-6567-4531-ad41-ac3343078972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9262c58f-bf54-4493-9846-847c724e9b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da687793-6ee7-4f4a-8ac1-dc3fd8459191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11db3470-a2ed-4a72-8539-07626d0ef9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2073fd8b-cca8-412b-9472-ebea146947c5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557326b3-31f8-487a-8b09-90a174ac4d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbb5669-e9e3-488e-9ee8-03046ad22131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5844e075-3a4b-4600-b742-17a29adc9902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd13ba20-9d63-4e5c-9b5a-39c5c83c0f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694a6442-830f-4332-a13b-9a716a8cbfe6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342f452e-6d08-437f-abf2-42c6d3dda227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55ddf06-6165-413f-a8ee-955f74278bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76abac2-dd53-473a-880e-1e884b954723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a44723c2-3e73-48b0-b9a4-70aced28e0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29542f62-bd4d-47a7-82a5-9a8cd66e671b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bf467b-1650-4fc5-bd8e-3d9d79e1b659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325bb6d4-4610-4217-b78f-5889aeba26e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d2fb21-7080-465f-bf39-0bc96b43e188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb10f1a-258a-40a8-8072-930d1c7d81c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdea977-1d3d-4513-8cd7-0a13c51c4645",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238bd18c-f96a-4bc0-8c88-eec84102a0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a9389c-65c6-4ef2-a359-259cf1890dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ac79ec-e801-48d4-b508-b8c63f008438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eae4d17e-3b3a-4e2c-a1c4-df557d537a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8e2a6c-2323-4ac7-9730-17e56e144f2d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ce964a-1620-4433-98ae-653f6503f1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33db87b-982f-49e6-b985-7e0347ff3240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a626ac6d-3f2e-4276-bd1a-42092037c0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4944669-cbe6-4c50-b101-1ffd58b4508c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b5de8a-5fbb-46bc-92f6-1490ba5a8833",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3419911f-a1c1-4887-a75e-d9d5e5de0abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b2988f-f655-4875-ae1f-a452644b995f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f575a7d-75f8-477a-bc92-da1ddc01928c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed27e50-8efa-451e-8a7a-718d58519e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadffd27-07f0-4c5b-a3bc-714ed0ffd4ee",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b199f6e-0963-4974-8520-719efd5643f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9866461e-8455-4210-adc7-20a1405255d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7246a4a6-1a43-4671-871a-78016189f3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03f8bb83-3e9b-457a-9c91-07f0fd58bb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2378265e-fb4a-4dc9-9bb9-92d9afd14607",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e206b72f-98e2-434d-8a72-6971ced9d04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940deaaa-500d-4719-8e68-8d289a6c7415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50497042-31e7-4597-8c81-ff371f2b4424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08ba082e-df96-442d-9469-66b292355f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13adc254-d9a5-484c-b0c5-f6b2789ea3e7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ede03df-de97-40aa-8b4e-8b3093c09b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18f8e50-38d7-42cb-8c44-bea88e00103b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18e9b8d-8b53-4b8c-87e3-8cdbdf69cf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "619185b2-0651-47e1-a509-179136792294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d46359e-d08c-4be5-820a-63978875ad11",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31f020b-6596-4f77-87bb-a7244194400c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295edcf2-eca6-49c9-b75b-712cb2d9b41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e443f54f-7e4f-4a46-966f-2c4cebcebf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c223c63c-a020-46d9-813f-9033e22c66fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce7f251-0440-4859-809e-f77aa39a46fd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3108a55-c70b-44f3-b794-cd58d92d46d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a660f5-2fb0-4831-a651-2fcf9c706447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4f81fd-76a5-42e4-bcfb-0f6f9771a669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0866740-1d82-4c22-9633-a1c88971507a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97274d7-bf7c-4086-b56b-eb4ec91ee0f3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577e4ca7-d8bf-4269-9064-e55a80140c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381e92ee-498e-428a-9192-67fd2877ec34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d2de02-705a-46f4-b253-44bd4976bf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aca3bc8-a0bf-4f25-8756-a7396deb2cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eecfebc-6522-4e62-bae9-d357ac588fb4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d40858-0626-4caf-8b9d-9197ab442727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b99f879-9d47-4fb9-9bc0-7bea22457477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f2c09c-87f6-43de-93d0-d5b3f50dcb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3100d67a-4e99-45cf-9722-8d36cac9f938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8feee1dc-89df-46b2-9889-054d4e5d3c25",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b478673e-1667-45b4-9cea-6bb1f1a0ca77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d94166a-83a0-44a1-9937-18a7a6c3c552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba56f4ed-a88b-4f8a-b0ed-3348486e4329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3013405-c770-4445-a0b1-17390b1b0c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f513832-9696-4275-9b3b-658acb12adb5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614e4b09-98c3-4ad3-a254-9c51ad8f5e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c97a757-8f12-4e61-9be6-649b28f31b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a7a908-2961-4932-a23b-96b9292f95fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c115d87-185b-4100-b0ac-c707a3233fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5324078b-f351-4e5a-91b4-f121cfac54c3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cd7996-7295-4239-9d84-80dd9547d133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e7f4b5-1184-460b-9bfd-351810d53a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f55b03b-b0c1-4332-85a2-41ef77e6ca5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6005812c-a7a1-4d67-8db4-9ee6e8a1af4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c681b7-bc28-41a2-93ab-e7842502264f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2aada2-40f4-4559-ad79-836e76e531bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88bbc5f7-6da0-470a-8be4-5af086600095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbeb6c6-be29-4139-b244-36ccd9f1850f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aacde10-dd3a-46a3-aeb2-f724d9932308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8249eebf-7958-4251-baed-9a6b42ba0fd7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda065fe-e737-4954-8843-9431cc349e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f302d82-8a25-470e-b141-f096c6708cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52d389e-d55f-43d5-9b56-4264596ec712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7a368a-e868-465e-8c6b-233aca12543f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c5e2b0-d987-46b7-9771-b7d4a591edd3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4bd0cb-7c40-43e1-b50e-c6ff85476976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952851bd-96b0-49c2-9289-b767758455e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9812fc96-0144-49de-a66e-1ccb102815a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "561257f8-bed1-44b0-845a-6595c959c5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe92b218-6d6b-4fed-ae47-71acaa2e382a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551c12b1-9440-4689-afd4-b85bd2bf4bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05b1f38-22d0-4963-8185-d643fd1e9c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d14eaa-ba75-4e69-b428-9f46fbe6148e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c429d68d-f625-439a-826b-7fb59ef5aa1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b12a07-64a8-4584-94c7-cc15c9191673",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db0c4b9-0849-4112-a776-ae6cc13e7749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cdb0be2-3e12-4ff7-8b2e-df171d0c73f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c38e3c7-a352-4bd7-8782-36ad4f9b92e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b22fa9a9-36a4-466c-a80d-8423ce9be749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bf04a0-7ad9-48d1-8604-501b56e97f56",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79db2b62-1f14-4742-9ee6-57f94ba75538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34f8c54-fda2-49e6-af9a-69172f9b4780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd216bf5-17dc-42bc-a299-c591b9a19a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c25b1f3-5f1a-48f9-b2f0-37ff12936df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b9ab4a-ac7e-49b8-9854-cd38909a5943",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7311c9fb-a580-4a6b-be56-e2a807e2e4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56f999f-e817-48e4-be88-44f898c0f665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21660de-051d-49ce-8ef5-dbce1f31b86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "817ca0d1-0ae5-4c0a-8abd-d4f4e1caa979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a0ede7-04d1-4012-931c-ca24d569c8ab",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abbdbf7-c120-4290-ab7c-2982d857e55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d285167a-4535-4e68-a0f5-3bf737a3f699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5667adab-a9d5-4d84-93a7-7934b7011568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d26365f3-fe0f-420d-9451-b5cbaeb9d7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2139a18-789d-4b81-ba06-9ad34675e39d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575c6e6b-213f-41b2-ab26-5969521bef98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9b5018-678a-4a6c-9482-c67deb0618bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fe0649-00fc-4c1c-8942-469b09eae8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f83f7d-f69c-41cb-b115-e1c5315bf37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1947af51-cfc7-4066-a93d-2d29c834870f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f3eecb-7344-483a-aba6-af95d6942077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47803337-1266-4adb-9576-4d29b9a71e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6542cb85-cdb6-4a98-827c-62062919e010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b02f06f-dbec-4dd5-a3ac-170dae9e286d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd22fcc2-f415-41aa-a4e6-8d264804e7ea",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a6bbc5-4c6a-40ec-8a4b-26ba3ed1f71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc3f330-29b0-4174-8612-5b353d63e2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a35a68c-6e73-4d08-b999-9500f610f781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3d8d46-f899-4f5a-8e8a-7d8b03b1fc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba3c7c9-d165-4ada-b3bf-a635cb6e1801",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88554990-7051-4e65-a61e-0d216b4c0249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851ddfbe-278f-41bc-a21f-1ed82643cc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355160aa-4bbb-4769-a8bf-06ac44f02618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdefd82e-44a8-461e-a3b0-9d5d0980bea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b8bca7-8b54-4649-8512-2c7e0217d5ee",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57de3360-f80c-4274-9ac5-87ece7e3dd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b3cf39-1bb0-4540-b087-bcc515b0ab84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231055a3-16b9-43e7-874c-9a90ebbb95de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b54460ea-c80f-4e96-91fe-0b9c54b084b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb043798-6149-484b-9ef0-3a60bd48f4b2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60134f9-2439-42ae-893e-2f3ad7e5f866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70e72d2-fdbe-460c-b74d-637ff0ecde98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2de45f8-3d23-449e-9e46-eb6a9862b6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9003fbe6-5b37-447c-bdac-8b1ae65764ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f0c475-f368-4a22-b84c-bddf5a07cf20",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4eb73cd-12e3-47a4-a9fd-bd56e9c9cf6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6758494-16ee-44a9-8f6c-5a9460f556df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c507f736-98f9-446c-bcd4-89a111fe5c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35666d19-47a6-4d05-9f13-a3a0604fe932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb93df51-976a-42cf-a178-676f1805a8b2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673617cb-acec-40bb-b23a-6c57c2ca8509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba254e0-48bb-456f-be2e-e4013312f50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7711fa0e-8b70-4eab-8047-03cb5acd6859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae56889b-67f6-4ffd-97f9-cbcd815dcd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81408c22-4800-425f-b724-aa7f01b717e1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14ac643-8ff4-4218-98da-8f7b6947030a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68da4f3-840f-47ff-a677-a21af89bcaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4822c2fe-8d67-4686-a289-05bc5e71f7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10684cdb-01a5-4d60-80f6-ace54d16b7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65bda14-24d6-455e-b57d-5c7f16c5acc2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167c8aad-bf46-4bee-9bdc-b7aa09ec7d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e80c061-3553-43d6-b2d3-c0e9be984c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2eaf99-2619-4585-ace1-6337215b73b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "387dd63c-03d0-412e-8eb7-ded7ebfda606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df39e50f-80b6-4ced-9d80-90669e1a9684",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec20aab-5771-4a30-ab3b-f56a5bfeaed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f093753-86d3-4196-96db-bc2a5e9a3fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2950bae0-f721-4a77-be06-9ba26d31abec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d91a2c-d6cd-48cb-b5d8-4e360c5f4141"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b7bb59d6-38e6-4f5c-8791-680c194f3852",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0635b18a-ff8e-410b-8707-eeefa5b51956",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9291d681-6f45-4e07-896f-ee4c9d5ebdae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "66fbf853-8328-4c91-8326-d09257351bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4ceb61-d151-402f-ae27-be3a35ba3915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31f8ba75-393c-48ea-bb71-3073eba38767"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac97f686-e0d0-42b6-91e0-53df4a6ebd11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53b57ec4-a08c-42a4-b07b-fb0a91112995"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9e3b07f-d479-420a-8cd5-b6ac249eeae0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b2a6d1e-bc1f-46c4-9bf9-5c40d6f8c985"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d133102c-fdcb-4360-8d9f-4b2989de15c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ca9a4cf9-ffcc-49b2-bd4b-89c1dfeb7525"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cda5a8fe-c642-48d5-8bc2-3fac03245113",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "468cbe70-7527-47f1-b945-1b70751f0540"
            }
          }
        ]
      },
      {
        "id": "608b7ce3-0ea7-49a3-94a5-5c1d9d5c7af8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "40239f08-5a37-4c24-838c-453e3a16a84f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20d017e0-47af-4084-bdea-36a63f023502",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a87eb5da-d9c4-4e46-8fbc-f42df975efab",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a183d4-0c89-44bc-ad3e-138dbd3287cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d893fb6d-2146-4078-b787-58801b6a7c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aaa9e8d-e121-4628-ac22-cf2417dad405",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54dd57ca-d5a6-4235-b1c7-09a09f289a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f6a0f1-abff-4490-a917-ed4e6d3a6ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15bee60d-81e3-489a-a900-69fa9cc453b0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def8036a-128e-41fe-b0fb-866198360cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970aeeb7-1838-4c8c-9583-2ab0eec760a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4335df26-da8d-4464-b052-a6c9857d4432",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f733d00-4c80-444b-b336-68cb9696ad08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e5bf097-041d-44da-bec9-997b9e8b911a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c208ae4-28bc-482d-a774-2579adbb6a43",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e776aa-6938-4267-9ea1-8feac12eaeac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9275c55-a205-483c-8acb-64aea7dd5159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec64b89a-3459-4fef-9f3d-79c85b15633f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876aeef2-d302-4c81-869f-c45fe5ae59fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958fbefb-7fbf-4e35-acd6-fdf6b4a6e404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad554ea-0b53-497c-a2f8-855a209441a4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f24449b-226e-40bf-8fc8-82feb9c99d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6219e2-6c7b-419f-bb8d-eec035b916a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "791648db-770e-4b3e-b2f3-898fd95ff24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad210fb-9a32-4101-a4ba-583f59b5f23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddea2fb-b84b-4aac-83a5-670281d1b2ee",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3526fba-2bfe-4cbf-ab94-1e77c04911cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4431debe-f19a-400f-a3ec-16d18474a51a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f89ad14-93fc-4fb5-8433-e119eee65da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835ebedd-7a07-4fe4-b52e-3d137efc8e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45458ee3-3db0-47aa-a765-f6716fd3eda0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96648aa-625e-4fae-8954-8e9bb2249c64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1763294f-19c2-4423-bbe4-2158f5860b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5431917a-d3e1-4e36-8559-ffb80ee0a9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a92906a-b1e5-4f2c-81cf-c20f185580b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a3d920-e7ec-4f03-9d1c-184d4616b711",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9940b4ad-c6fa-4d57-a675-5da160dc0c82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14bdf6eb-6395-454e-bdca-b0f33fb1220f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb2b01c-a906-44d2-83c3-c7e6cbbd4755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2905794d-cd30-441e-b240-0b4bc57e779b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cee5c9-5cca-462f-818c-f360f2d9f8ae",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c158138f-32d6-4ec2-ad7f-27f70c432c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0b96af-c983-4152-9679-f21f2b509818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3831a82d-05f8-4bf4-acb8-a290926f0ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce6b804-8ae5-4501-ad16-06ead83bd539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2907cb42-bd62-493e-ac67-57d827990e65",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2623db8-69b1-4aa9-a822-c74412c1d155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f1cb82-a348-42c1-aa6e-c907463c4600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d5224a-e72d-4619-bfe0-ef27fb8378f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c89780a-eb6a-4329-b0d7-7b2e66780fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3874026-fe8a-415e-881e-ea0ad8eef835",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2898dd6a-ca87-4613-acf3-93ea04c8b513",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c0935c-4aca-4392-b189-7a3ac70cedbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b8a14d-e656-4866-8373-075980e3d435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d562b69-8fe7-4aa9-8b32-48cd3b2a34e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955ea79a-8131-4a21-8ead-166675af2f01",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848784de-236a-4ae6-aece-6f122d72638e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b00618bd-3600-4daf-8952-c462bbde9045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9fd793-ed2a-4b6f-9b55-191bbb8c0216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f9fa40-6cdb-4dc3-85e6-1a27c2e72d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f32ebb-3bc7-4396-85ed-f937b53a7128",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbe30d0-3395-40b4-836d-e0b3dc9757a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "736f6d22-c3f6-444a-b59b-65c1ff73f8c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d95ce95-39e3-4be3-84f6-3a0b40fbdbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7f1020-65f1-44a5-b903-cfb5dc0a1a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02decac-106d-4777-86a2-e74e89e4493d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90316a02-ab82-4f2e-b8bd-e5b7cff9f014",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdfe3c49-9cca-42a4-b365-92cc3ae7d3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6836952-dee3-483e-b909-646566fbe5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd304342-6d2e-4971-ae3b-f8307ed122bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38ebe06-4e82-41e2-ba7d-90134a73bc9a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfabeca-acea-4014-ac57-92dadaa08d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1b7d96-7624-4794-9ebc-45b84aaed121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c699bb8-7430-4a7f-bd5a-e8aefd2d8650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9e8415-2449-4a70-a50b-e59c73e75688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4268ba6-9d47-42d2-b543-44fb99bc7ff8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc5ee0b-6b30-4821-b7f0-e7805a2b345e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c1085a-a91f-440a-891c-a00b303d36aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5949cb-b2c4-48a0-ab71-ffd5a3aadc97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f35048-b29c-4f04-b4be-c55e5fbab937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570c9073-4530-4148-aff4-f1085c165de5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da141c22-4f57-4542-ba61-2b0684f17a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977ac99f-8207-4576-9f4e-144540d0213d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2c150a-31ca-4287-9ba9-f4ff4693c83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fa3da2-3cc8-4f44-943a-e56c3d0a9afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4032c24-9d62-4eba-a138-b45a28b97c0e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dc961b-9b39-451a-b807-58d5984e4e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe05205-e2a5-4bb7-a50e-7aa31049470b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7703cd-e801-4730-80a1-59c463275be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d16c33e-3067-4251-b261-2c9d65e74689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedf21e9-eb42-4229-854e-baee2442fd35",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a50428b-b3c0-40ca-a21d-2bf3c43bc55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea932db0-a78d-46d5-a4f8-4094d4e53a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a696f0-01af-47b8-9b2f-eda95940923e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b504a04c-7e00-4bf4-8392-66d7469c12a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fdac74-b4ab-4acc-b639-22550861cdab",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a3b609-824b-4bb6-b0dd-230cde97ba51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f20e22-cac0-47e9-879a-8cdd593c8471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a95d5be-eeae-444e-9e4b-8222835fd21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce711d8-b598-4263-b235-bf9a503ba373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb7ec04-9715-4351-9ff7-bec5ff1167b6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbd9b14-6e61-4796-8718-5d66e83b5344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb58365-04e9-4667-a378-0ac6158c8aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7dd157-0aa0-4083-b317-4957c0c0608a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c77d76-3e39-4351-8a90-0974f25cd1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0de960-a7ef-4005-8865-bdabef2b1656",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f504f267-905f-46da-a758-d444b1261bc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ab8442-3ec9-43ac-bf2f-d89cc05dfc89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0547e8-5c29-40d0-a2cf-92c3e4867194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c27092f-43a9-4af1-a9a7-9ade487628f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdab12f-efb0-4e90-8ab5-46ce0cfec350",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861af3b0-a1ef-45e7-adb7-5f86406d33d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce4dea66-2b17-49ff-ae0c-0c55dfb28472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef014b92-2888-4eb9-9858-cb9543606dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7325df-8949-4d1e-ad30-9ed2f7e7e789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5494fe-1dcf-4061-b353-3afa3f432596",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e455f66-a194-437c-9da5-9c291266e8c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c604bc4c-7b0b-4ab3-9871-a4397b0a65f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c59febb-ce9c-47f9-9bea-fac541ef0c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1142d98-8887-4283-b6b7-7b16ece0d9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d579d0a-f63d-4a36-9d4c-ed0ae1382cd7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33eadb6e-a434-46a5-b139-4dd23a14576e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f79a4863-1e11-428f-8f0b-19940002483e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c9313f-b2a3-4f49-ac2f-4ff3baa2f375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4603ef-b089-4da6-87d8-bedfc85040ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18df867d-7c54-4122-8944-b579bee50a39",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bea8386-ce7c-4f5c-a60d-8bfa53d2be2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088ba77a-ef71-464e-93fb-e4841c00c885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9ac266-9a26-4fd7-9cfa-6e9896ee25b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a27b13a-7902-4922-8ac2-e762252299f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fc9698-a8b6-4938-8936-d2e71fde571c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546a0379-27b9-4e02-aebc-2c40ad5d19a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53219193-1a3b-46ad-a3f0-1bf6015e59a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3164f204-721c-4b0e-b64c-3e58e498ccaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603fa494-7e9f-4d90-bf79-5dcc052e9508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711e0028-7fb3-4213-902c-3765d1a3370a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ccb78c-cb2a-4030-8280-07fa93db9fc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "783ccae4-b55f-493b-8334-974b4727c075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf9e1c2-4e3b-4d9a-914b-a588cd939ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44b8186-6767-42cc-9082-b4ea7e29bbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64304b50-c2a0-4b3c-8c07-3c8dd41e5096",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cba67ce-21bb-4d4c-b495-506ebc67a676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0caf06cc-9845-4b4f-acf3-7520c95f8798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db07500d-e8ef-44ea-a3e0-21bbd4dfac90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d8021b-c9f9-4a13-8561-9fb7d505ea6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b75325b-896e-45fa-9a58-b848e9ca3346",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2aa6d9-1478-473b-b2ff-b84832468fa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "451d0fc0-eb58-48d8-b9a9-321c91f2cd7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd753316-3e4d-4983-ab48-d6f4060500a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341d18d3-0ec0-4983-a179-636cad85a760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b783708-530a-4915-b8db-652c9ce506c6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598ab36c-b875-4c4e-9811-c4a6654d9d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ccd4b09-667d-443c-8579-19548be865e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7c0420-9777-4513-8ca7-215d1f430169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61f5621-aa0b-4681-a7b9-c50372da2ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6271953-2faf-4a7d-822c-ae7ea8e2fc9d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620b9118-a034-402b-a2ff-961292b81385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15e7fb21-d730-46e4-a557-e5794398fa55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5319cd3-03ff-4d15-84b6-f6a7f052d278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f668dc76-b173-4712-812d-67a9dc82d1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db86e16-2764-4060-acb0-c180bebde0f4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdde31d-2c6f-4e13-90ab-21ad17d0d138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21919fb0-f559-4209-8dce-207b0eb27cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05edfd7-028f-41a4-822a-83fb7f88470d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c7a4cb-6aae-42a2-b7b6-712e3ec3e13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90d6fb3-3971-40c3-a209-5297b2af1f22",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0a8120-8d4b-4310-8bf6-e2b95720593e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6616e4e-23a6-4090-88e1-bcd34a738d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce65b45b-c57c-456a-aaca-36538b644d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a8e082-4500-426b-b328-ea3d14de84b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5758680-d836-4414-be95-8b148238503e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4494c4c6-87c6-486f-bcda-2c30eaf6043f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4a6653-4710-4142-9bbb-aa55d3aaa99c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607cc5fd-734e-4806-a4ec-e1a361a9068c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565337cf-8eb8-4cc4-a4cc-23f0ccd33b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659fa7b5-f287-479a-931a-f57d6cf6d4c4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd23c7fb-4982-409e-b733-4d78ef1d10a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b849f75-2ae7-4733-880d-f4aa4bcf718e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd496a63-43e4-4257-b517-89dec448ed36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f95b32-42de-400f-bada-e3457577dd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8eb7ef0-d7a5-4240-b80a-81ad2324ae37",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fef8612-aaf6-406f-a614-6083a31012c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "babcb160-a5b4-4808-90a0-4ec0e9ec1210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15df7ce-2188-43c1-8e02-d18cf4b206e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fca169b-d4d4-4709-8c80-9ac1071053c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a15319-e5e3-47f6-8f30-574c0a6eb25a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c58313-9006-4395-ab25-fbd05b5af853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7096583-e232-4168-9dfa-1d2df68fdc9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1b0c17-c4f1-4a7c-a706-619b9ce53973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a014f59c-79d7-494c-a48d-6cf3c416e487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a675936-236c-4f4f-8a4a-7765cc7d8cca",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e824b1ca-8529-4922-8084-bf9332bafab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5de14a-5e7b-4ac4-8ed3-c5d972462be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ed0b6f-ff7d-401d-a5e4-0d2e81ca4915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6decf336-ba1b-4c82-b5a1-b646465f46cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019db606-0217-45e3-b48b-2d66835f0f80",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3a6d5a-bfec-4c5c-a27e-8fcd15d3f355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac543ee-6832-4540-940b-69a2cc347f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f141c6b-1e86-4d38-bf76-8811e99dbe82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcffd3d-7c0a-45ac-ac04-6a6467c8d3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da560657-2cb2-4c24-8e21-752811e8e705",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c5ddfe-6172-47ba-be8d-fd0cc0d9ddba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f133b08a-fe1a-4d98-9382-3ef2928f9435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11b3ce2-738b-4c86-af8c-adc8cdd5e85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109d9fe0-99bd-4175-b6d4-f0540fc1a344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f148f52d-0c69-4c91-89e4-89e41bdcd294",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110e75a7-b893-4de5-b7b7-29ec16c89a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a66a6b-ba05-4145-876d-d3c880a6d86b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4851e6-a431-4093-8dc4-f3f6b47906a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f43c82-b595-46e4-ac13-ae3a42a7fd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3d2d39-8afc-44cb-8dd4-2e1dbfa390ef",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623a9d7d-1fce-4678-af3a-ec6430f2ffee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4b19f2-c645-4bf8-8ca9-e5ef32f034a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28f2be5-3e90-4dac-91aa-cd07156dff9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4bf5e1-b0f7-4a72-abd4-cc354268dbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea73c8b8-5af5-4f75-8c6a-580a3fe0d0e6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2944dea1-d83b-4ae8-8f7c-23253fe7ad77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702ffd67-736c-4f5f-950c-9882ca63d6d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9332c98-0471-4e22-bd0d-762d82f41dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f17423-3d6e-42dd-a9d8-98456830702c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc19c56f-eb26-4bf5-b703-7281e1a96804",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30baa243-2afe-4b46-8932-9a52a6892ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf586ec9-f22e-415c-8518-5d71d48ab2d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a880892-fb62-4077-bacb-655c3c321a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73eefc48-3cfa-475b-a135-9195afafde9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2418d9-5a1d-4079-af99-e76152b30098",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2037a721-ffc1-45b1-87d4-5011468a882a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271ec6f1-455e-4f61-8162-e556b93adbd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6a72ba-4b09-4958-b0ff-7193a8c7e0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f65842-dfc7-4f18-8e74-d66df96a1494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c172d7ef-6b01-4c05-a3f2-8b50263d383c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb506c9-7642-436c-88b3-7fa5b17a1e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a379a7-3af8-4b0d-98a6-bc82e172c138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9e4aec-12b2-4453-a20e-d8314e79170c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312b64c5-fbfe-485c-bfb1-c48f2782496c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd541bcd-b250-4786-b031-a71770ec9b22",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c54538-c0ac-42ed-acd3-d0c7408bc480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4ef514-8ab2-4878-8bcd-bd1febd81c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96af15e-aed5-4a3e-aaff-5e76dd45f9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4cb973-c636-4a95-9137-4299b2fabaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dca591-da20-4da4-876f-884c900c6aec",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4c9426-8efb-4b08-9d56-764dad6a8bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaad4834-f1fe-4342-9cb7-0ef7229f19e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69771d5f-13cf-4304-b6ba-6618dcf2229a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436a5b5b-2b4c-4f48-9d9f-a7508474b806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8f9f86-2b61-416e-aa7f-8c2e44186b1e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fdf2835-9509-455a-a87e-465ebc3c2138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bf9dec-8ebd-4e35-8c14-d8906ab12868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc95276-b0b3-4c84-83b5-14727b65a6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c51421-8640-4521-98d9-f477cd7cafef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdff845-5979-4bdf-8200-c71f66322054",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af204275-99b5-479e-8292-84a39b8dcc5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7f30df-359e-461b-b68a-1006129dffc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e58c8d-ff7d-4961-8555-94b3b7e32ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f46b8e6-4ee0-4851-8cc3-c46c4798ad0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae969bb-15a7-49bc-84f6-e0f946e96c9f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07d19d2-197e-4ec4-bd57-33933c088c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac83facd-d71b-4beb-b491-101ee9884813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d641a57-bcbe-4a6a-9681-5009b8fc311c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0d5df1-f864-4366-b387-5d74ebabf2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5183dc39-674b-4c24-af07-1e7d1d8096c4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481e0f3a-7c9b-4f18-a7ab-a214d9e9d782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3ed667-c711-47fb-82b7-42a0f32b08b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efa2e13-32f4-420e-bd28-d95ea1eeb4c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db509cd-c678-49c8-9682-8844a15d7ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e06c14b-54e5-44af-b3f6-4f42bccebfea",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edad3648-cd42-4521-b502-1310a8e6e83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f75c0e-0f79-4b86-b353-532385e77677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "414db3ac-4a90-4ada-9d4a-658d364ee145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025423c7-3424-49cc-bef7-4da041780172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4200310a-7aaa-43fd-ab8c-22c8c517b0a8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c7833e-ebeb-4c4e-bb3c-5bc63f23da97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc95a25-4766-425b-8b18-cf2cad82186b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e344c519-83c5-478f-b1e6-f92d8d38361d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f61be83-7232-4736-80fb-372f7a12d29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e16ab6a-799d-45d9-bdbe-4715bdedea1c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708753df-1274-43a4-9ab2-55cabd4ad7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d741ad04-17d0-4e80-ad05-81ad14e7d8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c31cef-0f6c-449c-a5dd-b836156a995f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a1e4ee-f4cf-442a-994f-ac99682b289f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8583913-f87c-4cf5-8c62-93b64bd9c5e5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd41e1c-3bc0-4cb3-a37c-ce6642d9f0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41f9388-9288-4d15-934c-27ab0a382ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2997584-e8f7-4837-a997-efa7e05980be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a675a62-ca51-4b21-8551-712b215e6182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2754c0fd-f1ad-4629-afdb-5ef4370d4ffa",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e649b353-7f0d-4d36-a835-7e77328e5114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae73b7a-2972-4f74-8f63-0503ef83e698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9a3de3-9df1-4f69-b556-5dcbbb4ade71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dea2708-f502-49dc-ba85-fca3ab844546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58dd111a-ad3a-4d0c-a6bb-87616afa898f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f493dd1-70e4-4cba-ab17-4235fc968519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312ea16f-d7ca-468b-865d-da3f9e845f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "154e4f2b-3ded-458a-9bec-a660cea2b762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a3fa34-b028-4692-a07b-c6efe00d7dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd10b97f-3b2f-421c-baf9-a47d0f979fba",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe6b539-d0d3-4691-80ae-33380ba956c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e420c3-78f1-4213-a186-0f2c905a4473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96afeade-5197-424f-bdef-f531100962eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d5676f-a0e7-42b9-8344-2c06733cc4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7bee22-5af3-4265-a634-b814c9f1ecf9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4ab500-52fe-49b6-a799-66116114c33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb18911-e1b7-4c52-a1c8-81fcca676ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98b2f58-6815-4a48-a84f-7a06e6431c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e306945-da16-4e82-aaf8-75c1d9149770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132d4af7-8978-45d8-a138-ff1d1de43e8c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee579390-e72a-479e-9a28-8057bf361c16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39d69714-b236-4ad4-a38a-f2a6dae8a7cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "513a750e-5cf9-4ec8-9b2f-56e96044612b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa2a4f4-935e-4e56-ae03-bd5265d502f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6658f0-5c0a-4ffe-bb71-c4c6d5739de6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec3a653-57d6-4b6a-b23a-1ab64e083f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66b182df-af62-4aad-97e4-f062b6787bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11dffae-7038-410c-9b07-25b15087b8b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345cff7c-ed92-47ec-880b-32b05d1cadda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb075af-36b5-4f8a-b376-59c6cf40850e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eac42d9-381c-4ebf-b0cc-8f5aef4846dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5170ed9e-cd79-412c-baa3-a8683e6096c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3636112-2c03-42c7-81ba-4edc7411d402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16087686-90c6-42a6-ab5b-701f3c62860a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f35b8b-2a2a-4818-b756-1502eae65feb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6be2b49-82be-46e3-99f7-9a34a024e581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d1c0bd7-d2ed-4cfa-b797-58ac3804e5a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b875f24a-1232-4095-90bb-f52370de1531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebe4508-9b46-4295-8ec3-a0618e43ffb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b75367-bb6d-46f1-aa96-0ca98252225d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147f7fa8-8e1e-489f-8349-6ae5d9097a25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1216fd50-3d48-4f04-9516-3970e2a37254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd78cca-27e1-4c50-b201-655be928d30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2ce72f-b9fa-4cdf-b3e8-f4bcc43c0952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f527558-9f12-4092-bc8b-54a56d47573d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d62fef-6b71-468b-a505-56686af87dc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad407eb5-ff98-40a5-baae-19c272cfc288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5838146-99ec-4d67-8a6c-67285a5bbf71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81532195-cf5a-41cd-b83c-cc43b2118b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d6b0bd-eb4d-425e-87e1-ea4f5c79fbca",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdb3f46-fcfd-41ad-babb-65ba9da87bca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e5bf4e6-b611-42c6-82e6-e91fc6f4b4d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284bd39b-f44c-41d0-b6d1-e312968b0349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac2ce1ff-f688-47a3-9972-438aa407937f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53751635-7a51-42d0-8ca5-ed462f698523",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d5d3ae-bfe2-40b0-b1a7-17799989cabb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92f8762e-ba5f-484f-8025-989249f1dc49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b59b4f9-a252-49db-98be-e4d25c5263f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454f44db-690b-4a0e-8d71-7101c67022f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d77cc9-9478-432d-8fa9-53aede85a924",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35dc1406-e1c3-4b0a-a9c7-318d89a892cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f867dd7-fcd4-4386-a554-2deb96b77c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f658aa-3bc0-4ee8-b0b0-04e6d205da5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91175955-4b40-4ff8-b6fe-5d16f75130b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00098b58-ec05-4a6f-91e2-ceb229876a83",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a7d991-d2cb-48e4-acc9-a452a2e9bfc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d074119-d7df-44eb-b434-641ff96d764a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cda792-c61a-4f0a-ad0f-c814aa27c949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ba3ca7-599c-4d31-a1eb-cbfd0cea04d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a6732c-3a87-4937-a4a0-03c4a3fa9eb1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b4b561-62ee-4205-ac69-335f53990491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6055e179-fe2e-4a99-b8c3-bbdb52904f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e844276-786f-4487-9eb2-2b9fb569c501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "048721a5-e463-4a40-9ffa-76f46a288625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918955da-3819-417a-af71-f11e3b129baf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b059f889-0c8c-4972-b3c2-25b55a2fc51e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ddc0ee4-14d4-4d14-a08c-75c886eac3be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c306b7-9f08-4bcc-996d-d73c3a9e3e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95516ee4-ff88-4b21-9f78-27036d47db9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ac9a8e-6e3b-4c75-8cd6-e4b9dc971e55",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4d9a57-b84c-48d1-b77a-425cf488e06a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e7e9360-394f-4deb-9e1a-12d9fba1e54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93937f41-e1d4-4d2b-88be-c5e14347490a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1664fb-cce4-428f-be93-0bfc28dd3b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85ba345-48ce-4dd0-8218-af8116123ea4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9492fc7-a8d4-482d-9ed5-e8d797598678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "978fdd97-80b4-4b9c-87c5-56d9d34341a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fed1c1e-fbbe-48bc-8e14-c8cedbf981f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f590931e-ab06-4659-a112-87dcb021e24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491dad1a-f690-4cd3-ac7f-0d1eb99f1f2f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02dcdde2-c53e-4af1-92f1-d247fdc3110d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d2b57d9-3673-4072-8d8e-6553942600e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1dd9ca-6536-402b-bfa6-abfa955e1b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3150d74e-0ca0-46ce-a35e-ab3bfa5b6386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1faaa2db-3255-4298-8767-eb5805c83059",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940c5cfe-f203-40b1-80af-6c7d2e33ada4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebfe0635-9815-4a2a-b730-30ed850a33c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd28b796-06cc-4edd-8aa1-0995ed289a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6498ccc3-da67-44f2-8f32-5f19dabc10df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d04334d-870d-42fa-bcd3-98bdef92d9c7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d998471-a49d-4d72-8a1c-b0c4961defa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf574a1a-d8c0-4956-b5c5-ed36ce073951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9706a26-89bf-46cd-b503-476e8e65097d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92c57e6-d798-46ce-926a-5b7700136e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c269973-56e0-4e96-8d74-1c7b32305c29",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcb92a8-601c-42c3-a577-bc12bf140754",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2949ff06-364b-47df-ab75-b6e21ff1d832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4865131-f1eb-4aad-9580-41d0a95c5183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae2d3ee-bc2d-4e25-801c-5f20be8a616d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d64ac78-28f1-4655-b622-a4117ec3598e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc07bc4-afe2-459e-b3b4-335228760cd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5d1ab18-54fc-45d2-9265-4a6a10af14e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9430e7da-39b8-4a70-8769-fb9d51df17a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a13667-9deb-43a0-9eb5-e056fb2262e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434eb0fb-c873-4bba-910a-7158745a7e33",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f680937-6652-461b-b32b-c03333fcb1a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d7bed9-37ff-4de6-8bad-f446775cc32a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebd115e-5f52-4967-8d37-59981ba3168e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6cee83-f60a-488b-a4be-a4ddd39d3534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61106f9d-1eef-46cd-b6eb-686bb51e683c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d250f85-c969-4a7f-8e95-2a57adc40924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed6700e5-ee3d-4370-90f3-cf8761ee8f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e9b0c2-aabe-43f9-9c7b-2194edc43020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8394cbf7-f944-4110-8681-94d3157fbf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e13aea3-47d9-4b22-a01d-9658d5d76125",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f52955-8329-41ea-bd4a-eeb07e812554",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df25d6e2-23a2-4129-bd13-9e935862799a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "099cb4a9-edaa-4a96-b4cf-b672b78e016c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23254032-ad24-411f-92c4-2c36fa7660d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4aa942-f93d-4118-a98c-59f86dd3f933",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bed51da-141b-42dd-984c-cff800dc79a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28fde626-d2ec-4e16-a99d-2eeb85c106d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ff757d-eb80-4595-9271-94e119840ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1ba425-a4db-47bd-882c-45c3ce4501cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d55737-d84c-4685-a0c0-1083500cc53c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4c17df-9cc5-424d-8703-822741da57c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89790920-90c2-4e72-bb97-7d72ac46d7ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6aad02-8b05-44fd-8268-2d51b92d1321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663030b0-cb18-48ed-ae5f-45b32bffd01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ceb60de-ada9-4d25-b153-4409ff781f66",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1240116a-62a8-4a55-a5ef-c2b464367299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e8e5b6d-ed42-4ee3-a8da-90f9f67f9f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0beef89-c855-404a-93f8-bd7c87bdbfdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd83c444-5fc0-4fbd-b898-bc66dca4c9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71290dc0-14cc-4e85-865e-2337bd6b415f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fb1c27-2b33-4119-9018-45809e0d5046",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c81b3ba9-fdd7-4d3e-b22d-c0f1fad106a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6150d58d-43c9-421b-a843-21c73fe33644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04d8109-df67-4960-9cbd-ce768f9959b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2094c76a-54d9-4de8-9493-93a05fb7f939",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5be7a45-6295-494a-8ef4-13d28e865e25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1420b0c8-05e1-4f1d-9948-851be1c76a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175b8aa2-ed2e-4ff7-bf4a-ef24968a4ff7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c9c8fe-9aa3-4db3-bf13-f78c88efc5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef14fa39-e0d6-4f47-a306-4ef9f7340971",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a79a553-16ef-4bca-a7e7-d51910792717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30627975-a4ca-429b-96b3-c1c3603806da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5756c87a-7a18-4ac4-9910-5cca1161d43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5e5f39-ffdc-4360-9a24-e2a6394d0518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af17fd6f-7657-4f68-9a4b-69e0ad742608",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0e22de-b1a7-47f1-a3dd-5a3152bb58c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf0f297e-e164-4dfc-9714-702be8a9b2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73474f23-d3df-4e6f-a8b8-06132f08f356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63dec278-db2f-4ff4-81b9-5008d2ec79a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d414b74f-bab5-44a9-a212-1dc82b219983",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110d696b-592b-4485-909f-05fb384411e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65a22c39-5db7-4c63-81bf-c6bb8510444d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6deec1c7-3f20-49c0-9594-133d29bdd978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769930d8-1329-4d57-ae1d-3a556cb87ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1490211-0ddf-4bbd-872d-9739df625f73",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470f0bc5-36c9-40b7-8ea2-46c501976347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afb293ef-c9fb-48a7-83b0-e009e82034a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59930a6d-dc91-4560-ba62-207b27ae4d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc509bb2-08e3-47d0-910d-b4f79370190a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fd3c49-2cd0-47cd-bf77-f47360b2e406",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346d90b1-a744-497d-b2fa-998299d3fdfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c355f3cc-d59a-43b7-bd40-81c795e7a49f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75862a21-72c5-4486-b96d-0418798d7782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7bc0f9b-2d85-40cd-bbbc-3f818a367966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaab822c-9e83-4d31-880f-161bc7be0d63",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f618bd-02d0-420d-9792-8eea941476c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a17b34d5-b239-49ac-8353-a608c97a5f74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52870b1-3362-4283-bf08-6665d013502f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28474655-a442-497a-8fc5-75900be22d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c917c097-4692-405e-91b6-2ad7e6a10b6c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ea93f7-3bd1-4b8b-86b3-3bb00cb4ded8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79bfb077-585d-4ff8-a3fc-3eea315c10d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65961af7-7fcf-4e50-92d4-a20f4dc0a960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d19ea5f-d56a-4ad6-bc47-0c62d1904909"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01c3e2c7-bd8c-485b-8b9b-61602b1114df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8d48773-3656-4648-8a51-9b6d7a4f42ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e322ba0-e3ad-4fbf-aa8d-8d8e2effdddc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6bad5265-f04d-425e-b6d5-ba62f2d177f9"
                    }
                  }
                ]
              },
              {
                "id": "422b3972-692b-42ec-8ccb-d9399a4b4398",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3314d825-cb19-4cd4-86ef-8e8921a01620",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24687e33-9ee1-4e4a-ab05-2f097b48dcb7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a556966e-f633-4def-ba8c-3c32ecb92ad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d61108-df14-47f3-bd1b-c13287d28c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37b4965c-2004-43a1-af81-0222a1a883ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b78901a-733d-4417-8297-5e9157e83ac8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "222ca6e8-8285-445d-8768-76a085565d43"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f51a5d9e-1fc6-4746-99c9-21568ea1b77e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f326dd13-aec0-4261-8da9-648427c37ea8"
                    }
                  }
                ]
              },
              {
                "id": "a5815a43-f745-4d19-988a-34886a91e0fa",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e47ba9bd-9d54-4650-b2a2-52b1da92daa2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002391d0-3a06-4c0d-91ce-4698293a6fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "90dd4a14-9ea8-42a1-929d-1cf71b68e7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3971db4-53ce-4304-9b29-53761b0a3a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18bcc45f-8867-47de-a7b0-936038b45e24"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b4d1382e-838b-4728-9564-528d2885664d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "491edd00-40ff-4820-937a-829a4bb38169",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbaf8f38-b823-4ec9-8877-84cc8d2a6972",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "78bfafa7-8869-47e0-9d5e-16aa9e4e2cf0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d5669fc-8ce8-40c2-b4e4-76d90d628784",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa4162f4-1ff9-4b2a-8bfb-0acf69c28eef"
                    }
                  }
                ]
              },
              {
                "id": "c8458f8d-7cf3-4ed4-8b16-0528acab68d2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90440d8e-6058-40e1-a06d-ec8e8e85ab33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0a39f3da-594b-40a7-8467-8e2c3e642e50"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c097504-4ce5-492f-bef2-5b65ccd64c07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49d23aa9-4cc0-40df-a802-c9debed6a9cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a651a87-fe71-4989-9be5-7d7f1f87dd3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "27b383f8-c4d6-4592-912a-faba78d26b37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4cbf677-bbf7-4080-9e88-bfdbfcce7474",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c5b6c2b-f27b-45c8-a70f-d5c00fefd660"
            }
          }
        ]
      },
      {
        "id": "43584f7d-5743-4c61-aa8c-2b2bf04c8acc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "82193acf-4e48-4462-84d9-678a8675d384",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f840fad-09a6-4f70-9a4b-00a5167fac09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f81750bb-49ff-4faa-b5b4-553639282bac",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5f5f6e-6ea6-4076-8f10-fd5899498051",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cbde8dfb-67b3-41af-8479-55c4911aabc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc050fea-09ff-4069-9acd-6cb75239af9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d063217-9cf4-45d3-bb6e-e2308c43e389"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e65f163-0388-49b6-93ca-55482ce7c745",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bc36257-6f09-4e26-beca-265d308537d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57cb2472-d6ed-4670-a7b7-22f51e39daf8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8d6fdf0-e031-4441-91b8-ca616e8d79b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e716a4aa-8ce3-48b3-ac41-860534d1964f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f5e1fbb1-09a1-4cba-b9a6-88ce124b3703"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "024eee83-e10e-4a25-a8fe-54f2d5c63f6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c519945-95ce-49ea-b1d5-5b00b201ed6c"
            }
          }
        ]
      },
      {
        "id": "77ea5914-60f7-4f22-9c99-916bbd7b95d5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "31f66744-18cd-4d9f-a042-483b08d6b926",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c97628b5-107d-41b0-9a93-d0019d652e47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93a3afb6-a057-4d98-be90-99c7b7668f23",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a121a924-b06e-4214-bf26-365392869ec2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48be8a5a-4a65-4146-9e5b-078098ca8164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f4dabd-f4e9-4354-a3a4-0c7ec0d43547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "548f708d-0d69-4f31-a24c-f97073d60fa8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3825ac4-e886-4d29-8042-a1cb6533221b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62927be1-6442-4e56-8054-091e2e5d9036"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecaf72a4-77cd-4c03-ac57-f456f99b60ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ef15200-3679-4b4a-9af0-abe93cfa7eed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60a926f4-3d66-4483-b470-8da86c47c735",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "90e3f5ee-2a15-4631-9461-6ac59557ea70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "372fa1f3-b928-4b1b-b41c-a877c327bf31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12d230a6-e197-4d34-afdd-39883e29651d"
            }
          }
        ]
      },
      {
        "id": "365993d2-a3b4-4747-a54f-9ad0c68bcd9a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d1014530-ce90-450e-a29c-b1c87aa81d1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4bf0456a-23b8-419c-a083-ce1c00a1cde0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d80e8cfe-3899-47bf-bd27-741a6dfe0b37",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bd9feb-9bab-4632-940c-21f17288001f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59bc0e7d-3b0b-4f63-b632-a2795a001f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b19daa-23b2-47ab-b4ee-3dd048256af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d7b168c-5f83-4f52-ae6a-40e90cfecdbc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a8bc1eb-ad4c-44ce-b9c4-ae5ead0980d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a94278af-1d6a-4055-af88-fa30988b11ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2facd4a1-5532-4e7f-84dd-c727ce977e97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84e63e53-2b3f-45b0-8f07-7d96e8a1dbed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03babb2d-d4c2-4464-bdfb-63debed31de4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0a103edf-38c3-4db7-8fa4-6b4bd2a99d4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "044ca1cf-4c43-4e2a-8af9-a09549873303",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19559cf4-715d-4a32-bfa1-9827951222bf"
            }
          }
        ]
      },
      {
        "id": "dec3df25-3f5d-4178-99a4-f10704915179",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbe36b33-738c-4fc4-b89c-79a13643fc15",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8086fb29-8a6e-44c3-89aa-e2d0fa605032",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "49452a8b-175b-4513-9231-ba1fedf39e9d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91bb4aee-8e3f-43b6-8755-57eb152d926d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d91a8cb2-3ad9-4f70-884e-56e0d953330d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 74.30158730158725,
      "responseMin": 7,
      "responseMax": 678,
      "responseSd": 42.85325085208339,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725496956319,
      "completed": 1725496983335
    },
    "executions": [
      {
        "id": "3e0419f2-7df8-462b-8811-060a888631c9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "99d5eb39-3c70-417d-9ec2-17493a605a89",
          "httpRequestId": "aae6967a-7cc9-43b4-b8ff-f00abb759696"
        },
        "item": {
          "id": "3e0419f2-7df8-462b-8811-060a888631c9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e67dbfe6-3d2b-4712-873b-8f532d9a85ce",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "2206b481-2760-41b6-8a36-61c746c5a155",
        "cursor": {
          "ref": "32132973-c926-4b1b-83cd-4b4e70b18a63",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "13523bd1-2083-4631-a8d3-f31d8ccb1d1a"
        },
        "item": {
          "id": "2206b481-2760-41b6-8a36-61c746c5a155",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "02794368-57e1-4403-9a9e-82fab0e585d8",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "db1198cf-ca19-4d64-ad09-44bbc2a05201",
        "cursor": {
          "ref": "54b66e1b-f0d6-45b0-96ad-1bd03d806ea8",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3dda6d55-8b47-44e0-9915-d10d480c8795"
        },
        "item": {
          "id": "db1198cf-ca19-4d64-ad09-44bbc2a05201",
          "name": "did_json"
        },
        "response": {
          "id": "c5735057-d496-4c73-8b04-830c9ed7ce9e",
          "status": "OK",
          "code": 200,
          "responseTime": 331,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c8c5e4-a537-4f06-a343-7857ecdc50c4",
        "cursor": {
          "ref": "2b693c57-f078-4b91-969a-790b51cb5a9a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "110e98f9-651a-46ba-b5ba-180defa0f192"
        },
        "item": {
          "id": "40c8c5e4-a537-4f06-a343-7857ecdc50c4",
          "name": "did:invalid"
        },
        "response": {
          "id": "57041afa-f1f4-42b0-b7ff-8409aff4e93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c8c5e4-a537-4f06-a343-7857ecdc50c4",
        "cursor": {
          "ref": "2b693c57-f078-4b91-969a-790b51cb5a9a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "110e98f9-651a-46ba-b5ba-180defa0f192"
        },
        "item": {
          "id": "40c8c5e4-a537-4f06-a343-7857ecdc50c4",
          "name": "did:invalid"
        },
        "response": {
          "id": "57041afa-f1f4-42b0-b7ff-8409aff4e93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271cd9ce-f5e0-4bbb-950a-0ac08ca1c9cc",
        "cursor": {
          "ref": "93738670-68c0-48fe-8ae7-70d3b799078b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a56afa21-da18-461c-87e9-77adfb396bfb"
        },
        "item": {
          "id": "271cd9ce-f5e0-4bbb-950a-0ac08ca1c9cc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "16b6ca67-9378-4a0b-8c1d-f3268bbafbf3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 115,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7399093c-2be5-4be9-8090-50776e542a61",
        "cursor": {
          "ref": "ca2ed60b-f6a6-4807-9e18-bb49cec5aad7",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "09f8ac4f-4f12-4632-8c43-367ac587e13b"
        },
        "item": {
          "id": "7399093c-2be5-4be9-8090-50776e542a61",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "af4d9121-58b4-4ad9-b464-54e5bb304c43",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7c478a-c0d2-4a13-a919-6f54052e7b0e",
        "cursor": {
          "ref": "837f5ec4-358d-4c3c-a750-1d6656d0c84f",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "81c5940e-3ec9-4c65-b414-e008eedf8a88"
        },
        "item": {
          "id": "1e7c478a-c0d2-4a13-a919-6f54052e7b0e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7687a916-3847-47c3-b244-2cd40e6bc653",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8d855b-0f1e-48cd-8241-ddd9fbe9d15a",
        "cursor": {
          "ref": "a0624b6d-bcc5-491b-b896-35e2c847589e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fbaf877f-9e67-480e-8d25-1db03e757c24"
        },
        "item": {
          "id": "3e8d855b-0f1e-48cd-8241-ddd9fbe9d15a",
          "name": "identifiers"
        },
        "response": {
          "id": "f81ef3b9-5162-4045-8ee6-3cdd675669ad",
          "status": "OK",
          "code": 200,
          "responseTime": 220,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3430188-2bf6-49c2-ba1f-a001768e2b4b",
        "cursor": {
          "ref": "8fd6304f-5f24-42cd-b983-7bffdca91b10",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "00c949aa-f6ae-4ed6-911a-42202d6137c2"
        },
        "item": {
          "id": "d3430188-2bf6-49c2-ba1f-a001768e2b4b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "87702c6e-4f39-4781-8d51-4b01c14213ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd33416-7f89-40f7-8d3c-7300d8dd2dd4",
        "cursor": {
          "ref": "56c95806-9785-47d8-be9a-9fc712f27092",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7f8c7839-2407-4e0a-8f90-7d14ed18a28a"
        },
        "item": {
          "id": "8bd33416-7f89-40f7-8d3c-7300d8dd2dd4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "33a61530-f510-4cad-87be-9ff79ce04471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9427c3cb-8569-4e11-a34a-30e7bbef948f",
        "cursor": {
          "ref": "ae804fcf-bac1-4757-80b9-2b7dc7d1ee6d",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "24cf01ee-baaa-4a55-92dd-710881f5033e"
        },
        "item": {
          "id": "9427c3cb-8569-4e11-a34a-30e7bbef948f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "319f20df-1ccb-47eb-95f5-678760cce068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa06f59-fbfa-46da-9386-47a6aba54344",
        "cursor": {
          "ref": "4e458b06-904b-4c50-ba89-a1d40aa8a416",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "108b60fb-63c4-4a71-934a-2ea59f660023"
        },
        "item": {
          "id": "8aa06f59-fbfa-46da-9386-47a6aba54344",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4a9c848e-f1d2-4cfd-bf00-dab2abf108b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc24109a-940d-4464-9e2f-8b8cf42e4bc8",
        "cursor": {
          "ref": "5095d18d-3062-4b6b-8023-c2f2d1509687",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "82bacfa5-f0d9-48f3-a957-c95421ff58e2"
        },
        "item": {
          "id": "bc24109a-940d-4464-9e2f-8b8cf42e4bc8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3acf4657-1969-401b-bd52-5779c5fa6e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb36f32-02e6-43ad-82bc-e8c38a0a04f9",
        "cursor": {
          "ref": "7edc3639-95ff-4da6-95de-918a097df9ad",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4e277e2a-1512-4a58-8250-71f06f3ca22f"
        },
        "item": {
          "id": "1bb36f32-02e6-43ad-82bc-e8c38a0a04f9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e6c56196-c607-407b-bf03-f509f4962a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4090d1e0-378a-4085-a9bb-dc5d60cd282c",
        "cursor": {
          "ref": "70cefb87-a394-42bb-8491-53ad9f7dabad",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "784dc2cf-7776-466e-9fba-4f37de621b5f"
        },
        "item": {
          "id": "4090d1e0-378a-4085-a9bb-dc5d60cd282c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "11908c4b-555b-4fee-bde5-1d05dff5261e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4981fcb-27ed-4ead-b3df-584dd2e066f3",
        "cursor": {
          "ref": "e7780e3f-1944-4f08-89ff-6ed77ea44955",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2ccc5813-5dbb-4e7b-8933-dc9aff8c755a"
        },
        "item": {
          "id": "b4981fcb-27ed-4ead-b3df-584dd2e066f3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c364ebcb-796c-470f-8317-2ce90ac9fed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0640ab-ff89-48af-ac28-747555e93632",
        "cursor": {
          "ref": "508561c2-e9cc-4d78-9779-ef5881e2ebfe",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e8c91153-8c30-441b-ad24-d8e9937a6261"
        },
        "item": {
          "id": "df0640ab-ff89-48af-ac28-747555e93632",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "74e82611-1b0a-46a7-86b8-29b58439dc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32089e6-80fe-4c54-bf35-3ca8f2bffd35",
        "cursor": {
          "ref": "d5f3e543-daf8-4df4-817f-e95624a422fd",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "79861c24-b3cc-4272-8e29-533187a8086a"
        },
        "item": {
          "id": "b32089e6-80fe-4c54-bf35-3ca8f2bffd35",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2fd0ac47-2e42-442f-bb72-4fd5bb744ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b0ecbf-36f5-47c6-9585-ea2587cae177",
        "cursor": {
          "ref": "4c1faac6-352a-4a6e-9d8c-59476e101ae6",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4f7fadf5-efbc-45a2-8fc6-099e378b4eea"
        },
        "item": {
          "id": "f3b0ecbf-36f5-47c6-9585-ea2587cae177",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5de70130-b619-46a3-b6ad-0328befc2be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9597eb3d-1aa1-42b8-b1f3-62eaf7840dba",
        "cursor": {
          "ref": "ca75c207-d3ed-4898-910a-961345836423",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b338222e-9b2f-45bc-bb1b-b74cf913b925"
        },
        "item": {
          "id": "9597eb3d-1aa1-42b8-b1f3-62eaf7840dba",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f19fd656-436b-487b-bda8-4196facd279b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b326e702-6020-43f1-a53a-e244777b673f",
        "cursor": {
          "ref": "6507ee9f-ff26-495e-814b-b166e45931b2",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7edbbbc1-3f82-4c80-bc5b-e4f02f8ab0b7"
        },
        "item": {
          "id": "b326e702-6020-43f1-a53a-e244777b673f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fdf6e250-3a26-46db-920b-fee70b067232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f376a1-93b3-4176-b535-325731171ab5",
        "cursor": {
          "ref": "c5c5e219-b7de-4974-951e-f0f0510c0669",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f740d139-d15d-48a2-ad2e-a4d33b607d67"
        },
        "item": {
          "id": "72f376a1-93b3-4176-b535-325731171ab5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "efb98c3a-26c0-4d38-aa34-57e991d059ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbaf538-6fad-4e29-bd9c-74a2ace0d69a",
        "cursor": {
          "ref": "f943d05a-8f92-4c3f-9002-479b0ce8af0b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "18ed26a1-c524-4d9c-bd4c-51d043ae8811"
        },
        "item": {
          "id": "6fbaf538-6fad-4e29-bd9c-74a2ace0d69a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d4bad1a3-f1d5-40e5-9d3e-6de502fc5112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da589f69-4349-4067-bb64-227bbbf2ef9f",
        "cursor": {
          "ref": "8b0967dd-f146-4ab9-a850-63ada3074074",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d7c65131-2e89-493f-8c58-5f8621f9f401"
        },
        "item": {
          "id": "da589f69-4349-4067-bb64-227bbbf2ef9f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "46d8157e-4433-4065-895b-2969324c6dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f8a33e-1680-411b-a61e-c453ff0bb742",
        "cursor": {
          "ref": "eaf30821-a22d-4649-9cbc-11d9dd98cef7",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "58aec8b4-8201-4bf4-9064-85e46064b9a1"
        },
        "item": {
          "id": "95f8a33e-1680-411b-a61e-c453ff0bb742",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4bcc4efc-4fe4-4985-af09-9daee390a3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe059092-ab5e-4621-8baa-2f731fc1086e",
        "cursor": {
          "ref": "744057f6-3acf-4b34-b8a1-df462e55e734",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6f3f2397-d1b2-4fbc-a8f0-04c07a36dd85"
        },
        "item": {
          "id": "fe059092-ab5e-4621-8baa-2f731fc1086e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1cc6a11c-1cab-4ad2-aeeb-1f4c84cb92dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da1d7f2-4fc6-4fe2-9e24-1f09b6bfe7d2",
        "cursor": {
          "ref": "08c661be-a9d3-45b6-ada6-99a7f8a4f775",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "62cde40c-4930-4918-a5d9-79c78b33fa68"
        },
        "item": {
          "id": "4da1d7f2-4fc6-4fe2-9e24-1f09b6bfe7d2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "62c18425-4580-4a6f-add0-0ee607caae6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cf217a-fc8f-4d86-88f3-e08d401c727f",
        "cursor": {
          "ref": "436d327f-061a-4e42-a62f-c1d78a73559b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b699dad6-5d5f-4dca-ba69-16b60ae63fe9"
        },
        "item": {
          "id": "39cf217a-fc8f-4d86-88f3-e08d401c727f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "80fd4899-ee50-479a-9d1f-e6f102c06cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a3b1b6-41b7-4cc0-a108-ed9108a8623e",
        "cursor": {
          "ref": "7a2f5c31-ce3e-4e18-b2f1-f1a7a42d823b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b0d76026-d9d3-4a26-b7ef-e0aca38a95a1"
        },
        "item": {
          "id": "a2a3b1b6-41b7-4cc0-a108-ed9108a8623e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "12653841-a360-4238-a064-fcad5accf408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd997f4-9380-4622-a840-ab4dc554731e",
        "cursor": {
          "ref": "4e3ebf3c-97a0-44c7-ae04-233d63282dc2",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f526cdff-c872-467f-87c2-6ae30e859ea4"
        },
        "item": {
          "id": "4dd997f4-9380-4622-a840-ab4dc554731e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b325a16e-2722-4d4c-ae0f-0df96435d9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9ad697-73b6-4392-8984-a66ce3ce43ef",
        "cursor": {
          "ref": "474bf2bb-8e53-4182-beca-815d0d3adaae",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9f48bedc-5b38-4bf3-8401-fac8b511b7cc"
        },
        "item": {
          "id": "aa9ad697-73b6-4392-8984-a66ce3ce43ef",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2e4110b8-92a3-4b1a-a914-e1d9d8435abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ffbd57-d4b6-48f6-912b-7bb519a1b0bc",
        "cursor": {
          "ref": "5fb2dc49-7464-4fdf-a202-8045fb3ae0cd",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0642e9f4-9e9e-46d5-9d25-acd63311ebda"
        },
        "item": {
          "id": "f0ffbd57-d4b6-48f6-912b-7bb519a1b0bc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f6d36064-18a8-4f9b-b886-0479631919ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b8492b-ce80-4e44-b98d-6d33bceb400c",
        "cursor": {
          "ref": "fcdf4b2f-7083-4e3c-9a83-12972f5eff2f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1f0958ad-fb61-4ab9-8f27-be25bebe5855"
        },
        "item": {
          "id": "b1b8492b-ce80-4e44-b98d-6d33bceb400c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1b8cfdab-135d-4a1f-9a6f-bef208fff65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc8da67-6f4b-4a76-824c-e07d97fe600d",
        "cursor": {
          "ref": "532e489c-64a9-4f7b-82b4-b12a02562a95",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b5e9d51f-75b8-46ac-adbc-172f804d73e2"
        },
        "item": {
          "id": "8bc8da67-6f4b-4a76-824c-e07d97fe600d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3f74ce41-4e12-4445-a2f8-b1dab34fb541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f40904e-ac23-450c-8fbc-718f6709df83",
        "cursor": {
          "ref": "e83513c1-7991-418a-aac9-5e82637b0b1c",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e7826b9a-a5d2-4039-bf43-085e12fe975f"
        },
        "item": {
          "id": "6f40904e-ac23-450c-8fbc-718f6709df83",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "65b8e225-a65e-4dfa-af70-e1efd43e6cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ce0bfc-709e-4d57-89e6-0283ccc168aa",
        "cursor": {
          "ref": "1bbce4b2-2e26-4016-bf8e-c0f6b0db34bb",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cc2e4b85-f7b1-4cd5-8e89-179a08af5a57"
        },
        "item": {
          "id": "97ce0bfc-709e-4d57-89e6-0283ccc168aa",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b8d9659a-7826-4404-a214-f572737e6610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765c6519-bac1-4a2f-91ef-de17aa4476cb",
        "cursor": {
          "ref": "c9158b5a-41a0-41bc-b1fd-843176379c20",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "df904efe-01e7-443f-b640-0e9e1274426d"
        },
        "item": {
          "id": "765c6519-bac1-4a2f-91ef-de17aa4476cb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f3cf40dd-36ea-4f24-8eb5-bc75cfe0a568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47980b12-f389-4cea-9940-8fae2b0e9611",
        "cursor": {
          "ref": "22ff49cf-4735-4832-8c11-5e22673c9a04",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "746578aa-e859-4ec8-a4b7-c5a0b7fbbd89"
        },
        "item": {
          "id": "47980b12-f389-4cea-9940-8fae2b0e9611",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "aa6c3555-e3b7-4415-932f-ad002ead571e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7ebbc3-6d94-4152-91cd-92e7d289f5c9",
        "cursor": {
          "ref": "fbf74944-0955-4edd-9c7c-b93d1220f86b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c6be8096-bbd4-4208-8ad0-cf7a779de89a"
        },
        "item": {
          "id": "7c7ebbc3-6d94-4152-91cd-92e7d289f5c9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7e5202b3-dc46-4b41-88dc-3ddf419e5841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f301c37-a6da-458a-9e8c-c3e842ec7fa9",
        "cursor": {
          "ref": "4bf27a6b-fbcb-4028-b75b-71335929c7d9",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d1a67dee-7237-402b-a03d-530f93cd5d87"
        },
        "item": {
          "id": "0f301c37-a6da-458a-9e8c-c3e842ec7fa9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "77d458c4-2799-42a2-88cc-1019d169fe6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d42d15f-241e-47b3-9a9b-d01297a29f8a",
        "cursor": {
          "ref": "29710e92-1499-4a77-9a52-7ce04bc40a85",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "45811310-046b-444a-a55f-ccae1a8d5176"
        },
        "item": {
          "id": "4d42d15f-241e-47b3-9a9b-d01297a29f8a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ee770394-7ae3-4612-80d5-6d2a3949b3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e4f36c-a07b-40ac-816d-17f192cf04af",
        "cursor": {
          "ref": "f110520f-cc8a-4e6e-8f74-da0e07b82af0",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ffc5a6fe-d783-4b41-a690-5c028bee9070"
        },
        "item": {
          "id": "50e4f36c-a07b-40ac-816d-17f192cf04af",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5e0fc41a-b947-42cc-8e04-bf9be57f8fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8865641b-938a-4525-8ce5-02ffd688b74b",
        "cursor": {
          "ref": "cf4c6dc2-6af8-4044-9aa2-b8f92d82a710",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8422d022-5637-4e89-b339-19e06e5bd441"
        },
        "item": {
          "id": "8865641b-938a-4525-8ce5-02ffd688b74b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bc53df6a-42d8-497f-bdf2-f387c156eaa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ff6a74-9848-4a63-bfbf-eee259fca055",
        "cursor": {
          "ref": "37e3943e-68d0-49c8-bee8-75a5b6a376c8",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2b0c5301-6958-4ca3-a9ad-9bcee57ecd21"
        },
        "item": {
          "id": "13ff6a74-9848-4a63-bfbf-eee259fca055",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fa364caf-ca78-4956-927d-45d9d99f43aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a17e8c6-8cfa-4b40-949c-b625c7a36613",
        "cursor": {
          "ref": "b81e66db-dc33-4dca-a1b2-8762e72cfe8c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e737509e-2961-4199-aca3-3ba543ba8a30"
        },
        "item": {
          "id": "9a17e8c6-8cfa-4b40-949c-b625c7a36613",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bc407e38-983c-439d-b5ab-f6dcb340d490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ad7ab5-3714-407f-ab46-e6198c365c09",
        "cursor": {
          "ref": "aa8af9bb-de1f-4404-bb32-efa6e1addec2",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1a1d2883-a3b1-4b07-b7b8-26661fc60c98"
        },
        "item": {
          "id": "18ad7ab5-3714-407f-ab46-e6198c365c09",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c61990e3-20e4-406d-b165-f8ab98129f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea748b91-f7ec-45ea-abea-deecfc3bf3dc",
        "cursor": {
          "ref": "b0285353-e18f-4667-a2b3-3728157f12eb",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8173a34b-0301-4ca5-8938-125e2347532a"
        },
        "item": {
          "id": "ea748b91-f7ec-45ea-abea-deecfc3bf3dc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "efe0290a-a986-4f69-801a-1c7dc279234b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8cd0ec-0a3a-43b5-b408-69b4ff40fefc",
        "cursor": {
          "ref": "9f5d4308-ad72-484a-a2bd-264adecbd9e1",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a87caebe-e7e3-470a-9fd3-8bb14c3aff14"
        },
        "item": {
          "id": "5c8cd0ec-0a3a-43b5-b408-69b4ff40fefc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fae58bbc-a96f-47f1-b83b-ac15f1fee510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d4b7ca-ec91-4d4c-9a66-642169308295",
        "cursor": {
          "ref": "5705ff5b-2424-4f2b-bb5d-85dc4117335d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "edbfe518-00e1-4886-830f-d91306d6ad24"
        },
        "item": {
          "id": "a6d4b7ca-ec91-4d4c-9a66-642169308295",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "541c8812-983a-4921-990a-b073c9cf1725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a164715-260b-4f66-8ffc-ab1864929614",
        "cursor": {
          "ref": "abe48849-dec9-4740-8a12-d674dd276af3",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b5199cba-a69f-4f16-8cc6-f7ecb43bdd9c"
        },
        "item": {
          "id": "7a164715-260b-4f66-8ffc-ab1864929614",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6cf640a5-2454-4702-ad9e-24ff8a8ad5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81505b1b-c90a-4b42-999d-8015a1883d5e",
        "cursor": {
          "ref": "299b529e-912e-4b05-88d3-27770e3b78ef",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9f72af79-58c1-46ad-b0e8-3bde5351f467"
        },
        "item": {
          "id": "81505b1b-c90a-4b42-999d-8015a1883d5e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "84fbd4e8-9dc1-4c2f-9a2e-cdbfb0575a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df1ba83-e5ee-4655-86f2-6b7356f006f0",
        "cursor": {
          "ref": "ae3955eb-5f86-4e78-b170-454b88dbdb76",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f013f9f5-7742-41d6-980a-cbac4504423a"
        },
        "item": {
          "id": "2df1ba83-e5ee-4655-86f2-6b7356f006f0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1b6dacea-7bd1-4e22-877e-8df9ee4768d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2c5766-ee87-4b0f-9328-13f0d70e1873",
        "cursor": {
          "ref": "ca47a1a6-aaa9-4bf8-a351-5da7a625689a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c7d29104-44e3-4373-a16a-661a68e43e11"
        },
        "item": {
          "id": "cd2c5766-ee87-4b0f-9328-13f0d70e1873",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d278563c-8a02-4090-8199-8823965cac7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbf0cab-6e40-4680-8b77-b6fefc39cf6b",
        "cursor": {
          "ref": "85ab5578-148b-4c64-b01d-88e1be1e0c53",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "191a8207-3806-4c76-b4ac-dd97238a4a2b"
        },
        "item": {
          "id": "7fbf0cab-6e40-4680-8b77-b6fefc39cf6b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dc1d31fb-57a6-49b6-9b8f-dbdbda09417b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d92e12-ebcf-4aef-9b02-cf692376b3e5",
        "cursor": {
          "ref": "06d36f7c-8bf0-4b77-bf99-054ea92ade0f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e1fc006a-13a1-483d-ba54-9386ed70ea50"
        },
        "item": {
          "id": "43d92e12-ebcf-4aef-9b02-cf692376b3e5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e097f402-6f8a-4e75-955f-28300e892689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8efdba-ef30-4cf5-8b78-e817e40dd6bf",
        "cursor": {
          "ref": "d20a3250-7f5c-4d5d-be87-1431825437ab",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fb9c9360-291c-44a0-a074-554e10a73b23"
        },
        "item": {
          "id": "de8efdba-ef30-4cf5-8b78-e817e40dd6bf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "57fe5c17-7f85-4ce0-8afe-a50521a55a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64482e1-3d01-4c42-bbef-ece571068b49",
        "cursor": {
          "ref": "ce49923c-43dd-4121-809d-5b29c54c60c1",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c79a5405-857c-4e5d-a1bd-3f1b2a855fbe"
        },
        "item": {
          "id": "f64482e1-3d01-4c42-bbef-ece571068b49",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "53d53a43-ea9e-416d-97be-5b318a71ab45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8609d9bd-4197-40df-85fa-fabca8253865",
        "cursor": {
          "ref": "d9f2ef5e-b7cd-47a0-9a93-c5b37c8c5f98",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d8a902aa-32c3-4a75-a067-920ebd12fd5f"
        },
        "item": {
          "id": "8609d9bd-4197-40df-85fa-fabca8253865",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "38e62038-e83b-4fcd-84bb-52421d6dd2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcc5f80-9fbe-4d4e-b5d7-4664b733c60c",
        "cursor": {
          "ref": "023382c1-8cf3-4a7a-82d5-e8bbd301117d",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8d8e778f-221a-4eb8-b1e0-b80249b3fd4b"
        },
        "item": {
          "id": "0fcc5f80-9fbe-4d4e-b5d7-4664b733c60c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5e4d5a44-596a-4194-ae37-474109792d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8751a858-4148-4053-b5ff-f239ac21eab8",
        "cursor": {
          "ref": "bc4e18a7-d302-402e-b962-2c3836d824aa",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "aa1809dd-de02-42fd-bda7-47d2d631170b"
        },
        "item": {
          "id": "8751a858-4148-4053-b5ff-f239ac21eab8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "dadad048-390c-4923-b119-f749040f6a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11491cb8-1ce0-45b6-9eb0-3264fa78f948",
        "cursor": {
          "ref": "769486dd-a4c3-4c16-993f-531d792846d8",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6ccae97a-cf3a-400e-8950-68d91566a307"
        },
        "item": {
          "id": "11491cb8-1ce0-45b6-9eb0-3264fa78f948",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "14bed360-fb9b-4d8f-a0e0-42e6df85b15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe341628-e15b-4bef-b29e-6f0ee9e8108f",
        "cursor": {
          "ref": "98dc4daa-4f7f-48fc-823e-01f8a0ed52ce",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "13c27415-0b5f-4574-9e3e-e7befc7d3976"
        },
        "item": {
          "id": "fe341628-e15b-4bef-b29e-6f0ee9e8108f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "06bc3b4f-75ee-4121-87b6-3d5e0d1cab7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d356a448-a43b-4cb3-b2b7-729951498b29",
        "cursor": {
          "ref": "f8aa8030-8484-43b6-8ddf-cbb519b5213c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2abd292c-2665-46b2-b404-8aaa2501576a"
        },
        "item": {
          "id": "d356a448-a43b-4cb3-b2b7-729951498b29",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6cd29f5b-8140-4eab-8645-be4d7b4d8eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c725dc0-5be0-4209-8189-088abcc55a85",
        "cursor": {
          "ref": "07ad600e-f62b-45dd-a36e-33ee59de3a4b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "53939c45-91bd-4093-86f2-fda3eb267956"
        },
        "item": {
          "id": "9c725dc0-5be0-4209-8189-088abcc55a85",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "88810ad9-1fb3-453b-827b-40abe0b630c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b70e56-56a7-4173-b075-40c3a4a1f7ae",
        "cursor": {
          "ref": "99df2f29-a60c-466b-8193-20ea65ebc3c4",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "924c12f1-c6a7-4e80-879c-64225bdaf7c0"
        },
        "item": {
          "id": "e1b70e56-56a7-4173-b075-40c3a4a1f7ae",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "dd81bac9-a461-4a94-9580-52eaf260486b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4ba06a-3e2f-49f4-b88f-1169700e20f5",
        "cursor": {
          "ref": "1c628e1b-97c0-4dc4-8731-eb1eeabe4539",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "622723bb-5f88-4c47-9c00-ba052391a37d"
        },
        "item": {
          "id": "9c4ba06a-3e2f-49f4-b88f-1169700e20f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "23ea6feb-37c0-4bbf-858e-dc23fe788b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bb1cda-96f3-48d4-b052-f2b03ad2b385",
        "cursor": {
          "ref": "4742b712-76af-4c82-8bc2-754064014745",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fa074650-3ec3-41d8-a688-2e2cf7568571"
        },
        "item": {
          "id": "37bb1cda-96f3-48d4-b052-f2b03ad2b385",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9aab5aab-8c7e-4333-a5da-c2c10ca03ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ac769a-9173-4162-a767-bb93df78759f",
        "cursor": {
          "ref": "311bad8a-bb6f-4e56-b956-f46295e329cc",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "929af4fc-bd2c-4a84-b8b8-75c70656a844"
        },
        "item": {
          "id": "45ac769a-9173-4162-a767-bb93df78759f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b607532f-c298-4626-87ec-a906c115c4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09f9814-2e9b-4df5-9a72-1a02f4336e44",
        "cursor": {
          "ref": "6565a0e5-f6a3-437c-8aea-ecf7f5497c1d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "12a1dcd7-766d-45b3-ab35-b41b8dd02765"
        },
        "item": {
          "id": "f09f9814-2e9b-4df5-9a72-1a02f4336e44",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4dafcf98-f3e3-47ed-bd1e-232bcb1c0b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa2112b-b67a-4f44-8623-49a46b821520",
        "cursor": {
          "ref": "e8f2e6cb-e847-4949-8f35-61d949fe2fa9",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2dc79966-e8c2-4bc8-93d3-4c2a8b4e834a"
        },
        "item": {
          "id": "dfa2112b-b67a-4f44-8623-49a46b821520",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "db052e7d-4778-4e7c-8f59-9db4d64b0664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed22b4c3-cd6f-4567-8366-1f3dde8ef167",
        "cursor": {
          "ref": "4c8dedf9-fd3f-45c3-93a9-6b1ce1649d29",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "294522da-f45a-47c4-8804-95c5cd50284e"
        },
        "item": {
          "id": "ed22b4c3-cd6f-4567-8366-1f3dde8ef167",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5f4fdd9a-007d-47a0-8041-f3215b7d00a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9846300c-e7f1-4611-ad04-9ccb5d4f62dc",
        "cursor": {
          "ref": "021e0d5d-d839-4522-b56f-ce96eec2819f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3003a7df-e21d-40f3-98f9-86b421e7f0c3"
        },
        "item": {
          "id": "9846300c-e7f1-4611-ad04-9ccb5d4f62dc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "79051e03-29bd-413e-a45b-b7ebd9cd5439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bce4919-7e19-4ec7-8397-baaabb2149da",
        "cursor": {
          "ref": "52939569-73e8-442e-b063-3c342c5caa6f",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2d8991d1-ad09-451a-a285-fb3f86c54534"
        },
        "item": {
          "id": "2bce4919-7e19-4ec7-8397-baaabb2149da",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "de835063-cae4-4124-829d-abdeb3b0943f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34b0270-d571-405f-a674-b67af02a889d",
        "cursor": {
          "ref": "4406de64-3715-45f5-8bc1-3b687eb695c7",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e1ddf163-8bb7-4842-9f6c-68c95c61aa61"
        },
        "item": {
          "id": "a34b0270-d571-405f-a674-b67af02a889d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a39c7628-8817-449c-bb2b-86690638f67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5c1aaf-03d4-4dc2-931d-a1940cdc934e",
        "cursor": {
          "ref": "4ff754af-9711-4f58-832f-468844b604c8",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a7ed3eb8-a966-4205-9e16-3c0c688c87c7"
        },
        "item": {
          "id": "3a5c1aaf-03d4-4dc2-931d-a1940cdc934e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2a9d7a56-b665-4b39-95da-3e2c3a55cd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc83ec97-4283-4003-b91e-48afa2e799e9",
        "cursor": {
          "ref": "f8fbbda0-ffff-48bd-8066-d4f577eaed70",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5ac00f09-69df-475a-ab85-fc826a1527c9"
        },
        "item": {
          "id": "fc83ec97-4283-4003-b91e-48afa2e799e9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7109a774-3c4f-47b2-9324-260c38b32158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937b61a0-80b6-49ef-a069-5a691aa7bb78",
        "cursor": {
          "ref": "8611d258-ea87-4033-8087-f460fff9efed",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cdfd56ea-01bf-4a00-8732-116fa53b8a0d"
        },
        "item": {
          "id": "937b61a0-80b6-49ef-a069-5a691aa7bb78",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3a397665-2c71-49c6-a0c4-424e020f9e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41cbbaf-4c1d-4e90-8ef7-9b7930794881",
        "cursor": {
          "ref": "b4296be2-888d-4937-b55c-e6c604989845",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f1c77d56-2e6f-4150-bbfc-9f1d8df69902"
        },
        "item": {
          "id": "a41cbbaf-4c1d-4e90-8ef7-9b7930794881",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e3835d96-2ec4-48c7-9ff6-7f06d88a23c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a10d0c-d60c-4ad3-9b59-12b0c116db06",
        "cursor": {
          "ref": "84dfd41b-5730-4080-a717-d18ed81b12d4",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "273110b7-cb37-4095-878f-71a4a3dffe2d"
        },
        "item": {
          "id": "82a10d0c-d60c-4ad3-9b59-12b0c116db06",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "10a94dab-ba2a-493c-81a3-e4d456add600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30834a0a-1e50-4934-bcab-98abd2c9b9cd",
        "cursor": {
          "ref": "4934ebb6-6d78-47db-9859-c90b6e709a25",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1c6a6b0b-8653-4bd7-87e4-a341c31f5e75"
        },
        "item": {
          "id": "30834a0a-1e50-4934-bcab-98abd2c9b9cd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "42e248d3-3b97-4bc8-a21e-17e105cd7ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996c2ce3-4550-4110-9d17-e66e926bda3b",
        "cursor": {
          "ref": "80342272-725d-43c3-a010-eddd86afbccc",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "82cb5d15-9e20-4720-ba27-ae7ab1ed8a42"
        },
        "item": {
          "id": "996c2ce3-4550-4110-9d17-e66e926bda3b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2d49a5c3-0ac1-4b7c-8ec9-d2150370ae77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d71b2b-0654-4b06-b42d-9c789d439237",
        "cursor": {
          "ref": "0084f22f-2ef3-45ae-baf2-3fb626e56d04",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "72cf552c-4730-480b-a1b8-5ec82016fb44"
        },
        "item": {
          "id": "c9d71b2b-0654-4b06-b42d-9c789d439237",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c4a1eacd-752c-4b74-9f3a-63872ee834d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3131bdf4-2738-41c7-92c7-8172ffe83fce",
        "cursor": {
          "ref": "d013c3ad-10eb-44ea-81f4-09e976ea91ff",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4c65b014-5a62-4a71-bf52-8ed8a689e789"
        },
        "item": {
          "id": "3131bdf4-2738-41c7-92c7-8172ffe83fce",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e5b476ab-9a8e-4289-bb72-079712d4a836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931adc36-679d-4c59-93f8-8738b7200991",
        "cursor": {
          "ref": "56cfdc7c-8e28-47d8-b649-37a62ca8ede2",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bc02c58e-a485-4d03-96ab-94ad9a8b41c5"
        },
        "item": {
          "id": "931adc36-679d-4c59-93f8-8738b7200991",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0e7a37a4-36bf-4eb3-98f1-b49498a2f629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1335a2d-ef81-43a0-a743-0b1f8785733d",
        "cursor": {
          "ref": "be1b4fdb-b7ac-4d32-bc7a-64292234da20",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "af9c73f0-6ec2-4d1e-832b-8a06b4cd0b92"
        },
        "item": {
          "id": "a1335a2d-ef81-43a0-a743-0b1f8785733d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "62ee32cd-db03-4cd0-9769-ae910c47af0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d265f467-c00d-42cb-be43-4970f72c940e",
        "cursor": {
          "ref": "975dcf27-91fe-4332-a8c4-ae0158d0c51b",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f86c9480-1c10-4bc2-bba5-b3ddf7388461"
        },
        "item": {
          "id": "d265f467-c00d-42cb-be43-4970f72c940e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6b5d8f78-0c0b-44ac-9c59-5d2f12ae5776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90029247-e709-4db7-826b-3f5493b7c79c",
        "cursor": {
          "ref": "aa099fae-90d3-4ccc-a3c8-f7e385c0cf34",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "768e8948-819c-433a-ba38-0252e16f72cd"
        },
        "item": {
          "id": "90029247-e709-4db7-826b-3f5493b7c79c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "12c71c8a-4e76-4000-bf7f-7efc877c7bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b150399a-ace8-475b-a3ff-e68f776d9789",
        "cursor": {
          "ref": "7e3cb077-ec7d-42e9-b298-232347c3f3b9",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2ce3253d-2695-4d66-98fd-ff097f784e04"
        },
        "item": {
          "id": "b150399a-ace8-475b-a3ff-e68f776d9789",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ec35f039-12b9-4f00-b970-2f4e7822a700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9617d3bb-098b-4c82-96e8-f7a0ad007a93",
        "cursor": {
          "ref": "e9d6bd0a-9543-443f-8dcb-cc8f3298588f",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a641aee3-81db-4b36-aa44-908e1138b85e"
        },
        "item": {
          "id": "9617d3bb-098b-4c82-96e8-f7a0ad007a93",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "69d1cc69-fa5d-4fdf-9296-6325b0a052c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868a2230-153c-4a15-9007-c883b60236e2",
        "cursor": {
          "ref": "285654b9-d1ad-4bf8-914f-afeb94f2b8ee",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0ecf3f9c-c100-466c-a294-0f8f8813c0c1"
        },
        "item": {
          "id": "868a2230-153c-4a15-9007-c883b60236e2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fc62bcf4-bd49-433a-8596-6a40aac3dddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35be571b-7145-4a92-b5c2-d27783491ccc",
        "cursor": {
          "ref": "a5785a72-3d6b-4b12-a8bc-81ba3bad56a2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "541752d3-9f15-411b-957f-7f131e32fb1d"
        },
        "item": {
          "id": "35be571b-7145-4a92-b5c2-d27783491ccc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "71f5d361-228e-46b9-9c63-a21915e7abd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5934746b-e82d-4cb5-9252-a098712fabd7",
        "cursor": {
          "ref": "a4ef70ef-0b62-4ba0-8b72-ff7030aaf519",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "25b262e2-59e7-4c20-9067-f0be8097ee22"
        },
        "item": {
          "id": "5934746b-e82d-4cb5-9252-a098712fabd7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c0752799-74fa-4184-8ad8-29333d075adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407a588b-c2fe-483a-a7e2-ac39615d027e",
        "cursor": {
          "ref": "5c11b581-a558-492b-beff-c6b7cf379106",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f67cb449-96b9-45a7-bb74-49e8929bbeed"
        },
        "item": {
          "id": "407a588b-c2fe-483a-a7e2-ac39615d027e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ce5dc8f6-8e0f-4a3b-8366-84487d6b030a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f290bc9-29b6-4396-8634-c9d483ecae18",
        "cursor": {
          "ref": "9612a0a3-4f3e-4189-a7b9-a4e00bdf6aaa",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7804fc60-32a9-43f8-9a07-019d80ca1d2a"
        },
        "item": {
          "id": "9f290bc9-29b6-4396-8634-c9d483ecae18",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d635fe51-826a-4958-9ccb-2076b244a928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92cfada-e13a-4e61-b088-f9cd779379ef",
        "cursor": {
          "ref": "eb2d5cdc-40d0-46a2-8dc2-a8a8d924fef8",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b38673cb-1592-4f9a-9c89-1a4c76e731ed"
        },
        "item": {
          "id": "b92cfada-e13a-4e61-b088-f9cd779379ef",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d5283ce8-8ac7-4be5-a65a-767a0aa41e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4ef437-d8fa-402d-81c6-520f45252acf",
        "cursor": {
          "ref": "081bbd1e-1b12-4dbc-a2f9-7c6f4a9bd992",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "148cef22-5976-48fe-be8e-9c479615e69d"
        },
        "item": {
          "id": "df4ef437-d8fa-402d-81c6-520f45252acf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c09c4647-fbcb-4ab6-be7a-dbd03356fbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af0c031-1f75-43de-b210-e9eb1dd6e7df",
        "cursor": {
          "ref": "28aace93-b62d-4688-be69-2d37a2dca882",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d169d8aa-a305-4860-ab58-00a4698e0a11"
        },
        "item": {
          "id": "5af0c031-1f75-43de-b210-e9eb1dd6e7df",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d37fd102-d481-4413-a166-523a5927ab8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f02cb7-c5bf-4186-86f3-48811dd17c0f",
        "cursor": {
          "ref": "f1db29d2-dcb7-4350-8aa5-537572d283d2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0a1a0862-b828-4f65-9d03-059911d649a1"
        },
        "item": {
          "id": "17f02cb7-c5bf-4186-86f3-48811dd17c0f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "73d0a32f-027b-4e67-8706-541f68bd1bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b4565e-6e56-4f83-84c0-8e9dec76b9c3",
        "cursor": {
          "ref": "15f5a0f3-4d2d-41c5-837a-fc288800ab9c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ead90294-275f-42e7-b405-83a3e97ad07e"
        },
        "item": {
          "id": "f4b4565e-6e56-4f83-84c0-8e9dec76b9c3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a9b6f50d-ebc4-44b1-b84a-c999b1f9370e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59819ef2-95df-4c50-ba76-385245fb4824",
        "cursor": {
          "ref": "1c142f31-9b07-4ad4-8c2f-74e8ccc5e9e5",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8ebac21a-d369-4b55-a591-00b3d3cf2c55"
        },
        "item": {
          "id": "59819ef2-95df-4c50-ba76-385245fb4824",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c4dd7613-ffe4-4dda-8e4a-53fb244a5b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264cf62c-449a-4183-b441-f5c0abb470f7",
        "cursor": {
          "ref": "864d0053-359a-43cb-b21f-93bdf113c5d1",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "556118f5-d4aa-44e1-98f8-738edbc98c39"
        },
        "item": {
          "id": "264cf62c-449a-4183-b441-f5c0abb470f7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7201e0a8-c482-444e-85ba-907c2d300206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beedc3a3-b8f8-41be-ab1d-9e6eb03405cc",
        "cursor": {
          "ref": "191a2fee-2ee2-4594-b68a-19eacdc215f9",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2eda4641-ba22-4e1e-85a2-84a4edfcf33b"
        },
        "item": {
          "id": "beedc3a3-b8f8-41be-ab1d-9e6eb03405cc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "37a71fa2-a982-4c6d-a89b-369056934e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e73d3252-e865-4a87-bdff-6f8fae950a42",
        "cursor": {
          "ref": "ed909503-47a7-4af7-ad3a-86543b62dc04",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6984a859-4465-487d-9746-22dee78f0365"
        },
        "item": {
          "id": "e73d3252-e865-4a87-bdff-6f8fae950a42",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e025558f-0ad5-4850-a05a-28d64e9b1675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "eb1a73d0-8f2c-40e8-83f5-1f02c89f7c5a",
        "cursor": {
          "ref": "44f1ca4e-3cab-4166-8a8e-ea5638959596",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fc974c6a-b6da-4a30-8309-3a415900b18d"
        },
        "item": {
          "id": "eb1a73d0-8f2c-40e8-83f5-1f02c89f7c5a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1e133e7e-412c-4dc5-955d-fd9d0561f204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7ae28e09-a97b-410e-a909-bdc07d38e3a9",
        "cursor": {
          "ref": "ee670011-6bdf-47ea-8dbf-9c6f7935b6af",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7e699fd8-c267-4fcf-bdf4-93d749022055"
        },
        "item": {
          "id": "7ae28e09-a97b-410e-a909-bdc07d38e3a9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b03a74bc-bdb3-4ae5-9662-04abadbe0d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "8a2a18ed-d219-4863-8821-27ce0d89b1bd",
        "cursor": {
          "ref": "c630d8c3-689d-448b-82ab-5ef0b1db6607",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8ba4a93a-02d1-4fee-b5f2-29ec09fcdc0e"
        },
        "item": {
          "id": "8a2a18ed-d219-4863-8821-27ce0d89b1bd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b14ed99d-bdab-48f3-9824-1e2a3b45407f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "abadf621-db87-4f77-ad7c-81afc5065486",
        "cursor": {
          "ref": "00a2b765-1324-47e2-8ace-937bcb6c9893",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9599e8a7-ab4d-438a-8072-02b933c2635e"
        },
        "item": {
          "id": "abadf621-db87-4f77-ad7c-81afc5065486",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dc6f5530-3f40-411c-bbf6-6733a66bbb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b04d3931-1d6f-4003-8ff7-310af72edefd",
        "cursor": {
          "ref": "f2993317-70fa-4d29-bc5d-836b5e0a655a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "82b1af6f-1b9e-4f8f-93ed-1a99c4814981"
        },
        "item": {
          "id": "b04d3931-1d6f-4003-8ff7-310af72edefd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6ebf68fa-8f6e-4c39-95f2-3cbc07d87e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "815644ca-7640-4dce-a470-9c5d0583e42a",
        "cursor": {
          "ref": "278a99b9-9598-4f5f-a9c6-c93d22888de5",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "75c9b3a9-fd5e-4b5b-9cf3-d11f473861af"
        },
        "item": {
          "id": "815644ca-7640-4dce-a470-9c5d0583e42a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0388eab1-1146-42c4-bdfd-9df62c90e147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d32e23-20af-4c0c-a69f-daa7bc7c707f",
        "cursor": {
          "ref": "56b80976-ef1d-4e55-ae05-f9c3528502dc",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "510c2e6e-4526-4cc2-a7f3-f2757431321e"
        },
        "item": {
          "id": "33d32e23-20af-4c0c-a69f-daa7bc7c707f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ba08b840-7699-4e3f-848a-4b1a84373782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2073fd8b-cca8-412b-9472-ebea146947c5",
        "cursor": {
          "ref": "ae9b9ad7-75e7-4e50-9c63-ca6a4ca4eedd",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "56c16b8d-463c-4107-a149-f7bc17a847f5"
        },
        "item": {
          "id": "2073fd8b-cca8-412b-9472-ebea146947c5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1dbbe2f4-342a-4711-a0fe-2f860c3048d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694a6442-830f-4332-a13b-9a716a8cbfe6",
        "cursor": {
          "ref": "0d6a041a-286b-4396-ab72-37758502cbfe",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2da85637-1d5c-4ed2-a23e-4845d0d01bf2"
        },
        "item": {
          "id": "694a6442-830f-4332-a13b-9a716a8cbfe6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "41a579b1-2620-454c-a60a-8ec9d068eeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29542f62-bd4d-47a7-82a5-9a8cd66e671b",
        "cursor": {
          "ref": "4c222913-a7f0-4844-a1d1-0152e47e6365",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6df085af-d67f-4f37-a986-03023b0c11e7"
        },
        "item": {
          "id": "29542f62-bd4d-47a7-82a5-9a8cd66e671b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "33447a10-44db-4766-ae5d-c8adf7a29361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdea977-1d3d-4513-8cd7-0a13c51c4645",
        "cursor": {
          "ref": "96cc4983-7075-4a69-b227-25467032ed71",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a693e41c-e558-402f-adb3-64bb6a43f1da"
        },
        "item": {
          "id": "6bdea977-1d3d-4513-8cd7-0a13c51c4645",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6a507cde-8fed-4eae-b1a4-c50dc8b4e448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8e2a6c-2323-4ac7-9730-17e56e144f2d",
        "cursor": {
          "ref": "61dd6914-484f-40f2-a908-dc1a0b1db54c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6565a10f-24b0-4088-90cd-2046cbcfc630"
        },
        "item": {
          "id": "2e8e2a6c-2323-4ac7-9730-17e56e144f2d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "79e1710f-c126-4900-9405-c75c57b64e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b5de8a-5fbb-46bc-92f6-1490ba5a8833",
        "cursor": {
          "ref": "83a912fe-02f6-4d98-bfd5-ec6e8302722e",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c62c08ee-5822-4915-870b-2a41d5a2ff3d"
        },
        "item": {
          "id": "c1b5de8a-5fbb-46bc-92f6-1490ba5a8833",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "df844a50-80f4-4f59-88e6-c1b20e536068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadffd27-07f0-4c5b-a3bc-714ed0ffd4ee",
        "cursor": {
          "ref": "11ab4451-2b53-4207-a76c-c4ce338c7167",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9f1a8967-0bf8-4c94-8cc7-5568f87f388a"
        },
        "item": {
          "id": "eadffd27-07f0-4c5b-a3bc-714ed0ffd4ee",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0ffaa993-6e2c-45af-9c3d-86972fe497cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2378265e-fb4a-4dc9-9bb9-92d9afd14607",
        "cursor": {
          "ref": "dfa30515-971d-4eae-8d32-1d657c1f06a9",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "11cfaaac-4e5b-48d7-8fa6-6aa0ffa60721"
        },
        "item": {
          "id": "2378265e-fb4a-4dc9-9bb9-92d9afd14607",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1d81dc22-bcb6-4c2f-9046-a4b28d35ae59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13adc254-d9a5-484c-b0c5-f6b2789ea3e7",
        "cursor": {
          "ref": "29ec0e69-a850-493c-8d6f-18d822ecbd54",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0d914361-68d8-4297-b463-8ba46c555d42"
        },
        "item": {
          "id": "13adc254-d9a5-484c-b0c5-f6b2789ea3e7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "97dab07f-5342-4350-8fd7-6e709a2a8891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d46359e-d08c-4be5-820a-63978875ad11",
        "cursor": {
          "ref": "da01a557-f469-484b-8530-b70a7879d3b0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d1256ad8-260b-4345-a7fd-c2aa34d6ac33"
        },
        "item": {
          "id": "3d46359e-d08c-4be5-820a-63978875ad11",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "64a4c45f-3f42-476d-94ef-5a0706913fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce7f251-0440-4859-809e-f77aa39a46fd",
        "cursor": {
          "ref": "456d15d8-ca5b-47ca-966a-125173dae200",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4f614656-33e5-417c-bb16-7db5bab5e95e"
        },
        "item": {
          "id": "cce7f251-0440-4859-809e-f77aa39a46fd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6141a6ab-dfc3-4b9b-a460-a73702153602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97274d7-bf7c-4086-b56b-eb4ec91ee0f3",
        "cursor": {
          "ref": "e9a4c6fc-912f-4739-b30c-e6309853743b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "767958ee-52fe-4455-bbbe-c78c8a4d570f"
        },
        "item": {
          "id": "a97274d7-bf7c-4086-b56b-eb4ec91ee0f3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1eff9ce2-f842-4ebc-81b1-900441527871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eecfebc-6522-4e62-bae9-d357ac588fb4",
        "cursor": {
          "ref": "6b52de0f-2b47-46b7-9a7c-e45d719a564f",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "35a36d02-0176-4f4e-91aa-88832897438a"
        },
        "item": {
          "id": "7eecfebc-6522-4e62-bae9-d357ac588fb4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "60997a81-f481-497e-88d5-ee74ddfe5c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8feee1dc-89df-46b2-9889-054d4e5d3c25",
        "cursor": {
          "ref": "1953c7d7-4437-4959-8d20-4ce519cd62b6",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "18ea0b48-d73e-4bf8-bad5-2c1f86901af8"
        },
        "item": {
          "id": "8feee1dc-89df-46b2-9889-054d4e5d3c25",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "858baf87-6c1f-4abb-8fcf-40dd995472af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f513832-9696-4275-9b3b-658acb12adb5",
        "cursor": {
          "ref": "31a82394-a363-4213-bf93-60e3dc36ee14",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0132928b-c5d4-405d-a003-d3054932c4aa"
        },
        "item": {
          "id": "4f513832-9696-4275-9b3b-658acb12adb5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6dcf0925-2772-492f-b994-2785c6c30920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5324078b-f351-4e5a-91b4-f121cfac54c3",
        "cursor": {
          "ref": "6e4382a9-a350-435b-b752-cac01c7624ae",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9ac7b94a-f8ff-4422-b21c-bd0c1efa851a"
        },
        "item": {
          "id": "5324078b-f351-4e5a-91b4-f121cfac54c3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e06eacb2-c9c8-42d8-81fb-b996d3ced8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c681b7-bc28-41a2-93ab-e7842502264f",
        "cursor": {
          "ref": "ec756c6c-b0e1-44b3-931d-9555fba9541e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1f353d4e-15b9-4211-9969-156a472322a1"
        },
        "item": {
          "id": "66c681b7-bc28-41a2-93ab-e7842502264f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d209e256-c364-445b-b31a-6941f32b411c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8249eebf-7958-4251-baed-9a6b42ba0fd7",
        "cursor": {
          "ref": "4da56817-7a3d-45c5-8308-e3d9df1e3af1",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7da7aa03-c53d-4510-83a9-0dfa795e2e98"
        },
        "item": {
          "id": "8249eebf-7958-4251-baed-9a6b42ba0fd7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "777f56d0-cfa3-4604-84cb-27b87bbea3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c5e2b0-d987-46b7-9771-b7d4a591edd3",
        "cursor": {
          "ref": "1a81355f-a64b-4e4d-b189-54b7381cd24e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "65d6c0d7-0fb9-499e-989e-a9febedaa1ed"
        },
        "item": {
          "id": "51c5e2b0-d987-46b7-9771-b7d4a591edd3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7802e0ff-54e5-4328-93ad-972d8f1c7b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe92b218-6d6b-4fed-ae47-71acaa2e382a",
        "cursor": {
          "ref": "4d25ca18-f5e4-42f4-bb7d-4f50d5d4146a",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f7435504-4c81-460e-94f5-172916d1ceea"
        },
        "item": {
          "id": "fe92b218-6d6b-4fed-ae47-71acaa2e382a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "018163b2-d2ad-4de9-a784-572d1790e042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b12a07-64a8-4584-94c7-cc15c9191673",
        "cursor": {
          "ref": "fc1719df-b4b3-4055-b60e-0cb1ad4b3301",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "54db5234-e5aa-4df3-a154-915392d6a157"
        },
        "item": {
          "id": "f4b12a07-64a8-4584-94c7-cc15c9191673",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cbede53d-adfb-4af8-ba78-ab4bda91a079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bf04a0-7ad9-48d1-8604-501b56e97f56",
        "cursor": {
          "ref": "bf2e36d8-44d9-46cd-a515-465f54e75cac",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "db115b33-7722-41be-bfde-3155e8ea8b24"
        },
        "item": {
          "id": "f3bf04a0-7ad9-48d1-8604-501b56e97f56",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "60de8a75-532b-4bf7-bcbe-8be5eb159378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b9ab4a-ac7e-49b8-9854-cd38909a5943",
        "cursor": {
          "ref": "5aef31dd-5a8e-4fd4-88cb-cab0fc3f95e9",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6f84f113-1e2b-4a6e-9fc6-012eed1c6917"
        },
        "item": {
          "id": "f5b9ab4a-ac7e-49b8-9854-cd38909a5943",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6ef37929-7d07-4204-80f7-b100883645d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a0ede7-04d1-4012-931c-ca24d569c8ab",
        "cursor": {
          "ref": "b11f2b7e-4d12-48a3-b957-3d55463b2832",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e9266e4d-5640-4d9e-a959-954368a804c0"
        },
        "item": {
          "id": "e7a0ede7-04d1-4012-931c-ca24d569c8ab",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e9188469-974c-4345-a754-5393906b80e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2139a18-789d-4b81-ba06-9ad34675e39d",
        "cursor": {
          "ref": "57566892-8069-4dfb-b96f-1432be52d397",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8854a00e-c531-450f-adac-65bd13c9a601"
        },
        "item": {
          "id": "f2139a18-789d-4b81-ba06-9ad34675e39d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b43c43ca-ef4e-4470-a814-2acbae9ea713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1947af51-cfc7-4066-a93d-2d29c834870f",
        "cursor": {
          "ref": "ade98449-2cc3-43dc-af79-0f7341646e79",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8f9829ab-0a60-41c3-9140-06daab5a04d1"
        },
        "item": {
          "id": "1947af51-cfc7-4066-a93d-2d29c834870f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fd9ee966-786c-432a-9b4a-77ed023e4e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd22fcc2-f415-41aa-a4e6-8d264804e7ea",
        "cursor": {
          "ref": "558655bd-46b0-4d6e-a5ef-28eb0a3b4b2c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "809a65a9-a51e-47c0-a219-b6156d448955"
        },
        "item": {
          "id": "bd22fcc2-f415-41aa-a4e6-8d264804e7ea",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "470ec8ce-9f51-4224-9ae8-4a19ec5cd5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba3c7c9-d165-4ada-b3bf-a635cb6e1801",
        "cursor": {
          "ref": "955d039d-4249-46c9-a461-984ca1213563",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6a247093-a34e-46d9-b36d-0c34984a3c26"
        },
        "item": {
          "id": "7ba3c7c9-d165-4ada-b3bf-a635cb6e1801",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9801dccd-87fc-4a6b-84af-03e1798cac7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b8bca7-8b54-4649-8512-2c7e0217d5ee",
        "cursor": {
          "ref": "9bf3fe1f-dd6a-4917-b7ed-ff364eebd5ae",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1e361acb-cd13-4027-ba3a-6c74c167c692"
        },
        "item": {
          "id": "90b8bca7-8b54-4649-8512-2c7e0217d5ee",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f6578229-b5b0-4d74-87e6-2993bb487cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb043798-6149-484b-9ef0-3a60bd48f4b2",
        "cursor": {
          "ref": "1da37f14-5216-4e5c-a40a-42d490668d69",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0117572f-41c3-414b-a611-32cbb1698bea"
        },
        "item": {
          "id": "bb043798-6149-484b-9ef0-3a60bd48f4b2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bbd9921b-c166-46f3-aaa2-2b57cbb7e45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f0c475-f368-4a22-b84c-bddf5a07cf20",
        "cursor": {
          "ref": "4dffc749-dc8f-4ff8-bfb2-0113558c2d3f",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "86e69093-f210-4ccb-abc3-f7af1e2ab9b5"
        },
        "item": {
          "id": "47f0c475-f368-4a22-b84c-bddf5a07cf20",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "47cbecc9-94a2-4ea4-a4fa-e4f563a79040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb93df51-976a-42cf-a178-676f1805a8b2",
        "cursor": {
          "ref": "33fa9786-132f-480f-9006-bc565d8eadde",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "12a8df74-9463-4acd-b318-a7ab406abb91"
        },
        "item": {
          "id": "cb93df51-976a-42cf-a178-676f1805a8b2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8acb9fb2-a9b9-4830-ae5f-a4ebb6a8ca42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81408c22-4800-425f-b724-aa7f01b717e1",
        "cursor": {
          "ref": "01a0e57d-fabd-4c44-a51f-fe4781b32653",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "be9c95b8-ec42-44be-b085-16a82972debb"
        },
        "item": {
          "id": "81408c22-4800-425f-b724-aa7f01b717e1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "51ec9601-e061-485d-bb50-8bcaf3dbe81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65bda14-24d6-455e-b57d-5c7f16c5acc2",
        "cursor": {
          "ref": "95e9b35f-8299-4b90-9360-923728c2320b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c78fd8a9-e2dd-4691-8bb6-b90232cedd4a"
        },
        "item": {
          "id": "a65bda14-24d6-455e-b57d-5c7f16c5acc2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b9f22c1d-2fec-4717-92cb-3ec03a5f1f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df39e50f-80b6-4ced-9d80-90669e1a9684",
        "cursor": {
          "ref": "c94b9447-d322-42bd-8020-abf6f3f5867e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bc6577a4-3a59-405f-8041-9fee31ec7b73"
        },
        "item": {
          "id": "df39e50f-80b6-4ced-9d80-90669e1a9684",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "47953ee1-eabf-4a97-81f1-125cd7aed73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0635b18a-ff8e-410b-8707-eeefa5b51956",
        "cursor": {
          "ref": "96622569-587c-4463-9a9e-8e8807c50029",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ff97fd82-f051-4763-b4dc-c24c0a162936"
        },
        "item": {
          "id": "0635b18a-ff8e-410b-8707-eeefa5b51956",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ecc3a77b-7a30-4b80-89fd-3418ba39f013",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87eb5da-d9c4-4e46-8fbc-f42df975efab",
        "cursor": {
          "ref": "63d65591-e795-42d9-a88d-8884624fdd1b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "08c39ce8-f5ab-4b12-ba2d-b8338614ad20"
        },
        "item": {
          "id": "a87eb5da-d9c4-4e46-8fbc-f42df975efab",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8a7d524f-141c-4578-b5c9-f83f0fb7a09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aaa9e8d-e121-4628-ac22-cf2417dad405",
        "cursor": {
          "ref": "a50981ad-5d57-46ff-9b43-324160ad787e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "195252e7-dd38-4f9a-a33b-936bbd87f257"
        },
        "item": {
          "id": "4aaa9e8d-e121-4628-ac22-cf2417dad405",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "573f0092-f2a7-4c88-a051-30caeae04383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bee60d-81e3-489a-a900-69fa9cc453b0",
        "cursor": {
          "ref": "416206b1-5899-4846-b766-ea3e107b31ab",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "641b8c12-ea5d-49fe-b2fe-104f4d9d6825"
        },
        "item": {
          "id": "15bee60d-81e3-489a-a900-69fa9cc453b0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1ee275ea-b360-4f5e-8ad1-0556111c1dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4335df26-da8d-4464-b052-a6c9857d4432",
        "cursor": {
          "ref": "1ffb53de-522c-42ce-9ca4-6754070b8689",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3e34b699-df42-4a13-a548-9bb33c960a57"
        },
        "item": {
          "id": "4335df26-da8d-4464-b052-a6c9857d4432",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5fd3f20f-e097-451a-abbd-e64140578e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c208ae4-28bc-482d-a774-2579adbb6a43",
        "cursor": {
          "ref": "01700b9e-eb84-436c-b016-f15edd9fb0b3",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "78c4c6fd-25b7-4918-8517-dcc7c02be185"
        },
        "item": {
          "id": "4c208ae4-28bc-482d-a774-2579adbb6a43",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7a136d58-cb0d-4d94-86ad-5e38ca4e9fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec64b89a-3459-4fef-9f3d-79c85b15633f",
        "cursor": {
          "ref": "3e0e535c-0658-499d-8520-e9ed8d479a94",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "37616dd3-db19-4c12-be23-0b0af4ff575c"
        },
        "item": {
          "id": "ec64b89a-3459-4fef-9f3d-79c85b15633f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "817856c6-7db6-4e8e-88f6-13d3977f8431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad554ea-0b53-497c-a2f8-855a209441a4",
        "cursor": {
          "ref": "dcd9d561-a5d6-4cba-9c01-9872b808458b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c190c9ad-89e7-4586-bd83-f6281d3021db"
        },
        "item": {
          "id": "9ad554ea-0b53-497c-a2f8-855a209441a4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7f23304d-e1fa-47b2-a2cc-3eeb84b6caf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddea2fb-b84b-4aac-83a5-670281d1b2ee",
        "cursor": {
          "ref": "2acabbb7-c67c-462e-a9b0-698532723cbe",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a008b862-8bc8-473c-a696-22cf0fe7a0bd"
        },
        "item": {
          "id": "cddea2fb-b84b-4aac-83a5-670281d1b2ee",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9afe3e13-ee27-4c36-bd68-83ee31c0ffe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45458ee3-3db0-47aa-a765-f6716fd3eda0",
        "cursor": {
          "ref": "1e65ebe5-680d-44ea-9b0b-a3e63fe6f4b4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dabbd5cb-0daa-45a2-ae83-aa12c4afb186"
        },
        "item": {
          "id": "45458ee3-3db0-47aa-a765-f6716fd3eda0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5e79013d-2936-4c38-ac55-785bc0a5117a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a3d920-e7ec-4f03-9d1c-184d4616b711",
        "cursor": {
          "ref": "78b24d86-4e82-4e9c-9e24-a70bf422883f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d6778301-478c-4a1c-b55f-55dcf1dc08fb"
        },
        "item": {
          "id": "d8a3d920-e7ec-4f03-9d1c-184d4616b711",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "41f86f73-29bb-49f5-84f1-8f1876559ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cee5c9-5cca-462f-818c-f360f2d9f8ae",
        "cursor": {
          "ref": "1f51c0a2-d4b3-419a-b340-f24be414d7d5",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "06a11ca2-7ac9-4e05-a5dd-c3106c6b3682"
        },
        "item": {
          "id": "c1cee5c9-5cca-462f-818c-f360f2d9f8ae",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1b9fcd91-214a-42d3-bd06-3e9491191ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2907cb42-bd62-493e-ac67-57d827990e65",
        "cursor": {
          "ref": "cd5c335a-68d5-4a13-830f-f5eea4fc255a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3bedb994-8609-40c2-91de-8d8fdff36f30"
        },
        "item": {
          "id": "2907cb42-bd62-493e-ac67-57d827990e65",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4a0e5911-06d7-4479-b34a-5757cb7f8066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3874026-fe8a-415e-881e-ea0ad8eef835",
        "cursor": {
          "ref": "5de1340c-2723-46c0-85d2-c562f592c2e9",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "376f5823-c828-46dd-bb4e-0749a26d699e"
        },
        "item": {
          "id": "f3874026-fe8a-415e-881e-ea0ad8eef835",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "55aeb383-03c0-48b1-acf3-ea9bf6f79ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955ea79a-8131-4a21-8ead-166675af2f01",
        "cursor": {
          "ref": "f9dedd2e-f296-4f30-b1ac-ed530cab5f37",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c2312876-22f8-4643-b2bf-fd94f2548289"
        },
        "item": {
          "id": "955ea79a-8131-4a21-8ead-166675af2f01",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "461da7f9-181e-45ad-9e35-29cf90370aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f32ebb-3bc7-4396-85ed-f937b53a7128",
        "cursor": {
          "ref": "c5621b15-7273-4826-8cf8-a212517a1b5a",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fb8cc22d-09c9-4117-a685-3f5dcdfe0351"
        },
        "item": {
          "id": "14f32ebb-3bc7-4396-85ed-f937b53a7128",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cfb50571-22a8-4f59-a285-d14ca3a292ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02decac-106d-4777-86a2-e74e89e4493d",
        "cursor": {
          "ref": "1099087b-973a-4a96-b919-d6bc4e2cf3ca",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "20cadb48-4842-4c4b-b34d-16c108a1983e"
        },
        "item": {
          "id": "f02decac-106d-4777-86a2-e74e89e4493d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "52afb239-772d-48ab-a773-2d8b374e7bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38ebe06-4e82-41e2-ba7d-90134a73bc9a",
        "cursor": {
          "ref": "6908f028-fc87-433b-a617-6e38e51d584a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "866355a8-5afa-4b69-9bdf-f3adb924845b"
        },
        "item": {
          "id": "e38ebe06-4e82-41e2-ba7d-90134a73bc9a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fbf6cdeb-8edb-46d4-b4f8-1634dbea8c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4268ba6-9d47-42d2-b543-44fb99bc7ff8",
        "cursor": {
          "ref": "7a0b1ff9-b91a-4f94-8a0c-ec7e14f4a134",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a2b079e2-cf9b-49eb-8c15-1cb64d40e95c"
        },
        "item": {
          "id": "b4268ba6-9d47-42d2-b543-44fb99bc7ff8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8f4958ce-f2a1-4cec-a396-8d0d5dde45c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570c9073-4530-4148-aff4-f1085c165de5",
        "cursor": {
          "ref": "9d9401b5-3b98-4487-947c-38d3a29979ac",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "be483838-814d-4685-ada7-2b422c637d1e"
        },
        "item": {
          "id": "570c9073-4530-4148-aff4-f1085c165de5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d9e2a94d-bbca-4166-9735-d1eaa5e813d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4032c24-9d62-4eba-a138-b45a28b97c0e",
        "cursor": {
          "ref": "d30b2a8e-759d-45f6-afeb-9b9d8e7f9eb2",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3b41f783-b89a-440e-b13b-5a18f05c483e"
        },
        "item": {
          "id": "b4032c24-9d62-4eba-a138-b45a28b97c0e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4b56acec-a939-480e-a4f1-6460e3f6aa58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedf21e9-eb42-4229-854e-baee2442fd35",
        "cursor": {
          "ref": "07d66d84-cb71-4343-9541-a327189262d1",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "973051b7-040f-4b22-a484-1fdcf62fd7a8"
        },
        "item": {
          "id": "fedf21e9-eb42-4229-854e-baee2442fd35",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "73faafdc-3eb4-400a-b78f-df5a9d9c4601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fdac74-b4ab-4acc-b639-22550861cdab",
        "cursor": {
          "ref": "2ff064dd-e24f-4093-b7fb-b31e542ee183",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "70ba06f2-9bd4-44be-b241-0a9c7f7b45a6"
        },
        "item": {
          "id": "a7fdac74-b4ab-4acc-b639-22550861cdab",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3a79b3c8-6e60-428a-ae82-e78f03332a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb7ec04-9715-4351-9ff7-bec5ff1167b6",
        "cursor": {
          "ref": "f196f1eb-fb82-4dbd-a2da-c67616074ba1",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ef188d0e-be41-43db-bab0-e7627fa81e9e"
        },
        "item": {
          "id": "feb7ec04-9715-4351-9ff7-bec5ff1167b6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "11c9557b-d097-4d0e-9acf-3de5dedca8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0de960-a7ef-4005-8865-bdabef2b1656",
        "cursor": {
          "ref": "a022eb2d-dcec-4525-8f1a-d2ea51014af6",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "84996157-a00e-4e5b-bdf5-62a3b895c637"
        },
        "item": {
          "id": "fc0de960-a7ef-4005-8865-bdabef2b1656",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "318a9a1e-8257-4b65-99b5-9928d60dd0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdab12f-efb0-4e90-8ab5-46ce0cfec350",
        "cursor": {
          "ref": "9b951080-519b-4801-bfc1-d2c8c63546f6",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ff108b89-cc34-4966-8784-1a0419ed4970"
        },
        "item": {
          "id": "9fdab12f-efb0-4e90-8ab5-46ce0cfec350",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b85836e0-9089-4d8b-9e26-f196813d09cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5494fe-1dcf-4061-b353-3afa3f432596",
        "cursor": {
          "ref": "da543689-87ac-453d-9a65-d7f0b5a7ebe2",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "346786cd-db67-4c0d-a520-24208770f6b9"
        },
        "item": {
          "id": "3c5494fe-1dcf-4061-b353-3afa3f432596",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9fe07943-6d56-404c-9f23-ac2a5e5702dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d579d0a-f63d-4a36-9d4c-ed0ae1382cd7",
        "cursor": {
          "ref": "1ab11a3d-2365-4bd5-8f69-f62d4206d21a",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4f6f1a70-bb7f-4d7f-b856-dcacd4e23c3c"
        },
        "item": {
          "id": "7d579d0a-f63d-4a36-9d4c-ed0ae1382cd7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "56fdd55d-572b-4254-9838-c3060f390357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18df867d-7c54-4122-8944-b579bee50a39",
        "cursor": {
          "ref": "57a65866-382c-4f8c-9689-e742b4b408c9",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b2717e43-f407-41bf-a619-e020011f2958"
        },
        "item": {
          "id": "18df867d-7c54-4122-8944-b579bee50a39",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ad179d5f-11d3-4728-be89-6e7f147fe402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fc9698-a8b6-4938-8936-d2e71fde571c",
        "cursor": {
          "ref": "ac2115c3-037a-473b-a43a-9cd0fca39b7e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b2bde59a-4c70-494b-bde8-cd63d5fced24"
        },
        "item": {
          "id": "d2fc9698-a8b6-4938-8936-d2e71fde571c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "96876cf2-4901-4edf-9d85-7b5f09740279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711e0028-7fb3-4213-902c-3765d1a3370a",
        "cursor": {
          "ref": "70c7553d-ee30-4225-8681-cb50c54892a5",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0dac4bd7-821a-4e91-9d50-bb956ba1dac3"
        },
        "item": {
          "id": "711e0028-7fb3-4213-902c-3765d1a3370a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8c3e3d84-0b71-4d36-983b-a4f4b5ffa4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64304b50-c2a0-4b3c-8c07-3c8dd41e5096",
        "cursor": {
          "ref": "1141b780-5718-4aa5-abcb-384761735145",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "15f76546-2bb3-4ec0-8a96-82bfde9a479d"
        },
        "item": {
          "id": "64304b50-c2a0-4b3c-8c07-3c8dd41e5096",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9390d7d0-8566-42f9-977d-742c87189eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b75325b-896e-45fa-9a58-b848e9ca3346",
        "cursor": {
          "ref": "bac92b00-a74a-429a-88d4-9108889a990d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4debab89-06e3-443f-bbb1-2e2ed84f7d1c"
        },
        "item": {
          "id": "9b75325b-896e-45fa-9a58-b848e9ca3346",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "af5bb6e2-f4e8-4117-a996-07b3f2182bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b783708-530a-4915-b8db-652c9ce506c6",
        "cursor": {
          "ref": "3b436c7c-4d5d-42fd-985a-ffdbb2e90d66",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6f956d65-9d4b-4300-a1aa-e99e4ec6fea2"
        },
        "item": {
          "id": "2b783708-530a-4915-b8db-652c9ce506c6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4ce14d51-6d7c-4bff-a3e9-3446166b827b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6271953-2faf-4a7d-822c-ae7ea8e2fc9d",
        "cursor": {
          "ref": "526f3e45-0949-4326-b989-31d2a4d107aa",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "32e1b8ec-9fd8-4707-bc68-1a64d3371149"
        },
        "item": {
          "id": "f6271953-2faf-4a7d-822c-ae7ea8e2fc9d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e30b960b-e73c-405b-aec3-dbec8084c848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db86e16-2764-4060-acb0-c180bebde0f4",
        "cursor": {
          "ref": "8b4ba4f8-b8f7-482b-9ce7-e69e5f0dfeda",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "327fa84f-01cf-4e26-b25e-93e447d15b55"
        },
        "item": {
          "id": "3db86e16-2764-4060-acb0-c180bebde0f4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4a97e77c-b121-4a7c-ab18-decd56ecaf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90d6fb3-3971-40c3-a209-5297b2af1f22",
        "cursor": {
          "ref": "0b38850b-210b-4858-9ca1-d7fa87fe3076",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "99c8492e-ae85-4a07-b989-0e4ec3cc1fb1"
        },
        "item": {
          "id": "e90d6fb3-3971-40c3-a209-5297b2af1f22",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2b68e4de-d6dc-4570-9bf5-46e3cf604267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5758680-d836-4414-be95-8b148238503e",
        "cursor": {
          "ref": "d7a5ba80-765e-4eb8-8fff-bf8eff239ac6",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7ff2b593-fbbb-4ab7-b1c0-4165a252c0d6"
        },
        "item": {
          "id": "c5758680-d836-4414-be95-8b148238503e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a205ca13-8855-42c3-8974-22ef2c3e2e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659fa7b5-f287-479a-931a-f57d6cf6d4c4",
        "cursor": {
          "ref": "7f07f21f-c66a-42bb-b822-cdaf2e13c3fe",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "caf2d32c-d4f6-42b6-a760-4f6eb5f8f768"
        },
        "item": {
          "id": "659fa7b5-f287-479a-931a-f57d6cf6d4c4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "54aa06af-b489-4536-9fe7-6ba97fbc25e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8eb7ef0-d7a5-4240-b80a-81ad2324ae37",
        "cursor": {
          "ref": "8fb6b010-85f1-4234-9f18-06cff38177c7",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "143ac8c8-0cb2-4763-9132-d812250664b5"
        },
        "item": {
          "id": "e8eb7ef0-d7a5-4240-b80a-81ad2324ae37",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a8231831-78c3-42f9-be8d-dfb7cacd522c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a15319-e5e3-47f6-8f30-574c0a6eb25a",
        "cursor": {
          "ref": "bf32ef9e-3355-4df6-9198-8089e2813897",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0548c698-f9f3-4515-9a65-27fb1d3f3473"
        },
        "item": {
          "id": "67a15319-e5e3-47f6-8f30-574c0a6eb25a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bd33f318-7ef4-40bd-8d7f-d2a54b2b1d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a675936-236c-4f4f-8a4a-7765cc7d8cca",
        "cursor": {
          "ref": "e07de666-8e9c-485a-be3e-70a53b2dee7b",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "495afc12-d79c-48e8-b37e-45f21b1ac005"
        },
        "item": {
          "id": "0a675936-236c-4f4f-8a4a-7765cc7d8cca",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "93a4a50f-ba72-43ee-8893-bbf38b251901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019db606-0217-45e3-b48b-2d66835f0f80",
        "cursor": {
          "ref": "9e2fd6ed-d806-4e88-8397-027fa86a0e44",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "94ce09ff-08f5-4788-9051-80342d6c6c01"
        },
        "item": {
          "id": "019db606-0217-45e3-b48b-2d66835f0f80",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bb8b9ca2-466c-4cc8-9c92-2a986c26d61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da560657-2cb2-4c24-8e21-752811e8e705",
        "cursor": {
          "ref": "461363a9-671e-4cc2-863b-9059ddca0a07",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8dfd394f-8e67-4ca4-a121-2eb9ab1c10f7"
        },
        "item": {
          "id": "da560657-2cb2-4c24-8e21-752811e8e705",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d6bb581b-af16-462d-8547-e58d62ea1507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f148f52d-0c69-4c91-89e4-89e41bdcd294",
        "cursor": {
          "ref": "f2485ce7-7560-4fed-b8e8-36240186c271",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6413312e-6631-4483-ba6f-9e1b37ab9f5d"
        },
        "item": {
          "id": "f148f52d-0c69-4c91-89e4-89e41bdcd294",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "56e54193-0b0d-42c4-9ce8-540e2b932cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3d2d39-8afc-44cb-8dd4-2e1dbfa390ef",
        "cursor": {
          "ref": "33d39bb1-7a7e-4aa4-aa3a-366cff273168",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fe2ab3e0-2e3d-48a0-a4ad-7c1e322318fc"
        },
        "item": {
          "id": "5c3d2d39-8afc-44cb-8dd4-2e1dbfa390ef",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "13499bfe-c26e-41f7-9ef9-e9a497f75a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea73c8b8-5af5-4f75-8c6a-580a3fe0d0e6",
        "cursor": {
          "ref": "82a79ce4-1dc7-4df9-b608-7c3723601d1e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "29ca5e56-ebd4-4282-ab71-f12a2755fa58"
        },
        "item": {
          "id": "ea73c8b8-5af5-4f75-8c6a-580a3fe0d0e6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f3621b5a-878c-40fb-856f-2e9d32652545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc19c56f-eb26-4bf5-b703-7281e1a96804",
        "cursor": {
          "ref": "2c6101b2-362f-454c-bc05-5361a2fe3fb5",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "954756d1-3163-42f7-80c0-7ee188dc9487"
        },
        "item": {
          "id": "bc19c56f-eb26-4bf5-b703-7281e1a96804",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6b4f5259-bbf8-486b-9167-335bf33705a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2418d9-5a1d-4079-af99-e76152b30098",
        "cursor": {
          "ref": "77326fdd-c3c8-4bd1-8ab0-23f9469999ed",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bbfe3011-44c6-4ef4-bb74-4abf063411a1"
        },
        "item": {
          "id": "cc2418d9-5a1d-4079-af99-e76152b30098",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "52774ae3-c08f-467c-bb7d-8a14c3dd9fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c172d7ef-6b01-4c05-a3f2-8b50263d383c",
        "cursor": {
          "ref": "77d4f9fc-5536-4b07-9e84-e7e1c0f52c23",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f6d70886-31d7-48f4-b324-21b06aa63a03"
        },
        "item": {
          "id": "c172d7ef-6b01-4c05-a3f2-8b50263d383c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b758f999-6a34-41f6-90b4-79fbc2587d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd541bcd-b250-4786-b031-a71770ec9b22",
        "cursor": {
          "ref": "aae0b990-9d81-42db-8cb3-c2fd982dbbaa",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "59cf9898-3d8c-41fe-8b70-be85045f882a"
        },
        "item": {
          "id": "bd541bcd-b250-4786-b031-a71770ec9b22",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "851e722f-e368-4d01-9543-1f1110af9d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dca591-da20-4da4-876f-884c900c6aec",
        "cursor": {
          "ref": "7125bcac-9e40-4d24-8521-00f935ac3acc",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ee4332ef-e216-487e-8293-71dc0687ff7c"
        },
        "item": {
          "id": "e1dca591-da20-4da4-876f-884c900c6aec",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3759ba12-303a-4fc6-ba20-fdd4b45b5541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8f9f86-2b61-416e-aa7f-8c2e44186b1e",
        "cursor": {
          "ref": "fd845b7d-b8f8-4c08-a943-ef6046ac8e1f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "22fb2522-0a26-47e1-b154-aa55fd298959"
        },
        "item": {
          "id": "5b8f9f86-2b61-416e-aa7f-8c2e44186b1e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2ea96a61-819b-4a9f-b41e-b122d0b0b393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdff845-5979-4bdf-8200-c71f66322054",
        "cursor": {
          "ref": "6ed6bb31-d2bb-46e7-b857-5eb9dfb0e4ac",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9b7e1f98-1df6-478c-b1b2-848656e588ce"
        },
        "item": {
          "id": "fcdff845-5979-4bdf-8200-c71f66322054",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "45b6c1cd-4332-416e-9a34-6e246d910c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae969bb-15a7-49bc-84f6-e0f946e96c9f",
        "cursor": {
          "ref": "9577cb2a-f61a-40bd-8bab-1ca13d6779a3",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e107d156-e3ec-48c9-87dd-bc6d7aaa054a"
        },
        "item": {
          "id": "0ae969bb-15a7-49bc-84f6-e0f946e96c9f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c4eb26a2-a411-4784-a9d9-7dbe6a45c1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5183dc39-674b-4c24-af07-1e7d1d8096c4",
        "cursor": {
          "ref": "86327051-a314-4b32-8f81-fe9a2fbb0270",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "58377ccb-b4ab-4bc5-b9e6-d257fc031f25"
        },
        "item": {
          "id": "5183dc39-674b-4c24-af07-1e7d1d8096c4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "42aaf19b-0ccb-4e39-861e-edbeec0d20c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e06c14b-54e5-44af-b3f6-4f42bccebfea",
        "cursor": {
          "ref": "7cea6e9b-cce8-49f9-9077-260c656fb01e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "eb23d67e-0e1b-4594-8f94-99e00f512c45"
        },
        "item": {
          "id": "2e06c14b-54e5-44af-b3f6-4f42bccebfea",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "05725dc0-947a-4429-91a1-7df9568ccb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4200310a-7aaa-43fd-ab8c-22c8c517b0a8",
        "cursor": {
          "ref": "6a6dd5f8-bb7f-484f-814f-b9d25cb732d9",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9fa94b68-8e28-4c92-b190-685b61eda4cd"
        },
        "item": {
          "id": "4200310a-7aaa-43fd-ab8c-22c8c517b0a8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b6ca3f33-c0e4-4f67-8d92-a2802d167397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e16ab6a-799d-45d9-bdbe-4715bdedea1c",
        "cursor": {
          "ref": "280514f1-6acf-49e4-a310-3e77ce3b75b3",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e3c8514e-110e-458b-a731-4168c82100a7"
        },
        "item": {
          "id": "0e16ab6a-799d-45d9-bdbe-4715bdedea1c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4e0fe1d5-556f-4601-8517-eb301b8a3712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8583913-f87c-4cf5-8c62-93b64bd9c5e5",
        "cursor": {
          "ref": "2ed0619a-baef-43da-bae0-6dd38af9bf6a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a040c76d-7c51-41eb-97d8-3036af727035"
        },
        "item": {
          "id": "a8583913-f87c-4cf5-8c62-93b64bd9c5e5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0d69d5af-2626-487d-957c-ccf310e4429d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2754c0fd-f1ad-4629-afdb-5ef4370d4ffa",
        "cursor": {
          "ref": "8988fe0a-8bfc-46fc-9a96-be5eefb5605f",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "192be079-cdaf-4354-b094-7bb8f7a1320b"
        },
        "item": {
          "id": "2754c0fd-f1ad-4629-afdb-5ef4370d4ffa",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b4a4daaf-e3e1-498b-ba8c-9304d96775fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58dd111a-ad3a-4d0c-a6bb-87616afa898f",
        "cursor": {
          "ref": "e88a5800-f7b2-4b55-8895-a9451fd97a99",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d8b148c0-6684-48dc-922b-457d86fab48b"
        },
        "item": {
          "id": "58dd111a-ad3a-4d0c-a6bb-87616afa898f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c99a9759-2718-4c1f-9f00-80adb1821603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd10b97f-3b2f-421c-baf9-a47d0f979fba",
        "cursor": {
          "ref": "db3967c4-6da6-4120-8d10-3dbc535a5e68",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4e973294-0df8-40c5-befb-12132144f8b8"
        },
        "item": {
          "id": "cd10b97f-3b2f-421c-baf9-a47d0f979fba",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "877787e9-b9e5-400c-90b2-239d408077c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7bee22-5af3-4265-a634-b814c9f1ecf9",
        "cursor": {
          "ref": "e7c5bd56-d658-4c99-b1db-1f0348e640e9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c481f4dc-a3e5-4acc-b0ca-b8185538d5d9"
        },
        "item": {
          "id": "cc7bee22-5af3-4265-a634-b814c9f1ecf9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e5433201-7310-4b71-817b-168642a856dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132d4af7-8978-45d8-a138-ff1d1de43e8c",
        "cursor": {
          "ref": "677619ac-1798-48d0-828c-833067e606e6",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "65b5ab75-7550-44b5-bb5c-6df19923a4ef"
        },
        "item": {
          "id": "132d4af7-8978-45d8-a138-ff1d1de43e8c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "add310f9-460b-45a8-a32d-f4532e2794f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6658f0-5c0a-4ffe-bb71-c4c6d5739de6",
        "cursor": {
          "ref": "82bca08e-b657-4824-bd12-64b81210f977",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8ce33058-e5e3-4ad8-bae5-7a2cb2444679"
        },
        "item": {
          "id": "5b6658f0-5c0a-4ffe-bb71-c4c6d5739de6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d256bd83-5f7e-48cf-814f-0e8b018af31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb075af-36b5-4f8a-b376-59c6cf40850e",
        "cursor": {
          "ref": "59b08b9d-cb3c-4ebf-a21a-8b66067d32bf",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bb865898-81e4-4736-a877-8ff6d15cf754"
        },
        "item": {
          "id": "6bb075af-36b5-4f8a-b376-59c6cf40850e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "baedd80d-2309-4ccb-9c22-efe87251ab1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f35b8b-2a2a-4818-b756-1502eae65feb",
        "cursor": {
          "ref": "bf099944-8329-413a-a667-54c779e67acb",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2d5520ad-0838-47c0-b631-4ead27149587"
        },
        "item": {
          "id": "00f35b8b-2a2a-4818-b756-1502eae65feb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "92f0824a-c210-4cae-bddb-3971f2f17550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b75367-bb6d-46f1-aa96-0ca98252225d",
        "cursor": {
          "ref": "bb18ee5c-2a0f-48fb-8a2e-9f8c06e5e41b",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2750e0ad-7918-46a8-974e-eb142bcb28d7"
        },
        "item": {
          "id": "86b75367-bb6d-46f1-aa96-0ca98252225d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6dcad417-f247-4a85-a98a-f5afefbc579c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f527558-9f12-4092-bc8b-54a56d47573d",
        "cursor": {
          "ref": "a471fcbe-482c-4e73-a826-46784b39f011",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c259e42c-a767-4dda-9d9f-288f1e138b5e"
        },
        "item": {
          "id": "1f527558-9f12-4092-bc8b-54a56d47573d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8bfb59b1-41d9-4bc9-bc51-32d9df446415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d6b0bd-eb4d-425e-87e1-ea4f5c79fbca",
        "cursor": {
          "ref": "c7258fd0-3d9d-476b-9d05-2c8ba17e8228",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2b271980-23fd-4a5d-b479-487a289e9569"
        },
        "item": {
          "id": "b9d6b0bd-eb4d-425e-87e1-ea4f5c79fbca",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "aa582817-5898-4e9f-97da-fd46dc473a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53751635-7a51-42d0-8ca5-ed462f698523",
        "cursor": {
          "ref": "3a23e0fd-5e8e-4a3b-84cf-a83ff555cbec",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f983db7a-0295-47ee-9834-ea0a58e1c8ab"
        },
        "item": {
          "id": "53751635-7a51-42d0-8ca5-ed462f698523",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8c74d159-8195-42f4-87ac-5c9beb8ac351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d77cc9-9478-432d-8fa9-53aede85a924",
        "cursor": {
          "ref": "4888b867-2078-414e-9443-3c2f21369f9f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "871bfe83-d210-4ec4-9f8a-fa0962d7babe"
        },
        "item": {
          "id": "e3d77cc9-9478-432d-8fa9-53aede85a924",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "181f2df1-9ec2-461c-af0e-42ff7f3bb52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00098b58-ec05-4a6f-91e2-ceb229876a83",
        "cursor": {
          "ref": "50582fd9-2a7a-425b-8979-ab2f39219274",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c8c0720c-e748-4764-bb91-bcf11e7cd51f"
        },
        "item": {
          "id": "00098b58-ec05-4a6f-91e2-ceb229876a83",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1c3444ff-276d-49b3-9248-cfc9066d5a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a6732c-3a87-4937-a4a0-03c4a3fa9eb1",
        "cursor": {
          "ref": "0a8ba640-a435-4538-a921-46848d2e4a38",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7c871e2b-af1d-4b9a-ba5e-345bfc0599a1"
        },
        "item": {
          "id": "e1a6732c-3a87-4937-a4a0-03c4a3fa9eb1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3bf75b11-28b3-4f77-bdb4-13535909b7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918955da-3819-417a-af71-f11e3b129baf",
        "cursor": {
          "ref": "b8e5b8f6-364f-464e-8e79-bc3fd40d9498",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f8e3dba7-66dd-427e-b838-5ce820fd4636"
        },
        "item": {
          "id": "918955da-3819-417a-af71-f11e3b129baf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f78daa3c-84e8-4819-9d66-9d91643a6300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ac9a8e-6e3b-4c75-8cd6-e4b9dc971e55",
        "cursor": {
          "ref": "2f81992c-7d55-48cf-a194-94eafecf5796",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "86cf16ef-29ac-4def-812f-7769057643fa"
        },
        "item": {
          "id": "96ac9a8e-6e3b-4c75-8cd6-e4b9dc971e55",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "200184c3-3572-4ce5-ae51-72d2624c50b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85ba345-48ce-4dd0-8218-af8116123ea4",
        "cursor": {
          "ref": "069ae00a-fe6f-4eb2-9065-db4a61dcdc21",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "56f02260-1a27-421e-bb64-3f4f690d3aa0"
        },
        "item": {
          "id": "f85ba345-48ce-4dd0-8218-af8116123ea4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "715d0b2f-21ec-4d9c-87d9-1a9c7801a0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491dad1a-f690-4cd3-ac7f-0d1eb99f1f2f",
        "cursor": {
          "ref": "523c9d6d-2576-4e7d-8236-2a642ad8d1aa",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e1316939-9f8f-472d-8ce9-c737d8101c97"
        },
        "item": {
          "id": "491dad1a-f690-4cd3-ac7f-0d1eb99f1f2f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "654bb8b0-9a55-4ea7-97be-e1a27019ac8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1faaa2db-3255-4298-8767-eb5805c83059",
        "cursor": {
          "ref": "43b3288c-dbe5-4c1b-9b60-fc4e720ae853",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3438cfab-13cb-42bf-9058-653cc9d7b8b5"
        },
        "item": {
          "id": "1faaa2db-3255-4298-8767-eb5805c83059",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "00d02002-877a-4fda-a344-864f42ae69b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d04334d-870d-42fa-bcd3-98bdef92d9c7",
        "cursor": {
          "ref": "70f28a3c-ebf7-4a99-aabc-7297e1b97992",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2907bc08-c09f-43f7-ba37-017aade1dfcc"
        },
        "item": {
          "id": "6d04334d-870d-42fa-bcd3-98bdef92d9c7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bed58efd-5803-4f91-b2c9-3ade60f0c18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c269973-56e0-4e96-8d74-1c7b32305c29",
        "cursor": {
          "ref": "9c123813-813c-4bd1-8752-70a27d19d284",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e5aeb199-5cdd-4d88-b9c0-451d9d5ca1f1"
        },
        "item": {
          "id": "0c269973-56e0-4e96-8d74-1c7b32305c29",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "122d7b35-659b-4d1f-92d3-e7d0e46c4090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d64ac78-28f1-4655-b622-a4117ec3598e",
        "cursor": {
          "ref": "978c2ee1-1438-49e9-aaf9-65d5f90b47e7",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ddf4a200-d8ee-4212-85b7-e72d5b8b1314"
        },
        "item": {
          "id": "4d64ac78-28f1-4655-b622-a4117ec3598e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8814faf0-8a7f-4979-8dc5-5f775d82a2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434eb0fb-c873-4bba-910a-7158745a7e33",
        "cursor": {
          "ref": "eb07c0f7-3642-42a7-95d9-446af81686ae",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2a470e04-c30a-4be2-bbc3-9d6b80aa75e8"
        },
        "item": {
          "id": "434eb0fb-c873-4bba-910a-7158745a7e33",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f91b6488-a2e5-4140-b8c4-02447dc431e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61106f9d-1eef-46cd-b6eb-686bb51e683c",
        "cursor": {
          "ref": "43b67788-1726-4a70-9b45-9728144346c1",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dbfa32dd-d52b-49e0-b8ee-1c0f909b0924"
        },
        "item": {
          "id": "61106f9d-1eef-46cd-b6eb-686bb51e683c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6bf49afe-e016-4394-8d59-4f209a8e486b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e13aea3-47d9-4b22-a01d-9658d5d76125",
        "cursor": {
          "ref": "b0c792a5-0fa6-4b06-b9f2-e3e988ff741e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9081c827-8515-4a6a-a4a4-5242eaed42e1"
        },
        "item": {
          "id": "2e13aea3-47d9-4b22-a01d-9658d5d76125",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a13ff64b-0fd9-452a-9fa8-179bce52ba42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4aa942-f93d-4118-a98c-59f86dd3f933",
        "cursor": {
          "ref": "0180b5ce-178a-4731-bac1-a05aa692d700",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8bf5fade-a997-466d-ba87-204e34de9267"
        },
        "item": {
          "id": "0f4aa942-f93d-4118-a98c-59f86dd3f933",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2b98fad4-9134-4107-9844-cb6ac237a9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d55737-d84c-4685-a0c0-1083500cc53c",
        "cursor": {
          "ref": "58526988-5816-45ba-9022-2a2b9cb3e596",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "210e349e-13f3-4039-baa7-6895a5bd205f"
        },
        "item": {
          "id": "a7d55737-d84c-4685-a0c0-1083500cc53c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "53ea5f31-7e6b-458f-81eb-37616987d4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ceb60de-ada9-4d25-b153-4409ff781f66",
        "cursor": {
          "ref": "b6502532-0839-458d-a928-64700abf8c92",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1fbf4396-18e8-4b52-9a01-385bd28bf1f3"
        },
        "item": {
          "id": "2ceb60de-ada9-4d25-b153-4409ff781f66",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c101c664-1eaf-4813-8a98-20f87b3c9a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71290dc0-14cc-4e85-865e-2337bd6b415f",
        "cursor": {
          "ref": "742bb386-9f72-4764-be51-09fe1362bc75",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e7a02114-af62-4d10-841c-54d3cab7cd24"
        },
        "item": {
          "id": "71290dc0-14cc-4e85-865e-2337bd6b415f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bf132903-bc21-4079-a97d-fa39d44f88c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2094c76a-54d9-4de8-9493-93a05fb7f939",
        "cursor": {
          "ref": "0be477bc-dee1-4bae-99e7-87df00777128",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b9e945b8-ea26-412f-b164-2de6f222ae0c"
        },
        "item": {
          "id": "2094c76a-54d9-4de8-9493-93a05fb7f939",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "39ab357b-9832-4c4e-80da-adf42ab41f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef14fa39-e0d6-4f47-a306-4ef9f7340971",
        "cursor": {
          "ref": "8592c983-bd8e-4d9b-b799-6b46067b6e1f",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f80e1054-012d-43dd-8838-0e771c215e18"
        },
        "item": {
          "id": "ef14fa39-e0d6-4f47-a306-4ef9f7340971",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "49bd8dbd-7115-452b-b724-25bf09c12d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af17fd6f-7657-4f68-9a4b-69e0ad742608",
        "cursor": {
          "ref": "b3ca7d40-2668-49dd-ace0-f4a700fd3724",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d729d7e7-128c-463e-9ca7-2177ed0d1bf4"
        },
        "item": {
          "id": "af17fd6f-7657-4f68-9a4b-69e0ad742608",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1858d68e-9e55-48cf-b118-d018dfe03430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d414b74f-bab5-44a9-a212-1dc82b219983",
        "cursor": {
          "ref": "b2d04097-9d0d-41a2-82ec-d286d743daf0",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d1cf054e-c682-431f-a44f-3c3ecb3881c1"
        },
        "item": {
          "id": "d414b74f-bab5-44a9-a212-1dc82b219983",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cf32f7f5-af0f-4782-b934-2928050577bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1490211-0ddf-4bbd-872d-9739df625f73",
        "cursor": {
          "ref": "1f53fc0f-14c7-4107-b228-3096876f6ac4",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4d387329-e3db-4a7e-a242-894f9d96da6e"
        },
        "item": {
          "id": "e1490211-0ddf-4bbd-872d-9739df625f73",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1d0cc0b8-44cf-416d-aa97-c7bd07b603d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fd3c49-2cd0-47cd-bf77-f47360b2e406",
        "cursor": {
          "ref": "4bb1fb69-1da0-4576-94da-982699b95559",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "710b9616-b1a9-40d7-8f78-bb30ba03fae0"
        },
        "item": {
          "id": "95fd3c49-2cd0-47cd-bf77-f47360b2e406",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e2527c9a-da08-41e8-b14b-460b7cb3e587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaab822c-9e83-4d31-880f-161bc7be0d63",
        "cursor": {
          "ref": "3dc9925f-f7ad-4621-a246-758c3afca335",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6d0aa693-9e6d-420e-bf96-45c8c3d04fe7"
        },
        "item": {
          "id": "aaab822c-9e83-4d31-880f-161bc7be0d63",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1d7fe44d-fd42-4f48-805f-668938512d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c917c097-4692-405e-91b6-2ad7e6a10b6c",
        "cursor": {
          "ref": "a9a5e529-1680-4c7b-a3a3-e605d09981b5",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "20059a93-8f78-4ae8-81ce-76df125e341f"
        },
        "item": {
          "id": "c917c097-4692-405e-91b6-2ad7e6a10b6c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bdde1e5f-19fa-446c-861e-9ecda3515456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3314d825-cb19-4cd4-86ef-8e8921a01620",
        "cursor": {
          "ref": "82ad26a9-8453-4166-b244-c3fe1827f088",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6c18ccd0-6d1b-4c09-a935-0713511754f4"
        },
        "item": {
          "id": "3314d825-cb19-4cd4-86ef-8e8921a01620",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e2d0dacf-4b9b-4d99-966d-7093737cb339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47ba9bd-9d54-4650-b2a2-52b1da92daa2",
        "cursor": {
          "ref": "b080b434-a449-42ce-b589-815891770ae8",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2a13c862-5160-4f54-916b-29bea95bfb79"
        },
        "item": {
          "id": "e47ba9bd-9d54-4650-b2a2-52b1da92daa2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1352fa11-b091-4608-ac2d-02c9c55bce7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "491edd00-40ff-4820-937a-829a4bb38169",
        "cursor": {
          "ref": "b7e4fe9f-e02f-47cb-a173-42a4bb7b4d51",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a9e8a5ce-fbf7-4152-bdf0-5b38445b3847"
        },
        "item": {
          "id": "491edd00-40ff-4820-937a-829a4bb38169",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7542e2c3-7d5c-47cc-8918-4011742d3039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "c8458f8d-7cf3-4ed4-8b16-0528acab68d2",
        "cursor": {
          "ref": "054545c0-f499-40f2-bf0c-51cdacb61ddb",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "728fbb00-24bc-4da0-89e9-1c7247060260"
        },
        "item": {
          "id": "c8458f8d-7cf3-4ed4-8b16-0528acab68d2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "891b39eb-528d-47cf-97e7-69361891d1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "f81750bb-49ff-4faa-b5b4-553639282bac",
        "cursor": {
          "ref": "b96e9310-6578-44a2-86bc-4b3f78bb990f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "50226525-f3f5-4ae7-b7f9-0d3226cccf40"
        },
        "item": {
          "id": "f81750bb-49ff-4faa-b5b4-553639282bac",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a6e1bf0f-9b41-490f-8da6-62fe66f4de5c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81750bb-49ff-4faa-b5b4-553639282bac",
        "cursor": {
          "ref": "b96e9310-6578-44a2-86bc-4b3f78bb990f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "50226525-f3f5-4ae7-b7f9-0d3226cccf40"
        },
        "item": {
          "id": "f81750bb-49ff-4faa-b5b4-553639282bac",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a6e1bf0f-9b41-490f-8da6-62fe66f4de5c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a3afb6-a057-4d98-be90-99c7b7668f23",
        "cursor": {
          "ref": "69f54f45-b63f-4886-b0b0-17b10c1429e9",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6ae746c2-17b7-4317-bf02-a2af0d46e81f"
        },
        "item": {
          "id": "93a3afb6-a057-4d98-be90-99c7b7668f23",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d4f32028-d266-4c35-8687-fe5de15c7ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80e8cfe-3899-47bf-bd27-741a6dfe0b37",
        "cursor": {
          "ref": "2a7fecc6-58d5-4c35-9d36-23e6166ba956",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "acd7bcf8-1d74-484e-9f9b-73bde7862663"
        },
        "item": {
          "id": "d80e8cfe-3899-47bf-bd27-741a6dfe0b37",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ff9f17d3-eafa-4904-99a7-3c19880903c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}